language: ts
name: HumanEval_18_how_many_times
results:
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let start = 0;\n    while (true)\
    \ {\n        let found = string.indexOf(substring, start);\n        if (found\
    \ == -1) break;\n        count++;\n        start = found + 1;\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else break;\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp1fo9v51f.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fo9v51f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index >= 0) {\n            count++;\n            index++;\n        }\
    \ else {\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        if (string.indexOf(substring, index) === index)\
    \ {\n            count++;\n            index += substring.length;\n        } else\
    \ {\n            index++;\n        }\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpnhvlzup_.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnhvlzup_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos !== -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else {\n  \
    \          break;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpxb7dfvlt.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxb7dfvlt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let start = 0;\n    while (true)\
    \ {\n        let found = string.indexOf(substring, start);\n        if (found\
    \ == -1) break;\n        count++;\n        start = found + 1;\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (pos < string.length)\
    \ {\n        pos = string.indexOf(substring, pos);\n        if (pos < 0) break;\n\
    \        count++;\n        pos++;\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index == -1) {\n            break;\n        }\n        count++;\n   \
    \     index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else break;\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp1fo9v51f.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fo9v51f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index >= 0) {\n            count++;\n            index++;\n        }\
    \ else {\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let position = 0;\n    while (true)\
    \ {\n        position = string.indexOf(substring, position);\n        if (position\
    \ >= 0) {\n            count++;\n            position += substring.length;\n \
    \       } else break;\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpobykt0v4.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpobykt0v4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index > -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        let found = string.indexOf(substring, index);\n\
    \        if (found === -1) {\n            break;\n        }\n        count++;\n\
    \        index = found + 1;\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let last_index = 0;\n    while (last_index\
    \ != -1) {\n        last_index = string.indexOf(substring, last_index);\n    \
    \    if (last_index != -1) {\n            count++;\n            last_index +=\
    \ substring.length;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpeihnkj8r.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeihnkj8r.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (true)\
    \ {\n        index = string.indexOf(substring, index);\n        if (index == -1)\
    \ {\n            break;\n        }\n        count++;\n        index++;\n    }\n\
    \    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index >= 0) {\n            count++;\n            index++;\n        }\
    \ else {\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let position = 0;\n    while (true)\
    \ {\n        position = string.indexOf(substring, position);\n        if (position\
    \ >= 0) {\n            count++;\n            position += substring.length;\n \
    \       } else break;\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpobykt0v4.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpobykt0v4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let position = string.indexOf(substring);\n\
    \    while (position !== -1) {\n        count++;\n        position = string.indexOf(substring,\
    \ position + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index > -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos > -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos !== -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let start = 0;\n    while (true)\
    \ {\n        let found = string.indexOf(substring, start);\n        if (found\
    \ == -1) break;\n        count++;\n        start = found + 1; // continue the\
    \ search from the next position\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let startIndex = 0;\n    while (string.indexOf(substring,\
    \ startIndex) > -1) {\n        count++;\n        startIndex = string.indexOf(substring,\
    \ startIndex) + 1;\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos !== -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index > -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index == -1) {\n            break;\n        }\n        count++;\n   \
    \     index += substring.length;\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpezl9e157.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpezl9e157.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let start = 0;\n    while (true)\
    \ {\n        let found = string.indexOf(substring, start);\n        if (found\
    \ == -1) {\n            break;\n        }\n        count++;\n        start = found\
    \ + 1;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index < 0) {\n            break;\n        }\n        count++;\n     \
    \   index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos > -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index !== -1) {\n            count++;\n            index += substring.length;\n\
    \        } else {\n            break;\n        }\n    }\n    return count;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp69akuc_3.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp69akuc_3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (true)\
    \ {\n        index = string.indexOf(substring, index);\n        if (index ===\
    \ -1) {\n            break;\n        }\n        count++;\n        index++;\n \
    \   }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else break;\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp1fo9v51f.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fo9v51f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index > -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index == -1) {\n            break;\n        }\n        count++;\n   \
    \     index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (true)\
    \ {\n        index = string.indexOf(substring, index);\n        if (index == -1)\
    \ {\n            break;\n        }\n        count++;\n        index++;\n    }\n\
    \    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (true)\
    \ {\n        index = string.indexOf(substring, index);\n        if (index == -1)\
    \ {\n            break;\n        }\n        count++;\n        index++;\n    }\n\
    \    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        index++;\n  \
    \      count++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else break;\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp1fo9v51f.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fo9v51f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let start = 0;\n    while (true)\
    \ {\n        let found = string.indexOf(substring, start);\n        if (found\
    \ == -1) break;\n        count++;\n        start = found + 1; // continue the\
    \ search from the next position\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (true)\
    \ {\n        index = string.indexOf(substring, index);\n        if (index ===\
    \ -1) {\n            break;\n        }\n        index++;\n        count++;\n \
    \   }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let counter = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        counter++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return counter;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        index++;\n  \
    \      count++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    var count = 0;\n    var pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else break;\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpb480nri6.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb480nri6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index !== -1) {\n            count++;\n            index += substring.length;\n\
    \        } else {\n            break;\n        }\n    }\n    return count;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp69akuc_3.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp69akuc_3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos !== -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos !== -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (true)\
    \ {\n        index = string.indexOf(substring, index);\n        if (index == -1)\
    \ {\n            break;\n        }\n        count++;\n        index++;\n    }\n\
    \    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index > -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else {\n  \
    \          break;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpxb7dfvlt.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxb7dfvlt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index += substring.length;\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp4v3tdtr2.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4v3tdtr2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos > -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let offset = 0;\n    while (true)\
    \ {\n        let index = string.indexOf(substring, offset);\n        if (index\
    \ == -1) {\n            break;\n        }\n        offset = index + 1;\n     \
    \   count++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = 0;\n    while (true) {\n\
    \        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n    \
    \        count++;\n            pos += substring.length;\n        } else break;\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp1fo9v51f.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fo9v51f.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ >= 0) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ >= 0) {\n            count++;\n            index++;\n        }\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let position = 0;\n    while (true)\
    \ {\n        position = string.indexOf(substring, position);\n        if (position\
    \ >= 0) {\n            count++;\n            position += substring.length;\n \
    \       } else break;\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpobykt0v4.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpobykt0v4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ !== -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ !== -1) {\n            count++;\n            index++;\n        }\n    }\n  \
    \  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index += substring.length;\n    }\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp4v3tdtr2.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4v3tdtr2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let pos = string.indexOf(substring);\n\
    \    while (pos !== -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (true)\
    \ {\n        index = string.indexOf(substring, index);\n        if (index ===\
    \ -1) {\n            break;\n        }\n        count++;\n        index++;\n \
    \   }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013860
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index == -1) {\n            break;\n        }\n        count++;\n   \
    \     index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substr(i, substring.length) === substring) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let i = 0;\n    while (i < string.length)\
    \ {\n        if (string.substr(i, substring.length) === substring) {\n       \
    \     count++;\n            i += substring.length;\n        } else {\n       \
    \     i++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps55mhkzx.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps55mhkzx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ != -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            count++;\n            index++;\n        }\n    }\n   \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index === -1) {\n            break;\n        }\n        count++;\n  \
    \      index++;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013858
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string: string, substring:\
    \ string): number {\n    let count = 0;\n    let index = 0;\n    while (index\
    \ < string.length) {\n        index = string.indexOf(substring, index);\n    \
    \    if (index >= 0) {\n            count++;\n            index += substring.length;\n\
    \        } else {\n            break;\n        }\n    }\n    return count;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp2mlocmgn.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2mlocmgn.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660013860

name: HumanEval_136_largest_smallest_integers
language: ts
prompt: "//Create a function that returns a tuple (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in a list.\n\
  // If there is no negative or positive integers, return them as None.\n// Examples:\n\
  function largest_smallest_integers(lst: number[]): [number | undefined, number |\
  \ undefined] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = largest_smallest_integers;\n  assert.deepEqual(candidate([2,\
  \ 4, 1, 3, 5, 7]),[undefined, 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5,\
  \ 7, 0]),[undefined, 1]);\n  assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2,\
  \ 1]);\n  assert.deepEqual(candidate([4, 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7,\
  \ 3, 8, 4, 9, 2, 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined,\
  \ undefined]);\n  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["    let negative_max: number | undefined = undefined;\n    let positive_min:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (negative_max === undefined) {\n  \
    \              negative_max = lst[i];\n            } else if (lst[i] > negative_max)\
    \ {\n                negative_max = lst[i];\n            }\n        } else if\
    \ (lst[i] > 0) {\n            if (positive_min === undefined) {\n            \
    \    positive_min = lst[i];\n            } else if (lst[i] < positive_min) {\n\
    \                positive_min = lst[i];\n            }\n        }\n    }\n   \
    \ return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-1, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 4, 5])); // [-5, 4]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([0, 0, 0, 0,\
    \ 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 1, 2, 3", "  let largestNegative: number | undefined = undefined;\n\
    \  let smallestPositive: number | undefined = undefined;\n  for (let i = 0; i\
    \ < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative === undefined)\
    \ {\n        largestNegative = lst[i];\n      } else if (lst[i] > largestNegative)\
    \ {\n        largestNegative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n\
    \      if (smallestPositive === undefined) {\n        smallestPositive = lst[i];\n\
    \      } else if (lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n\
    \      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let min = undefined;\n    let max = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (max === undefined || lst[i] > max) {\n                max = lst[i];\n\
    \            }\n        } else {\n            if (min === undefined || lst[i]\
    \ < min) {\n                min = lst[i];\n            }\n        }\n    }\n \
    \   return [max, min];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 0, 0,\
    \ 0, 0, 0]));\n", "    let smallest_positive: number | undefined = undefined;\n\
    \    let largest_negative: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined) {\n                smallest_positive = lst[i];\n            }\
    \ else if (lst[i] < smallest_positive) {\n                smallest_positive =\
    \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let negatives: number[] = [];\n    let positives: number[] = [];\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            negatives.push(lst[i]);\n\
    \        } else if (lst[i] > 0) {\n            positives.push(lst[i]);\n     \
    \   }\n    }\n    if (negatives.length === 0) {\n        negatives.push(undefined);\n\
    \    }\n    if (positives.length === 0) {\n        positives.push(undefined);\n\
    \    }\n    return [Math.max(...negatives), Math.min(...positives)];\n}\n", " \
    \   let largestNegative: number | undefined;\n    let smallestPositive: number\
    \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let largest_negative: number | undefined = undefined;\n  let smallest_positive:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largest_negative === undefined) {\n        largest_negative\
    \ = lst[i];\n      } else if (lst[i] > largest_negative) {\n        largest_negative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallest_positive\
    \ === undefined) {\n        smallest_positive = lst[i];\n      } else if (lst[i]\
    \ < smallest_positive) {\n        smallest_positive = lst[i];\n      }\n    }\n\
    \  }\n  return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([]));\nconsole.log(largest_smallest_integers([0]));\n\
    console.log(largest_smallest_integers([0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\n", "    let largestNegative: number | undefined;\n    let smallestPositive:\
    \ number | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] < 0) {\n            if (largestNegative === undefined) {\n         \
    \       largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\n\
    console.log(largest_smallest_integers([4, 5, 6]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let neg = lst.filter(x => x < 0).sort((a, b) => b - a);\n    let pos = lst.filter(x\
    \ => x > 0).sort((a, b) => a - b);\n    return [neg[0], pos[0]];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let negative_max: number | undefined = undefined;\n    let positive_min: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (negative_max === undefined) {\n       \
    \         negative_max = lst[i];\n            } else if (lst[i] > negative_max)\
    \ {\n                negative_max = lst[i];\n            }\n        } else if\
    \ (lst[i] > 0) {\n            if (positive_min === undefined) {\n            \
    \    positive_min = lst[i];\n            } else if (lst[i] < positive_min) {\n\
    \                positive_min = lst[i];\n            }\n        }\n    }\n   \
    \ return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-1, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest_positive: number | undefined\
    \ = undefined;\n    let largest_negative: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n       \
    \     if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 0, 1, 2, 3, 4, 5])); // [-1, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largest_negative: number | undefined\
    \ = undefined;\n    let smallest_positive: number | undefined = undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 2,\
    \ -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let negative_max: number | undefined = undefined;\n    let positive_min: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (negative_max === undefined) {\n       \
    \         negative_max = lst[i];\n            } else if (lst[i] > negative_max)\
    \ {\n                negative_max = lst[i];\n            }\n        } else if\
    \ (lst[i] > 0) {\n            if (positive_min === undefined) {\n            \
    \    positive_min = lst[i];\n            } else if (lst[i] < positive_min) {\n\
    \                positive_min = lst[i];\n            }\n        }\n    }\n   \
    \ return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, 10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, -10]));\nconsole.log(largest_smallest_integers([0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));", " \
    \   let negative_max = undefined;\n    let positive_min = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (negative_max === undefined) {\n                negative_max = lst[i];\n   \
    \         } else if (lst[i] > negative_max) {\n                negative_max =\
    \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (positive_min\
    \ === undefined) {\n                positive_min = lst[i];\n            } else\
    \ if (lst[i] < positive_min) {\n                positive_min = lst[i];\n     \
    \       }\n        }\n    }\n    return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largestNegative: number | undefined =\
    \ undefined;\n    let smallestPositive: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (largestNegative === undefined) {\n                largestNegative = lst[i];\n\
    \            } else if (lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5, 6])); // [-3, 4]\n\
    console.log(largest_smallest_integers([-10, -8, -7, -5, -3, -2, -1, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10])); // [-1, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3])); // [-3, undefined]\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3])); // [undefined, 1]\nconsole.log(largest_smallest_integers([])); // [undefined,\
    \ undefined]\n", "    let largestNegative: number | undefined = undefined;\n \
    \   let smallestPositive: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, -0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let largestNegative: number | undefined = undefined;\n  let smallestPositive:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largestNegative === undefined) {\n        largestNegative\
    \ = lst[i];\n      } else if (lst[i] > largestNegative) {\n        largestNegative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive\
    \ === undefined) {\n        smallestPositive = lst[i];\n      } else if (lst[i]\
    \ < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n    }\n\
    \  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, 5])); // [-1, 5]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, 0])); // [-1, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -0.1])); // [-0.1, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([0,\
    \ 0.1, 0.2, 0.3, 0.4])); // [undefined, 0]\nconsole.log(largest_smallest_integers([-0.1,\
    \ 0.1, 0.2, 0.3, 0.4])); // [-0.1, 0.1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largestNegative: number | undefined;\n\
    \    let smallestPositive: number | undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largestNegative === undefined)\
    \ {\n                largestNegative = lst[i];\n            } else if (lst[i]\
    \ > largestNegative) {\n                largestNegative = lst[i];\n          \
    \  }\n        } else if (lst[i] > 0) {\n            if (smallestPositive === undefined)\
    \ {\n                smallestPositive = lst[i];\n            } else if (lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [largestNegative, smallestPositive];\n}\n\
    \nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, -4, -5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 0, 0,\
    \ 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2,\
    \ 3, 4, 5, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));", "    let largestNegative: number | undefined = undefined;\n\
    \    let smallestPositive: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, -1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, -1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, -1, -2,", "  let smallest: number | undefined = undefined;\n  let\
    \ largest: number | undefined = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] > 0) {\n      if (smallest === undefined || lst[i] <\
    \ smallest) {\n        smallest = lst[i];\n      }\n    } else if (lst[i] < 0)\
    \ {\n      if (largest === undefined || lst[i] > largest) {\n        largest =\
    \ lst[i];\n      }\n    }\n  }\n  return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, -1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([]));\n", "  let largestNegative: number\
    \ | undefined = undefined;\n  let smallestPositive: number | undefined = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined) {\n        largestNegative = lst[i];\n      } else if (lst[i]\
    \ > largestNegative) {\n        largestNegative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallestPositive === undefined) {\n        smallestPositive\
    \ = lst[i];\n      } else if (lst[i] < smallestPositive) {\n        smallestPositive\
    \ = lst[i];\n      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "  let largestNegative: number | undefined = undefined;\n\
    \  let smallestPositive: number | undefined = undefined;\n  for (let i = 0; i\
    \ < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative === undefined)\
    \ {\n        largestNegative = lst[i];\n      } else if (lst[i] > largestNegative)\
    \ {\n        largestNegative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n\
    \      if (smallestPositive === undefined) {\n        smallestPositive = lst[i];\n\
    \      } else if (lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n\
    \      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let negative_max: number | undefined = undefined;\n\
    \    let positive_min: number | undefined = undefined;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (negative_max\
    \ === undefined) {\n                negative_max = lst[i];\n            } else\
    \ if (lst[i] > negative_max) {\n                negative_max = lst[i];\n     \
    \       }\n        } else if (lst[i] > 0) {\n            if (positive_min ===\
    \ undefined) {\n                positive_min = lst[i];\n            } else if\
    \ (lst[i] < positive_min) {\n                positive_min = lst[i];\n        \
    \    }\n        }\n    }\n    return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\nconsole.log(largest_smallest_integers([4,\
    \ 5]));\nconsole.log(largest_smallest_integers([]));\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([0])); // [undefined,\
    \ undefined]\nconsole.log(largest_smallest_integers([0, 0])); // [undefined, undefined]\n\
    console.log(largest_smallest_integers([0, 0, 0])); // [undefined, undefined]\n\
    console.log(largest_smallest_integers([0, 0, 0, 0])); // [undefined, undefined]\n\
    console.log(largest_smallest", "    let smallest_positive: number | undefined\
    \ = undefined;\n    let largest_negative: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
    \     if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, -1, -2,\
    \ -3, -4, -5]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0, -1, -2,\
    \ -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5, 0, 0, 0, 0, 0]));\nconsole", "  let smallest: number | undefined;\n\
    \  let largest: number | undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largest === undefined || lst[i] > largest) {\n\
    \        largest = lst[i];\n      }\n    } else {\n      if (smallest === undefined\
    \ || lst[i] < smallest) {\n        smallest = lst[i];\n      }\n    }\n  }\n \
    \ return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, 3, 4, 5])); // [-1, 3]\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, 2, -3, 4, 5]));\
    \ // [-1, 2]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2,\
    \ 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([])); // [undefined,\
    \ undefined]\n", "  let largestNegative: number | undefined = undefined;\n  let\
    \ smallestPositive: number | undefined = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (largestNegative === undefined) {\n\
    \        largestNegative = lst[i];\n      } else if (lst[i] > largestNegative)\
    \ {\n        largestNegative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n\
    \      if (smallestPositive === undefined) {\n        smallestPositive = lst[i];\n\
    \      } else if (lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n\
    \      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(largest_smallest_integers([1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let a: number | undefined = undefined;\n    let b: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (a === undefined) {\n                a = lst[i];\n            } else\
    \ if (lst[i] > a) {\n                a = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (b === undefined) {\n                b = lst[i];\n\
    \            } else if (lst[i] < b) {\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-1, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0])); // [-5, undefined]\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest_positive: number | undefined\
    \ = undefined;\n    let largest_negative: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n       \
    \     if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 1,\
    \ -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11,\
    \ -12, 12, -13, 13, -14, 14, -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20,\
    \ 20]));\nconsole.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5, -6, 6, -7, 7, -8, 8, -9", "    let largestNegative: number | undefined;\n\
    \    let smallestPositive: number | undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largestNegative === undefined)\
    \ {\n                largestNegative = lst[i];\n            } else if (lst[i]\
    \ > largestNegative) {\n                largestNegative = lst[i];\n          \
    \  }\n        } else if (lst[i] > 0) {\n            if (smallestPositive === undefined)\
    \ {\n                smallestPositive = lst[i];\n            } else if (lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [largestNegative, smallestPositive];\n}\n\
    \nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));",
  "  let a: number | undefined;\n  let b: number | undefined;\n  for (let i = 0; i\
    \ < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (a === undefined) {\n\
    \        a = lst[i];\n      } else if (lst[i] > a) {\n        a = lst[i];\n  \
    \    }\n    } else if (lst[i] > 0) {\n      if (b === undefined) {\n        b\
    \ = lst[i];\n      } else if (lst[i] < b) {\n        b = lst[i];\n      }\n  \
    \  }\n  }\n  return [a, b];\n}\n\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, 4, 5, 6])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, -6])); // [-1, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest: number | undefined = undefined;\n\
    \    let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined ||\
    \ lst[i] > largest) {\n                largest = lst[i];\n            }\n    \
    \    } else {\n            if (smallest === undefined || lst[i] < smallest) {\n\
    \                smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18,\
    \ -19, -20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8,\
    \ -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25", " \
    \   let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, 2, 3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, -2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, 5]));\n\
    console.log(largest_smallest_integers([1,", "    let negative: number[] = [];\n\
    \    let positive: number[] = [];\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            negative.push(lst[i]);\n        } else\
    \ if (lst[i] > 0) {\n            positive.push(lst[i]);\n        }\n    }\n  \
    \  if (negative.length === 0) {\n        negative.push(undefined);\n    }\n  \
    \  if (positive.length === 0) {\n        positive.push(undefined);\n    }\n  \
    \  return [Math.max(...negative), Math.min(...positive)];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5, 5, -6,\
    \ 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, 0]));\n\
    console.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, -1, -2, -3, -4, -5])); // [-5, -1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([0])); // [undefined,\
    \ undefined]\nconsole.log(largest_smallest_integers([-1])); // [-1, undefined]\n\
    console.log(largest_smallest_integers([1])); // [undefined, 1]\nconsole.log(largest_smallest",
  "  let smallestPositive = undefined;\n  let largestNegative = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] > 0) {\n      if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n\
    \      }\n    } else if (lst[i] < 0) {\n      if (largestNegative === undefined\
    \ || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n      }\n\
    \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1, 1]));\
    \ // [-1, 1]\nconsole.log(largest_smallest_integers([-1, -2, 1, 2])); // [-2,\
    \ 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5,\
    \ 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0, -1])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, 0, -1, -2])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -", "    let smallest: number | undefined;\n    let largest: number | undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest === undefined || lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else {\n            if (largest === undefined\
    \ || lst[i] > largest) {\n                largest = lst[i];\n            }\n \
    \       }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 1,\
    \ -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9,", "    let a:\
    \ number | undefined = undefined;\n    let b: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (a === undefined) {\n                a = lst[i];\n            } else\
    \ if (lst[i] > a) {\n                a = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (b === undefined) {\n                b = lst[i];\n\
    \            } else if (lst[i] < b) {\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "    let smallest: number | undefined =\
    \ undefined;\n    let largest: number | undefined = undefined;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let largestNegative = undefined;\n  let smallestPositive = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else {\n      if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, 10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, -10]));\nconsole.log(largest_smallest_integers([0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0]));\n", "    let min: number | undefined = undefined;\n\
    \    let max: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
    \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
    \ < 0) {\n            if (max === undefined || lst[i] > max) {\n             \
    \   max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n\
    \nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3]));\nconsole.log(largest_smallest_integers([4, 5]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\
    \ // [-5, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1,\
    \ 2, 3, 4, 5, -100, 100])); // [-100, 100]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -100, 100, -200, 200])); // [-200, 200]\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -100,\
    \ 100, -200, 200, -300, 300])); // [-300, 300]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -100, 100, -200, 200, -300, 300, -400, 400]));\
    \ // [-400, 400]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 1, 2, 3, 4, 5, -100, 100, -200, 200, -300, 300, -400", "  let largestNegative:\
    \ number | undefined = undefined;\n  let smallestPositive: number | undefined\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      if (largestNegative === undefined) {\n        largestNegative = lst[i];\n\
    \      } else if (lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined)\
    \ {\n        smallestPositive = lst[i];\n      } else if (lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 1,\
    \ -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, 0]));\n\
    console.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largestNegative === undefined || lst[i] > largestNegative) {\n    \
    \            largestNegative = lst[i];\n            }\n        } else {\n    \
    \        if (smallestPositive === undefined || lst[i] < smallestPositive) {\n\
    \                smallestPositive = lst[i];\n            }\n        }\n    }\n\
    \    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3])); // [-3, undefined]\nconsole.log(largest_smallest_integers([4, 5])); //\
    \ [undefined, 4]\nconsole.log(largest_smallest_integers([])); // [undefined, undefined]\n",
  "  let largestNegative = undefined;\n  let smallestPositive = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else {\n      if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 4, 5, 6]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\nconsole.log(largest_smallest_integers([4,\
    \ 5, 6]));\nconsole.log(largest_smallest_integers([]));\n", "    let largestNegative:\
    \ number | undefined;\n    let smallestPositive: number | undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (largestNegative === undefined) {\n                largestNegative = lst[i];\n\
    \            } else if (lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let neg:\
    \ number[] = [];\n    let pos: number[] = [];\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            neg.push(lst[i]);\n        }\
    \ else if (lst[i] > 0) {\n            pos.push(lst[i]);\n        }\n    }\n  \
    \  if (neg.length === 0) {\n        neg.push(undefined);\n    }\n    if (pos.length\
    \ === 0) {\n        pos.push(undefined);\n    }\n    return [Math.max(...neg),\
    \ Math.min(...pos)];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,", "   \
    \ let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let smallest: number | undefined = undefined;\n    let largest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (largest === undefined || lst[i] > largest)\
    \ {\n                largest = lst[i];\n            }\n        } else {\n    \
    \        if (smallest === undefined || lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5])); // [-3, 4]\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest_positive: number | undefined\
    \ = undefined;\n    let largest_negative: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n       \
    \     if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6])); // [-6, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largestNegative: number | undefined;\n\
    \    let smallestPositive: number | undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largestNegative === undefined)\
    \ {\n                largestNegative = lst[i];\n            } else if (lst[i]\
    \ > largestNegative) {\n                largestNegative = lst[i];\n          \
    \  }\n        } else if (lst[i] > 0) {\n            if (smallestPositive === undefined)\
    \ {\n                smallestPositive = lst[i];\n            } else if (lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [largestNegative, smallestPositive];\n}\n\
    \nconsole.log(largest_smallest_integers([-1, 2, 3, -4, 5, -6]));", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (smallest === undefined) {\n                smallest = lst[i];\n  \
    \          } else if (lst[i] > smallest) {\n                smallest = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (largest ===\
    \ undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ < largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [smallest, largest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let smallest: number | undefined = undefined;\n  let largest: number | undefined\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > 0)\
    \ {\n      if (smallest === undefined || lst[i] < smallest) {\n        smallest\
    \ = lst[i];\n      }\n    } else if (lst[i] < 0) {\n      if (largest === undefined\
    \ || lst[i] > largest) {\n        largest = lst[i];\n      }\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\nconsole.log(largest_smallest_integers([4,\
    \ 5]));\nconsole.log(largest_smallest_integers([]));\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(largest_smallest_integers([1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -", "  let smallest_positive: number | undefined = undefined;\n  let\
    \ largest_negative: number | undefined = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (largest_negative === undefined) {\n\
    \        largest_negative = lst[i];\n      } else if (lst[i] > largest_negative)\
    \ {\n        largest_negative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n\
    \      if (smallest_positive === undefined) {\n        smallest_positive = lst[i];\n\
    \      } else if (lst[i] < smallest_positive) {\n        smallest_positive = lst[i];\n\
    \      }\n    }\n  }\n  return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([]));\n", "    let neg: number[] = [];\n\
    \    let pos: number[] = [];\n    for (let i = 0; i < lst.length; i++) {\n   \
    \     if (lst[i] < 0) {\n            neg.push(lst[i]);\n        } else if (lst[i]\
    \ > 0) {\n            pos.push(lst[i]);\n        }\n    }\n    if (neg.length\
    \ === 0) {\n        neg.push(undefined);\n    }\n    if (pos.length === 0) {\n\
    \        pos.push(undefined);\n    }\n    return [Math.max(...neg), Math.min(...pos)];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-1, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, 3, 4, 5])); // [-1, 3]\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, 1, 2, 3, 4, 5])); // [-1, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([0, 0, 0, 0,\
    \ 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0])); // [-1, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 0, 0, 0, 0, 0])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, 3, 4, 5, 0, 0, 0, 0, 0])); // [-1, 0]\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([0])); // [undefined,\
    \ undefined]\nconsole.log(largest_smallest_integers([-1])); // [-1, undefined]\n\
    console.log(largest_smallest_integers([1])); // [undefined, 1]\n", "    let negative_max:\
    \ number | undefined = undefined;\n    let positive_min: number | undefined =\
    \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
    \ 0) {\n            if (negative_max === undefined) {\n                negative_max\
    \ = lst[i];\n            } else if (lst[i] > negative_max) {\n               \
    \ negative_max = lst[i];\n            }\n        } else if (lst[i] > 0) {\n  \
    \          if (positive_min === undefined) {\n                positive_min = lst[i];\n\
    \            } else if (lst[i] < positive_min) {\n                positive_min\
    \ = lst[i];\n            }\n        }\n    }\n    return [negative_max, positive_min];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0,",
  "  let smallest_positive: number | undefined = undefined;\n  let largest_negative:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] > 0) {\n      if (smallest_positive === undefined) {\n       \
    \ smallest_positive = lst[i];\n      } else if (lst[i] < smallest_positive) {\n\
    \        smallest_positive = lst[i];\n      }\n    } else if (lst[i] < 0) {\n\
    \      if (largest_negative === undefined) {\n        largest_negative = lst[i];\n\
    \      } else if (lst[i] > largest_negative) {\n        largest_negative = lst[i];\n\
    \      }\n    }\n  }\n  return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6])); // [-3, 6]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6])); // [-6, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largest: number | undefined = undefined;\n\
    \    let smallest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined ||\
    \ lst[i] > largest) {\n                largest = lst[i];\n            }\n    \
    \    } else {\n            if (smallest === undefined || lst[i] < smallest) {\n\
    \                smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([]));\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 0]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 0, 0, 0, 0, 1, 2, 3, 4, 5]));\n", "    let largestNegative: number | undefined\
    \ = undefined;\n    let smallestPositive: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
    \     if (largestNegative === undefined) {\n                largestNegative =\
    \ lst[i];\n            } else if (lst[i] > largestNegative) {\n              \
    \  largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6])); // [-6, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 0, 1, 2, 3])); // [-3, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 0, -1, 2, 3])); // [-1, 1]\n", "    let largestNegative: number | undefined\
    \ = undefined;\n    let smallestPositive: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
    \     if (largestNegative === undefined) {\n                largestNegative =\
    \ lst[i];\n            } else if (lst[i] > largestNegative) {\n              \
    \  largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([0])); // [undefined,\
    \ undefined]\nconsole.log(largest_smallest_integers([-1])); // [-1, undefined]\n\
    console.log(largest_smallest_integers([1])); // [undefined, 1]\n", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, 5]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-1, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, -1, -2, -3, -4, -5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largest_negative: number | undefined\
    \ = undefined;\n    let smallest_positive: number | undefined = undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\n\
    console.log(largest_smallest_integers([4, 5, 6]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largestNegative === undefined || lst[i] > largestNegative) {\n    \
    \            largestNegative = lst[i];\n            }\n        } else {\n    \
    \        if (smallestPositive === undefined || lst[i] < smallestPositive) {\n\
    \                smallestPositive = lst[i];\n            }\n        }\n    }\n\
    \    return [largestNegative, smallestPositive];\n}\n", "  let largestNegative:\
    \ number | undefined = undefined;\n  let smallestPositive: number | undefined\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      if (largestNegative === undefined) {\n        largestNegative = lst[i];\n\
    \      } else if (lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined)\
    \ {\n        smallestPositive = lst[i];\n      } else if (lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 4, 5, 6])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, -6])); // [-6, undefined]\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest: number | undefined;\n    let\
    \ largest: number | undefined;\n    for (let i = 0; i < lst.length; i++) {\n \
    \       if (lst[i] < 0) {\n            if (largest === undefined || lst[i] > largest)\
    \ {\n                largest = lst[i];\n            }\n        } else {\n    \
    \        if (smallest === undefined || lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5, 6]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3]));\nconsole.log(largest_smallest_integers([4, 5, 6]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let smallest_positive: number | undefined = undefined;\n  let largest_negative:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] > 0) {\n      if (smallest_positive === undefined) {\n       \
    \ smallest_positive = lst[i];\n      } else if (lst[i] < smallest_positive) {\n\
    \        smallest_positive = lst[i];\n      }\n    } else if (lst[i] < 0) {\n\
    \      if (largest_negative === undefined) {\n        largest_negative = lst[i];\n\
    \      } else if (lst[i] > largest_negative) {\n        largest_negative = lst[i];\n\
    \      }\n    }\n  }\n  return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "  let largestNegative: number\
    \ | undefined = undefined;\n  let smallestPositive: number | undefined = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined) {\n        largestNegative = lst[i];\n      } else if (lst[i]\
    \ > largestNegative) {\n        largestNegative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallestPositive === undefined) {\n        smallestPositive\
    \ = lst[i];\n      } else if (lst[i] < smallestPositive) {\n        smallestPositive\
    \ = lst[i];\n      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let neg: number[] = [];\n    let pos: number[]\
    \ = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n\
    \            neg.push(lst[i]);\n        } else if (lst[i] > 0) {\n           \
    \ pos.push(lst[i]);\n        }\n    }\n    if (neg.length === 0) {\n        neg.push(undefined);\n\
    \    }\n    if (pos.length === 0) {\n        pos.push(undefined);\n    }\n   \
    \ return [Math.max(...neg), Math.min(...pos)];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, -4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\n\
    console.log(largest_smallest_integers([4, 5, 6]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest === undefined) {\n                smallest\
    \ = lst[i];\n            } else if (lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ === undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, 2, -3,\
    \ 4, -5])); // [-5, 2]\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\
    \ // [undefined, 1]\nconsole.log(largest_smallest_integers([])); // [undefined,\
    \ undefined]\n", "  let largest: number | undefined;\n  let smallest: number |\
    \ undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n\
    \      if (largest === undefined || lst[i] > largest) {\n        largest = lst[i];\n\
    \      }\n    } else {\n      if (smallest === undefined || lst[i] < smallest)\
    \ {\n        smallest = lst[i];\n      }\n    }\n  }\n  return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 0, 1, 2, 3]));", "  let\
    \ largestNegative: number | undefined = undefined;\n  let smallestPositive: number\
    \ | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      if (largestNegative === undefined) {\n        largestNegative\
    \ = lst[i];\n      } else if (lst[i] > largestNegative) {\n        largestNegative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive\
    \ === undefined) {\n        smallestPositive = lst[i];\n      } else if (lst[i]\
    \ < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n    }\n\
    \  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([]));\n", "    let\
    \ largestNegative: number | undefined;\n    let smallestPositive: number | undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5]));\nconsole.log(largest_small",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([1, 2, -3, 4, -5, -6, 7, 8, 9]));",
  "    let neg: number[] = [];\n    let pos: number[] = [];\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            neg.push(lst[i]);\n\
    \        } else if (lst[i] > 0) {\n            pos.push(lst[i]);\n        }\n\
    \    }\n    neg.sort((a, b) => b - a);\n    pos.sort((a, b) => a - b);\n    return\
    \ [neg[0], pos[0]];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let negs: number[] = [];\n    let poss: number[] = [];\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            negs.push(lst[i]);\n\
    \        } else if (lst[i] > 0) {\n            poss.push(lst[i]);\n        }\n\
    \    }\n    if (negs.length === 0) {\n        negs.push(undefined);\n    }\n \
    \   if (poss.length === 0) {\n        poss.push(undefined);\n    }\n    return\
    \ [Math.max(...negs), Math.min(...poss)];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let largest_negative:\
    \ number | undefined = undefined;\n    let smallest_positive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, 2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, 2, 3,", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (max === undefined || lst[i]\
    \ > max) {\n                max = lst[i];\n            }\n        } else {\n \
    \           if (min === undefined || lst[i] < min) {\n                min = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\nconsole.log(largest_smallest_integers([4,\
    \ 5]));\nconsole.log(largest_smallest_integers([]));\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-20,\
    \ 34, 21, -87, 92133, -1]));", "    let min = undefined;\n    let max = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (max === undefined || lst[i] > max) {\n                max = lst[i];\n\
    \            }\n        } else {\n            if (min === undefined || lst[i]\
    \ < min) {\n                min = lst[i];\n            }\n        }\n    }\n \
    \   return [max, min];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 1, -2,\
    \ 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11,\
    \ -12, 12, -13, 13, -14, 14, -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20,\
    \ 20]));\nconsole.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11, -12, 12, -13, 13, -14, 14,\
    \ -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20, 20, -21, 21, -22, 22, -23,\
    \ 23, -24", "    let negative_max: number | undefined = undefined;\n    let positive_min:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (negative_max === undefined) {\n  \
    \              negative_max = lst[i];\n            } else if (lst[i] > negative_max)\
    \ {\n                negative_max = lst[i];\n            }\n        } else if\
    \ (lst[i] > 0) {\n            if (positive_min === undefined) {\n            \
    \    positive_min = lst[i];\n            } else if (lst[i] < positive_min) {\n\
    \                positive_min = lst[i];\n            }\n        }\n    }\n   \
    \ return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1,", "    let smallest: number | undefined = undefined;\n\
    \    let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > 0) {\n            if (smallest === undefined) {\n\
    \                smallest = lst[i];\n            } else if (lst[i] < smallest)\
    \ {\n                smallest = lst[i];\n            }\n        } else if (lst[i]\
    \ < 0) {\n            if (largest === undefined) {\n                largest =\
    \ lst[i];\n            } else if (lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let negative_largest:\
    \ number | undefined = undefined;\n    let positive_smallest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (negative_largest === undefined) {\n                negative_largest\
    \ = lst[i];\n            } else if (lst[i] > negative_largest) {\n           \
    \     negative_largest = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (positive_smallest === undefined) {\n                positive_smallest\
    \ = lst[i];\n            } else if (lst[i] < positive_smallest) {\n          \
    \      positive_smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [negative_largest, positive_smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5, 0, 1, 2, 3,", "    let\
    \ largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest\
    \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n  \
    \          }\n        } else {\n            if (smallest === undefined || lst[i]\
    \ < smallest) {\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18,\
    \ -19, -20]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, -1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18,", " \
    \   let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5, 5, -6,\
    \ 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11,\
    \ -12, 12, -13, 13, -14, 14, -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20,\
    \ 20]));\nconsole.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11, -12, 12, -13, 13, -14, 14,\
    \ -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20, 20, -21, 21, -22,", "    let\
    \ smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5, 6])); // [-3, 6]\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6])); // [-6, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5, 6])); // [undefined, 1]\n\
    console.log(largest_smallest_integers([])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, 1, 2, 3, 4, 5, 6])); // [-6, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, 1, 2, 3, 4, 5, 6, -1, -2, -3, -4, -5, -6, 1, 2, 3, 4, 5,\
    \ 6])); // [-6, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ -6, 1, 2, 3, 4, 5, 6, -1, -2, -3, -4, -5, -6, 1, 2, 3, 4, 5, 6, -1, -2, -3,\
    \ -4, -5, -6, 1, 2, 3, 4, 5, 6])); // [-6, 1]\n", "  let largestNegative: number\
    \ | undefined = undefined;\n  let smallestPositive: number | undefined = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined) {\n        largestNegative = lst[i];\n      } else if (lst[i]\
    \ > largestNegative) {\n        largestNegative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallestPositive === undefined) {\n        smallestPositive\
    \ = lst[i];\n      } else if (lst[i] < smallestPositive) {\n        smallestPositive\
    \ = lst[i];\n      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1.5, -2.5,\
    \ -3.5, -4.5, -5.5])); // [-5.5, undefined]\nconsole.log(largest_smallest_integers([1.5,\
    \ 2.5, 3.5, 4.5, 5.5])); // [undefined, 1.5]\nconsole.log(largest_smallest_integers([-1.5,\
    \ -2.5, -3.5, -4.5, -5.5, 1.5, 2.5, 3.5, 4.5, 5.5])); // [-5.5, 1.5]\n", "  let\
    \ smallest_positive: number | undefined = undefined;\n  let largest_negative:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largest_negative === undefined) {\n        largest_negative\
    \ = lst[i];\n      } else if (lst[i] > largest_negative) {\n        largest_negative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallest_positive\
    \ === undefined) {\n        smallest_positive = lst[i];\n      } else if (lst[i]\
    \ < smallest_positive) {\n        smallest_positive = lst[i];\n      }\n    }\n\
    \  }\n  return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, None]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -10, -20, -30])); // [-30, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -10, -20, -30, 10, 20, 30])); // [-30, 1]\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -10,\
    \ -20, -30, 10, 20, 30, -40, -50])); // [-50,", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, -5, -4, -3, -2, -1]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -5, -4, -3, -2, -1, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5,\
    \ -5, -4, -3, -2, -1]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4,\
    \ 5, -5, -4, -3, -2, -1, 0]));\nconsole.log(largest_smallest_integers([0]));\n",
  "    let negative_max: number | undefined = undefined;\n    let positive_min: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (negative_max === undefined) {\n       \
    \         negative_max = lst[i];\n            } else if (lst[i] > negative_max)\
    \ {\n                negative_max = lst[i];\n            }\n        } else if\
    \ (lst[i] > 0) {\n            if (positive_min === undefined) {\n            \
    \    positive_min = lst[i];\n            } else if (lst[i] < positive_min) {\n\
    \                positive_min = lst[i];\n            }\n        }\n    }\n   \
    \ return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let\
    \ largestNegative = undefined;\n    let smallestPositive = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (largestNegative === undefined || lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else {\n            if\
    \ (smallestPositive === undefined || lst[i] < smallestPositive) {\n          \
    \      smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\nconsole.log(largest_smallest_integers([4,\
    \ 5]));\nconsole.log(largest_smallest_integers([]));\n", "    let smallest: number\
    \ | undefined;\n    let largest: number | undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest ===\
    \ undefined || lst[i] < smallest) {\n                smallest = lst[i];\n    \
    \        }\n        } else {\n            if (largest === undefined || lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-3, 5]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 0, 1, 2, 3, 4, 5])); // [-3, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest_positive: number | undefined\
    \ = undefined;\n    let largest_negative: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
    \     if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let negative_max: number | undefined = undefined;\n\
    \    let positive_min: number | undefined = undefined;\n    for (let i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (negative_max\
    \ === undefined) {\n                negative_max = lst[i];\n            } else\
    \ if (lst[i] > negative_max) {\n                negative_max = lst[i];\n     \
    \       }\n        } else if (lst[i] > 0) {\n            if (positive_min ===\
    \ undefined) {\n                positive_min = lst[i];\n            } else if\
    \ (lst[i] < positive_min) {\n                positive_min = lst[i];\n        \
    \    }\n        }\n    }\n    return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4,\
    \ 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5, -1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5, -1, -2,\
    \ -3, -4, -5, 0]));\nconsole.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([-1]));\n\
    console.log(largest_smallest_integers([]));\n", "  let largestNegative = undefined;\n\
    \  let smallestPositive = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largestNegative === undefined || lst[i] > largestNegative)\
    \ {\n        largestNegative = lst[i];\n      }\n    } else {\n      if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n\
    \      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));", "  let largestNegative: number | undefined = undefined;\n\
    \  let smallestPositive: number | undefined = undefined;\n  for (let i = 0; i\
    \ < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative === undefined)\
    \ {\n        largestNegative = lst[i];\n      } else if (lst[i] > largestNegative)\
    \ {\n        largestNegative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n\
    \      if (smallestPositive === undefined) {\n        smallestPositive = lst[i];\n\
    \      } else if (lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n\
    \      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "  let smallest_positive: number\
    \ | undefined = undefined;\n  let largest_negative: number | undefined = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > 0) {\n      if (smallest_positive\
    \ === undefined) {\n        smallest_positive = lst[i];\n      } else if (lst[i]\
    \ < smallest_positive) {\n        smallest_positive = lst[i];\n      }\n    }\
    \ else if (lst[i] < 0) {\n      if (largest_negative === undefined) {\n      \
    \  largest_negative = lst[i];\n      } else if (lst[i] > largest_negative) {\n\
    \        largest_negative = lst[i];\n      }\n    }\n  }\n  return [largest_negative,\
    \ smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, 0]));\n\
    console.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(largest_smallest_integers([1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0,", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0]));\nconsole.log(largest_smallest_integers([]));\n", "  let smallest: number\
    \ | undefined = undefined;\n  let largest: number | undefined = undefined;\n \
    \ for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largest\
    \ === undefined || lst[i] > largest) {\n        largest = lst[i];\n      }\n \
    \   } else {\n      if (smallest === undefined || lst[i] < smallest) {\n     \
    \   smallest = lst[i];\n      }\n    }\n  }\n  return [largest, smallest];\n}\n\
    \nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3])); // [-1, 1]\nconsole.log(largest_smallest_integers([-1, 1,\
    \ -2, 2, -3, 3, -4, 4])); // [-1, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest: number | undefined = undefined;\n\
    \    let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined ||\
    \ lst[i] > largest) {\n                largest = lst[i];\n            }\n    \
    \    } else {\n            if (smallest === undefined || lst[i] < smallest) {\n\
    \                smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5, -1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5, 1, 2, 3, 4, 5, -1, -2, -3,\
    \ -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5,",
  "  let smallest_positive: number | undefined = undefined;\n  let largest_negative:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largest_negative === undefined) {\n        largest_negative\
    \ = lst[i];\n      } else if (lst[i] > largest_negative) {\n        largest_negative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallest_positive\
    \ === undefined) {\n        smallest_positive = lst[i];\n      } else if (lst[i]\
    \ < smallest_positive) {\n        smallest_positive = lst[i];\n      }\n    }\n\
    \  }\n  return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5, 5, -6,\
    \ 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11,\
    \ -12, 12, -13, 13, -14, 14, -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20,\
    \ 20]));\nconsole.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5, -6, 6, -7, 7, -8, 8, -9", "    let largest_negative: number | undefined =\
    \ undefined;\n    let smallest_positive: number | undefined = undefined;\n   \
    \ for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
    \    if (largest_negative === undefined) {\n                largest_negative =\
    \ lst[i];\n            } else if (lst[i] > largest_negative) {\n             \
    \   largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, 5])); // [-1, 5]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 5])); // [-5, 5]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 0])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 6])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 6, 7])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3", "    let largestNegative: number | undefined = undefined;\n    let\
    \ smallestPositive: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largestNegative === undefined)\
    \ {\n                largestNegative = lst[i];\n            } else if (lst[i]\
    \ > largestNegative) {\n                largestNegative = lst[i];\n          \
    \  }\n        } else if (lst[i] > 0) {\n            if (smallestPositive === undefined)\
    \ {\n                smallestPositive = lst[i];\n            } else if (lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [largestNegative, smallestPositive];\n}\n\
    \nconsole.log(largest_smallest_integers([-2, -4, -6, -8, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -100, 100]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -100, 100, -200, 200]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -100, 100, -200, 200, -300, 300]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5,", "    let smallest_positive: number | undefined\
    \ = undefined;\n    let largest_negative: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n       \
    \     if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));\n", "    let\
    \ largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0,\
    \ 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3,\
    \ 4, 5, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5, 0, 0", "    let smallestPositive: number | undefined;\n  \
    \  let largestNegative: number | undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > 0) {\n            if (smallestPositive === undefined)\
    \ {\n                smallestPositive = lst[i];\n            } else if (lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largestNegative ===\
    \ undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11,\
    \ -12, -13, -14, -15]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, -6, -7, -8, -9, -10, 11, 12, 13, 14, 15]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let negative_max:\
    \ number | undefined = undefined;\n    let positive_min: number | undefined =\
    \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
    \ 0) {\n            if (negative_max === undefined) {\n                negative_max\
    \ = lst[i];\n            } else if (lst[i] > negative_max) {\n               \
    \ negative_max = lst[i];\n            }\n        } else if (lst[i] > 0) {\n  \
    \          if (positive_min === undefined) {\n                positive_min = lst[i];\n\
    \            } else if (lst[i] < positive_min) {\n                positive_min\
    \ = lst[i];\n            }\n        }\n    }\n    return [negative_max, positive_min];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(largest_smallest_integers([-10, -8, -5, -3,\
    \ 3, 4, 6, 7]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3]));\nconsole.log(largest_smallest_integers([]));\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6])); // [-6, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, 0])); // [-6, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([0])); // [undefined,\
    \ undefined]\nconsole.log(largest_smallest_integers([-1, -2, -3, 0, 1, 2, 3]));\
    \ // [-3, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, 0, 1, 2, 3, -4,\
    \ -5, -6])); // [-6, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, 0,\
    \ 1, 2, 3, -4, -5, -", "    let largestNegative: number | undefined = undefined;\n\
    \    let smallestPositive: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([1, 2, 3, -4, -5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-1, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-1, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 0])); // [-1, 0]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-1, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let a: number | undefined = undefined;\n\
    \    let b: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (a === undefined) {\n    \
    \            a = lst[i];\n            } else if (lst[i] > a) {\n             \
    \   a = lst[i];\n            }\n        } else if (lst[i] > 0) {\n           \
    \ if (b === undefined) {\n                b = lst[i];\n            } else if (lst[i]\
    \ < b) {\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\
    \ // [-5, None]\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [None,\
    \ 5]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\
    \ // [-5, 5]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1,\
    \ 2, 3, 4, 5])); // [-5, 5]\nconsole.log(largest_smallest_integers([])); // [None,\
    \ None]\nconsole.log(largest_smallest_integers([0])); // [None, None]\nconsole.log(largest_smallest_integers([-1]));\
    \ // [-1, None]\nconsole.log(largest_smallest_integers([1])); // [None, 1]\n",
  "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 2,\
    \ -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, 10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7,", "    let a: number\
    \ | undefined = undefined;\n    let b: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (a == undefined) {\n                a = lst[i];\n            } else if (lst[i]\
    \ > a) {\n                a = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (b == undefined) {\n                b = lst[i];\n   \
    \         } else if (lst[i] < b) {\n                b = lst[i];\n            }\n\
    \        }\n    }\n    return [a, b];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let a: number | undefined\
    \ = undefined;\n    let b: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (a === undefined)\
    \ {\n                a = lst[i];\n            } else if (lst[i] > a) {\n     \
    \           a = lst[i];\n            }\n        } else if (lst[i] > 0) {\n   \
    \         if (b === undefined) {\n                b = lst[i];\n            } else\
    \ if (lst[i] < b) {\n                b = lst[i];\n            }\n        }\n \
    \   }\n    return [a, b];\n}\n\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-1, 4]\nconsole.log(largest_smallest_integers([-1, 2, -3,\
    \ 4, -5])); // [-1, 2]\nconsole.log(largest_smallest_integers([1, 2, 3, 4, -5]));\
    \ // [-5, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2,\
    \ 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest: number | undefined = undefined;\n\
    \    let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined ||\
    \ lst[i] > largest) {\n                largest = lst[i];\n            }\n    \
    \    } else {\n            if (smallest === undefined || lst[i] < smallest) {\n\
    \                smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, 2, 3, -4, 5]));\n\
    console.log(largest_smallest_integers([-1, 2, 3, 4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ -2, 3, -4, 5]));\nconsole.log(largest_smallest_integers([1, -2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4,\
    \ 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([0,\
    \ 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0,", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 1,\
    \ -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10, -11, 11,\
    \ -12, 12, -13, 13, -14, 14, -15, 15, -16, 16, -17, 17, -18, 18, -19, 19, -20,\
    \ 20]));\nconsole.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5, -6, 6, -7, 7, -8, 8, -9", "    let a: number | undefined = undefined;\n \
    \   let b: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (a === undefined) {\n    \
    \            a = lst[i];\n            } else if (lst[i] > a) {\n             \
    \   a = lst[i];\n            }\n        } else if (lst[i] > 0) {\n           \
    \ if (b === undefined) {\n                b = lst[i];\n            } else if (lst[i]\
    \ < b) {\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, 2, -3, 4, -5]));\n\
    console.log(largest_smallest_integers([1, -2, 3, -4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([]));\n", "    let\
    \ smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3,\
    \ -4, 4, -5, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));\nconsole.log(largest_smallest_integers([0]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\n\
    console.log(largest_smallest_integers([4, 5, 6]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let negative_max = undefined;\n    let positive_min = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (negative_max\
    \ === undefined) {\n                negative_max = lst[i];\n            } else\
    \ if (lst[i] > negative_max) {\n                negative_max = lst[i];\n     \
    \       }\n        } else if (lst[i] > 0) {\n            if (positive_min ===\
    \ undefined) {\n                positive_min = lst[i];\n            } else if\
    \ (lst[i] < positive_min) {\n                positive_min = lst[i];\n        \
    \    }\n        }\n    }\n    return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, 2, -3,\
    \ 4, 5])); // [-1, 2]\nconsole.log(largest_smallest_integers([1, 2, 3, 4, -5]));\
    \ // [-5, 1]\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0])); // [undefined,\
    \ undefined]\nconsole.log(largest_smallest_integers([])); // [undefined, undefined]\n",
  "  let smallest: number | undefined = undefined;\n  let largest: number | undefined\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > 0)\
    \ {\n      if (smallest === undefined || lst[i] < smallest) {\n        smallest\
    \ = lst[i];\n      }\n    } else if (lst[i] < 0) {\n      if (largest === undefined\
    \ || lst[i] > largest) {\n        largest = lst[i];\n      }\n    }\n  }\n  return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\
    \ // [None, None]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\
    \ // [-5, None]\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [None,\
    \ 1]\nconsole.log(largest_smallest_integers([-1, 1, -2, 2, -3, 3])); // [-3, 3]\n",
  "  let largestNegative: number | undefined = undefined;\n  let smallestPositive:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largestNegative === undefined) {\n        largestNegative\
    \ = lst[i];\n      } else if (lst[i] > largestNegative) {\n        largestNegative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive\
    \ === undefined) {\n        smallestPositive = lst[i];\n      } else if (lst[i]\
    \ < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n    }\n\
    \  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largest_negative: number | undefined\
    \ = undefined;\n    let smallest_positive: number | undefined = undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4,\
    \ 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5, -1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5, -1, -2,\
    \ -3, -4, -5, 0]));\nconsole.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([-1]));\n\
    console.log(largest_smallest_integers([1]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largest: number | undefined = undefined;\n    let smallest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10])); // [-1, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [-1,\
    \ 1]\n", "    let smallest: number | undefined = undefined;\n    let largest:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest === undefined || lst[i] >\
    \ largest) {\n                largest = lst[i];\n            }\n        } else\
    \ {\n            if (smallest === undefined || lst[i] < smallest) {\n        \
    \        smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let largestNegative: number | undefined = undefined;\n  let smallestPositive:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largestNegative === undefined) {\n        largestNegative\
    \ = lst[i];\n      } else if (lst[i] > largestNegative) {\n        largestNegative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive\
    \ === undefined) {\n        smallestPositive = lst[i];\n      } else if (lst[i]\
    \ < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n    }\n\
    \  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3])); // [-3, 1]\nconsole.log(largest_smallest_integers([-10,\
    \ -20, -30, 40, 50])); // [-10, 40]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largestNegative: number | undefined =\
    \ undefined;\n    let smallestPositive: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (largestNegative === undefined) {\n                largestNegative = lst[i];\n\
    \            } else if (lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "    let smallest: number\
    \ | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest === undefined) {\n                smallest = lst[i];\n  \
    \          } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        } else if (lst[i] < 0) {\n            if (largest ===\
    \ undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, 1,\
    \ -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9, -10, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12,\
    \ -13, -14, -15, -16, -17, -18, -19, -20]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, -1", "    let smallest: number | undefined = undefined;\n\
    \    let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (smallest === undefined) {\n\
    \                smallest = lst[i];\n            } else if (lst[i] > smallest)\
    \ {\n                smallest = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (largest === undefined) {\n                largest =\
    \ lst[i];\n            } else if (lst[i] < largest) {\n                largest\
    \ = lst[i];\n            }\n        }\n    }\n    return [smallest, largest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5]));", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let largestNegative = undefined;\n  let smallestPositive = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else {\n      if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-2, -1, 0, 1,\
    \ 2]));\nconsole.log(largest_smallest_integers([-2, -1, 0, -1, -2]));\nconsole.log(largest_smallest_integers([-2,\
    \ -1, 0, 1, -2]));\nconsole.log(largest_smallest_integers([-2, -1, 0, 1, -2]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([]));\n", "    let\
    \ largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 0, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -1,\
    \ -2,", "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, -1, -2, -3, -4, -5, -6, -7, -8, -9]));", "  let largestNegative:\
    \ number | undefined = undefined;\n  let smallestPositive: number | undefined\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      if (largestNegative === undefined) {\n        largestNegative = lst[i];\n\
    \      } else if (lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined)\
    \ {\n        smallestPositive = lst[i];\n      } else if (lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1, 2,\
    \ 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([])); //\
    \ [undefined, undefined]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -1, -2, -3, -4, -5])); // [-1, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 0, 1, 2, 3, 4, 5])); // [undefined", "    let negative_max: number\
    \ | undefined = undefined;\n    let positive_min: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (negative_max === undefined) {\n                negative_max = lst[i];\n\
    \            } else if (lst[i] > negative_max) {\n                negative_max\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (positive_min\
    \ === undefined) {\n                positive_min = lst[i];\n            } else\
    \ if (lst[i] < positive_min) {\n                positive_min = lst[i];\n     \
    \       }\n        }\n    }\n    return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 0, 1, 2, 3]));", "    let largestNegative = undefined;\n    let smallestPositive\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10])); // [-1, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [-1,\
    \ 1]\nconsole.log(largest_smallest_integers([])); // [undefined, undefined]\n",
  "    let negative_max: number | undefined = undefined;\n    let positive_min: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (negative_max === undefined) {\n       \
    \         negative_max = lst[i];\n            } else if (lst[i] > negative_max)\
    \ {\n                negative_max = lst[i];\n            }\n        } else if\
    \ (lst[i] > 0) {\n            if (positive_min === undefined) {\n            \
    \    positive_min = lst[i];\n            } else if (lst[i] < positive_min) {\n\
    \                positive_min = lst[i];\n            }\n        }\n    }\n   \
    \ return [negative_max, positive_min];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let largestNegative = undefined;\n  let smallestPositive = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else {\n      if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ 4, 5])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2, -3])); //\
    \ [-3, undefined]\nconsole.log(largest_smallest_integers([4, 5])); // [undefined,\
    \ 4]\nconsole.log(largest_smallest_integers([])); // [undefined, undefined]\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "  let smallest: number | undefined = undefined;\n  let largest: number | undefined\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      if (largest === undefined || lst[i] > largest) {\n        largest =\
    \ lst[i];\n      }\n    } else {\n      if (smallest === undefined || lst[i] <\
    \ smallest) {\n        smallest = lst[i];\n      }\n    }\n  }\n  return [largest,\
    \ smallest];\n}\n\nconsole.log(largest_smallest_integers([-20, 34, 21, -87, 92]));",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6])); // [-6, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let largestNegative: number | undefined =\
    \ undefined;\n    let smallestPositive: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (largestNegative === undefined) {\n                largestNegative = lst[i];\n\
    \            } else if (lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let smallest: number | undefined = undefined;\n\
    \    let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined ||\
    \ lst[i] > largest) {\n                largest = lst[i];\n            }\n    \
    \    } else {\n            if (smallest === undefined || lst[i] < smallest) {\n\
    \                smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([]));\n", "  let smallest: number | undefined;\n\
    \  let largest: number | undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largest === undefined || lst[i] > largest) {\n\
    \        largest = lst[i];\n      }\n    } else {\n      if (smallest === undefined\
    \ || lst[i] < smallest) {\n        smallest = lst[i];\n      }\n    }\n  }\n \
    \ return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, 5])); // [-1, 5]\nconsole.log(largest_smallest_integers([1, 2, 3,\
    \ 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([])); // [undefined,\
    \ undefined]\n", "    let smallest_positive = undefined;\n    let largest_negative\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1", "    let largest_negative: number | undefined\
    \ = undefined;\n    let smallest_positive: number | undefined = undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -", "    let smallest: number | undefined = undefined;\n    let largest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (largest === undefined || lst[i] > largest)\
    \ {\n                largest = lst[i];\n            }\n        } else {\n    \
    \        if (smallest === undefined || lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0, 1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([0, 0, 0, 0, 0]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6]));\nconsole.log(largest_smallest_integers([-1, -2, -3]));\n\
    console.log(largest_smallest_integers([4, 5, 6]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let smallest: number | undefined;\n    let largest: number | undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, -1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([]));\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, 0, 0, 0, 0]));\n", "    let largestNegative\
    \ = undefined;\n    let smallestPositive = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else {\n            if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "  let largestNegative: number | undefined = undefined;\n  let smallestPositive:\
    \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      if (largestNegative === undefined) {\n        largestNegative\
    \ = lst[i];\n      } else if (lst[i] > largestNegative) {\n        largestNegative\
    \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive\
    \ === undefined) {\n        smallestPositive = lst[i];\n      } else if (lst[i]\
    \ < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n    }\n\
    \  }\n  return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1, -2, -3,\
    \ -4, -5, 0, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, -1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5])); //\
    \ [-5, 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0, 1, 2,\
    \ 3, 4, 5, -1, -2, -3, -4, -5, 0,", "    let largestNegative = undefined;\n  \
    \  let smallestPositive = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < 0) {\n            if (largestNegative === undefined\
    \ || lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else {\n            if (smallestPositive === undefined\
    \ || lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5, 6])); // [-3, 4]\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6])); // [-6, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5, 6])); // [undefined, 1]\n\
    console.log(largest_smallest_integers([])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 0, 1, 2, 3])); // [-3, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, 0, 1, 2, 3, 4, 5, 6])); // [-6, 1]\n", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest === undefined) {\n                smallest = lst[i];\n  \
    \          } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        } else if (lst[i] < 0) {\n            if (largest ===\
    \ undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0,\
    \ 0, 0, 0,", "    let smallestPositive: number | undefined = undefined;\n    let\
    \ largestNegative: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > 0) {\n            if (smallestPositive === undefined)\
    \ {\n                smallestPositive = lst[i];\n            } else if (lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largestNegative ===\
    \ undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9,\
    \ -10]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(largest_smallest_integers([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(largest_smallest_integers([]));\n",
  "    let largest_negative = undefined;\n    let smallest_positive = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5])); // [-5, None]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5])); // [None, 1]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, 5])); // [-1, 5]\nconsole.log(largest_smallest_integers([-1, 2, -3,\
    \ 4, -5])); // [-1, 2]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4,\
    \ -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0])); // [None, None]\nconsole.log(largest_smallest_integers([]));\
    \ // [None, None]\n", "    let smallest: number | undefined;\n    let largest:\
    \ number | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] > 0) {\n            if (smallest == undefined) {\n                smallest\
    \ = lst[i];\n            } else if (lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ == undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0]));\n", "    let a: number | undefined = undefined;\n    let b: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (a === undefined) {\n                a =\
    \ lst[i];\n            } else if (lst[i] > a) {\n                a = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (b === undefined)\
    \ {\n                b = lst[i];\n            } else if (lst[i] < b) {\n     \
    \           b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-5, undefined]\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ 1, -2, 2, -3, 3, -4, 4, -5, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5])); // [-5, 1]\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 1, 2, 3, 4, 5, 0])); // [-5, 1]\nconsole.log(largest_smallest_integers([0,\
    \ 0, 0, 0, 0])); // [undefined, undefined]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n", "    let a: number | undefined = undefined;\n\
    \    let b: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (a === undefined) {\n    \
    \            a = lst[i];\n            } else if (lst[i] > a) {\n             \
    \   a = lst[i];\n            }\n        } else if (lst[i] > 0) {\n           \
    \ if (b === undefined) {\n                b = lst[i];\n            } else if (lst[i]\
    \ < b) {\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n\nconsole.log(largest_smallest_integers([-1, -2, -3, 4, 5])); //\
    \ [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5])); // [-1,\
    \ undefined]\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5])); // [undefined,\
    \ 1]\nconsole.log(largest_smallest_integers([-1, -2, -3, 0, 1, 2, 3, 4, 5]));\
    \ // [-1, 1]\nconsole.log(largest_smallest_integers([])); // [undefined, undefined]\n",
  "  const positives = lst.filter(x => x > 0);\n  const negatives = lst.filter(x =>\
    \ x < 0);\n  const largest_negative = negatives.length > 0 ? Math.max(...negatives)\
    \ : undefined;\n  const smallest_positive = positives.length > 0 ? Math.min(...positives)\
    \ : undefined;\n  return [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1, 2, 3, 4, 5]));\n\
    console.log(largest_smallest_integers([0, 0, 0, 0, 0]));\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\n\
    console.log(largest_smallest_integers([1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1,\
    \ 2, -3, 4, -5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([]));\n", "    let\
    \ smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largest === undefined || lst[i] > largest) {\n     \
    \           largest = lst[i];\n            }\n        } else {\n            if\
    \ (smallest === undefined || lst[i] < smallest) {\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5]));\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 1,\
    \ 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5, 0,\
    \ 1, 2, 3, 4, 5]));\nconsole.log(largest_smallest_integers([-1, -2, -3, -4, -5,\
    \ 0, 1, 2, 3, 4, 5, 0]));\nconsole.log(largest_smallest_integers([]));\nconsole.log(largest_smallest_integers([0]));\n\
    console.log(largest_smallest_integers([-1]));\nconsole.log(largest_smallest_integers([1]));\n\
    console.log(largest_smallest_integers([-1, 0, 1]));\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0, -1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 0]));\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n\nconsole.log(largest_smallest_integers([-1,\
    \ -2, -3, 4, 5, 6])); // [-3, 4]\nconsole.log(largest_smallest_integers([-1, -2,\
    \ -3, -4, -5, -6])); // [-6, undefined]\nconsole.log(largest_smallest_integers([1,\
    \ 2, 3, 4, 5, 6])); // [undefined, 1]\nconsole.log(largest_smallest_integers([]));\
    \ // [undefined, undefined]\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

{
  "language": "ts",
  "name": "HumanEval_66_digitSum",
  "results": [
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABC123!\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?abc\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?abc123\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?abc123ABC\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?abc123ABC123\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?abc123ABC123!\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?abc123ABC123!@#$%^&*()_+\"));\nconsole.log(digitSum(\"ABC123!@#$%^&*()_+-=[]{}|;':,./<>?abc123ABC123!@#$%^&*()_+-=[]{}|;':,./<>?\"));\nconsole.log(digitSum(\"ABC123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpq1osfi18.ts(30,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmpq1osfi18.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmpq1osfi18.ts(31,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  return s.split('').reduce((acc, curr) => {\n    if (curr.charCodeAt(0) >= 65 && curr.charCodeAt(0) <= 90) {\n      return acc + curr.charCodeAt(0);\n    }\n    return acc;\n  }, 0);\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123!@#$%^&*()_-+='));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"aBc\"));\nconsole.log(digitSum(\"a1B2c\"));\nconsole.log(digitSum(\"a1B2c3\"));\nconsole.log(digitSum(\"a1B2c3D4\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "66\n66\n66\n134\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC\"));\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"ABCDEF\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"0123456789\"));\nconsole.log(digitSum(\"0123456789abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\" \"));\nconsole.log(digitSum(\"  \"));\nconsole.log(digitSum(\"   \"));\nconsole.log(digitSum(\"    \"));\nconsole.log(digitSum(\"     \"));\nconsole.log(digitSum(\"      \"));\nconsole.log(digitSum(\"       \"));\nconsole.log(digitSum(\"        \"));\nconsole.log(digitSum(\"         \"));\nconsole.log(digitSum(\"          \"));\nconsole.log(digitSum(\"           \"));\nconsole.log(digitSum(\"            \"));\nconsole.log(digitSum(\"             \"));\nconsole.log(digitSum(\"              \"));\nconsole.log(digitSum(\"               \"));\nconsole.log(digitSum(\"                \"));\nconsole.log(digitSum(\"                 \"));\nconsole.log(digitSum(\"                  \"));\nconsole.log(digitSum(\"                   \"));\nconsole.log(digitSum(\"                    \"));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "132\n198\n405\n2015\n0\n0\n0\n2015\n2015\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('XYZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n0\n2015\n2015\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n    if (code >= 65 && code <= 90) {\n      sum += code;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"0123456789\"));\nconsole.log(digitSum(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n0\n2015\n2015\n0\n2015\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"1234\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"a1b2c3\"));\nconsole.log(digitSum(\"aaaa\"));\nconsole.log(digitSum(\"AAAA\"));\nconsole.log(digitSum(\"A1B2C3\"));\nconsole.log(digitSum(\"A1b2c3\"));\nconsole.log(digitSum(\"A1B2C3D4\"));\nconsole.log(digitSum(\"A1B2C3D4E5\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H8\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H8I9\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H8I9J10\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H8I9J10K11\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H8I9J10K11L12\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H8I9J10K11L12M13\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H8I9J10K11L12M13N14\"));\nconsole.log(digitSum(\"A1B2C3D4E5F6G7H\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp67eioftd.ts(34,38): error TS1002: Unterminated string literal.\n../../../../tmp/tmp67eioftd.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmp67eioftd.ts(35,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"xyz\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n0\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=][{}|':;?/>.<,\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"1234\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n    if (code >= 65 && code <= 90) {\n      sum += code;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('1A2B3C'));\nconsole.log(digitSum('1a2b3c'));\nconsole.log(digitSum('1A2b3C'));\nconsole.log(digitSum('1a2B3c'));\nconsole.log(digitSum('1A2B3C4D5E6F'));\nconsole.log(digitSum('1a2b3c4d5e6f'));\nconsole.log(digitSum('1A2b3C4d5E6f'));\nconsole.log(digitSum('1a2B3c4D5e6F'));\nconsole.log(digitSum('1A2B3C4D5E6F7G8H9I'));\nconsole.log(digitSum('1a2b3c4d5e6f7g8h9i'));\nconsole.log(digitSum('1A2b3C4d5E6f7G8h9I'));\nconsole.log(digitSum('1a2B3c4D5e6F7g8H9i'));\nconsole.log(digitSum('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(digitSum('1a2b3c4d5e6f7g8h9i0j'));\nconsole.log(digitSum('1A2b3C4d5E6f7G8h9I0j'));\nconsole.log(digitSum('1a2B3c4D5e6F7g8H9i0J'));\nconsole.log(digitSum('1A2B3C4D5\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpa9dlvc_7.ts(34,32): error TS1002: Unterminated string literal.\n../../../../tmp/tmpa9dlvc_7.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmpa9dlvc_7.ts(35,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"CodeWars\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n154\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('XYZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabcABC123\"));\nconsole.log(digitSum(\"abcABCabcABC123\"));\nconsole.log(digitSum(\"ABCabcABCabcABC123\"));\nconsole.log(digitSum(\"abcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"abcABCabcABCabcABC123ABCabcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"ABCabcABCabcABCabcABC123abcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"abcABCabcABCabcABC123ABCabcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"ABCabcABCabcABCabcABC123ABCabcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"abcABCabcABCabcABC123abcABCabcABCabcABC123ABCabcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"ABCabcABCabcABCabcABC123ABCabcABCabcABCabcABC123abcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"abcABCabcABCabcABC123abcABCabcABCabcABC123ABCabcABCabcABCabcABC123ABCabcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"ABCabcABCabcABCabcABC123ABCabcABCabcABCabcABC123ABCabcABCabcABCabcABC123abcABCabcABCabcABC123\"));\nconsole.log(digitSum(\"abcABCabcABCabcABC123abcABCabcABCabcABC123abcABCabcABCabcABC123ABCabcABCabcABCabcABC123ABCabcABCabcABC\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp1aj85ug4.ts(34,125): error TS1002: Unterminated string literal.\n../../../../tmp/tmp1aj85ug4.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmp1aj85ug4.ts(35,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;':,./<>?\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;':,./<>?ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;':,./<>?ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4l96snhu.ts(27,269): error TS1002: Unterminated string literal.\n../../../../tmp/tmp4l96snhu.ts(28,1): error TS1005: ',' expected.\n../../../../tmp/tmp4l96snhu.ts(28,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc!@#$%^&*()_-+=123\"));\nconsole.log(digitSum(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n198\n0\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('A1B2C3'));\nconsole.log(digitSum('A1b2c3'));\nconsole.log(digitSum('A1b2c3D4e5F6g7H8i9J0k1L2m3N4o5P6q7R8s9T0u1V2w3X4y5Z6'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n65\n1013\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"XYZ\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n198\n267\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\nconsole.log(digitSum(\"ABCabc123\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=}{[]|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCDEF\"));\nconsole.log(digitSum(\"AbCdEf\"));\nconsole.log(digitSum(\"The quick brown fox jumps over the lazy dog\"));\nconsole.log(digitSum(\"THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\"));\nconsole.log(digitSum(\"Pack my box with five dozen liquor jugs\"));\nconsole.log(digitSum(\"PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS\"));\nconsole.log(digitSum(\"123456789\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+-=[]{}|;':,./<>?\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmplm__uhjl.ts(32,96): error TS1002: Unterminated string literal.\n../../../../tmp/tmplm__uhjl.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmplm__uhjl.ts(33,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n0\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 1,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  const upperCase = s.toUpperCase();\n  let sum = 0;\n  for (let i = 0; i < upperCase.length; i++) {\n    sum += upperCase.charCodeAt(i);\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"Abc\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"z\"));\nconsole.log(digitSum(\"Z\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould loosely deep-equal\n\n131\n    at test (/tmp/tmpybqwo3u5.js:27:12)\n    at Object.<anonymous> (/tmp/tmpybqwo3u5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected: 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "198\n198\n150\n198\n348\n348\n546\n90\n90\n0\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=][}{|':;?/>.<,\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n0\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc!@#123\"));\nconsole.log(digitSum(\"ABC@#abc!@#123ABCabc!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n198\n396\n396\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\nconsole.log(digitSum(\"ABCabc123\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n0\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_+\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n66\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('XYZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=][{}|':;?/>.<,\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\nconsole.log(digitSum(\"ABCabc123\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\nconsole.log(digitSum(\"ABCabc123\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"1234\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('abc123'));\nconsole.log(digitSum('ABC123'));\nconsole.log(digitSum('ABC123!@\u20ac'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"xyz\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n0\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc!@#123\"));\nconsole.log(digitSum(\"ABC@#abc!@#123ABCabc!@#\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n198\n396\n",
      "timestamp": 1660333620
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('XYZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"A1B2C3\"));\nconsole.log(digitSum(\"A1B2C3D4\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n266\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!\"));\nconsole.log(digitSum(\"aBc123!@\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n66\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"CodeWars\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n154\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const char = s.charCodeAt(i);\n    if (char >= 65 && char <= 90) {\n      sum += char;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"1234\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCDEF\"));\nconsole.log(digitSum(\"AbCdEf\"));\nconsole.log(digitSum(\"The quick brown fox jumps over the lazy dog\"));\nconsole.log(digitSum(\"THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\"));\nconsole.log(digitSum(\"Pack my box with five dozen liquor jugs\"));\nconsole.log(digitSum(\"PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS\"));\nconsole.log(digitSum(\"123456789\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;':,./<\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpo7fwhgnn.ts(32,111): error TS1002: Unterminated string literal.\n../../../../tmp/tmpo7fwhgnn.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmpo7fwhgnn.ts(33,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const char = s.charCodeAt(i);\n    if (char >= 65 && char <= 90) {\n      sum += char;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"1234\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n0\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123xyz\"));\nconsole.log(digitSum(\"aa11b33\"));\nconsole.log(digitSum(\"Z\"));\nconsole.log(digitSum(\"ZZ\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n0\n90\n180\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abcd1234xyz\"));\nconsole.log(digitSum(\"CodeWars\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n154\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()-_=+[{]}\\\\|;:'\\\",<.>/?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n2015\n0\n2015\n2015\n2015\n2015\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\")); // 651\nconsole.log(digitSum(\"abc\")); // 0\nconsole.log(digitSum(\"123\")); // 0\nconsole.log(digitSum(\"ABC123\")); // 651\nconsole.log(digitSum(\"ABCabc\")); // 651\nconsole.log(digitSum(\"ABC123abc\")); // 651\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\")); // 0\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")); // 1351\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\")); // 1351\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n198\n198\n0\n2015\n2015\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"1A2B3C\"));\nconsole.log(digitSum(\"123a\"));\nconsole.log(digitSum(\"1A2B3C4D5E6F\"));\nconsole.log(digitSum(\"1A2B3C4D5E6F7G8H9I10J11K12L13M14N15O16P17Q18R19S20T21U22V23W24X25Y26Z\"));\nconsole.log(digitSum(\"1A2B3C4D5E6F7G8H9I10J11K12L13M14N15O16P17Q18R19S20T21U22V23W24X25Y26Z27A28B29C30D31E32F33G34H35I36J37K38L39M40N41O42P43Q44R45S46T47U48V49W50X51Y52Z53A54B55C56D57E58F59G60H61I62J63K64L65M66N67O68P69Q70R71S72T73U74V75W76X77Y78Z79A80B81C82D83E84F85G86H87I88J89K90L91M92N93O94P95Q96R97S98T99U100V101W102X103Y104Z105A106B107C108D109E110F111G112H113I114J115K116L117M118N119O120P121Q122R123S124T125U126V127W128X129Y130Z131A132B133C134D135E136F137G138H139I140J141\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpks2af41e.ts(22,478): error TS1002: Unterminated string literal.\n../../../../tmp/tmpks2af41e.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmpks2af41e.ts(23,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333622
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc!@#$%^&*()_-+=123\"));\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n198\n0\n0\n2015\n2015\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n198\n198\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('aa11b33'));\nconsole.log(digitSum('Z'));\nconsole.log(digitSum('ZZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n0\n90\n180\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=][}{|':;?/>.<,\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABC123!\"));\nconsole.log(digitSum(\"ABC123!@\"));\nconsole.log(digitSum(\"ABC123!@$\"));\nconsole.log(digitSum(\"ABC123!@$%\"));\nconsole.log(digitSum(\"ABC123!@$%^\"));\nconsole.log(digitSum(\"ABC123!@$%^&\"));\nconsole.log(digitSum(\"ABC123!@$%^&*\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+-\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+-=\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+-=[]\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+-=[]{}\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+-=[]{}|\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+-=[]{}|\\\\\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()_+-=[]{}|\\\\;\"));\nconsole.log(digitSum(\"ABC123!@$%^&*()\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpq4av6lpw.ts(37,38): error TS1002: Unterminated string literal.\n../../../../tmp/tmpq4av6lpw.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpq4av6lpw.ts(38,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\")); // 651\nconsole.log(digitSum(\"abc\")); // 0\nconsole.log(digitSum(\"123\")); // 0\nconsole.log(digitSum(\"ABC123\")); // 651\nconsole.log(digitSum(\"aBc123\")); // 651\nconsole.log(digitSum(\"aBc123xyz\")); // 651\nconsole.log(digitSum(\"XYZ\")); // 780\nconsole.log(digitSum(\"XYZ123\")); // 780\nconsole.log(digitSum(\"XYZ123abc\")); // 780\nconsole.log(digitSum(\"XYZ123ABC\")); // 780\nconsole.log(digitSum(\"XYZ123ABCxyz\")); // 780\nconsole.log(digitSum(\"XYZ123ABCxyz456\")); // 780\nconsole.log(digitSum(\"XYZ123ABCxyz456abc\")); // 780\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789\")); // 780\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789XYZ\")); // 1560\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789XYZ123\")); // 1560\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789XYZ123ABC\")); // 1560\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789XYZ123ABCxyz\")); // 1560\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789XYZ123ABCxyz456\")); // 1560\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789XYZ123ABCxyz456abc\")); // 1560\nconsole.log(digitSum(\"XYZ123ABCxyz456abc789XYZ123ABCxyz456abc789\")); // 1560\nconsole.log(digitSum(\"XYZ123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpvp97wvma.ts(36,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmpvp97wvma.ts(37,1): error TS1005: ',' expected.\n../../../../tmp/tmpvp97wvma.ts(37,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"12345\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()-_=+[{]}\\\\|;:'\\\",<.>/?\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n2015\n0\n2015\n2015\n2015\n2015\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('ABC123'));\nconsole.log(digitSum('abc123'));\nconsole.log(digitSum('ABCabc'));\nconsole.log(digitSum('ABCabc123'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(digitSum('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;:\",./<>?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n2015\n0\n2015\n2015\n2015\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=][}{|\\';/.,><\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('XYZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123&*(\"));\nconsole.log(digitSum(\"ZZZZ\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n360\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\nconsole.log(digitSum(\"ABCabc123\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=][}{|':;?/>.<,\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC/DC\"));\nconsole.log(digitSum(\"Abc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "267\n65\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"a\"));\nconsole.log(digitSum(\"A\"));\nconsole.log(digitSum(\"z\"));\nconsole.log(digitSum(\"Z\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n198\n198\n0\n0\n65\n0\n90\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"a\"));\nconsole.log(digitSum(\"A\"));\nconsole.log(digitSum(\"1\"));\nconsole.log(digitSum(\"a1\"));\nconsole.log(digitSum(\"A1\"));\nconsole.log(digitSum(\"a1A\"));\nconsole.log(digitSum(\"A1a\"));\nconsole.log(digitSum(\"a1A1\"));\nconsole.log(digitSum(\"A1a1\"));\nconsole.log(digitSum(\"a1A1a\"));\nconsole.log(digitSum(\"A1a1A\"));\nconsole.log(digitSum(\"a1A1a1\"));\nconsole.log(digitSum(\"A1a1A1\"));\nconsole.log(digitSum(\"a1A1a1A\"));\nconsole.log(digitSum(\"A1a1A1a\"));\nconsole.log(digitSum(\"a1A1a1A1\"));\nconsole.log(digitSum(\"A1a1A1a1\"));\nconsole.log(digitSum(\"a1A1a1A1a\"));\nconsole.log(digitSum(\"A1a1A1a1A\"));\nconsole.log(digitSum(\"a1A1a1A1a1\"));\nconsole.log(digitSum(\"A1a1A1a1A1\"));\nconsole.log(digitSum(\"a1A1a1A1a1A\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n198\n0\n0\n65\n0\n0\n65\n65\n65\n65\n65\n65\n130\n65\n130\n130\n130\n130\n130\n130\n195\n130\n195\n195\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('Abc123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('DIGITSUM'));\nconsole.log(digitSum('123456789'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(digitSum('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;:,.<>/?`~'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n65\n66\n614\n0\n2015\n0\n2015\n2015\n2015\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n0\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('abc123'));\nconsole.log(digitSum('ABC123'));\nconsole.log(digitSum('AbCdEfGhIjKlMnOpQrStUvWxYz'));\nconsole.log(digitSum('The quick brown fox jumps over the lazy dog.'));\nconsole.log(digitSum('THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n1001\n84\n2713\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('abc123'));\nconsole.log(digitSum('ABC123'));\nconsole.log(digitSum('ABC123xyz'));\nconsole.log(digitSum('XYZ'));\nconsole.log(digitSum('aa11b33'));\nconsole.log(digitSum('Chocolate'));\nconsole.log(digitSum('5hoco1a1e'));\nconsole.log(digitSum('123abc123'));\nconsole.log(digitSum('Hello'));\nconsole.log(digitSum('If you want to jumpstart the process of talking to us about this role, here\u2019s a little challenge: write a program that outputs the largest unique set of characters that can be removed from this paragraph without letting its length drop below 50.'));\nconsole.log(digitSum('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque quis erat eget justo dignissim aliquam. Maecenas at ex nec nisi imperdiet finibus. Nulla facilisi. Donec euismod, urna sit amet commodo tincidunt, nisi nunc maximus nisi, ac fringilla nunc nisi sit amet nisl. Donec euismod, urna sit amet commodo tincidunt, nisi nunc maximus nisi, ac fringilla nunc nisi sit amet nisl. Donec euismod, urna sit amet commodo tincidunt, nisi nunc maximus nisi, ac fringilla nunc nisi sit amet nisl. Donec euismod, urna sit amet commodo tincidunt, nisi nunc maximus nisi\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp8eq819t0.ts(28,587): error TS1002: Unterminated string literal.\n../../../../tmp/tmp8eq819t0.ts(29,1): error TS1005: ',' expected.\n../../../../tmp/tmp8eq819t0.ts(29,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n    if (code >= 65 && code <= 90) {\n      sum += code;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('aBc'));\nconsole.log(digitSum('a1B2c'));\nconsole.log(digitSum('a1B2c3'));\nconsole.log(digitSum('a1B2c3d4'));\nconsole.log(digitSum('a1B2c3d4e5'));\nconsole.log(digitSum('a1B2c3d4e5f6'));\nconsole.log(digitSum('a1B2c3d4e5f6g7'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9j10'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9j10k11'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9j10k11l12'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9j10k11l12m13'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9j10k11l12m13n14'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9j10k11l12m13n14o15'));\nconsole.log(digitSum('a1B2c3d4e5f6g7h8i9j10k11l12m13n14o15p16'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n66\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123&*(\"));\nconsole.log(digitSum(\"ZZZZ\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n360\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123!@#$%^&*\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpcj88uqn0.ts(32,40): error TS1002: Unterminated string literal.\n../../../../tmp/tmpcj88uqn0.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmpcj88uqn0.ts(33,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const char = s.charCodeAt(i);\n    if (char >= 65 && char <= 90) {\n      sum += char;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const charCode = s.charCodeAt(i);\n    if (charCode >= 65 && charCode <= 90) {\n      sum += charCode;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"0123456789\"));\nconsole.log(digitSum(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n0\n2015\n2015\n0\n2015\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc!@#123\"));\nconsole.log(digitSum(\"ABC@#abc!@#123ABCabc!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n198\n396\n396\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"a\"));\nconsole.log(digitSum(\"A\"));\nconsole.log(digitSum(\"z\"));\nconsole.log(digitSum(\"Z\"));\nconsole.log(digitSum(\"1\"));\nconsole.log(digitSum(\"9\"));\nconsole.log(digitSum(\"0\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n198\n0\n0\n65\n0\n90\n0\n0\n0\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('XYZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123xyz\"));\nconsole.log(digitSum(\"XYZ\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n198\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABCabc\"));\nconsole.log(digitSum(\"ABCabc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n198\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('ABC123'));\nconsole.log(digitSum('abc123'));\nconsole.log(digitSum('ABCabc'));\nconsole.log(digitSum('ABCabc123'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(digitSum('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-='));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;:,.<>/?`~'));\nconsole.log(digitSum('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpc4ow4y53.ts(29,92): error TS1002: Unterminated string literal.\n../../../../tmp/tmpc4ow4y53.ts(30,1): error TS1005: ',' expected.\n../../../../tmp/tmpc4ow4y53.ts(30,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('aa11b33'));\nconsole.log(digitSum('Z'));\nconsole.log(digitSum('ZZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n0\n90\n180\n",
      "timestamp": 1660333623
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=][';/.,<>?:{}|\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\':;?/>.<,\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('A1B2C3'));\nconsole.log(digitSum('A1b2c3'));\nconsole.log(digitSum('a1b2c3'));\nconsole.log(digitSum('A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26'));\nconsole.log(digitSum('A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n65\n0\n2015\n2015\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc!@#$%^&*()_-+=123\"));\nconsole.log(digitSum(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n198\n0\n198\n198\n198\n0\n",
      "timestamp": 1660333619
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/`~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AaBbCc\"));\nconsole.log(digitSum(\"AAAbbbCc\"));\nconsole.log(digitSum(\"A\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n262\n65\n0\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum('ABC'));\nconsole.log(digitSum('abc'));\nconsole.log(digitSum('123'));\nconsole.log(digitSum('aBc123'));\nconsole.log(digitSum('aBc123xyz'));\nconsole.log(digitSum('XYZ'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n267\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"AC\"));\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"ABCDEF\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"0123456789\"));\nconsole.log(digitSum(\"0123456789abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"a\"));\nconsole.log(digitSum(\"A\"));\nconsole.log(digitSum(\"1\"));\nconsole.log(digitSum(\"a1\"));\nconsole.log(digitSum(\"A1\"));\nconsole.log(digitSum(\"aA\"));\nconsole.log(digitSum(\"Aa\"));\nconsole.log(digitSum(\"aA1\"));\nconsole.log(digitSum(\"Aa1\"));\nconsole.log(digitSum(\"aA1b\"));\nconsole.log(digitSum(\"Aa1b\"));\nconsole.log(digitSum(\"aA1bB\"));\nconsole.log(digitSum(\"Aa1bB\"));\nconsole.log(digitSum(\"aA1bB2\"));\nconsole.log(digitSum(\"Aa1bB2\"));\nconsole.log(digitSum(\"aA1bB2c\"));\nconsole.log(digitSum(\"A\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpp4qfdug8.ts(41,24): error TS1002: Unterminated string literal.\n../../../../tmp/tmpp4qfdug8.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpp4qfdug8.ts(42,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333625
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"aBc123\"));\nconsole.log(digitSum(\"aBc123!@#$%^&*()_-+=[]{}|\\:;'<>,.?/\"));\nconsole.log(digitSum(\"ABCabc123\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n66\n66\n198\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABC123!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(digitSum(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"));\nconsole.log(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@\u20ac\u00a3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n0\n2015\n2015\n2015\n2015\n2015\n2015\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"123aBc\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n66\n",
      "timestamp": 1660333616
    },
    {
      "exit_code": 2,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"abcABC123\"));\nconsole.log(digitSum(\"ABCabc123\"));\nconsole.log(digitSum(\"ABCabc!@#123\"));\nconsole.log(digitSum(\"ABC@#abc!@#123ABCabc!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc\"));\nconsole.log(digitSum(\"ABCabc!@#123ABCabc!@#ABCabc123!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#\"));\nconsole.log(digitSum(\"abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123!@#ABCabc!@#ABCabc123!@#abcABC123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpt4bnesxu.ts(30,98): error TS1002: Unterminated string literal.\n../../../../tmp/tmpt4bnesxu.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmpt4bnesxu.ts(31,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333626
    },
    {
      "exit_code": 0,
      "program": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\nfunction digitSum(s: string): number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"ABC\"));\nconsole.log(digitSum(\"abc\"));\nconsole.log(digitSum(\"123\"));\nconsole.log(digitSum(\"abc123\"));\nconsole.log(digitSum(\"ABC123\"));\nconsole.log(digitSum(\"ABC123!\"));\nconsole.log(digitSum(\"\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "198\n0\n0\n0\n198\n198\n0\n",
      "timestamp": 1660333626
    }
  ]
}
language: ts
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpd2hoojrs.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd2hoojrs.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxkb1l_rf.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxkb1l_rf.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxkb1l_rf.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp39lctgre.ts(20,1144): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp39lctgre.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp39lctgre.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored! I am so bored? I am so bored!\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored! I am so bored? I am\
    \ so bored! I am so bored. I am so bored! I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored! I am so bored? I am so bored!\
    \ I am so bored. I am so bored! I am so bored? I am so bored! I am so bored. I\
    \ am so bored! I am so bored? I am so bored! I am so bored. I am so bored! I am\
    \ so bored? I am so bored! I am so bored. I am so bored! I am so bored? I am so\
    \ bored! I am so bored. I am so bored! I am so bored? I am so bored! I am so bored.\
    \ I am so bored! I am so bored? I am so bored! I am so bored. I am so bored! I\
    \ am so bored? I am so bored! I am so bored. I am so bored! I am so bored? I am\
    \ so bored! I am so bored. I am so bored! I am so bored? I am so bored! I am so\
    \ bored. I am so bored! I am so bored? I am so bored! I am so bored. I am so bored!\
    \ I am so bored? I am so bored! I am so bored. I am so bored! I am so bored? I\
    \ am so bored! I am so bored. I am so bored! I am so bored? I am so bored! I am\
    \ so bored. I am so bored!\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpq_25njcx.ts(22,892): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpq_25njcx.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmpq_25njcx.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < sentence.length; i++) {\n        if (sentence[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored!\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpghlxftgq.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpghlxftgq.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1yv0v86z.ts(18,1203): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp1yv0v86z.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmp1yv0v86z.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz2suh82h.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz2suh82h.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_jj6g8jr.ts(16,1297): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_jj6g8jr.ts(17,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_jj6g8jr.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i: number = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpouw_8rz_.ts(29,105): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpouw_8rz_.ts(30,1): error TS1005: '','' expected.

    ../../../../tmp/tmpouw_8rz_.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\
    \ I am not bored! I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored! I am bored? I am bored.\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_tpy87i2.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_tpy87i2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    1

    1

    1

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored. I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8e4x9l4f.ts(19,1071): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8e4x9l4f.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8e4x9l4f.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp89n99p4x.ts(20,1147): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp89n99p4x.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp89n99p4x.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\")); // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am\
    \ not bored. I am bored. I am not bored. I am not bored.\")); // 1\nconsole.log(is_bored(\"\
    I am not bored. I am bored. I am not bored. I am not bored. I am bored.\")); //\
    \ 2\nconsole.log(is_bored(\"I am not bored. I am bored. I am not bored. I am not\
    \ bored. I am bored. I am not bored. I am not bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9n96_fdn.ts(22,880): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp9n96_fdn.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmp9n96_fdn.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpa0hy1w2w.ts(16,1282): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpa0hy1w2w.ts(17,1): error TS1005: '','' expected.

    ../../../../tmp/tmpa0hy1w2w.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpe71jkc5x.ts(18,1281): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpe71jkc5x.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpe71jkc5x.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                if (words[i + 2] === 'bored')\
    \ {\n                    boredoms++;\n                }\n            }\n     \
    \   }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpc310f47t.ts(27,741): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpc310f47t.ts(28,1): error TS1005: '','' expected.

    ../../../../tmp/tmpc310f47t.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmped5ax1a1.ts(17,1269): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmped5ax1a1.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmped5ax1a1.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxqc8tgoj.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxqc8tgoj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmped5ax1a1.ts(17,1269): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmped5ax1a1.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmped5ax1a1.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < sentence.length; i++) {\n        if (sentence[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored. I am not bored. I am bored.\"));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9fz23na5.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9fz23na5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_bcg7md2.ts(19,1203): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_bcg7md2.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_bcg7md2.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpiu__85c4.ts(16,1326): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpiu__85c4.ts(17,1): error TS1005: '','' expected.

    ../../../../tmp/tmpiu__85c4.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored? I am so bored! I am so\
    \ bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored! I am so bored?\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored. I am so bored?\"));\nconsole.log(is_bored(\"I am\
    \ so bored? I am so bored. I am so bored!\"));\nconsole.log(is_bored(\"I am so\
    \ bored? I am so bored! I am so bored.\"));\nconsole.log(is_bored(\"I am so bored?\
    \ I am so bored. I am so bored!\"));\nconsole.log(is_bored(\"I am so bored. I\
    \ am so bored? I am so bored!\"));\nconsole.log(is_bored(\"I am so bored. I am\
    \ so bored! I am so bored?\"));\nconsole.log(is_bored(\"I am so bored! I am so\
    \ bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored?\
    \ I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored! I\
    \ am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored. I am so\
    \ bored?\"));\nconsole.log(is_bored(\"\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpj98nnvax.ts(33,23): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpj98nnvax.ts(34,1): error TS1005: '','' expected.

    ../../../../tmp/tmpj98nnvax.ts(34,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let word of words) {\n        if (word.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpl6bfeu3k.ts(21,1035): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpl6bfeu3k.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpl6bfeu3k.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp35ir88l6.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp35ir88l6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    6

    6

    '
  timestamp: 1660333631
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfm0khoj7.ts(20,1126): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpfm0khoj7.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpfm0khoj7.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am bored! I\
    \ am not bored? I am bored.\"));\nconsole.log(is_bored(\"I am bored! I am not\
    \ bored? I am bored. I am bored! I am not bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpiairsuc2.ts(21,996): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpiairsuc2.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpiairsuc2.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let word of words) {\n        if (word.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpl6bfeu3k.ts(21,1035): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpl6bfeu3k.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpl6bfeu3k.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz2suh82h.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz2suh82h.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.charAt(0) === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_6g67_du.ts(26,67): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_6g67_du.ts(27,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_6g67_du.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpu0p9_1ac.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0p9_1ac.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmyb3m37d.ts(21,1072): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpmyb3m37d.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpmyb3m37d.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdvy0ftvi.ts(34,57): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpdvy0ftvi.ts(35,1): error TS1005: '','' expected.

    ../../../../tmp/tmpdvy0ftvi.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am bored? I am bored.\"));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpngjhp5lc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpngjhp5lc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    '
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpat233gbx.ts(19,1172): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpat233gbx.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmpat233gbx.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbt8hgtwt.ts(21,1071): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpbt8hgtwt.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpbt8hgtwt.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. You are bored too.\"));\n\
    console.log(is_bored(\"We are not bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored. You are bored.\"));\nconsole.log(is_bored(\"I am not bored. You are bored.\
    \ We are not bored.\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpozci2cyv.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpozci2cyv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    0

    1

    1

    '
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpfdeedj29.ts(19,1240): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpfdeedj29.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmpfdeedj29.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am bored. You\
    \ are boring. We are all boring.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ You are boring. We are all boring.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ You are boring. We are all boring. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all boring. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am not bored. You are boring. We are all boring. I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ You are boring. We are all boring. I am bored. I am bored. I am bored. I am\
    \ bored.\"));\nconsole.log(is_bored(\"I am not bored. You are boring. We are all\
    \ boring. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all boring. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. You are boring. We are all boring. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all boring. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpz7huufnc.ts(27,65): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpz7huufnc.ts(28,1): error TS1005: '','' expected.

    ../../../../tmp/tmpz7huufnc.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are bored too.\"));\nconsole.log(is_bored(\"\
    I am bored. You are bored too. We are bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. You are bored too. We are bored. Aren't you bored?\"));\nconsole.log(is_bored(\"\
    I am bored. You are bored too. We are bored. Aren't you bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are bored too. We are bored. Aren't\
    \ you bored? I am not bored. You are bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. You are bored too. We are bored. Aren't you bored? I am not bored. You\
    \ are bored. We are bored.\"));\nconsole.log(is_bored(\"I am bored. You are bored\
    \ too. We are bored. Aren't you bored? I am not bored. You are bored. We are bored.\
    \ Aren't you bored?\"));\nconsole.log(is_bored(\"I am bored. You are bored too.\
    \ We are bored. Aren't you bored? I am not bored. You are bored. We are bored.\
    \ Aren't you bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored. You\
    \ are bored too. We are bored. Aren't you bored? I am not bored. You are bored.\
    \ We are bored. Aren't you bored? I am not bored. You are bored.\"));\nconsole.log(is_bored(\"\
    I am bored. You are bored too. We are bored. Aren't you bored? I am not bored.\
    \ You are bored. We are bored. Aren't you bored? I am not bored. You are bored.\
    \ We are bored.\"));\nconsole.log(is_bored(\"I am bored. You are bored too. We\
    \ are bored. Aren't you bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxre_a9oc.ts(27,85): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxre_a9oc.ts(28,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxre_a9oc.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1660333631
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8c6crmud.ts(33,53): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8c6crmud.ts(34,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8c6crmud.ts(34,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5qe8cjh3.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5qe8cjh3.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    1

    1

    1

    1

    1

    '
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_bcg7md2.ts(19,1203): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_bcg7md2.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_bcg7md2.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ sentences.forEach(sentence => {\n        if (sentence.startsWith(\"I\")) boredoms++;\n\
    \    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\n\
    console.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpa9vgd25_.ts(18,1141): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpa9vgd25_.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpa9vgd25_.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am not bored? I am not bored! I am not bored? I am not bored!\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprpm2fdlo.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprpm2fdlo.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    5

    5

    '
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_jj6g8jr.ts(16,1297): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_jj6g8jr.ts(17,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_jj6g8jr.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpao66mrea.ts(20,1141): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpao66mrea.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpao66mrea.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp504fuc4z.ts(20,1189): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp504fuc4z.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp504fuc4z.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(/[.?!]/);\n  for (let i\
    \ = 0; i < words.length; i++) {\n    if (words[i].startsWith(\"I\")) {\n     \
    \ boredoms++;\n    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am\
    \ bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored!\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp13tymvaf.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp13tymvaf.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    '
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored.\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpm66w93pk.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm66w93pk.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    1

    '
  timestamp: 1660333634
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored! I am\
    \ not bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\
    \ I am not bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am not bored! I am not bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored! I am not bored! I am not bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored! I am not bored! I am not\
    \ bored! I am not bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am not bored! I am not bored! I am not bored! I am not bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored! I am not bored! I am not\
    \ bored! I am not bored! I am not bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored! I am not bored! I am not bored! I am not bored! I\
    \ am not bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am not bored! I am not bored! I am not bored! I am not bored! I\
    \ am not bored! I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp08jm3ypm.ts(29,135): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp08jm3ypm.ts(30,1): error TS1005: '','' expected.

    ../../../../tmp/tmp08jm3ypm.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1660333634
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_bcg7md2.ts(19,1203): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_bcg7md2.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_bcg7md2.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    const words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith('I'))\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\")); // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am\
    \ not bored. I am bored. I am not bored. I am bored.\")); // 2\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpgry8tbv9.ts(22,867): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpgry8tbv9.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmpgry8tbv9.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333634
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. You are boring.\"));\nconsole.log(is_bored(\"\
    I am bored. You are boring. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ You are boring. I am bored. You are boring.\"));\nconsole.log(is_bored(\"I am\
    \ bored. You are boring. I am bored. You are boring. I am bored. You are boring.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring.\"));\nconsole.log(is_bored(\"\
    I am bored. You are boring. I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring.\"));\nconsole.log(is_bored(\"\
    I am bored. You are boring. I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring. I am bored. You are\
    \ boring.\"));\nconsole.log(is_bored(\"I am bored. You are boring. I am bored.\
    \ You are boring. I am bored. You are boring. I am bored. You are boring. I am\
    \ bored. You are boring. I am bored. You are boring. I am bored. You are boring.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring. I am bored. You are\
    \ boring. I am bored. You are boring. I am bored. You are boring. I am bored.\
    \ You are boring.\"));\nconsole.log(is_bored(\"I am bored. You are boring. I am\
    \ bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpeq1jqbyi.ts(26,61): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpeq1jqbyi.ts(27,1): error TS1005: '','' expected.

    ../../../../tmp/tmpeq1jqbyi.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1660333634
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored?\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"I am\
    \ so bored! I am so bored? I am so bored. I am so bored? I am so bored.\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored. I am so bored?\
    \ I am so bored. I am so bored! I am so bored? I am so bored. I am so bored? I\
    \ am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored. I am so bored? I am so bored. I am so bored! I am so bored? I am so\
    \ bored. I am so bored? I am so bored. I am so bored! I am so bored? I am so bored.\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am\
    \ so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored?\
    \ I am so bored. I am so bored! I am so bored? I am so bored. I am so bored? I\
    \ am so bored. I am so bored! I am so bored? I am so bored. I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored? I am so\
    \ bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6tvrspaw.ts(23,786): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp6tvrspaw.ts(24,1): error TS1005: '','' expected.

    ../../../../tmp/tmp6tvrspaw.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpwc2ba1mu.ts(22,961): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpwc2ba1mu.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmpwc2ba1mu.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpypor0c69.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpypor0c69.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpc7ywplm6.ts(23,861): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpc7ywplm6.ts(24,1): error TS1005: '','' expected.

    ../../../../tmp/tmpc7ywplm6.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8h1cyqto.ts(20,1147): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8h1cyqto.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8h1cyqto.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored!\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored! I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnis75i6y.ts(17,1268): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpnis75i6y.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmpnis75i6y.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\
    \ I am not bored! I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored. I am bored! I\
    \ am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am\
    \ bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am bored.\
    \ I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am\
    \ bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpof_7mvyk.ts(24,627): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpof_7mvyk.ts(25,1): error TS1005: '','' expected.

    ../../../../tmp/tmpof_7mvyk.ts(25,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf0gitg05.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf0gitg05.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am bored! I\
    \ am bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am\
    \ bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am bored.\
    \ I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am\
    \ bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am\
    \ bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am bored.\
    \ I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am\
    \ bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7yhhm_qw.ts(20,1053): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp7yhhm_qw.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp7yhhm_qw.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored.\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcwr9stlm.ts(20,1114): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpcwr9stlm.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpcwr9stlm.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored! I\
    \ am not bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored? I\
    \ am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\
    \ I am not bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored! I\
    \ am not bored? I am not bored! I am not bored? I am not bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored! I\
    \ am not bored? I am not bored! I am not bored? I am not bored! I am not bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\
    \ I am not bored? I am not bored! I am not bored?\"));\nconsole.log(\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp04yzjwq0.ts(31,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let arr = S.split(/[.?!]/);\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i].startsWith(\"I\")) {\n   \
    \         boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnqfo3x46.ts(20,1126): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpnqfo3x46.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpnqfo3x46.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3fspofbu.ts(19,1243): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp3fspofbu.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp3fspofbu.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmploc_pcxm.ts(17,1206): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmploc_pcxm.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmploc_pcxm.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpummcj8v4.ts(22,939): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpummcj8v4.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmpummcj8v4.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am bored. I\
    \ am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored.\"));\n\
    console.log(is_bored(\"I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdzpbog47.ts(27,36): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpdzpbog47.ts(28,1): error TS1005: '','' expected.

    ../../../../tmp/tmpdzpbog47.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnjs9z4fl.ts(22,939): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpnjs9z4fl.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmpnjs9z4fl.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz2suh82h.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz2suh82h.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ bored. I am not bored. I am not bored. I am bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp0hdeukfl.ts(21,1043): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp0hdeukfl.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmp0hdeukfl.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(\"\
    \ \");\n    for (let i: number = 0; i < words.length; i++) {\n        if (words[i]\
    \ === \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am not bored. I am not bored. I am not bored.\"));\n\
    console.log(is_bored(\"I am not bored. I am bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpb2qi0azn.ts(21,1004): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpb2qi0azn.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpb2qi0azn.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333636
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpk0s38hlo.ts(22,1093): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpk0s38hlo.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmpk0s38hlo.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333638
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1q19nc3w.ts(21,1071): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp1q19nc3w.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmp1q19nc3w.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333638
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    const boredoms = S.split(/[.?!]/).filter(s => s.startsWith('I'));\n\
    \    return boredoms.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp2x1get0i.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2x1get0i.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333638
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpq8gp0ici.ts(20,1126): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpq8gp0ici.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpq8gp0ici.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333638
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.!?]/);\n   \
    \ for (let i = 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored. I am not bored. I am bored.\")); // 3\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored.\")); // 4\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_5t5csj0.ts(20,1001): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_5t5csj0.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_5t5csj0.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333638
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvwz2cwzi.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvwz2cwzi.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1660333638
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpu0p9_1ac.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0p9_1ac.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored!\"));\nconsole.log(is_bored(\"I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1o13wuyy.ts(19,1086): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp1o13wuyy.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp1o13wuyy.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333638
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpg6ke3kpu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg6ke3kpu.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpg6ke3kpu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg6ke3kpu.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored?\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7oc6zssj.ts(20,1114): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp7oc6zssj.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp7oc6zssj.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333638
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\
    \ I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpim8ubpfv.ts(17,1251): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpim8ubpfv.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmpim8ubpfv.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpao66mrea.ts(20,1141): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpao66mrea.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpao66mrea.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored?\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored!\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored! I am so bored?\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I\
    \ am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so bored?\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored. I am\
    \ so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am so\
    \ bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored.\
    \ I am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I\
    \ am so bored. I am so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am\
    \ so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so\
    \ bored! I am so bored? I am so bored. I am\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_hlgy9jr.ts(26,162): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_hlgy9jr.ts(27,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_hlgy9jr.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1660333638
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpffe0ubo6.ts(21,1075): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpffe0ubo6.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpffe0ubo6.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i: number = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not bored. I am bored.\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpho8_nevw.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpho8_nevw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored?\
    \ I am not bored! I am not bored.\"));\nconsole.log(is_bored(\"I am not bored?\
    \ I am not bored! I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored? I am not bored! I am not bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpi2jgwxd6.ts(21,970): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpi2jgwxd6.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpi2jgwxd6.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i].toLowerCase() === 'i')\
    \ {\n            if (words[i + 1].toLowerCase() === 'am') {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am not bored? I am not bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9a4x1vpj.ts(23,912): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp9a4x1vpj.ts(24,1): error TS1005: '','' expected.

    ../../../../tmp/tmp9a4x1vpj.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.charAt(0) === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsgh2z6en.ts(34,49): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpsgh2z6en.ts(35,1): error TS1005: '','' expected.

    ../../../../tmp/tmpsgh2z6en.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppue6vzju.ts(20,1091): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmppue6vzju.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmppue6vzju.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdm1pllbs.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpdm1pllbs.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpdm1pllbs.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(\"\
    \ \");\n    for (let i = 0; i < words.length; i++) {\n        if (words[i] ===\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\
    \ I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored! I am bored? I\
    \ am bored! I am bored? I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp711mu_ru.ts(29,39): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp711mu_ru.ts(30,1): error TS1005: '','' expected.

    ../../../../tmp/tmp711mu_ru.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(/[.?!]/);\n  for (let word\
    \ of words) {\n    if (word.startsWith(\"I\")) {\n      boredoms++;\n    }\n \
    \ }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored? I am bored!\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpn0kc5583.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn0kc5583.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = '';\n    for (let i = 0;\
    \ i < S.length; i++) {\n        if (S[i] === '.' || S[i] === '?' || S[i] === '!')\
    \ {\n            sentence = sentence.trim();\n            if (sentence.startsWith('I'))\
    \ {\n                boredoms++;\n            }\n            sentence = '';\n\
    \        } else {\n            sentence += S[i];\n        }\n    }\n    return\
    \ boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmph6f3f8yx.ts(23,1095): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmph6f3f8yx.ts(24,1): error TS1005: '','' expected.

    ../../../../tmp/tmph6f3f8yx.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].split(' ')[0] ===\
    \ 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    \nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphvd0pczr.ts(16,1284): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmphvd0pczr.ts(17,1): error TS1005: '','' expected.

    ../../../../tmp/tmphvd0pczr.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp45ctic1x.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp45ctic1x.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjg390xix.ts(34,27): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpjg390xix.ts(35,1): error TS1005: '','' expected.

    ../../../../tmp/tmpjg390xix.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1660333641
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcao0lqhp.ts(20,1131): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpcao0lqhp.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpcao0lqhp.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333641
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_8_f0fm8.ts(17,1281): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp_8_f0fm8.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmp_8_f0fm8.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333641
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp33_jtse_.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp33_jtse_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    const words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].split(' ')[0] ===\
    \ 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    \nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored. I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored! I am not bored. I\
    \ am not bored? I am not bored. I am not bored! I am not bored. I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not bored!\
    \ I am not bored. I am not bored? I am not bored. I am not bored! I am not bored.\
    \ I am not bored? I am not bored. I am not bored! I am not bored. I am not bored?\
    \ I am not bored. I am not bored! I am not bored. I am not bored? I am not bored.\
    \ I am not bored! I am not bored. I am not bored? I am not bored. I am not bored!\
    \ I am not bored. I am not bored? I am not bored. I am not bored! I am not bored.\
    \ I am not bored? I am not bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp97cyim10.ts(26,486): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp97cyim10.ts(27,1): error TS1005: '','' expected.

    ../../../../tmp/tmp97cyim10.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1660333641
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am not bored? I am not bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored. I am bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored. I\
    \ am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored? I am not bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored? I am not bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored.\"));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmf4iy4q3.ts(28,9): error TS1003: Identifier expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp4731duq8.ts(34,48): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp4731duq8.ts(35,1): error TS1005: '','' expected.

    ../../../../tmp/tmp4731duq8.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored. I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8e4x9l4f.ts(19,1071): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8e4x9l4f.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8e4x9l4f.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not\
    \ bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am bored! I am not bored? I am not bored!\"));\n\
    console.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppx7zqe_g.ts(33,1): error TS1005: '','' expected.

    ../../../../tmp/tmppx7zqe_g.ts(33,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxkb1l_rf.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxkb1l_rf.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxkb1l_rf.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let word of words) {\n        if (word.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am so bored. I am so so bored.\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpqxj1frfu.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqxj1frfu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1660333642
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppue6vzju.ts(20,1091): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmppue6vzju.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmppue6vzju.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored.\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsj0j5ppo.ts(18,1234): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpsj0j5ppo.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpsj0j5ppo.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored!\"));\nconsole.log(is_bored(\"I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyjpqob1u.ts(19,1056): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpyjpqob1u.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmpyjpqob1u.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpoor5ut05.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpoor5ut05.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    '
  timestamp: 1660333643
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored.\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsj0j5ppo.ts(18,1234): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpsj0j5ppo.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpsj0j5ppo.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored. I am bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am bored? I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored. I am bored. I am not\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpo8w1gjkk.ts(28,87): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpo8w1gjkk.ts(29,1): error TS1005: '','' expected.

    ../../../../tmp/tmpo8w1gjkk.ts(29,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    words.forEach(word => {\n        if (word.startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not. I am!\"));\nconsole.log(is_bored(\"I am bored. I am not.\
    \ I am! I am not.\"));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am\
    \ not. I am not.\"));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am\
    \ not. I am not. I am!\"));\nconsole.log(is_bored(\"I am bored. I am not. I am!\
    \ I am not. I am not. I am! I am not.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not. I am! I am not. I am not. I am! I am not. I am not.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not. I am! I am not. I am not. I am! I am not. I am not. I am!\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am not. I am not. I\
    \ am! I am not. I am not. I am! I am not.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not. I am! I am not. I am not. I am! I am not. I am not. I am! I am not.\
    \ I am not.\"));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am not.\
    \ I am not. I am! I am not. I am not. I am! I am not. I am not. I am!\"));\nconsole.log(is_bored(\"\
    I am bored. I am not.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8e60wbt3.ts(28,44): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8e60wbt3.ts(29,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8e60wbt3.ts(29,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\
    \ // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am\
    \ not bored. I am bored. I am not bored.\")); // 1\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am bored.\")); // 1\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am bored.\")); // 2\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    )); // 1\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    )); // 1\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am bored.\")); // 1\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpuc4hpa_3.ts(29,79): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpuc4hpa_3.ts(30,1): error TS1005: '','' expected.

    ../../../../tmp/tmpuc4hpa_3.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\
    \ I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7th2nkhb.ts(24,765): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp7th2nkhb.ts(25,1): error TS1005: '','' expected.

    ../../../../tmp/tmp7th2nkhb.ts(25,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8h1cyqto.ts(20,1147): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8h1cyqto.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8h1cyqto.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxkb1l_rf.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxkb1l_rf.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxkb1l_rf.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxkb1l_rf.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxkb1l_rf.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxkb1l_rf.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpkqcv21ak.ts(22,1103): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpkqcv21ak.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmpkqcv21ak.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3fspofbu.ts(19,1243): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp3fspofbu.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp3fspofbu.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.split(' ')[0] === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp0mg2dq_k.ts(18,1191): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp0mg2dq_k.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmp0mg2dq_k.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = '';\n    for (let i = 0;\
    \ i < S.length; i++) {\n        if (S[i] === '.' || S[i] === '?' || S[i] === '!')\
    \ {\n            sentence = sentence.trim();\n            if (sentence.startsWith('I'))\
    \ {\n                boredoms++;\n            }\n            sentence = '';\n\
    \        } else {\n            sentence += S[i];\n        }\n    }\n    return\
    \ boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp4l8lb6cf.ts(22,1146): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp4l8lb6cf.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmp4l8lb6cf.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxkb1l_rf.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxkb1l_rf.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxkb1l_rf.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored. I\
    \ am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\
    \ I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\
    \ I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\
    \ I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppcm65qx8.ts(21,1016): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmppcm65qx8.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmppcm65qx8.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333643
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp8h1cyqto.ts(20,1147): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp8h1cyqto.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmp8h1cyqto.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.charAt(0) === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpe1mez1dn.ts(21,999): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpe1mez1dn.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpe1mez1dn.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333643
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbgey8huh.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbgey8huh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored.\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxf21w8go.ts(21,1014): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxf21w8go.ts(22,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxf21w8go.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1660333642
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored? I am not bored! I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored? I am not bored! I am bored. I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored! I am bored. I am bored? I am bored!\
    \ I am not bored. I am not bored? I am not bored! I am bored. I am bored? I am\
    \ bored! I am not bored. I am not bored? I am not bored! I am bored. I am bored?\
    \ I am bored! I am not bored. I am not bored? I am not bored! I am bored. I am\
    \ bored? I am bored! I am not bored. I am not bored? I am not bored! I am bored.\
    \ I am bored? I am bored! I am not bored. I am not bored? I am not bored! I am\
    \ bored. I am bored? I am bored! I am not bored. I am not bored? I am not bored!\
    \ I am bored. I am bored? I am bored! I am not bored. I am not bored? I am not\
    \ bored! I am bored. I am bored? I am bored! I am not bored. I am not bored? I\
    \ am not bored! I am bored. I am bored? I am bored! I am not bored. I am not bored?\
    \ I am not bored! I am bored. I am bored? I am bored! I am not bored. I am not\
    \ bored? I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1v2pfqud.ts(22,896): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp1v2pfqud.ts(23,1): error TS1005: '','' expected.

    ../../../../tmp/tmp1v2pfqud.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1660333643
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxcgj5032.ts(17,1275): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxcgj5032.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxcgj5032.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333644
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpg6ke3kpu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg6ke3kpu.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpym7qkb39.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpym7qkb39.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1660333645
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp45ctic1x.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp45ctic1x.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    '
  timestamp: 1660333639
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. You are not bored.\"));\nconsole.log(is_bored(\"I am bored. You are\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. You are not\
    \ bored. I am bored. You are not bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ You are not bored. I am bored. You are not bored. I am bored. You are not bored.\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf0egmnqb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf0egmnqb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    2

    2

    3

    '
  timestamp: 1660333645
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpwaq1srca.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1660333645
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.startsWith(\"I\")) {\n            boredoms++;\n        }\n \
    \   }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored.\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpeghmvdwb.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeghmvdwb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    '
  timestamp: 1660333645
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored? I am not bored?\
    \ I am bored?\"));\nconsole.log(is_bored(\"I am not bored? I am not bored? I am\
    \ not bored?\"));\nconsole.log(is_bored(\"I am bored. I am not bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored! I am not bored?\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptasfj6eb.ts(34,34): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmptasfj6eb.ts(35,1): error TS1005: '','' expected.

    ../../../../tmp/tmptasfj6eb.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1660333645
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"Are you bored?\"));\nconsole.log(is_bored(\"I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored!\"));\nconsole.log(is_bored(\"\
    Are you bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! Are\
    \ you bored?\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am\
    \ not bored!\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am\
    \ not bored! Are you bored?\"));\nconsole.log(is_bored(\"I am not bored! Are you\
    \ bored? I am not bored! Are you bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! Are you bored? I am not bored! Are you bored? I am not bored!\
    \ Are you bored?\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I\
    \ am not bored! Are you bored? I am not bored! Are you bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am not bored! Are\
    \ you bored? I am not bored! Are you bored? I am not bored! Are you bored?\"));\n\
    console.log(is_bored(\"I am not bored! Are you bored? I am not bored! Are you\
    \ bored? I am not bored! Are you bored? I am not bored! Are you bored? I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am not\
    \ bored! Are you bored? I am not bored! Are you bored? I am not bored! Are you\
    \ bored? I am not bored! Are you bored?\"));\nconsole.log(is_bored(\"I am not\
    \ bored! Are you bored? I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpecvcvdsn.ts(30,55): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpecvcvdsn.ts(31,1): error TS1005: '','' expected.

    ../../../../tmp/tmpecvcvdsn.ts(31,9): error TS1005: '','' expected.

    '
  timestamp: 1660333645
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdm1pllbs.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpdm1pllbs.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpdm1pllbs.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333639
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmped5ax1a1.ts(17,1269): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmped5ax1a1.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmped5ax1a1.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored?\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am bored!\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpt881n5tl.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt881n5tl.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    1

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored!\"));\n\
    console.log(is_bored(\"I am bored! I am bored! I am bored! I am bored! I am bored!\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored! I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored! I am\
    \ bored! I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptv36tadq.ts(32,1): error TS1005: '','' expected.

    ../../../../tmp/tmptv36tadq.ts(32,9): error TS1005: '','' expected.

    '
  timestamp: 1660333645
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz2suh82h.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz2suh82h.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored!\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9_1x4v7d.ts(18,1234): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp9_1x4v7d.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmp9_1x4v7d.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmped5ax1a1.ts(17,1269): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmped5ax1a1.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmped5ax1a1.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpu0p9_1ac.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0p9_1ac.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[\\.\\?\\!]/);\n \
    \   for (let i = 0; i < words.length; i++) {\n        let word = words[i];\n \
    \       if (word.length > 0) {\n            let first_word = word.split(' ')[0];\n\
    \            if (first_word === 'I') {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I\
    \ am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am bored?\
    \ I am bored! I am not bored. I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored!\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3tk5h96x.ts(25,862): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp3tk5h96x.ts(26,1): error TS1005: '','' expected.

    ../../../../tmp/tmp3tk5h96x.ts(26,9): error TS1005: '','' expected.

    '
  timestamp: 1660333645
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxkb1l_rf.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpxkb1l_rf.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmpxkb1l_rf.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp3fspofbu.ts(19,1243): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp3fspofbu.ts(20,1): error TS1005: '','' expected.

    ../../../../tmp/tmp3fspofbu.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1660333635
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\n\
    console.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"));\n\
    console.log(is_bored(\"I am bored! I am not bored? I am bored! I am bored? I am\
    \ bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpt3o1chss.ts(35,1): error TS1005: '','' expected.

    ../../../../tmp/tmpt3o1chss.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I\
    \ am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored! I am bored? I\
    \ am bored! I am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\"));\n\
    console.log(is_bored(\"I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpen43p7ac.ts(26,9): error TS1003: Identifier expected.

    '
  timestamp: 1660333646
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored!\"));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv2kq6e1r.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv2kq6e1r.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmped5ax1a1.ts(17,1269): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmped5ax1a1.ts(18,1): error TS1005: '','' expected.

    ../../../../tmp/tmped5ax1a1.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1660333628
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpptujmexu.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpptujmexu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1660333646
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    words.forEach(word => {\n        if (word.startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpage3bad9.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpage3bad9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    1

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let i = 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjk0q418p.ts(20,1125): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpjk0q418p.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpjk0q418p.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333646
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  const words = S.split(/[.?!]/);\n  let boredoms = 0;\n  for (let\
    \ i = 0; i < words.length; i++) {\n    if (words[i].startsWith(\"I\")) {\n   \
    \   boredoms++;\n    }\n  }\n  return boredoms;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpp7espw0r.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpp7espw0r.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp06bdt01g.ts(18,1192): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp06bdt01g.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmp06bdt01g.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored.\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored.\"));\nconsole.log(is_bored(\"I am\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpq5resz0c.ts(26,27): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpq5resz0c.ts(27,1): error TS1005: '','' expected.

    ../../../../tmp/tmpq5resz0c.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1660333646
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpu0p9_1ac.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0p9_1ac.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = '';\n    for (let i = 0;\
    \ i < S.length; i++) {\n        if (S[i] === '.' || S[i] === '?' || S[i] === '!')\
    \ {\n            if (sentence.startsWith('I')) {\n                boredoms++;\n\
    \            }\n            sentence = '';\n        } else {\n            sentence\
    \ += S[i];\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6po50v3i.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6po50v3i.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored, I am bored, I am bored!\"));\nconsole.log(is_bored(\"I am not bored,\
    \ I am not bored, I am not bored!\"));\nconsole.log(is_bored(\"I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored,\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpqc98kp6y.ts(20,1078): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpqc98kp6y.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpqc98kp6y.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp1hb807h7.ts(26,182): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp1hb807h7.ts(27,1): error TS1005: '','' expected.

    ../../../../tmp/tmp1hb807h7.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1660333646
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\
    \ // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am bored!\
    \ I am bored? I am bored.\")); // 3\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored.\")); // 4\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored. I am bored.\")); // 5\nconsole.log(is_bored(\"I am bored!\
    \ I am bored? I am bored. I am bored. I am bored. I am bored.\")); // 6\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored. I am bored. I am bored. I am bored. I am bored.\"\
    )); // 7\nconsole.log(is_bored(\"I am bored! I am bored? I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\")); // 8\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\")); // 9\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored.\")); // 10\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored.\")); // 11\nconsole.log(is_bored(\"I am bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppgkhydc3.ts(28,33): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmppgkhydc3.ts(29,1): error TS1005: '','' expected.

    ../../../../tmp/tmppgkhydc3.ts(29,9): error TS1005: '','' expected.

    '
  timestamp: 1660333647
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp92zsdnb0.ts(18,1247): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp92zsdnb0.ts(19,1): error TS1005: '','' expected.

    ../../../../tmp/tmp92zsdnb0.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1660333647
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored?\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored! I am bored?\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored! I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored! I am not bored? I am bored!\"));\n\
    console.log(is_bored(\"I am not bored! I am bored? I am not bored! I am not bored?\
    \ I am not bored!\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpf_j6n5q3.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf_j6n5q3.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    1

    1

    1

    1

    1

    1

    1

    1

    '
  timestamp: 1660333647
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.trim().startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz2bs4ncm.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz2bs4ncm.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333647
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\n\
    console.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\"));\n\
    console.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored! I am not bored?\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpzce159j7.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzce159j7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    2

    3

    4

    '
  timestamp: 1660333648
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        let words = sentence.split(' ');\n\
    \        if (words[0] === 'I') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp8anhlty3.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8anhlty3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333648
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7q87xia3.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q87xia3.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333632
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored!\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyik5wuz1.ts(20,1144): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpyik5wuz1.ts(21,1): error TS1005: '','' expected.

    ../../../../tmp/tmpyik5wuz1.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1660333647
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored!\"));\n\
    console.log(is_bored(\"I am bored! I am bored! I am bored! I am bored! I am bored!\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored! I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored! I am\
    \ bored! I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6j53uvis.ts(31,45): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmp6j53uvis.ts(32,1): error TS1005: '','' expected.

    ../../../../tmp/tmp6j53uvis.ts(32,9): error TS1005: '','' expected.

    '
  timestamp: 1660333647

language: ts
name: HumanEval_91_is_bored
results:
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpugdkovzz.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcdv7ztke.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpcdv7ztke.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcdv7ztke.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpulrt6ghk.ts(20,1144): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpulrt6ghk.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpulrt6ghk.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored! I am so bored? I am so bored!\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored! I am so bored? I am\
    \ so bored! I am so bored. I am so bored! I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored! I am so bored? I am so bored!\
    \ I am so bored. I am so bored! I am so bored? I am so bored! I am so bored. I\
    \ am so bored! I am so bored? I am so bored! I am so bored. I am so bored! I am\
    \ so bored? I am so bored! I am so bored. I am so bored! I am so bored? I am so\
    \ bored! I am so bored. I am so bored! I am so bored? I am so bored! I am so bored.\
    \ I am so bored! I am so bored? I am so bored! I am so bored. I am so bored! I\
    \ am so bored? I am so bored! I am so bored. I am so bored! I am so bored? I am\
    \ so bored! I am so bored. I am so bored! I am so bored? I am so bored! I am so\
    \ bored. I am so bored! I am so bored? I am so bored! I am so bored. I am so bored!\
    \ I am so bored? I am so bored! I am so bored. I am so bored! I am so bored? I\
    \ am so bored! I am so bored. I am so bored! I am so bored? I am so bored! I am\
    \ so bored. I am so bored!\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzfn6vq1y.ts(22,892): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpzfn6vq1y.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzfn6vq1y.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < sentence.length; i++) {\n        if (sentence[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored!\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppmcy4v_5.ts(9,25): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppdw22z4e.ts(18,1203): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmppdw22z4e.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppdw22z4e.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0llv1aon.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2go6ipd_.ts(16,1297): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2go6ipd_.ts(17,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2go6ipd_.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i: number = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq3wenop8.ts(29,105): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpq3wenop8.ts(30,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpq3wenop8.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\
    \ I am not bored! I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored! I am bored? I am bored.\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpioppt0ab.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored. I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbpeig8tb.ts(19,1071): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpbpeig8tb.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbpeig8tb.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe1luz_9o.ts(20,1147): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpe1luz_9o.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpe1luz_9o.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\")); // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am\
    \ not bored. I am bored. I am not bored. I am not bored.\")); // 1\nconsole.log(is_bored(\"\
    I am not bored. I am bored. I am not bored. I am not bored. I am bored.\")); //\
    \ 2\nconsole.log(is_bored(\"I am not bored. I am bored. I am not bored. I am not\
    \ bored. I am bored. I am not bored. I am not bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgnzuftbl.ts(22,880): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpgnzuftbl.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpgnzuftbl.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwh3fpkwz.ts(16,1282): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpwh3fpkwz.ts(17,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpwh3fpkwz.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnk2wdrug.ts(18,1281): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpnk2wdrug.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpnk2wdrug.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                if (words[i + 2] === 'bored')\
    \ {\n                    boredoms++;\n                }\n            }\n     \
    \   }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq1x4fki8.ts(27,741): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpq1x4fki8.ts(28,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpq1x4fki8.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2a9t27ne.ts(17,1269): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2a9t27ne.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2a9t27ne.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977923
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5p_xkpeu.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5p_xkpeu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    '
  timestamp: 1659977923
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2a9t27ne.ts(17,1269): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2a9t27ne.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2a9t27ne.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977923
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < sentence.length; i++) {\n        if (sentence[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored. I am not bored. I am bored.\"));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy69vfp0r.ts(9,25): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8m6x_jbt.ts(19,1203): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp8m6x_jbt.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8m6x_jbt.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxs_s20ak.ts(16,1326): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpxs_s20ak.ts(17,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpxs_s20ak.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored? I am so bored! I am so\
    \ bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored! I am so bored?\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored. I am so bored?\"));\nconsole.log(is_bored(\"I am\
    \ so bored? I am so bored. I am so bored!\"));\nconsole.log(is_bored(\"I am so\
    \ bored? I am so bored! I am so bored.\"));\nconsole.log(is_bored(\"I am so bored?\
    \ I am so bored. I am so bored!\"));\nconsole.log(is_bored(\"I am so bored. I\
    \ am so bored? I am so bored!\"));\nconsole.log(is_bored(\"I am so bored. I am\
    \ so bored! I am so bored?\"));\nconsole.log(is_bored(\"I am so bored! I am so\
    \ bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored?\
    \ I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored! I\
    \ am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored. I am so\
    \ bored?\"));\nconsole.log(is_bored(\"\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuiketrih.ts(33,23): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpuiketrih.ts(34,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpuiketrih.ts(34,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let word of words) {\n        if (word.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9f80t0il.ts(21,1035): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp9f80t0il.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9f80t0il.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977924
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpr_z958my.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr_z958my.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    6

    6

    '
  timestamp: 1659977925
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7k4gxv85.ts(20,1126): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp7k4gxv85.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp7k4gxv85.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am bored! I\
    \ am not bored? I am bored.\"));\nconsole.log(is_bored(\"I am bored! I am not\
    \ bored? I am bored. I am bored! I am not bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I am not bored? I am bored. I am bored! I am not bored? I am bored.\
    \ I am bored! I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppe8n0trn.ts(21,996): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmppe8n0trn.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppe8n0trn.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977924
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let word of words) {\n        if (word.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9f80t0il.ts(21,1035): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp9f80t0il.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9f80t0il.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977924
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0llv1aon.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.charAt(0) === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphbnl4hgw.ts(26,67): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmphbnl4hgw.ts(27,1): error TS1005: '','' expected.

    ../../../../../tmp/tmphbnl4hgw.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7tx22rl4.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvs_0wer9.ts(21,1072): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpvs_0wer9.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpvs_0wer9.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiepviris.ts(34,57): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpiepviris.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpiepviris.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am bored? I am bored.\"));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0ar7cghy.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2x08hord.ts(19,1172): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2x08hord.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2x08hord.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy82tv0lp.ts(21,1071): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpy82tv0lp.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpy82tv0lp.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. You are bored too.\"));\n\
    console.log(is_bored(\"We are not bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored. You are bored.\"));\nconsole.log(is_bored(\"I am not bored. You are bored.\
    \ We are not bored.\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphqp8at2x.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppja53vjn.ts(19,1240): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmppja53vjn.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppja53vjn.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am bored. You\
    \ are boring. We are all boring.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ You are boring. We are all boring.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ You are boring. We are all boring. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all boring. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am not bored. You are boring. We are all boring. I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ You are boring. We are all boring. I am bored. I am bored. I am bored. I am\
    \ bored.\"));\nconsole.log(is_bored(\"I am not bored. You are boring. We are all\
    \ boring. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all boring. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. You are boring. We are all boring. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all boring. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. You are boring. We are all\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfzzci60q.ts(27,65): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpfzzci60q.ts(28,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpfzzci60q.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are bored too.\"));\nconsole.log(is_bored(\"\
    I am bored. You are bored too. We are bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. You are bored too. We are bored. Aren't you bored?\"));\nconsole.log(is_bored(\"\
    I am bored. You are bored too. We are bored. Aren't you bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are bored too. We are bored. Aren't\
    \ you bored? I am not bored. You are bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. You are bored too. We are bored. Aren't you bored? I am not bored. You\
    \ are bored. We are bored.\"));\nconsole.log(is_bored(\"I am bored. You are bored\
    \ too. We are bored. Aren't you bored? I am not bored. You are bored. We are bored.\
    \ Aren't you bored?\"));\nconsole.log(is_bored(\"I am bored. You are bored too.\
    \ We are bored. Aren't you bored? I am not bored. You are bored. We are bored.\
    \ Aren't you bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored. You\
    \ are bored too. We are bored. Aren't you bored? I am not bored. You are bored.\
    \ We are bored. Aren't you bored? I am not bored. You are bored.\"));\nconsole.log(is_bored(\"\
    I am bored. You are bored too. We are bored. Aren't you bored? I am not bored.\
    \ You are bored. We are bored. Aren't you bored? I am not bored. You are bored.\
    \ We are bored.\"));\nconsole.log(is_bored(\"I am bored. You are bored too. We\
    \ are bored. Aren't you bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgumy0gfp.ts(27,85): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpgumy0gfp.ts(28,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpgumy0gfp.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9qm801g2.ts(33,53): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp9qm801g2.ts(34,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9qm801g2.ts(34,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjcy29gm0.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8m6x_jbt.ts(19,1203): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp8m6x_jbt.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8m6x_jbt.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ sentences.forEach(sentence => {\n        if (sentence.startsWith(\"I\")) boredoms++;\n\
    \    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\n\
    console.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2dpog3_v.ts(18,1141): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2dpog3_v.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2dpog3_v.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am not bored? I am not bored! I am not bored? I am not bored!\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpj3s4h6e7.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj3s4h6e7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    3

    5

    5

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2go6ipd_.ts(16,1297): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2go6ipd_.ts(17,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2go6ipd_.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaywxj01b.ts(20,1141): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpaywxj01b.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpaywxj01b.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp49m668no.ts(20,1189): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp49m668no.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp49m668no.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(/[.?!]/);\n  for (let i\
    \ = 0; i < words.length; i++) {\n    if (words[i].startsWith(\"I\")) {\n     \
    \ boredoms++;\n    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am\
    \ bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored!\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplw8pvoh5.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored.\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxwioadfy.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored! I am\
    \ not bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\
    \ I am not bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am not bored! I am not bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored! I am not bored! I am not bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored! I am not bored! I am not\
    \ bored! I am not bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am not bored! I am not bored! I am not bored! I am not bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored! I am not bored! I am not\
    \ bored! I am not bored! I am not bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored! I am not bored! I am not bored! I am not bored! I\
    \ am not bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am not bored! I am not bored! I am not bored! I am not bored! I\
    \ am not bored! I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpoyigexct.ts(29,135): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpoyigexct.ts(30,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpoyigexct.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8m6x_jbt.ts(19,1203): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp8m6x_jbt.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8m6x_jbt.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    const words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith('I'))\
    \ {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\")); // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am\
    \ not bored. I am bored. I am not bored. I am bored.\")); // 2\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2ue02j0j.ts(22,867): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp2ue02j0j.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2ue02j0j.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. You are boring.\"));\nconsole.log(is_bored(\"\
    I am bored. You are boring. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ You are boring. I am bored. You are boring.\"));\nconsole.log(is_bored(\"I am\
    \ bored. You are boring. I am bored. You are boring. I am bored. You are boring.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring.\"));\nconsole.log(is_bored(\"\
    I am bored. You are boring. I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring.\"));\nconsole.log(is_bored(\"\
    I am bored. You are boring. I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring. I am bored. You are\
    \ boring.\"));\nconsole.log(is_bored(\"I am bored. You are boring. I am bored.\
    \ You are boring. I am bored. You are boring. I am bored. You are boring. I am\
    \ bored. You are boring. I am bored. You are boring. I am bored. You are boring.\"\
    ));\nconsole.log(is_bored(\"I am bored. You are boring. I am bored. You are boring.\
    \ I am bored. You are boring. I am bored. You are boring. I am bored. You are\
    \ boring. I am bored. You are boring. I am bored. You are boring. I am bored.\
    \ You are boring.\"));\nconsole.log(is_bored(\"I am bored. You are boring. I am\
    \ bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3axp6vsl.ts(26,61): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp3axp6vsl.ts(27,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp3axp6vsl.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored?\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"I am\
    \ so bored! I am so bored? I am so bored. I am so bored? I am so bored.\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored. I am so bored?\
    \ I am so bored. I am so bored! I am so bored? I am so bored. I am so bored? I\
    \ am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored. I am so bored? I am so bored. I am so bored! I am so bored? I am so\
    \ bored. I am so bored? I am so bored. I am so bored! I am so bored? I am so bored.\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am\
    \ so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored?\
    \ I am so bored. I am so bored! I am so bored? I am so bored. I am so bored? I\
    \ am so bored. I am so bored! I am so bored? I am so bored. I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored? I am so\
    \ bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptattxmjm.ts(23,786): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmptattxmjm.ts(24,1): error TS1005: '','' expected.

    ../../../../../tmp/tmptattxmjm.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3txjw3n_.ts(22,961): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp3txjw3n_.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp3txjw3n_.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjslwdikp.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpieenybro.ts(23,861): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpieenybro.ts(24,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpieenybro.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8i87jhlj.ts(20,1147): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp8i87jhlj.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8i87jhlj.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored!\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored! I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkxt5qvtf.ts(17,1268): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpkxt5qvtf.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpkxt5qvtf.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\
    \ I am not bored! I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored. I am bored! I\
    \ am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am\
    \ bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am bored.\
    \ I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am\
    \ bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmaiid2cb.ts(24,627): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpmaiid2cb.ts(25,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpmaiid2cb.ts(25,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpllsate5j.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am bored! I\
    \ am bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am\
    \ bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am bored.\
    \ I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am\
    \ bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored. I am bored! I am bored?\
    \ I am bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am\
    \ bored. I am bored! I am bored? I am bored. I am bored! I am bored? I am bored.\
    \ I am bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am\
    \ bored! I am bored? I am bored. I am bored! I am bored? I am bored. I am bored!\
    \ I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnonugo0o.ts(20,1053): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpnonugo0o.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpnonugo0o.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored.\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg92gndc5.ts(20,1114): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpg92gndc5.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpg92gndc5.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored! I\
    \ am not bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored? I\
    \ am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\
    \ I am not bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored! I\
    \ am not bored? I am not bored! I am not bored? I am not bored! I am not bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored! I\
    \ am not bored? I am not bored! I am not bored? I am not bored! I am not bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\
    \ I am not bored? I am not bored! I am not bored?\"));\nconsole.log(\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsjk9wn2f.ts(31,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let arr = S.split(/[.?!]/);\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i].startsWith(\"I\")) {\n   \
    \         boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfxds07o7.ts(20,1126): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpfxds07o7.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpfxds07o7.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj6k8uqdi.ts(19,1243): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpj6k8uqdi.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpj6k8uqdi.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuglheouo.ts(17,1206): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpuglheouo.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpuglheouo.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphg1zofiz.ts(22,939): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmphg1zofiz.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmphg1zofiz.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am bored. I\
    \ am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored.\"));\n\
    console.log(is_bored(\"I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt_nwil4u.ts(27,36): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpt_nwil4u.ts(28,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpt_nwil4u.ts(28,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp84se20ly.ts(22,939): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp84se20ly.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp84se20ly.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0llv1aon.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ bored. I am not bored. I am not bored. I am bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_efmkrs_.ts(21,1043): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp_efmkrs_.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp_efmkrs_.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(\"\
    \ \");\n    for (let i: number = 0; i < words.length; i++) {\n        if (words[i]\
    \ === \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored. I am bored.\"));\n\
    console.log(is_bored(\"I am not bored. I am not bored. I am not bored.\"));\n\
    console.log(is_bored(\"I am not bored. I am bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzvv6ea8e.ts(21,1004): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpzvv6ea8e.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzvv6ea8e.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdpfw4vxm.ts(22,1093): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpdpfw4vxm.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpdpfw4vxm.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977929
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptvipwdj9.ts(21,1071): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmptvipwdj9.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmptvipwdj9.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977929
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    const boredoms = S.split(/[.?!]/).filter(s => s.startsWith('I'));\n\
    \    return boredoms.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkxvkow1o.ts(6,53): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977929
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbdb_711n.ts(20,1126): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpbdb_711n.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbdb_711n.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977929
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.!?]/);\n   \
    \ for (let i = 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored. I am not bored. I am bored.\")); // 3\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored.\")); // 4\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiuppteaa.ts(20,1001): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpiuppteaa.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpiuppteaa.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpidjbiva6.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7tx22rl4.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored!\"));\nconsole.log(is_bored(\"I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4_kifqrq.ts(19,1086): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp4_kifqrq.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp4_kifqrq.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp63z98s71.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp63z98s71.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977930
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored? I am bored! I am not bored? I am bored! I\
    \ am not bored? I am bored! I am not bored? I am bored! I am not bored? I am bored!\
    \ I am not bored? I am bored! I am not bored? I am bored! I am not bored? I am\
    \ bored! I am not bored? I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored! I am not bored? I am bored! I am not bored? I am bored! I am not\
    \ bored? I am bored! I am not bored?\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5t4k0tmm.ts(20,1114): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp5t4k0tmm.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp5t4k0tmm.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\
    \ I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgfmb842o.ts(17,1251): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpgfmb842o.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpgfmb842o.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaywxj01b.ts(20,1141): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpaywxj01b.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpaywxj01b.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored?\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored!\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored! I am so bored?\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I\
    \ am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so bored?\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored. I am\
    \ so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am so\
    \ bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored.\
    \ I am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I\
    \ am so bored. I am so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am\
    \ so bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so\
    \ bored! I am so bored? I am so bored. I am\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr1_gs8d1.ts(26,162): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpr1_gs8d1.ts(27,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpr1_gs8d1.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwidghijw.ts(21,1075): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpwidghijw.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpwidghijw.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let i: number = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not bored. I am bored.\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp43jhpvty.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored?\
    \ I am not bored! I am not bored.\"));\nconsole.log(is_bored(\"I am not bored?\
    \ I am not bored! I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored? I am not bored! I am not bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplpbyevs4.ts(21,970): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmplpbyevs4.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmplpbyevs4.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i].toLowerCase() === 'i')\
    \ {\n            if (words[i + 1].toLowerCase() === 'am') {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am not bored? I am not bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfsk8r77f.ts(23,912): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpfsk8r77f.ts(24,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpfsk8r77f.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.charAt(0) === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_pkv_ah2.ts(34,49): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp_pkv_ah2.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp_pkv_ah2.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw9bpz611.ts(20,1091): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpw9bpz611.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpw9bpz611.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0xo1i_1q.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp0xo1i_1q.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0xo1i_1q.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(\"\
    \ \");\n    for (let i = 0; i < words.length; i++) {\n        if (words[i] ===\
    \ \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\
    \ I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored! I am bored? I\
    \ am bored! I am bored? I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp00djdsfb.ts(29,39): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp00djdsfb.ts(30,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp00djdsfb.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(/[.?!]/);\n  for (let word\
    \ of words) {\n    if (word.startsWith(\"I\")) {\n      boredoms++;\n    }\n \
    \ }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am bored. I am bored? I am bored!\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3xq3d0b1.ts(9,14): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = '';\n    for (let i = 0;\
    \ i < S.length; i++) {\n        if (S[i] === '.' || S[i] === '?' || S[i] === '!')\
    \ {\n            sentence = sentence.trim();\n            if (sentence.startsWith('I'))\
    \ {\n                boredoms++;\n            }\n            sentence = '';\n\
    \        } else {\n            sentence += S[i];\n        }\n    }\n    return\
    \ boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmjr2z9lc.ts(23,1095): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpmjr2z9lc.ts(24,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpmjr2z9lc.ts(24,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].split(' ')[0] ===\
    \ 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    \nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvg1_e10b.ts(16,1284): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpvg1_e10b.ts(17,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpvg1_e10b.ts(17,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgu31_6r2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgu31_6r2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxuu3j5wu.ts(34,27): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpxuu3j5wu.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpxuu3j5wu.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxz6u33sw.ts(20,1131): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpxz6u33sw.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpxz6u33sw.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977931
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkg7z3kus.ts(17,1281): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpkg7z3kus.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpkg7z3kus.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeeba763n.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    const words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].split(' ')[0] ===\
    \ 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    \nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored. I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored! I am not bored. I\
    \ am not bored? I am not bored. I am not bored! I am not bored. I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not bored!\
    \ I am not bored. I am not bored? I am not bored. I am not bored! I am not bored.\
    \ I am not bored? I am not bored. I am not bored! I am not bored. I am not bored?\
    \ I am not bored. I am not bored! I am not bored. I am not bored? I am not bored.\
    \ I am not bored! I am not bored. I am not bored? I am not bored. I am not bored!\
    \ I am not bored. I am not bored? I am not bored. I am not bored! I am not bored.\
    \ I am not bored? I am not bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphzn_ooor.ts(26,486): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmphzn_ooor.ts(27,1): error TS1005: '','' expected.

    ../../../../../tmp/tmphzn_ooor.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am not bored? I am not bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored. I am bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored. I\
    \ am bored. I am bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored? I am not bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored? I am not bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored.\"));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm35810mm.ts(28,9): error TS1003: Identifier expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdfkdsa3h.ts(34,48): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpdfkdsa3h.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpdfkdsa3h.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored. I am so bored! I am so bored? I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored! I am so bored? I am so bored. I am so bored! I am so\
    \ bored? I am so bored. I am so bored! I am so bored? I am so bored. I am so bored!\
    \ I am so bored? I am so bored. I am so bored! I am so bored? I am so bored. I\
    \ am so bored! I am so bored? I am so bored. I am so bored! I am so bored? I am\
    \ so bored. I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbpeig8tb.ts(19,1071): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpbpeig8tb.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbpeig8tb.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored! I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am not bored? I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not\
    \ bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am bored! I am not bored? I am not bored!\"));\n\
    console.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplum6n3nf.ts(33,1): error TS1005: '','' expected.

    ../../../../../tmp/tmplum6n3nf.ts(33,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcdv7ztke.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpcdv7ztke.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcdv7ztke.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    for (let word of words) {\n        if (word.startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am so bored. I am so so bored.\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcts5fce5.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw9bpz611.ts(20,1091): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpw9bpz611.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpw9bpz611.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored.\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp27sjko51.ts(18,1234): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp27sjko51.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp27sjko51.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so bored!\"));\n\
    console.log(is_bored(\"I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored!\"));\nconsole.log(is_bored(\"I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpor324ed7.ts(19,1056): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpor324ed7.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpor324ed7.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgabngz0u.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977932
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored.\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp27sjko51.ts(18,1234): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp27sjko51.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp27sjko51.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored. I am bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored! I am bored? I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored. I am bored. I am not\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7uopn728.ts(28,87): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp7uopn728.ts(29,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp7uopn728.ts(29,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    words.forEach(word => {\n        if (word.startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not. I am!\"));\nconsole.log(is_bored(\"I am bored. I am not.\
    \ I am! I am not.\"));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am\
    \ not. I am not.\"));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am\
    \ not. I am not. I am!\"));\nconsole.log(is_bored(\"I am bored. I am not. I am!\
    \ I am not. I am not. I am! I am not.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not. I am! I am not. I am not. I am! I am not. I am not.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not. I am! I am not. I am not. I am! I am not. I am not. I am!\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am not. I am not. I\
    \ am! I am not. I am not. I am! I am not.\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not. I am! I am not. I am not. I am! I am not. I am not. I am! I am not.\
    \ I am not.\"));\nconsole.log(is_bored(\"I am bored. I am not. I am! I am not.\
    \ I am not. I am! I am not. I am not. I am! I am not. I am not. I am!\"));\nconsole.log(is_bored(\"\
    I am bored. I am not.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpan1y037j.ts(28,44): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpan1y037j.ts(29,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpan1y037j.ts(29,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\
    \ // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am\
    \ not bored. I am bored. I am not bored.\")); // 1\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am bored.\")); // 1\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am bored.\")); // 2\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    )); // 1\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    )); // 1\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am bored.\")); // 1\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpurj0tne9.ts(29,79): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpurj0tne9.ts(30,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpurj0tne9.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored! I am not bored?\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\
    \ I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp43c1tzz7.ts(24,765): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp43c1tzz7.ts(25,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp43c1tzz7.ts(25,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8i87jhlj.ts(20,1147): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp8i87jhlj.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8i87jhlj.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcdv7ztke.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpcdv7ztke.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcdv7ztke.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcdv7ztke.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpcdv7ztke.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcdv7ztke.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   if (words[i + 1] === 'am') {\n                boredoms++;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0f6__uij.ts(22,1103): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp0f6__uij.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0f6__uij.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj6k8uqdi.ts(19,1243): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpj6k8uqdi.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpj6k8uqdi.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.split(' ')[0] === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwf4y50i_.ts(18,1191): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpwf4y50i_.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpwf4y50i_.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = '';\n    for (let i = 0;\
    \ i < S.length; i++) {\n        if (S[i] === '.' || S[i] === '?' || S[i] === '!')\
    \ {\n            sentence = sentence.trim();\n            if (sentence.startsWith('I'))\
    \ {\n                boredoms++;\n            }\n            sentence = '';\n\
    \        } else {\n            sentence += S[i];\n        }\n    }\n    return\
    \ boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsyg6wh_s.ts(22,1146): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpsyg6wh_s.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpsyg6wh_s.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcdv7ztke.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpcdv7ztke.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcdv7ztke.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored. I\
    \ am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\
    \ I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\
    \ I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I am not bored.\
    \ I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored. I am not bored! I am not bored? I am not bored. I am not bored!\
    \ I am not bored? I am not bored. I am not bored! I am not bored? I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_bazx2g3.ts(21,1016): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp_bazx2g3.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp_bazx2g3.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8i87jhlj.ts(20,1147): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp8i87jhlj.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8i87jhlj.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.length > 0 && word.charAt(0) === 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu_d55_0p.ts(21,999): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpu_d55_0p.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpu_d55_0p.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977933
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdmktzy3x.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmktzy3x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored.\"));\nconsole.log(is_bored(\"I am not bored! I am\
    \ bored? I am not bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored. I am bored.\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc2wf9t5x.ts(21,1014): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpc2wf9t5x.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpc2wf9t5x.ts(22,9): error TS1005: '','' expected.

    '
  timestamp: 1659977932
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored? I am not bored! I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored? I am not bored! I am bored. I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored? I am not bored! I am bored. I am bored? I am bored!\
    \ I am not bored. I am not bored? I am not bored! I am bored. I am bored? I am\
    \ bored! I am not bored. I am not bored? I am not bored! I am bored. I am bored?\
    \ I am bored! I am not bored. I am not bored? I am not bored! I am bored. I am\
    \ bored? I am bored! I am not bored. I am not bored? I am not bored! I am bored.\
    \ I am bored? I am bored! I am not bored. I am not bored? I am not bored! I am\
    \ bored. I am bored? I am bored! I am not bored. I am not bored? I am not bored!\
    \ I am bored. I am bored? I am bored! I am not bored. I am not bored? I am not\
    \ bored! I am bored. I am bored? I am bored! I am not bored. I am not bored? I\
    \ am not bored! I am bored. I am bored? I am bored! I am not bored. I am not bored?\
    \ I am not bored! I am bored. I am bored? I am bored! I am not bored. I am not\
    \ bored? I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_thvja11.ts(22,896): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp_thvja11.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp_thvja11.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977933
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) {\n            boredoms++;\n       \
    \ }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkh_1cqrd.ts(17,1275): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpkh_1cqrd.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpkh_1cqrd.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977934
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp63z98s71.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977930
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9u_xhegg.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9u_xhegg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    '
  timestamp: 1659977934
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgu31_6r2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgu31_6r2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    3

    '
  timestamp: 1659977930
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. You are not bored.\"));\nconsole.log(is_bored(\"I am bored. You are\
    \ not bored. I am bored.\"));\nconsole.log(is_bored(\"I am bored. You are not\
    \ bored. I am bored. You are not bored.\"));\nconsole.log(is_bored(\"I am bored.\
    \ You are not bored. I am bored. You are not bored. I am bored. You are not bored.\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsxir7yfx.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsxir7yfx.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    2

    2

    3

    '
  timestamp: 1659977934
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\"\
    ));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdqwl6mz4.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1659977934
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i].trim();\n\
    \        if (word.startsWith(\"I\")) {\n            boredoms++;\n        }\n \
    \   }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored? I am not bored.\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpowg35lwx.ts(10,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977934
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ not bored! I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored? I am not bored?\
    \ I am bored?\"));\nconsole.log(is_bored(\"I am not bored? I am not bored? I am\
    \ not bored?\"));\nconsole.log(is_bored(\"I am bored. I am not bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored. I am not bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not\
    \ bored. I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored.\
    \ I am not bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored! I am not bored?\"));\nconsole.log(is_bored(\"I am bored. I am not\
    \ bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am not bored?\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptqli55l3.ts(34,34): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmptqli55l3.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmptqli55l3.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659977934
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"Are you bored?\"));\nconsole.log(is_bored(\"I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored!\"));\nconsole.log(is_bored(\"\
    Are you bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored! Are\
    \ you bored?\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am\
    \ not bored!\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am\
    \ not bored! Are you bored?\"));\nconsole.log(is_bored(\"I am not bored! Are you\
    \ bored? I am not bored! Are you bored? I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! Are you bored? I am not bored! Are you bored? I am not bored!\
    \ Are you bored?\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I\
    \ am not bored! Are you bored? I am not bored! Are you bored? I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am not bored! Are\
    \ you bored? I am not bored! Are you bored? I am not bored! Are you bored?\"));\n\
    console.log(is_bored(\"I am not bored! Are you bored? I am not bored! Are you\
    \ bored? I am not bored! Are you bored? I am not bored! Are you bored? I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am not bored! Are you bored? I am not\
    \ bored! Are you bored? I am not bored! Are you bored? I am not bored! Are you\
    \ bored? I am not bored! Are you bored?\"));\nconsole.log(is_bored(\"I am not\
    \ bored! Are you bored? I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpopwfyurg.ts(30,55): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpopwfyurg.ts(31,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpopwfyurg.ts(31,9): error TS1005: '','' expected.

    '
  timestamp: 1659977934
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0xo1i_1q.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp0xo1i_1q.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0xo1i_1q.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977930
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2a9t27ne.ts(17,1269): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2a9t27ne.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2a9t27ne.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977923
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored?\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am bored!\"));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjt2nachx.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977934
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored!\"));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored!\"));\n\
    console.log(is_bored(\"I am bored! I am bored! I am bored! I am bored! I am bored!\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored! I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored! I am\
    \ bored! I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6xnhewzz.ts(32,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp6xnhewzz.ts(32,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0llv1aon.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.!?]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am bored?\
    \ I am bored! I am bored? I am bored!\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzwoog95f.ts(18,1234): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpzwoog95f.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzwoog95f.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2a9t27ne.ts(17,1269): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2a9t27ne.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2a9t27ne.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977923
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7tx22rl4.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[\\.\\?\\!]/);\n \
    \   for (let i = 0; i < words.length; i++) {\n        let word = words[i];\n \
    \       if (word.length > 0) {\n            let first_word = word.split(' ')[0];\n\
    \            if (first_word === 'I') {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I\
    \ am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored.\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored. I am bored?\
    \ I am bored! I am not bored. I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored! I am not bored. I am bored? I am bored!\
    \ I am not bored. I am bored? I am bored!\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb9p63mr3.ts(25,862): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpb9p63mr3.ts(26,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpb9p63mr3.ts(26,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am\
    \ so bored!\"));\nconsole.log(is_bored(\"I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am\
    \ so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so\
    \ bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so bored?\
    \ I am so bored! I am so bored? I am so bored! I am so bored? I am so bored! I\
    \ am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I am\
    \ so bored! I am so bored? I am so bored! I am so bored? I am so bored! I am so\
    \ bored? I am so bored! I am so bored? I am so bored! I am so bored? I am so bored!\
    \ I am so bored? I am so bored! I am so bored? I am so bored! I am so bored? I\
    \ am so bored! I am so bored?\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcdv7ztke.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpcdv7ztke.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcdv7ztke.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977922
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored. I am not\
    \ bored. I am not bored. I am not bored. I am not bored. I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj6k8uqdi.ts(19,1243): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpj6k8uqdi.ts(20,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpj6k8uqdi.ts(20,9): error TS1005: '','' expected.

    '
  timestamp: 1659977927
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am bored?\"\
    ));\nconsole.log(is_bored(\"I am not bored! I am not bored?\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\
    \ I am bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored!\"));\n\
    console.log(is_bored(\"I am not bored! I am not bored? I am not bored!\"));\n\
    console.log(is_bored(\"I am bored! I am not bored? I am bored! I am bored? I am\
    \ bored!\"));\nconsole.log(is_bored(\"I am not bored! I am bored? I am not bored!\
    \ I am not bored? I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpln6t8vdy.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpln6t8vdy.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am bored! I\
    \ am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored! I am bored? I\
    \ am bored! I am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\"));\n\
    console.log(is_bored(\"I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored? I am bored! I am bored? I am bored! I am bored? I am bored!\
    \ I am bored? I am bored! I am bored? I am bored! I am bored? I am bored! I am\
    \ bored? I am bored! I am bored? I am bored!\"));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp888pw6_2.ts(26,9): error TS1003: Identifier expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        if (sentence.startsWith(\"I\")) {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored!\"));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcyo_0ilg.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2a9t27ne.ts(17,1269): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp2a9t27ne.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2a9t27ne.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659977923
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored!\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp9_6rrpc.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms: number = 0;\n    let words: string[] = S.split(/[.?!]/);\n\
    \    words.forEach(word => {\n        if (word.startsWith(\"I\")) {\n        \
    \    boredoms++;\n        }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am not bored? I am not bored.\"));\nconsole.log(is_bored(\"I am bored! I am\
    \ bored? I am bored. I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored! I am not bored? I am not bored. I am not bored! I am not bored?\
    \ I am not bored.\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5i88o3ym.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let i = 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    console.log(is_bored(\"I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored? I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored. I am not bored. I am not bored\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf7db187o.ts(20,1125): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpf7db187o.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpf7db187o.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  const words = S.split(/[.?!]/);\n  let boredoms = 0;\n  for (let\
    \ i = 0; i < words.length; i++) {\n    if (words[i].startsWith(\"I\")) {\n   \
    \   boredoms++;\n    }\n  }\n  return boredoms;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgwemnk3n.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am\
    \ so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I\
    \ am so bored. I am so bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp07qu85f7.ts(18,1192): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp07qu85f7.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp07qu85f7.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored.\"));\n\
    console.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am so bored.\"\
    ));\nconsole.log(is_bored(\"I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"\
    I am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so bored. I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored.\"));\nconsole.log(is_bored(\"I am so bored. I am so\
    \ bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so bored.\
    \ I am so bored. I am so bored. I am so bored.\"));\nconsole.log(is_bored(\"I\
    \ am so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am\
    \ so bored. I am so bored. I am so bored. I am so bored. I am so bored. I am so\
    \ bored.\"));\nconsole.log(is_bored(\"I am\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsgdb90_4.ts(26,27): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpsgdb90_4.ts(27,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpsgdb90_4.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7tx22rl4.ts(9,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentence = '';\n    for (let i = 0;\
    \ i < S.length; i++) {\n        if (S[i] === '.' || S[i] === '?' || S[i] === '!')\
    \ {\n            if (sentence.startsWith('I')) {\n                boredoms++;\n\
    \            }\n            sentence = '';\n        } else {\n            sentence\
    \ += S[i];\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvv3j_r4h.ts(10,26): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(' ');\n    for (let\
    \ i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n         \
    \   boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored, I am bored, I am bored!\"));\nconsole.log(is_bored(\"I am not bored,\
    \ I am not bored, I am not bored!\"));\nconsole.log(is_bored(\"I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am\
    \ bored, I am bored, I am bored, I am bored, I am bored, I am bored, I am bored,\
    \ I am bored, I am bored,\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6jfjctg2.ts(20,1078): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp6jfjctg2.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp6jfjctg2.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"\
    I am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am not bored. I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am bored.\"));\nconsole.log(is_bored(\"I am\
    \ not bored. I am not bored. I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored. I am not bored. I am not bored. I\
    \ am not bored. I am not bored. I am not bored. I am not bored. I am not bored.\
    \ I am not bored. I am not bored.\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0elnbxre.ts(26,182): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp0elnbxre.ts(27,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0elnbxre.ts(27,9): error TS1005: '','' expected.

    '
  timestamp: 1659977935
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\
    \ // 1\nconsole.log(is_bored(\"I am not bored.\")); // 0\nconsole.log(is_bored(\"\
    I am bored. I am bored. I am bored.\")); // 3\nconsole.log(is_bored(\"I am bored!\
    \ I am bored? I am bored.\")); // 3\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored.\")); // 4\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored. I am bored.\")); // 5\nconsole.log(is_bored(\"I am bored!\
    \ I am bored? I am bored. I am bored. I am bored. I am bored.\")); // 6\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored. I am bored. I am bored. I am bored. I am bored.\"\
    )); // 7\nconsole.log(is_bored(\"I am bored! I am bored? I am bored. I am bored.\
    \ I am bored. I am bored. I am bored. I am bored.\")); // 8\nconsole.log(is_bored(\"\
    I am bored! I am bored? I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored.\")); // 9\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored.\")); // 10\nconsole.log(is_bored(\"I am bored! I am bored?\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored.\")); // 11\nconsole.log(is_bored(\"I am bored\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsbq2_d0h.ts(28,33): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpsbq2_d0h.ts(29,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpsbq2_d0h.ts(29,9): error TS1005: '','' expected.

    '
  timestamp: 1659977936
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnrrydp1q.ts(18,1247): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpnrrydp1q.ts(19,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpnrrydp1q.ts(19,9): error TS1005: '','' expected.

    '
  timestamp: 1659977936
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"\
    I am bored.\"));\nconsole.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored?\"));\nconsole.log(is_bored(\"I am not bored! I am not\
    \ bored?\"));\nconsole.log(is_bored(\"I am not bored! I am bored?\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am bored!\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored!\"));\nconsole.log(is_bored(\"I am not bored!\
    \ I am bored? I am not bored! I am bored?\"));\nconsole.log(is_bored(\"I am not\
    \ bored! I am bored? I am not bored! I am not bored!\"));\nconsole.log(is_bored(\"\
    I am not bored! I am bored? I am not bored! I am not bored? I am bored!\"));\n\
    console.log(is_bored(\"I am not bored! I am bored? I am not bored! I am not bored?\
    \ I am not bored!\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpifpwbxsl.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977936
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.trim().startsWith(\"I\")) {\n      \
    \      boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpizp9kiqk.ts(9,25): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977936
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n  let boredoms = 0;\n  let words = S.split(\" \");\n  for (let i =\
    \ 0; i < words.length; i++) {\n    if (words[i] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"));\n\
    console.log(is_bored(\"I am not bored.\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored?\"));\nconsole.log(is_bored(\"I am bored! I am not bored?\"));\n\
    console.log(is_bored(\"I am bored! I am not bored? I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am not bored? I am bored! I am not bored?\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpx15k8164.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx15k8164.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    2

    2

    3

    4

    '
  timestamp: 1659977936
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let sentences = S.split(/[.?!]/);\n   \
    \ for (let sentence of sentences) {\n        let words = sentence.split(' ');\n\
    \        if (words[0] === 'I') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpg6o6_3fy.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg6o6_3fy.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977936
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i].startsWith(\"I\"\
    )) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5tp9ciy8.ts(9,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977925
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored.\"\
    ));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored. I am not bored!\"));\nconsole.log(is_bored(\"I am bored. I am bored.\
    \ I am bored.\"));\nconsole.log(is_bored(\"I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I am bored. I\
    \ am not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not\
    \ bored. I am bored. I am not bored. I am bored. I am not bored. I\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9rw8ti7q.ts(20,1144): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmp9rw8ti7q.ts(21,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9rw8ti7q.ts(21,9): error TS1005: '','' expected.

    '
  timestamp: 1659977936
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\nfunction is_bored(S: string):\
    \ number {\n    let boredoms = 0;\n    let words = S.split(/[.?!]/);\n    for\
    \ (let word of words) {\n        if (word.startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored!\"\
    ));\nconsole.log(is_bored(\"I am not bored!\"));\nconsole.log(is_bored(\"I am\
    \ bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored! I am not bored!\"\
    ));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am not bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored!\"));\n\
    console.log(is_bored(\"I am bored! I am bored! I am bored! I am bored! I am bored!\
    \ I am not bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored!\
    \ I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored! I am bored! I am bored! I am bored! I am bored! I am not\
    \ bored!\"));\nconsole.log(is_bored(\"I am bored! I am bored! I am bored! I am\
    \ bored! I am bored! I am bored! I am bored! I am bored!\"));\nconsole.log(is_bored(\"\
    I am bored! I am bored\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbbyxz7s4.ts(31,45): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpbbyxz7s4.ts(32,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbbyxz7s4.ts(32,9): error TS1005: '','' expected.

    '
  timestamp: 1659977936

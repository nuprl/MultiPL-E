name: HumanEval_26_remove_duplicates
language: ts
prompt: "//From a list of integers, remove all elements that occur more than once.\n\
  // Keep order of elements left the same as in the input.\nfunction remove_duplicates(numbers:\
  \ number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
completions: ["    let result: number[] = [];\n    let unique: number[] = [];\n  \
    \  for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "    let result: number[] = [];\n  \
    \  let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 10]));\n",
  "    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1]));", "    let uniqueNumbers:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 5, 6, 6, 7, 8, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "  return\
    \ numbers.filter((value, index, self) => {\n    return self.indexOf(value) ===\
    \ index;\n  });\n}\n", "    let result: number[] = [];\n    for (let i = 0; i\
    \ < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 10]));\n",
  "  let result: number[] = [];\n  numbers.forEach(function (number) {\n    if (result.indexOf(number)\
    \ === -1) {\n      result.push(number);\n    }\n  });\n  return result;\n}\n\n\
    console.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9, 9]));\n",
  "    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9,", "    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 1, 2, 3, 4, 4, 5]));\n", "  let result:\
    \ number[] = [];\n  let unique: number[] = [];\n  for (let i: number = 0; i <\
    \ numbers.length; i++) {\n    if (unique.indexOf(numbers[i]) === -1) {\n     \
    \ unique.push(numbers[i]);\n      result.push(numbers[i]);\n    }\n  }\n  return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", " \
    \   let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10]));\n", "    let result: number[] = [];\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8,\
    \ 9, 9, 9, 10]));", "    let result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9,", "    let unique: number[] = [];\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n \
    \           unique.push(numbers[i]);\n        }\n    }\n    return unique;\n}\n\
    \nconsole.log(remove_duplicates([1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9,\
    \ 9]));\n", "  return numbers.filter((num, index) => numbers.indexOf(num) ===\
    \ index);\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", " \
    \   let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    return numbers.filter((value,\
    \ index, self) => self.indexOf(value) === index);\n}\n", "    let result: number[]\
    \ = [];\n    let result2: number[] = [];\n    let counter: number = 0;\n    for\
    \ (let i: number = 0; i < numbers.length; i++) {\n        for (let j: number =\
    \ 0; j < numbers.length; j++) {\n            if (numbers[i] === numbers[j]) {\n\
    \                counter++;\n            }\n        }\n        if (counter < 2)\
    \ {\n            result.push(numbers[i]);\n        }\n        counter = 0;\n \
    \   }\n    for (let i: number = 0; i < result.length; i++) {\n        if (result2.indexOf(result[i])\
    \ === -1) {\n            result2.push(result[i]);\n        }\n    }\n    return\
    \ result2;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\
    \ 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,\
    \ 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,\
    \ 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,\
    \ 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\
    \ 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,\
    \ 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,\
    \ 152, 153", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 9]));\n",
  "    let uniqueNumbers: number[] = [];\n    let uniqueNumbersCount: number[] = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ == -1) {\n            uniqueNumbers.push(numbers[i]);\n            uniqueNumbersCount.push(1);\n\
    \        } else {\n            uniqueNumbersCount[uniqueNumbers.indexOf(numbers[i])]++;\n\
    \        }\n    }\n    let result: number[] = [];\n    for (let i = 0; i < uniqueNumbers.length;\
    \ i++) {\n        if (uniqueNumbersCount[i] == 1) {\n            result.push(uniqueNumbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5,\
    \ 5, 5, 6]));\n", "    let result: number[] = [];\n    let unique: number[] =\
    \ [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let result:\
    \ number[] = [];\n    let temp: number[] = [];\n    for (let i: number = 0; i\
    \ < numbers.length; i++) {\n        if (temp.indexOf(numbers[i]) === -1) {\n \
    \           temp.push(numbers[i]);\n            result.push(numbers[i]);\n   \
    \     }\n    }\n    return result;\n}\n", "    let uniqueNumbers: number[] = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 2, 3, 3,\
    \ 4, 5, 5, 5, 6]));\n", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 10]));\n", "  return numbers.filter((value,\
    \ index, self) => self.indexOf(value) === index);\n}\n", "    let result: number[]\
    \ = [];\n    numbers.forEach(function (number) {\n        if (result.indexOf(number)\
    \ === -1) {\n            result.push(number);\n        }\n    });\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 1, 2, 3, 4, 4, 5]));\n", " \
    \   let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 15, 16, 17, 18, 19, 20]));\n", "    let newArray: number[] =\
    \ [];\n    let count: number = 0;\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        for (let j: number = 0; j < numbers.length; j++) {\n       \
    \     if (numbers[i] === numbers[j]) {\n                count++;\n           \
    \ }\n        }\n        if (count === 1) {\n            newArray.push(numbers[i]);\n\
    \        }\n        count = 0;\n    }\n    return newArray;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9, 9]));\n", "    let unique: number[] =\
    \ [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i\
    \ < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) ===\
    \ -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return\
    \ uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5,\
    \ 6, 7, 8, 9, 9, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 4,\
    \ 5, 5, 6, 7, 7, 8, 8, 9, 9, 10]));\n", "    let result: number[] = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (numbers.indexOf(numbers[i])\
    \ === numbers.lastIndexOf(numbers[i])) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9,", "    let result: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 4, 5, 6, 7, 7, 7, 8, 9, 9, 10]));\n", "    let unique: number[] = [];\n\
    \    numbers.forEach(function (number) {\n        if (unique.indexOf(number) ===\
    \ -1) {\n            unique.push(number);\n        }\n    });\n    return unique;\n\
    }\n", "  let result: number[] = [];\n  for (let i: number = 0; i < numbers.length;\
    \ i++) {\n    if (result.indexOf(numbers[i]) === -1) {\n      result.push(numbers[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  let uniqueNumbers: number[] = [];\n  numbers.forEach(function\
    \ (number) {\n    if (uniqueNumbers.indexOf(number) === -1) {\n      uniqueNumbers.push(number);\n\
    \    }\n  });\n  return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));\n", "  let result: number[] = [];\n  for (let i:\
    \ number = 0; i < numbers.length; i++) {\n    if (result.indexOf(numbers[i]) ===\
    \ -1) {\n      result.push(numbers[i]);\n    }\n  }\n  return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 9]));", "    let uniqueNumbers: number[] = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\
    \ 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\
    \ 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\
    \ 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,\
    \ 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,\
    \ 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\
    \ 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,\
    \ 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\
    \ 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,\
    \ 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203,\
    \ 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    return\
    \ numbers.filter((value, index, self) => self.indexOf(value) === index);\n}\n\n\
    console.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", "    let uniqueNumbers:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let result: number[] = [];\n    let unique:\
    \ number[] = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n   \
    \     if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", "    let uniqueNumbers:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9]));\n", "    let unique: number[] = [];\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6]));\n",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9,\
    \ 9]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "   \
    \ let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n            uniqueNumbers.push(numbers[i]);\n\
    \        }\n    }\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9, 9]));\n", "    return numbers.filter((number,\
    \ index) => numbers.indexOf(number) === index);\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(remove_duplicates([1,\
    \ 2, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(remove_duplicates([1,\
    \ 2, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 13]));\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers.indexOf(numbers[i])\
    \ === numbers.lastIndexOf(numbers[i])) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 4, 5]));\n", "    let result: number[] = [];\n    let unique: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let result:\
    \ number[] = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n   \
    \     if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 4, 5]));\n", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    const result: number[] = [];\n  \
    \  numbers.forEach(number => {\n        if (result.indexOf(number) === -1) {\n\
    \            result.push(number);\n        }\n    });\n    return result;\n}\n\
    \nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let result: number[] = [];\n    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "  return numbers.filter((value, index,\
    \ self) => self.indexOf(value) === index);\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let uniqueNumbers: number[] = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    return numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5,\
    \ 5, 6]));\n", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1)\
    \ {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return\
    \ uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5,\
    \ 6, 7, 8, 9, 9, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6,\
    \ 6, 7, 7, 8, 8, 9, 9, 10, 10]));\n", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n", "    let unique: number[] = [];\n\
    \    numbers.forEach(function (number) {\n        if (unique.indexOf(number) ===\
    \ -1) {\n            unique.push(number);\n        }\n    });\n    return unique;\n\
    }\n", "    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 5, 5, 5, 6, 7, 8, 9, 9, 9, 9]));\n", "  let unique: number[] = [];\n  for (let\
    \ i = 0; i < numbers.length; i++) {\n    if (unique.indexOf(numbers[i]) === -1)\
    \ {\n      unique.push(numbers[i]);\n    }\n  }\n  return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "   \
    \ let unique: number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 4, 5]));\n", "    return numbers.filter((value, index, array) =>\
    \ array.indexOf(value) === index);\n}\n\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9,", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 5, 6, 7, 8, 8, 9, 9, 10]));\n", "    let uniqueNumbers: number[]\
    \ = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5,\
    \ 6, 7, 8, 1]));\n", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 9, 9, 10]));", "    let result: number[] = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 2, 3, 3, 4, 5, 5, 5, 6]));\n",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    return numbers.filter((value,\
    \ index, self) => self.indexOf(value) === index);\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 4, 5]));\n", "    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));", " \
    \ let result: number[] = [];\n  numbers.forEach(function (number) {\n    if (result.indexOf(number)\
    \ === -1) {\n      result.push(number);\n    }\n  });\n  return result;\n}\n\n\
    console.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "   \
    \ let result: number[] = [];\n    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "  return numbers.filter((num,\
    \ index) => numbers.indexOf(num) === index);\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n\
    \    numbers.forEach(number => {\n        if (uniqueNumbers.indexOf(number) ===\
    \ -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n    return\
    \ uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5,\
    \ 6]));\n", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9,\
    \ 9]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6]));\n", "  let result:\
    \ number[] = [];\n  let unique: number[] = [];\n  for (let i: number = 0; i <\
    \ numbers.length; i++) {\n    if (unique.indexOf(numbers[i]) === -1) {\n     \
    \ unique.push(numbers[i]);\n      result.push(numbers[i]);\n    }\n  }\n  return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let unique: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n", "    let result: number[] = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let\
    \ result: number[] = [];\n    numbers.forEach(function (value) {\n        if (result.indexOf(value)\
    \ === -1) {\n            result.push(value);\n        }\n    });\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));", " \
    \   let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 10]));\n", "    let result: number[] = [];\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let result: number[] = [];\n    for (let i: number = 0;\
    \ i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 1, 2, 3, 4, 3, 5]));\n", "    return numbers.filter((value,\
    \ index, self) => self.indexOf(value) === index);\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 4, 5]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 9, 10]));\n", "    let uniqueNumbers: number[]\
    \ = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9,", "  let result: number[] = [];\n  numbers.forEach(function (number)\
    \ {\n    if (result.indexOf(number) === -1) {\n      result.push(number);\n  \
    \  }\n  });\n  return result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3,\
    \ 4, 5, 5, 5, 6, 7, 7, 8, 9, 10]));\n", "    let unique = [];\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) ===\
    \ -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let\
    \ unique: number[] = [];\n    for (let i: number = 0; i < numbers.length; i++)\
    \ {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 4, 5]));\n", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1)\
    \ {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return\
    \ uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5,\
    \ 6, 7, 8, 9, 9, 9, 9]));\n", "    let result: number[] = [];\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10]));\n",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let uniqueNumbers:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let unique: number[] = [];\n    numbers.forEach(function (item) {\n       \
    \ if (unique.indexOf(item) === -1) {\n            unique.push(item);\n       \
    \ }\n    });\n    return unique;\n}\n\nconsole.log(remove_duplicates([1, 2, 3,\
    \ 3, 4, 4, 5]));\n", "    let result: number[] = [];\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i]))\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n",
  "    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\n", "    let uniqueNumbers:\
    \ number[] = [];\n    numbers.forEach(number => {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 1, 2, 3, 4, 5,\
    \ 5, 5, 6, 7, 8, 9, 9, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n \
    \   numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5,\
    \ 5, 6, 7, 8, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 4, 5]));\n", "    let result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10]));\n", "    let unique: number[] = [];\n \
    \   let unique_count: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            unique_count.push(1);\n        } else {\n            unique_count[unique.indexOf(numbers[i])]++;\n\
    \        }\n    }\n    for (let i: number = 0; i < unique.length; i++) {\n   \
    \     if (unique_count[i] > 1) {\n            unique.splice(i, 1);\n         \
    \   unique_count.splice(i, 1);\n            i--;\n        }\n    }\n    return\
    \ unique;\n}\n", "    let result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 4, 5]));\n", "    let result: number[] = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9,\
    \ 9]));\n", "    let result: number[] = [];\n    numbers.forEach(function (value)\
    \ {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10]));\n", "    let result: number[] = [];\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9,\
    \ 9]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n",
  "    let uniqueNumbers: number[] = [];\n    numbers.forEach(number => {\n      \
    \  if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n", "    let uniqueNumbers:\
    \ number[] = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5,\
    \ 5, 5, 6]));\n", "  let result: number[] = [];\n  numbers.forEach(function (number)\
    \ {\n    if (result.indexOf(number) === -1) {\n      result.push(number);\n  \
    \  }\n  });\n  return result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3,\
    \ 4, 5, 5, 6, 7, 8, 9, 9]));", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 9, 10]));\n", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    return\
    \ numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9", "  let result: number[]\
    \ = [];\n  for (let i: number = 0; i < numbers.length; i++) {\n    if (result.indexOf(numbers[i])\
    \ === -1) {\n      result.push(numbers[i]);\n    }\n  }\n  return result;\n}\n\
    \nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9, 9]));",
  "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers.indexOf(numbers[i])\
    \ === numbers.lastIndexOf(numbers[i])) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9,", "  let uniqueNumbers: number[] = [];\n  numbers.forEach(number => {\n \
    \   if (uniqueNumbers.indexOf(number) === -1) {\n      uniqueNumbers.push(number);\n\
    \    }\n  });\n  return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let result: number[] = [];\n    let unique:\
    \ number[] = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n   \
    \     if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9,", "  let result: number[] = [];\n  numbers.forEach(function\
    \ (number) {\n    if (result.indexOf(number) === -1) {\n      result.push(number);\n\
    \    }\n  });\n  return result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3,\
    \ 3, 4, 5, 6, 7, 8, 1]));\n", "    let result: number[] = [];\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n",
  "  let uniqueNumbers: number[] = [];\n  for (let i = 0; i < numbers.length; i++)\
    \ {\n    if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n      uniqueNumbers.push(numbers[i]);\n\
    \    }\n  }\n  return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9, 9]));\n", "  let uniqueNumbers: number[]\
    \ = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n      uniqueNumbers.push(numbers[i]);\n    }\n  }\n  return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));", " \
    \   let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let result: number[] = [];\n    let uniq:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniq.indexOf(numbers[i])\
    \ === -1) {\n            uniq.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9, 9]));\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9,", "  let result: number[] = [];\n  for (let i: number = 0; i\
    \ < numbers.length; i++) {\n    if (result.indexOf(numbers[i]) === -1) {\n   \
    \   result.push(numbers[i]);\n    }\n  }\n  return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 10]));\n", "    let result: number[] = [];\n\
    \    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let result: number[] = [];\n    let temp: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (temp.indexOf(numbers[i])\
    \ === -1) {\n            temp.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 6, 7, 8, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n\
    \    numbers.forEach(number => {\n        if (uniqueNumbers.indexOf(number) ===\
    \ -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n    return\
    \ uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 1, 2, 3, 4, 4, 5]));\n",
  "    let result: number[] = [];\n    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  return numbers.filter((value,\
    \ index, self) => self.indexOf(value) === index);\n}\n", "    let uniqueNumbers:\
    \ number[] = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9,", "    let result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i]))\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 5, 6, 7, 8, 8, 9, 9, 9, 10]));\n",
  "    return numbers.filter((value, index, self) => self.indexOf(value) === index);\n\
    }\n", "    let unique: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10]));\n", "  let uniqueNumbers: number[] = [];\n\
    \  numbers.forEach(function (number) {\n    if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n      uniqueNumbers.push(number);\n    }\n  });\n  return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    return\
    \ numbers.filter((value, index, self) => self.indexOf(value) === index);\n}\n",
  "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let uniqueNumbers: number[] = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    return numbers.filter((number, index) => numbers.indexOf(number) === index);\n\
    }\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "  let result: number[] = [];\n  numbers.forEach(function\
    \ (item) {\n    if (result.indexOf(item) === -1) {\n      result.push(item);\n\
    \    }\n  });\n  return result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3,\
    \ 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n \
    \   for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 5, 5, 6, 7, 7, 8, 9, 10]));\n", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));", "    return numbers.filter((value, index, self)\
    \ => self.indexOf(value) === index);\n}\n\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13]));\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13]));", "    let result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i]))\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9]));\n",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", "  let uniqueNumbers:\
    \ number[] = [];\n  numbers.forEach(number => {\n    if (!uniqueNumbers.includes(number))\
    \ {\n      uniqueNumbers.push(number);\n    }\n  });\n  return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", "    let uniqueNumbers:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 4, 5]));\n", "    let result: number[] = [];\n    for (let i: number = 0; i\
    \ < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", " \
    \   let result: number[] = [];\n    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 10]));", "    let result: number[] = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9,\
    \ 9]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", "    let uniqueNumbers:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 5, 6, 6, 7, 8, 9, 9]));\n", "    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9,\
    \ 9]));\n", "  let result: number[] = [];\n  numbers.forEach(function (value)\
    \ {\n    if (result.indexOf(value) === -1) {\n      result.push(value);\n    }\n\
    \  });\n  return result;\n}\n\nconsole.log(remove_duplicates([1, 1, 2, 2, 3, 3,\
    \ 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10]));\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 4, 5]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));", " \
    \   let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\
    \ 20, 20,", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n",
  "  let uniqueNumbers: number[] = [];\n  numbers.forEach(function (number) {\n  \
    \  if (uniqueNumbers.indexOf(number) === -1) {\n      uniqueNumbers.push(number);\n\
    \    }\n  });\n  return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 5, 6]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", "    let unique:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4, 5]));\n", " \
    \   let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 9, 9,\
    \ 9]));\n", "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10,\
    \ 11, 12, 13, 13, 14, 15, 15]));\n", "    let result: number[] = [];\n    let\
    \ unique: number[] = [];\n    for (let i: number = 0; i < numbers.length; i++)\
    \ {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9,", "  let uniqueNumbers: number[] = [];\n  numbers.forEach(function\
    \ (number) {\n    if (uniqueNumbers.indexOf(number) === -1) {\n      uniqueNumbers.push(number);\n\
    \    }\n  });\n  return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "    let result: number[] = [];\n  \
    \  for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9,\
    \ 10]));\n", "    let result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 4,\
    \ 5]));\n", "  return numbers.filter((number, index) => {\n    return numbers.indexOf(number)\
    \ === index;\n  });\n}\n\nconsole.log(remove_duplicates([1, 1, 2, 3, 3, 4, 5,\
    \ 5, 5, 6, 7, 8, 9, 9]));\n", "    let uniqueNumbers: number[] = [];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
  "    let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));", " \
    \   let uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 4, 5, 6, 7, 7, 7, 8, 9, 10]));\n",
  "    let result: number[] = [];\n    let numberMap: Map<number, number> = new Map();\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        if (numberMap.has(numbers[i]))\
    \ {\n            numberMap.set(numbers[i], numberMap.get(numbers[i]) + 1);\n \
    \       } else {\n            numberMap.set(numbers[i], 1);\n        }\n    }\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        if (numberMap.get(numbers[i])\
    \ === 1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7,\
    \ 8, 9, 10, 10]));", "    let result: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9]));\n", "    let result: number[] = [];\n  \
    \  let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9,\
    \ 10]));\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,", "   \
    \ let unique: number[] = [];\n    numbers.forEach(function (number) {\n      \
    \  if (unique.indexOf(number) === -1) {\n            unique.push(number);\n  \
    \      }\n    });\n    return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 3, 4, 4, 5]));\n", "    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) ===\
    \ -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\
    \ 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\
    \ 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\
    \ 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,\
    \ 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,\
    \ 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\
    \ 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,\
    \ 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\
    \ 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,\
    \ 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203,\
    \ 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214,", "    let unique_numbers:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4,\
    \ 5, 5, 5, 6, 7, 8, 9, 9, 10]));\n", "    let unique: number[] = [];\n    for\
    \ (let i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8,\
    \ 9, 9, 10]));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

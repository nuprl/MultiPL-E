name: HumanEval_116_sort_array
language: ts
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\nfunction sort_array(arr: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([1, 5, 2,\
  \ 3, 4]),[1, 2, 4, 3, 5]);\n  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4,\
  \ -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1, 0, 2, 3, 4]),[0, 1, 2, 4,\
  \ 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        const aOnes = countOnes(a);\n\
    \        const bOnes = countOnes(b);\n        if (aOnes === bOnes) {\n       \
    \     return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aBin = a.toString(2);\n        const bBin = b.toString(2);\n    \
    \    const aOnes = aBin.split('').filter(x => x === '1').length;\n        const\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000,\
    \ 10000]));\nconsole.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        const bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n\
    \        const aOnes = aBinary.split('1').length - 1;\n        const bOnes = bBinary.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3,", "    return\
    \ arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n        const\
    \ bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(char\
    \ => char === '1').length;\n        const bOnes = bBinary.split('').filter(char\
    \ => char === '1').length;\n        if (aOnes === bOnes) {\n            return\
    \ a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\n\
    console.log(sort_array([1, 10, 100, 1000, 10000]));", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n   \
    \     let bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n\
    \        const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n", "    return arr.sort((a, b) => {\n      \
    \  const aBin = a.toString(2).split('').filter(x => x === '1').length;\n     \
    \   const bBin = b.toString(2).split('').filter(x => x === '1').length;\n    \
    \    return aBin === bBin ? a - b : aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aBin = a.toString(2);\n        const bBin = b.toString(2);\n    \
    \    const aOnes = aBin.split('').filter(x => x === '1').length;\n        const\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", " \
    \ return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const aBin\
    \ = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes =\
    \ aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 0]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4,\
    \ 2, 1]));\nconsole.log(sort_array([1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]));\n\
    console.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2048, 1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));", "  // your code here\n  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n \
    \   }\n  });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000,\
    \ 10000]));\nconsole.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        let aBin =\
    \ a.toString(2).split('').filter(x => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n\
    \    });\n}\n\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000,\
    \ 10000]));\nconsole.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const binA\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        const binB\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        return binA\
    \ === binB ? a - b : binA - binB;\n    });\n}\n\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\n\
    console.log(sort_array([1, 10, 100, 1000, 10000]));", "  return arr.sort((a, b)\
    \ => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n   \
    \ const aOnes = aBin.split(\"1\").length - 1;\n    const bOnes = bBin.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const aOnes = countOnes(a);\n\
    \        const bOnes = countOnes(b);\n        if (aOnes === bOnes) {\n       \
    \     return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\nconsole.log(sort_array([1,\
    \ 10, 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aOnes\
    \ = a.toString(2).split('').filter(c => c === '1').length;\n        const bOnes\
    \ = b.toString(2).split('').filter(c => c === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n\
    \        const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(char\
    \ => char === '1').length;\n        const bOnes = bBinary.split('').filter(char\
    \ => char === '1').length;\n        if (aOnes === bOnes) {\n            return\
    \ a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n", "    return arr.sort((a, b) => {\n      \
    \  const aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const\
    \ aOnes = aBin.split('').filter(char => char === '1').length;\n        const bOnes\
    \ = bBin.split('').filter(char => char === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000,\
    \ 100, 10, 1]));\nconsole.log(sort_array([1, 10, 100, 1000, 10000]));", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes !== bOnes) {\n            return aOnes - bOnes;\n        }\n     \
    \   return a - b;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return arr.sort((a, b) => {\n    const aBin\
    \ = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\
    1\").length - 1;\n    const bOnes = bBin.split(\"1\").length - 1;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const\
    \ bBin = b.toString(2);\n    const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \    const bOnes = bBin.split('').filter(x => x === '1').length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin\
    \ = b.toString(2);\n    const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \    const bOnes = bBin.split('').filter(x => x === '1').length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\n\
    console.log(sort_array([1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]));\nconsole.log(sort_array([10000,\
    \ 1000, 100, 10, 1, 0]));\nconsole.log(sort_array([1, 3, 5, 7, 9, 8, 6, 4, 2,\
    \ 0]));\nconsole.log(sort_array([1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233,\
    \ 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393,\
    \ 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465,\
    \ 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437,\
    \ 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025,",
  "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n     \
    \   const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50]));\nconsole.log(sort_array([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\
    \ 83, 84, 85, 86, 87, 88, 89, 90,", "    return arr.sort((a, b) => {\n       \
    \ let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n       \
    \ let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\nconsole.log(sort_array([1,\
    \ 10, 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\n\
    console.log(sort_array([1, 10, 100, 1000, 10000]));", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = (a >>> 0).toString(2).split('').filter(x => x\
    \ === '1').length;\n        const bOnes = (b >>> 0).toString(2).split('').filter(x\
    \ => x === '1').length;\n        return aOnes === bOnes ? a - b : aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([1, 2, 4, 8, 16, 32, 64,\
    \ 128, 256, 512, 1024]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1, 0]));\n\
    console.log(sort_array([1, 2, 100, 3, 22, 4, 5, 6, 8, 9, 10]));", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n      \
    \      return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3,", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = countOnes(a);\n        const bOnes = countOnes(b);\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n    const bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const binA = a.toString(2);\n        const binB = b.toString(2);\n    \
    \    const onesA = binA.split('').filter(x => x === '1').length;\n        const\
    \ onesB = binB.split('').filter(x => x === '1').length;\n        if (onesA ===\
    \ onesB) {\n            return a - b;\n        }\n        return onesA - onesB;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    if (aBin.match(/1/g) === null) {\n      return -1;\n    }\n    if (bBin.match(/1/g)\
    \ === null) {\n      return 1;\n    }\n    if (aBin.match(/1/g).length === bBin.match(/1/g).length)\
    \ {\n      return a - b;\n    }\n    return aBin.match(/1/g).length - bBin.match(/1/g).length;\n\
    \  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "   \
    \ return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\n", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n\
    \        const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(char\
    \ => char === '1').length;\n        const bOnes = bBinary.split('').filter(char\
    \ => char === '1').length;\n        if (aOnes === bOnes) {\n            return\
    \ a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n", "    return arr.sort((a, b) => {\n      \
    \  const aOnes = countOnes(a);\n        const bOnes = countOnes(b);\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const aBinary\
    \ = a.toString(2);\n        const bBinary = b.toString(2);\n        const aOnes\
    \ = aBinary.split('').filter(x => x === '1').length;\n        const bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\n\
    console.log(sort_array([1, 10, 100, 1000, 10000]));", "  return arr.sort((a, b)\
    \ => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n   \
    \ const aOnes = aBin.split(\"1\").length - 1;\n    const bOnes = bBin.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n    const\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n    const bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4,", "    return arr.sort((a, b) => {\n        const aOnes = countOnes(a);\n\
    \        const bOnes = countOnes(b);\n        if (aOnes === bOnes) {\n       \
    \     return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4,", "    return arr.sort((a, b) => {\n     \
    \   const aBin = a.toString(2);\n        const bBin = b.toString(2);\n       \
    \ const aOnes = aBin.split('').filter(x => x === '1').length;\n        const bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n        return aOnes === bOnes\
    \ ? a - b : aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n\
    \        const aOnes = aBinary.split('1').length - 1;\n        const bOnes = bBinary.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return\
    \ arr.sort((a, b) => {\n    const aBinary = a.toString(2);\n    const bBinary\
    \ = b.toString(2);\n    const aOnes = aBinary.split(\"1\").length - 1;\n    const\
    \ bOnes = bBinary.split(\"1\").length - 1;\n    return aOnes === bOnes ? a - b\
    \ : aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n        const\
    \ aOnes = aBinary.split('').filter(e => e === '1').length;\n        const bOnes\
    \ = bBinary.split('').filter(e => e === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    const sorted = arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(c\
    \ => c === '1').length;\n        const bOnes = b.toString(2).split('').filter(c\
    \ => c === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n    return sorted;\n\
    }\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('1').length - 1;\n \
    \       const bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const binaryA = a.toString(2);\n        const binaryB = b.toString(2);\n\
    \        const countA = binaryA.split('').filter(x => x === '1').length;\n   \
    \     const countB = binaryB.split('').filter(x => x === '1').length;\n      \
    \  return countA === countB ? a - b : countA - countB;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\n\
    console.log(sort_array([1, 10, 100, 1000, 10000]));", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4,", "    return arr.sort((a, b) => {\n     \
    \   const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n \
    \       const aOnes = aBinary.split('').filter(x => x === '1').length;\n     \
    \   const bOnes = bBinary.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\n\
    console.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aBinary\
    \ = a.toString(2);\n        const bBinary = b.toString(2);\n        const aOnes\
    \ = aBinary.split('').filter(x => x === '1').length;\n        const bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n    const bOnes =\
    \ b.toString(2).split('').filter(x => x === '1').length;\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return arr.sort((a, b) => {\n    let aOnes\
    \ = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n    let bOnes\
    \ = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n\
    \    }\n  });\n}\n", "    return arr.sort((a, b) => {\n        const a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 - b1 || a - b;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ return aOnes === bOnes ? a - b : aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([1000, 10000, 100, 10, 1]));\nconsole.log(sort_array([1111,\
    \ 111, 11, 1]));", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n\
    \        const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin\
    \ = b.toString(2);\n    const aOnes = aBin.split(\"1\").length - 1;\n    const\
    \ bOnes = bBin.split(\"1\").length - 1;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bBin = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aBin === bBin) {\n      return a - b;\n    }\n    return aBin\
    \ - bBin;\n  });\n}\n", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"1\").length -\
    \ 1;\n    const bOnes = bBin.split(\"1\").length - 1;\n    return aOnes === bOnes\
    \ ? a - b : aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([0, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9]));", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000,\
    \ 1000000000, 10000000000]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4,\
    \ 2, 1]));\nconsole.log(sort_array([1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]));\n\
    console.log(sort_array([10000, 10000, 10000, 10000, 10000]));\nconsole.log(sort_array([23,\
    \ 244, 12, 54, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([37, 13,\
    \ 5, 7, 9, 16, 2, 4, 25, 11, 28, 4, 2, 5, 2, 2, 7, 99, 92, 88, 66]));\nconsole.log(sort_array([0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0]));\nconsole.log(sort_array([1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1]));\nconsole.log(sort_array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,", "  \
    \  return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000,\
    \ 1000000000, 10000000000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));", "    return\
    \ arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return arr.sort((a, b) => {\n    const\
    \ aOnes = countOnes(a);\n    const bOnes = countOnes(b);\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "   \
    \ return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000,\
    \ 1000000000, 10000000000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));", "  return\
    \ arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = countOnes(a);\n        const bOnes = countOnes(b);\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    let ones: number[] = [];\n    let\
    \ zeros: number[] = [];\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < arr.length; i++) {\n        let binary = arr[i].toString(2);\n        let\
    \ count = 0;\n        for (let j = 0; j < binary.length; j++) {\n            if\
    \ (binary[j] === '1') {\n                count++;\n            }\n        }\n\
    \        if (count === 0) {\n            zeros.push(arr[i]);\n        } else {\n\
    \            ones.push(arr[i]);\n        }\n    }\n    ones.sort((a, b) => {\n\
    \        let binaryA = a.toString(2);\n        let binaryB = b.toString(2);\n\
    \        let countA = 0;\n        let countB = 0;\n        for (let i = 0; i <\
    \ binaryA.length; i++) {\n            if (binaryA[i] === '1') {\n            \
    \    countA++;\n            }\n        }\n        for (let i = 0; i < binaryB.length;\
    \ i++) {\n            if (binaryB[i] === '1') {\n                countB++;\n \
    \           }\n        }\n        if (countA === countB) {\n            return\
    \ a - b;\n        } else {\n            return countA - countB;\n        }\n \
    \   });\n    zeros.sort((a, b) => a - b);\n    result = ones.concat(zeros);\n\
    \    return result;\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([0, 1, 2,\
    \ 10, 100]));\nconsole.log(sort_array([1, 10, 100, 1000]));\nconsole.log(sort_array([1,\
    \ 2, 100,", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), [1, 2,\
    \ 4, 8, 3, 5, 6, 9, 10, 7]);\nconsole.log(sort_array([10, 100, 1000, 10000]),\
    \ [10, 100, 10000, 1000]);\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]), [0, 1, 2, 4, 8, 3, 5, 6, 9, 10, 7]);\nconsole.log(sort_array([0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), [0, 1,\
    \ 2, 4, 8, 16, 3, 5, 6, 9, 10, 12, 17, 18, 7, 11, 13, 14, 15, 20, 19]);\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,", "    return arr.sort((a, b)\
    \ => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000,\
    \ 100, 10, 1]));\nconsole.log(sort_array([1, 10, 100, 1000, 10000]));", "    return\
    \ arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n        const\
    \ bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x =>\
    \ x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "  return arr.sort((a, b) => {\n    const aBinary = a.toString(2);\n    const bBinary\
    \ = b.toString(2);\n    const aOnes = aBinary.split(\"1\").length - 1;\n    const\
    \ bOnes = bBinary.split(\"1\").length - 1;\n    if (aOnes === bOnes) {\n     \
    \ return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = countOnes(a);\n    const bOnes = countOnes(b);\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBinary = a.toString(2);\n    const bBinary = b.toString(2);\n\
    \    const aOnes = aBinary.split(\"1\").length - 1;\n    const bOnes = bBinary.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n        let bOnes = b.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n        if (aOnes === bOnes) {\n       \
    \     return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(c => c ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(c => c === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([1, 2, 4,\
    \ 8, 16, 32, 64, 128, 256, 512, 1024]));\nconsole.log(sort_array([10000, 10000]));\n\
    console.log(sort_array([1, 2, 100, 3, 22, 4, 5, 6, 7, 8, 9, 10]));", "    return\
    \ arr.sort((a, b) => {\n        let aOnes = a.toString(2).match(/1/g) || [];\n\
    \        let bOnes = b.toString(2).match(/1/g) || [];\n        if (aOnes.length\
    \ === bOnes.length) {\n            return a - b;\n        }\n        return aOnes.length\
    \ - bOnes.length;\n    });\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n        const\
    \ bOnes = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000,\
    \ 10000]));\nconsole.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aOnes\
    \ = countOnes(a);\n        const bOnes = countOnes(b);\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n \
    \   }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const aOnes\
    \ = countOnes(a);\n        const bOnes = countOnes(b);\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"1\").length - 1;\n    const bOnes = bBin.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   const aBin = a.toString(2);\n        const bBin = b.toString(2);\n       \
    \ const aOnes = aBin.split('1').length - 1;\n        const bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n\
    \    const aOnes = countOnes(a);\n    const bOnes = countOnes(b);\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(c\
    \ => c === '1').length;\n        const bOnes = b.toString(2).split('').filter(c\
    \ => c === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('1').length - 1;\n        const bOnes = bBin.split('1').length\
    \ - 1;\n        return aOnes === bOnes ? a - b : aOnes - bOnes;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n     \
    \   const bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = a.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    const bOnes = b.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('1').length - 1;\n      \
    \  const bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]));", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = countOnes(a);\n        let bOnes = countOnes(b);\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aBin = a.toString(2);\n        const bBin = b.toString(2);\n    \
    \    const aOnes = aBin.split('1').length - 1;\n        const bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3,", "    return\
    \ arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n        const\
    \ bBinary = b.toString(2);\n        const aOnes = aBinary.split('').filter(x =>\
    \ x === '1').length;\n        const bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n   \
    \     let bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\n\
    console.log(sort_array([1, 10, 100, 1000, 10000]));", "  return arr.sort((a, b)\
    \ => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n   \
    \ const aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    const bOnes\
    \ = bBin.split(\"\").filter(x => x === \"1\").length;\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "   \
    \ return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('1').length - 1;\n \
    \       const bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  return\
    \ arr.sort((a, b) => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n\
    \    let aOnes = aBin.split(\"1\").length - 1;\n    let bOnes = bBin.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else\
    \ {\n      return aOnes - bOnes;\n    }\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16,\
    \ 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin\
    \ = b.toString(2);\n    const aOnes = aBin.split(\"1\").length - 1;\n    const\
    \ bOnes = bBin.split(\"1\").length - 1;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n        const\
    \ bOnes = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 10, 100, 1000]));\nconsole.log(sort_array([1, 2, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 10, 100, 1000]));\n\
    console.log(sort_array([1, 2, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 10, 100, 1000]));\n\
    console.log(sort_array([1, 2, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 10, 100, 1000]));\n\
    console.log(sort_array([1, 2, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 10, 100, 1000]));\n\
    console.log(sort_array([1,", "  return arr.sort((a, b) => {\n    const aOnes =\
    \ a.toString(2).split('').filter(x => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a, b) => {\n\
    \        const binA = a.toString(2);\n        const binB = b.toString(2);\n  \
    \      const onesA = binA.split('').filter(c => c === '1').length;\n        const\
    \ onesB = binB.split('').filter(c => c === '1').length;\n        if (onesA ===\
    \ onesB) {\n            return a - b;\n        }\n        return onesA - onesB;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) return a - b;\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes\
    \ = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n    const bOnes\
    \ = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8,", "    return arr.sort((a, b) => {\n        const aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        const bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return aBin === bBin ? a - b : aBin - bBin;\n  \
    \  });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\nconsole.log(sort_array([1,\
    \ 10, 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        const bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000,\
    \ 100, 10, 1]));\nconsole.log(sort_array([1, 10, 100, 1000, 10000]));", "    return\
    \ arr.sort((a, b) => {\n        const aOnes = countOnes(a);\n        const bOnes\
    \ = countOnes(b);\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const binA = a.toString(2).split('').filter(x => x === '1').length;\n\
    \    const binB = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \ return binA === binB ? a - b : binA - binB;\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000,\
    \ 10000]));\nconsole.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        let aBinary\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBinary\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBinary\
    \ === bBinary) {\n            return a - b;\n        }\n        return aBinary\
    \ - bBinary;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,\
    \ 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,\
    \ 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92,\
    \ 93, 94, 95, 96, 97, 98, 99, 100]));", "    return arr.sort((a, b) => {\n   \
    \     const aOnes = (a.toString(2).match(/1/g) || []).length;\n        const bOnes\
    \ = (b.toString(2).match(/1/g) || []).length;\n        return aOnes === bOnes\
    \ ? a - b : aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n  \
    \  const aBin = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes\
    \ = aBin.split(\"\").filter(x => x === \"1\").length;\n    const bOnes = bBin.split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = countOnes(a);\n        const bOnes = countOnes(b);\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aBin = a.toString(2);\n        const bBin = b.toString(2);\n    \
    \    const aOnes = aBin.split('').filter(x => x === '1').length;\n        const\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('1').length - 1;\n \
    \       const bOnes = bBin.split('1').length - 1;\n        return aOnes === bOnes\
    \ ? a - b : aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const aBinary\
    \ = a.toString(2);\n        const bBinary = b.toString(2);\n        const aOnes\
    \ = aBinary.split('').filter(x => x === '1').length;\n        const bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000,\
    \ 10000]));\nconsole.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aBinary\
    \ = a.toString(2);\n        const bBinary = b.toString(2);\n        const aOnes\
    \ = aBinary.split('').filter(x => x === '1').length;\n        const bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\n\
    console.log(sort_array([1, 10, 100, 1000, 10000]));", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([10, 100, 1000, 10000, 100000,\
    \ 1000000, 10000000, 100000000, 1000000000, 10000000000]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([1, 2, 4, 8, 16, 32, 64,\
    \ 128, 256, 512, 1024]));\nconsole.log(sort_array([10000, 10000, 10000, 10000,\
    \ 10000]));\nconsole.log(sort_array([23, 345, 4563, 34534, 34534, 5676, 56857,\
    \ 23, 5, 7, 34534, 74, 23]));\nconsole.log(sort_array([1, 10, 100, 1000, 10000,\
    \ 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"1\").length -\
    \ 1;\n    const bOnes = bBin.split(\"1\").length - 1;\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "   \
    \ return arr.sort((a, b) => {\n        const aOnes = countOnes(a);\n        const\
    \ bOnes = countOnes(b);\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n\
    \        const aOnes = aBinary.split('').filter(char => char === '1').length;\n\
    \        const bOnes = bBinary.split('').filter(char => char === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aBin = a.toString(2);\n        const bBin = b.toString(2);\n    \
    \    const aOnes = aBin.split('').filter(x => x === '1').length;\n        const\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2,\
    \ 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10, 100, 1000, 10000]));",
  "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const aBin =\
    \ a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes < bOnes) {\n            return -1;\n       \
    \ } else if (aOnes > bOnes) {\n            return 1;\n        } else {\n     \
    \       return a - b;\n        }\n    });\n}\n\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7,", "    return arr.sort((a, b) =>\
    \ {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 1000,\
    \ 100, 10, 1]));\nconsole.log(sort_array([1, 10, 100, 1000, 10000]));", "    return\
    \ arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\n\
    console.log(sort_array([10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000,\
    \ 1000000000, 10000000000]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));", "  return\
    \ arr.sort((a, b) => {\n    const aOnes = countOnes(a);\n    const bOnes = countOnes(b);\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        const bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split(\"1\").length - 1;\n    const bOnes = bBin.split(\"\
    1\").length - 1;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n   \
    \ return aOnes - bOnes;\n  });\n}\n", "    let sorted = arr.sort((a, b) => {\n\
    \        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n    return sorted;\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split('').filter(x => x === '1').length;\n    const bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n    if (aOnes === bOnes) {\n\
    \      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const bBin\
    \ = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        const bOnes = bBin.split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]));\nconsole.log(sort_array([10, 100, 1000, 10000]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32, 16, 8,\
    \ 4, 2, 1]));\nconsole.log(sort_array([10000, 1000, 100, 10, 1]));\nconsole.log(sort_array([1,\
    \ 10, 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aBin\
    \ = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes =\
    \ aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(c => c === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(c => c === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));", " \
    \ return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    const bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n}\n", "  return arr.sort((a, b) => {\n    const\
    \ aBin = a.toString(2);\n    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"\
    1\").length - 1;\n    const bOnes = bBin.split(\"1\").length - 1;\n    return\
    \ aOnes === bOnes ? a - b : aOnes - bOnes;\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\n\
    console.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n\
    \    const bBin = b.toString(2);\n    const aOnes = aBin.split(\"1\").length -\
    \ 1;\n    const bOnes = bBin.split(\"1\").length - 1;\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9]));", "    return arr.sort((a, b) => {\n        const\
    \ aBin = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        const bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n\
    \        const aOnes = aBinary.split('').filter(x => x === '1').length;\n    \
    \    const bOnes = bBinary.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\n\
    console.log(sort_array([2, 3, 5, 7, 11, 13, 17, 19]));\nconsole.log(sort_array([10,\
    \ 100, 1000, 10000]));", "    return arr.sort((a, b) => {\n        const aBin\
    \ = a.toString(2);\n        const bBin = b.toString(2);\n        const aOnes =\
    \ aBin.split('1').length - 1;\n        const bOnes = bBin.split('1').length -\
    \ 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n}\n\nconsole.log(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]));\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));\nconsole.",
  "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n        const\
    \ bBin = b.toString(2);\n        const aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        const bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      const aOnes = countOnes(a);\n        const bOnes = countOnes(b);\n    \
    \    if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n    const bOnes =\
    \ b.toString(2).split('').filter(x => x === '1').length;\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "   \
    \ return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const\
    \ aOnes = a.toString(2).split(\"\").filter(x => x === \"1\").length;\n    const\
    \ bOnes = b.toString(2).split(\"\").filter(x => x === \"1\").length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([1, 2, 4, 8, 16, 32, 64,\
    \ 128, 256, 512, 1024]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2048,\
    \ 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));", "  return arr.sort((a, b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split(\"\").filter(x => x === \"1\").length;\n    let bOnes = bBin.split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "    return arr.sort((a, b) => {\n        const\
    \ aOnes = countOnes(a);\n        const bOnes = countOnes(b);\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

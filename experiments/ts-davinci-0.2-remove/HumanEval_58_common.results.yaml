language: ts
name: HumanEval_58_common
results:
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x)).sort((a, b) => a - b)));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq67j_2fj.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpq67j_2fj.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpq67j_2fj.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x)))).sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmt2ov_27.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpmt2ov_27.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpmt2ov_27.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(function (n) {\n \
    \       return l2.indexOf(n) !== -1;\n    }).sort(function (a, b) {\n        return\
    \ a - b;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        for (let j = 0; j < l2.length; j++)\
    \ {\n            if (l1[i] === l2[j]) {\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpnj5xvsz4.js:16:12)\n    at Object.<anonymous> (/tmp/tmpnj5xvsz4.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(i => l2.includes(i)).sort((a,\
    \ b) => a - b).filter((item, pos, ary) => !pos || item != ary[pos - 1]);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgherxl6j.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx74cgxnb.ts(3,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l3: number[] = [];\n    l1.forEach(function\
    \ (item) {\n        if (l2.indexOf(item) > -1) {\n            l3.push(item);\n\
    \        }\n    });\n    return l3.sort(function (a, b) { return a - b });\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpirseu70d.ts(3,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpirseu70d.ts(3,40): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x)))).sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmt2ov_27.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpmt2ov_27.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpmt2ov_27.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x)))).sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmt2ov_27.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpmt2ov_27.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpmt2ov_27.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(function (n) {\n \
    \       return l2.indexOf(n) !== -1;\n    }).sort(function (a, b) {\n        return\
    \ a - b;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpirseu70d.ts(3,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpirseu70d.ts(3,40): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const s1 = new Set(l1);\n    const\
    \ s2 = new Set(l2);\n    const s3 = new Set([...s1].filter(x => s2.has(x)));\n\
    \    return [...s3].sort((a, b) => a - b);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp60dzujnp.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp60dzujnp.ts(4,20): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmp60dzujnp.ts(5,20): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x)))).sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmt2ov_27.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpmt2ov_27.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpmt2ov_27.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x)).sort((a, b) => a - b)));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq67j_2fj.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpq67j_2fj.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpq67j_2fj.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b).filter((e, i, a) => i === 0 || e !== a[i - 1]);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp22u93iep.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) > -1) {\n \
    \           result.push(l1[i]);\n        }\n    }\n    return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return _.sortBy(_.uniq(_.intersection(l1,\
    \ l2)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplnpkkmwa.ts(3,12): error TS2304: Cannot find name
    ''_''.

    ../../../../../tmp/tmplnpkkmwa.ts(3,21): error TS2304: Cannot find name ''_''.

    ../../../../../tmp/tmplnpkkmwa.ts(3,28): error TS2304: Cannot find name ''_''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return unique(l1.filter(x => l2.includes(x)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3u0fvcxb.ts(3,12): error TS2304: Cannot find name
    ''unique''.

    ../../../../../tmp/tmp3u0fvcxb.ts(3,37): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let c: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        for (let j = 0; j < l2.length; j++) {\n\
    \            if (l1[i] === l2[j]) {\n                c.push(l1[i]);\n        \
    \    }\n        }\n    }\n    return c.sort().filter((item, pos, ary) => {\n \
    \       return !pos || item != ary[pos - 1];\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x))));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbfacb0k_.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpbfacb0k_.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpbfacb0k_.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let result: number[] = [];\n    let\
    \ i = 0;\n    let j = 0;\n    while (i < l1.length && j < l2.length) {\n     \
    \   if (l1[i] < l2[j]) {\n            i++;\n        } else if (l1[i] > l2[j])\
    \ {\n            j++;\n        } else {\n            result.push(l1[i]);\n   \
    \         i++;\n            j++;\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpxyppdmax.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxyppdmax.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l3: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        for (let j = 0; j < l2.length; j++) {\n\
    \            if (l1[i] === l2[j]) {\n                l3.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return l3.sort((a, b) => a - b).filter((item, pos,\
    \ ary) => {\n        return !pos || item != ary[pos - 1];\n    });\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) != -1) {\n\
    \            result.push(l1[i]);\n        }\n    }\n    return result.sort(function\
    \ (a, b) { return a - b });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    const s1 = new Set(l1);\n    const\
    \ s2 = new Set(l2);\n    const s = new Set();\n    for (const e of s1) {\n   \
    \     if (s2.has(e)) {\n            s.add(e);\n        }\n    }\n    return Array.from(s);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3tk3p_vi.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp3tk3p_vi.ts(4,20): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmp3tk3p_vi.ts(5,19): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmp3tk3p_vi.ts(11,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return _.sortBy(_.uniq(_.intersection(l1,\
    \ l2)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplnpkkmwa.ts(3,12): error TS2304: Cannot find name
    ''_''.

    ../../../../../tmp/tmplnpkkmwa.ts(3,21): error TS2304: Cannot find name ''_''.

    ../../../../../tmp/tmplnpkkmwa.ts(3,28): error TS2304: Cannot find name ''_''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x))));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbfacb0k_.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpbfacb0k_.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpbfacb0k_.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpywvmikr_.ts(3,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978771
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n  return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx74cgxnb.ts(3,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return unique(l1.filter(x => l2.includes(x)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3u0fvcxb.ts(3,12): error TS2304: Cannot find name
    ''unique''.

    ../../../../../tmp/tmp3u0fvcxb.ts(3,37): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l3: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        for (let j = 0; j < l2.length; j++) {\n\
    \            if (l1[i] === l2[j]) {\n                l3.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return l3.sort().filter((v, i, a) => a.indexOf(v)\
    \ === i);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978771
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(n => l2.includes(n)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzmh1nei7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978771
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x))));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbfacb0k_.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpbfacb0k_.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpbfacb0k_.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l3: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) > -1) {\n      \
    \      l3.push(l1[i]);\n        }\n    }\n    return l3.sort((a, b) => a - b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978771
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(e => l2.includes(e)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe7zbfta7.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkvtt9dqm.ts(3,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpkvtt9dqm.ts(3,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    let l3: number[] = [];\n    for (let\
    \ i = 0; i < l1.length; i++) {\n        for (let j = 0; j < l2.length; j++) {\n\
    \            if (l1[i] === l2[j]) {\n                l3.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return l3.sort().filter((item, index, array) =>\
    \ {\n        return !index || item !== array[index - 1];\n    });\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978771
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => !i || x != a[i - 1]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz6v_p5zu.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978770
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x)))).sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmt2ov_27.ts(3,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpmt2ov_27.ts(3,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpmt2ov_27.ts(3,49): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769
- exit_code: 2
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1:\
    \ number[], l2: number[]): number[] {\n    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeot2nxid.ts(3,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659978769

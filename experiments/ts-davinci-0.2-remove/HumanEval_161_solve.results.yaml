language: ts
name: HumanEval_161_solve
results:
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('12345678901'));\nconsole.log(solve('123456789012'));\n\
    console.log(solve('1234567890123'));\nconsole.log(solve('12345678901234'));\n\
    console.log(solve('123456789012345'));\nconsole.log(solve('1234567890123456'));\n\
    console.log(solve('12345678901234567'));\nconsole.log(solve('123456789012345678'));\n\
    console.log(solve('1234567890123456789'));\nconsole.log(solve('12345678901234567890'));\n\
    console.log(solve('123456789012345678901'));\nconsole.log(solve('1234567890123456789012'));\n\
    console.log(solve('12345678901234567890123'));\nconsole.log(solve('123456789012345678901234'));\n\
    console.log(solve('1234567890123456789012345'));\nconsole.log(solve('12345678901234567890123456'));\n\
    console.log(solve('1234567890123456789012345\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplma8urzd.ts(43,45): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmplma8urzd.ts(44,1): error TS1005: '','' expected.

    ../../../../../tmp/tmplma8urzd.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let newString = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            newString += s[i].toLowerCase();\n  \
    \      } else if (s[i] === s[i].toLowerCase()) {\n            newString += s[i].toUpperCase();\n\
    \        } else {\n            newString += s[i];\n        }\n    }\n    return\
    \ newString;\n}\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cOdEwArs'));\n\
    console.log(solve('codeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\n\
    console.log(solve('CodeWars123!'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-='));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,./<>?'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,./<>?`~'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,./<>?`~\\\
    ''));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,./<>?`~\\'\\\"'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,./<>?`~\\'\\\"\\\\'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,./<>?`~\\\
    '\\\"\\\\ '));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,./<>?`\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx3d90dii.ts(35,59): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpx3d90dii.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpx3d90dii.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('12345'));\n\
    console.log(solve('abcdef'));\nconsole.log(solve('ABCDEF'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeFg'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH1'));\n\
    console.log(solve('aBcDeFgH1i'));\nconsole.log(solve('aBcDeFgH1iJ'));\nconsole.log(solve('aBcDeFgH1iJk'));\n\
    console.log(solve('aBcDeFgH1iJkL'));\nconsole.log(solve('aBcDeFgH1iJkLm'));\n\
    console.log(solve('aBcDeFgH1iJkLmN'));\nconsole.log(solve('aBcDeFgH1iJkLmNo'));\n\
    console.log(solve('aBcDeFgH1iJkLmNoP'));\nconsole.log(solve('aBcDeFgH1iJkLmNoPq'));\n\
    console.log(solve('aBcDeFgH1iJkLmNoPqR'));\nconsole.log(solve('aBcDeFgH1iJkLmNoPqRs'));\n\
    console.log(solve('aBcDeFgH1iJkL\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu3c6ep0d.ts(40,33): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpu3c6ep0d.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpu3c6ep0d.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmzm6vs3g.ts(53,20): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpmzm6vs3g.ts(54,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpmzm6vs3g.ts(54,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('a1b2c3d4'));\n\
    console.log(solve('a1B2c3D4'));\nconsole.log(solve('a1b2c3d4e5f6g7h8i9j0'));\n\
    console.log(solve('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6'));\n\
    console.log(solve('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0Y1Z2'));\n\
    console.log(solve('a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjc684al4.ts(31,97): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpjc684al4.ts(32,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpjc684al4.ts(32,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ const letters = s.split('').filter(char => char.match(/[a-z]/i));\n    if (letters.length\
    \ === 0) {\n        return s.split('').reverse().join('');\n    }\n    const newString\
    \ = s.split('').map(char => {\n        if (char.match(/[a-z]/i)) {\n         \
    \   if (char === char.toUpperCase()) {\n                return char.toLowerCase();\n\
    \            } else {\n                return char.toUpperCase();\n          \
    \  }\n        } else {\n            return char;\n        }\n    });\n    return\
    \ newString.join('');\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('abcd'));\nconsole.log(solve('123'));\nconsole.log(solve('123abc'));\n\
    console.log(solve('123abcABC'));\nconsole.log(solve('123abcd'));\nconsole.log(solve('123ABC'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabcd'));\nconsole.log(solve('abc123'));\n\
    console.log(solve('abc123ABC'));\nconsole.log(solve('abc123ABCabc'));\nconsole.log(solve('abc123ABCabcd'));\n\
    console.log(solve('ABC123'));\nconsole.log(solve('ABC123abc'));\nconsole.log(solve('ABC123abcABC'));\n\
    console.log(solve('ABC123abcABCabc'));\nconsole.log(solve('ABC123abcABCabcd'));\n\
    console.log(solve('ABC123ABC'));\nconsole.log(solve('ABC123ABCabc'));\nconsole.log(solve('ABC123ABCabcABC'));\n\
    console.log(solve('ABC123ABCabcABCabc'));\nconsole.log(solve('ABC123ABCabcABCabcd'));\n\
    console.log(solve('ABC123ABCABC'));\nconsole.log(solve('ABC123ABCABCabc')\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk094n6d5.ts(52,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpk094n6d5.ts(52,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#'));\n\
    console.log(solve('ABC123!@#'));\nconsole.log(solve('ABC123!@#abc'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-='));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpio0ika6k.ts(35,93): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpio0ika6k.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpio0ika6k.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('1A2B3C4D5E'));\nconsole.log(solve('12345'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890a'));\nconsole.log(solve('1234567890A'));\nconsole.log(solve('1234567890aA'));\n\
    console.log(solve('1234567890aA1'));\nconsole.log(solve('1234567890aA1B'));\n\
    console.log(solve('1234567890aA1B2'));\nconsole.log(solve('1234567890aA1B2C'));\n\
    console.log(solve('1234567890aA1B2C3'));\nconsole.log(solve('1234567890aA1B2C3D'));\n\
    console.log(solve('1234567890aA1B2C3D4'));\nconsole.log(solve('1234567890aA1B2C3D4E'));\n\
    console.log(solve('1234567890aA1B2C3D4E5'));\nconsole.log(solve('1234567890aA1B2C3D4E5\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbh7rgsph.ts(42,41): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpbh7rgsph.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbh7rgsph.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpa7gaoe3_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7gaoe3_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello'));\nconsole.log(solve('123'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.toUpperCase()'));\n\
    console.log(solve('String.prototype.toLowerCase()'));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp17f_pxp8.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp17f_pxp8.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO

    123

    1A2B3C4D5E

    sTRING.PROTOTYPE.TOuPPERcASE()

    sTRING.PROTOTYPE.TOlOWERcASE()

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-='));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-=[]{}|;:\"\
    ,./<>?`~!@#$%^&*()_+'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~1234567890-=[]{}|;:\",./<>?`~!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890'));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpcj4b1v33.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcj4b1v33.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    Codewars

    CODEwARS

    cODEwARS

    cODEwARS123

    cODEwARS123!

    cODEwARS123!@#$%^&*()_+

    cODEwARS123!@#$%^&*()_+-=

    cODEwARS123!@#$%^&*()_+-=[]{}|;:",./<>?

    cODEwARS123!@#$%^&*()_+-=[]{}|;:",./<>?`~

    cODEwARS123!@#$%^&*()_+-=[]{}|;:",./<>?`~1234567890

    cODEwARS123!@#$%^&*()_+-=[]{}|;:",./<>?`~1234567890-=[]{}|;:",./<>?`~!@#$%^&*()_+

    cODEwARS123!@#$%^&*()_+-=[]{}|;:",./<>?`~1234567890-=[]{}|;:",./<>?`~!@#$%^&*()_+-=[]{}|;:",./<>?`~1234567890

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('ABC123'));\n\
    console.log(solve('ABC123abc'));\nconsole.log(solve('ABC123abcDEF'));\nconsole.log(solve('ABC123abcDEF456'));\n\
    console.log(solve('ABC123abcDEF456GHI789'));\nconsole.log(solve('ABC123abcDEF456GHI789JKL012'));\n\
    console.log(solve('ABC123abcDEF456GHI789JKL012MNO345'));\nconsole.log(solve('ABC123abcDEF456GHI789JKL012MNO345PQR678'));\n\
    console.log(solve('ABC123abcDEF456GHI789JKL012MNO345PQR678STU901'));\nconsole.log(solve('ABC123abcDEF456GHI789JKL012MNO345PQR678STU901VWX234'));\n\
    console.log(solve('ABC123abcDEF456GHI789JKL012MNO345PQR678STU901VWX234YZ567'));\n\
    console.log(solve('ABC123abcDEF456GHI789JKL012MNO345PQR678STU901VWX234YZ56789'));\n\
    console.log(solve('ABC123abcDEF456GHI789JKL012MNO345PQR678STU901VWX234YZ56789012'));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzglh_wfp.ts(39,9): error TS1003: Identifier expected.

    '
  timestamp: 1659978143
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codewars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('c'));\n\
    console.log(solve('1'));\nconsole.log(solve('1a'));\nconsole.log(solve('1A'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\n\
    console.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpihjjppay.ts(41,38): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpihjjppay.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpihjjppay.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()'));\nconsole.log(solve('123ABCabc!@#$%^&*()ABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()ABCabcABCabc'));\nconsole.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabcABCabc'));\nconsole.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabcABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()ABCabcABCabcABCabc\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp14r0222n.ts(37,57): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp14r0222n.ts(38,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp14r0222n.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp9zhzpjkp.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9zhzpjkp.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpwv5caeoo.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwv5caeoo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    12345

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpyg2kg5dq.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyg2kg5dq.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    AbC

    AbC123

    AbC123!@#$%^&*()_+

    !@#$%^&*()_+

    AbC123!@#$%^&*()_+

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cOdEwArs'));\nconsole.log(solve('abracadabra'));\n\
    console.log(solve('52a3b'));\nconsole.log(solve('z'));\nconsole.log(solve('Z'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.toAlternatingCase'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello\
    \ Codewarrior'));\nconsole.log(solve('Hello Codewarrior!'));\nconsole.log(solve('HELLO\
    \ CODEWARRIOR!'));\nconsole.log(solve('hello codewarrior!'));\nconsole.log(solve('Hello\
    \ Codewarrior!'));\nconsole.log(solve('Hello Codewarrior!'));\nconsole.log(solve('Hello\
    \ Codewarrior!'));\nconsole.log(solve('Hello Codewarrior!'));\nconsole.log(solve('Hello\
    \ Codewarrior!'));\nconsole.log(solve('Hello Codewarrior!'));\nconsole.log(solve('Hello\
    \ Codewarrior!'));\nconsole.log(solve('Hello Codewarrior!'));\nconsole.log(solve('Hello\
    \ Codewarrior!'));\nconsole.log(solve('Hello Codewarrior!'));\nconsole.log(solve('Hello\
    \ Codewarrior\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0iff8uh4.ts(46,37): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp0iff8uh4.ts(47,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0iff8uh4.ts(47,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpa7gaoe3_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7gaoe3_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpa7gaoe3_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7gaoe3_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvc7q5pbb.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvc7q5pbb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpl3f6ltz4.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl3f6ltz4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('AbC'));\nconsole.log(solve('aBc'));\nconsole.log(solve('aBC'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i'));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpm3hnnmgu.js:45:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm3hnnmgu.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    aBc

    AbC

    Abc

    123456789

    1A2B3C4D5E6F7G8H9I

    1a2b3c4d5e6f7g8h9i

    1A2B3C4D5E6F7G8H9I

    1a2b3c4d5e6f7g8h9i

    1A2B3C4D5E6F7G8H9I

    1a2b3c4d5e6f7g8h9i

    1A2B3C4D5E6F7G8H9I

    1a2b3c4d5e6f7g8h9i

    1A2B3C4D5E6F7G8H9I

    1a2b3c4d5e6f7g8h9i

    1A2B3C4D5E6F7G8H9I

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('AbC'));\nconsole.log(solve('aBc123'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+ABC'));\n\
    console.log(solve('aBc123!@#$%^&*()_+ABCxyz'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpbkqa4ydg.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbkqa4ydg.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    AbC

    aBc

    AbC123

    AbC123!@#$%^&*()_+

    AbC123!@#$%^&*()_+abc

    AbC123!@#$%^&*()_+abcXYZ

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('ABC123'));\n\
    console.log(solve('ABC123abc'));\nconsole.log(solve('ABC123abc456'));\nconsole.log(solve('ABC123abc456DEF'));\n\
    console.log(solve('ABC123abc456DEF789'));\nconsole.log(solve('ABC123abc456DEF789ghi'));\n\
    console.log(solve('ABC123abc456DEF789ghi000'));\nconsole.log(solve('ABC123abc456DEF789ghi000JKL'));\n\
    console.log(solve('ABC123abc456DEF789ghi000JKLmno'));\nconsole.log(solve('ABC123abc456DEF789ghi000JKLmnoPQR'));\n\
    console.log(solve('ABC123abc456DEF789ghi000JKLmnoPQRstu'));\nconsole.log(solve('ABC123abc456DEF789ghi000JKLmnoPQRstuVWX'));\n\
    console.log(solve('ABC123abc456DEF789ghi000JKLmnoPQRstuVWXYZ'));\nconsole.log(solve('ABC123abc456DEF789ghi000JKLmnoPQRstuVWXYZ1'));\n\
    console.log(solve('ABC123abc456DEF789ghi000JKLmnoPQRstuVWXYZ1@')\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n\
    \  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmput5mf_if.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmput5mf_if.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpm4y5uwmm.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm4y5uwmm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('abc123'));\nconsole.log(solve('ABC123'));\nconsole.log(solve('!@#$%^&*()'));\n\
    console.log(solve('abcDEF'));\nconsole.log(solve('ABCdef'));\nconsole.log(solve('AbCdEf'));\n\
    console.log(solve('123abc'));\nconsole.log(solve('123ABC'));\nconsole.log(solve('abc!@#'));\n\
    console.log(solve('ABC!@#'));\nconsole.log(solve('abc!@#ABC'));\nconsole.log(solve('ABC!@#abc'));\n\
    console.log(solve('abc!@#ABC123'));\nconsole.log(solve('ABC!@#abc123'));\nconsole.log(solve('abc!@#ABC123!@#'));\n\
    console.log(solve('ABC!@#abc123!@#'));\nconsole.log(solve('abc!@#ABC123!@#abc'));\n\
    console.log(solve('ABC!@#abc123!@#ABC'));\nconsole.log(solve('abc!@#ABC123!@#abcABC'));\n\
    console.log(solve('ABC!@#abc123!@#ABCabc'));\nconsole.log(solve('abc!@#ABC123!@#abcABC!@#'));\n\
    console.log(solve('ABC!@#abc123!@#ABCabc!@#'));\nconsole.log(solve('abc!@#ABC123!@#abcABC!@#abc'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpon9pxg_z.js:52:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpon9pxg_z.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    ABC123

    abc123

    !@#$%^&*()

    ABCdef

    abcDEF

    aBcDeF

    123ABC

    123abc

    ABC!@#

    abc!@#

    ABC!@#abc

    abc!@#ABC

    ABC!@#abc123

    abc!@#ABC123

    ABC!@#abc123!@#

    abc!@#ABC123!@#

    ABC!@#abc123!@#ABC

    abc!@#ABC123!@#abc

    ABC!@#abc123!@#ABCabc

    abc!@#ABC123!@#abcABC

    ABC!@#abc123!@#ABCabc!@#

    abc!@#ABC123!@#abcABC!@#

    ABC!@#abc123!@#ABCabc!@#ABC

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvc7q5pbb.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvc7q5pbb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('Abcd'));\nconsole.log(solve('ABCD'));\n\
    console.log(solve('1234'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1a2b3c4d'));\n\
    console.log(solve('1A2b3C4d'));\nconsole.log(solve('1a2B3c4D'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2b3C4d'));\nconsole.log(solve('1a2B3c4D'));\n\
    console.log(solve('1A2B3C4D'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2b3C4d'));\n\
    console.log(solve('1a2B3c4D'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1a2b3c4d'));\n\
    console.log(solve('1A2b3C4d'));\nconsole.log(solve('1a2B3c4D'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2b3C4d'));\nconsole.log(s\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi5pgr4m3.ts(45,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpi5pgr4m3.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('codewars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-='));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('Code\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo4ufonuk.ts(37,24): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpo4ufonuk.ts(38,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpo4ufonuk.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBC'));\nconsole.log(solve('AbC'));\n\
    console.log(solve('aBc123'));\nconsole.log(solve('aBcDE'));\nconsole.log(solve('AbCdE'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeFgHiJkL'));\nconsole.log(solve('aBcDeFgHiJkL1234567890'));\n\
    console.log(solve('aBcDeFgHiJkL1234567890!@#$%^&*()_+'));\nconsole.log(solve('aBcDeFgHiJkL1234567890!@#$%^&*()_+-='));\n\
    console.log(solve('aBcDeFgHiJkL1234567890!@#$%^&*()_+-=[]{}|;:,.<>/?`~'));\nconsole.log(solve('aBcDeFgHiJkL1234567890!@#$%^&*()_+-=[]{}|;:,.<>/?`~\\\
    ''));\nconsole.log(solve('aBcDeFgHiJkL1234567890!@#$%^&*()_+-=[]{}|;:,.<>/?`~\\\
    '\\\"'));\nconsole.log(solve('a\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpn0obs8kp.ts(38,21): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpn0obs8kp.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpn0obs8kp.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('1A2B3C'));\nconsole.log(solve('1a2b3c'));\nconsole.log(solve('AbCdEf'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH1'));\n\
    console.log(solve('aBcDeFgH1jKlMnOp'));\nconsole.log(solve('aBcDeFgH1jKlMnOpQrStUvWxYz'));\n\
    console.log(solve('aBcDeFgH1jKlMnOpQrStUvWxYz0'));\nconsole.log(solve('aBcDeFgH1jKlMnOpQrStUvWxYz0!@#$%^&*()_+'));\n\
    console.log(solve('aBcDeFgH1jKlMnOpQrStUvWxYz0!@#$%^&*()_+-='));\nconsole.log(solve('aBcDeFgH1jKlMnOpQrStUvWxYz0!@#$%^&*()_+-=[]{}'));\n\
    console.log(solve('aBcDeFgH1jKlMnOpQrStUvWxYz0!@#$%\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqaviazi8.ts(36,52): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpqaviazi8.ts(37,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpqaviazi8.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('123456789'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-='));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+-=[]{}|;:<>,.?/'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpel5b4h_b.ts(31,86): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpel5b4h_b.ts(32,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpel5b4h_b.ts(32,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('123456789'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpzb3lqgnw.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzb3lqgnw.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    123456789

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  const\
    \ letters = s.split('').filter(char => char.match(/[a-z]/i));\n  const nonLetters\
    \ = s.split('').filter(char => !char.match(/[a-z]/i));\n  const reversed = letters.map(char\
    \ => {\n    if (char === char.toUpperCase()) {\n      return char.toLowerCase();\n\
    \    } else {\n      return char.toUpperCase();\n    }\n  });\n  return reversed.length\
    \ > 0 ? reversed.concat(nonLetters).join('') : s.split('').reverse().join('');\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('12345'));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Ac#@'\n\nshould\
    \ loosely deep-equal\n\n'#A@c'\n    at test (/tmp/tmpw6jl1mqs.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpw6jl1mqs.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Ac#@',\n\
    \  expected: '#A@c',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABCD

    abcd

    AbCdEf

    ABCDE12345

    54321

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpiwoajbhh.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpiwoajbhh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    12345

    12345

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('12345'));\nconsole.log(solve('abcdef'));\n\
    console.log(solve('ABCDEF'));\nconsole.log(solve('abcdefABCDEF'));\nconsole.log(solve('abcdefABCDEFG'));\n\
    console.log(solve('abcdefABCDEFG12345'));\nconsole.log(solve('abcdefABCDEFG1234567890'));\n\
    console.log(solve('abcdefABCDEFG1234567890!@#$%^&*()'));\nconsole.log(solve('abcdefABCDEFG1234567890!@#$%^&*()_+'));\n\
    console.log(solve('abcdefABCDEFG1234567890!@#$%^&*()_+-='));\nconsole.log(solve('abcdefABCDEFG1234567890!@#$%^&*()_+-=[]{}|;:<>,./?'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpp640jt4v.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp640jt4v.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'A1B2C3

    12345

    ABCDEF

    abcdef

    ABCDEFabcdef

    ABCDEFabcdefg

    ABCDEFabcdefg12345

    ABCDEFabcdefg1234567890

    ABCDEFabcdefg1234567890!@#$%^&*()

    ABCDEFabcdefg1234567890!@#$%^&*()_+

    ABCDEFabcdefg1234567890!@#$%^&*()_+-=

    ABCDEFabcdefg1234567890!@#$%^&*()_+-=[]{}|;:<>,./?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp9zhzpjkp.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9zhzpjkp.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ let code: number = s.charCodeAt(i);\n        if (code >= 65 && code <= 90) {\n\
    \            result += String.fromCharCode(code + 32);\n        } else if (code\
    \ >= 97 && code <= 122) {\n            result += String.fromCharCode(code - 32);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('!@#$%^&*()_+'));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpqqencabl.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqqencabl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    AbC

    AbC123

    AbC123!@#$%^&*()_+

    !@#$%^&*()_+

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2B3C4D5E6F'));\n\
    console.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('12345'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('12345678901'));\nconsole.log(solve('123456789012'));\n\
    console.log(solve('1234567890123'));\nconsole.log(solve('12345678901234'));\n\
    console.log(solve('123456789012345'));\nconsole.log(solve('1234567890123456'));\n\
    console.log(solve('12345678901234567'));\nconsole.log(solve('123456789012345678'));\n\
    console.log(solve('1234567890123456789'));\nconsole.log(solve('12345678901234567890'));\n\
    console.log(solve('123456789012345678901'));\nconsole.log(solve('1234567890123456789012'));\n\
    console.log(solve('12345678901234567890123'));\nconsole.\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpan7wv96y.ts(44,9): error TS1003: Identifier expected.

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\n\
    console.log(solve('Supralapsarian'));\nconsole.log(solve('1337'));\nconsole.log(solve('aAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaA\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpldbyau4f.ts(25,356): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpldbyau4f.ts(26,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpldbyau4f.ts(26,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('sTring'));\nconsole.log(solve('String'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.12345'));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp_5kqqojq.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_5kqqojq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'StRING

    sTRING

    12345

    1A2B3C4D5E

    sTRING.12345

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log(solve\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3jm8pm8l.ts(33,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp3jm8pm8l.ts(33,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('abcABC123'));\n\
    console.log(solve('abcABC123!@\u20AC'));\nconsole.log(solve('AAbbCCDD'));\nconsole.log(solve('!'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmppzc94hs3.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppzc94hs3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: "ABC\nABCabc\nABCabc123\nABCabc123!@\u20AC\naaBBccdd\n!\n"
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s[i];\n        if (char.match(/[a-z]/i)) {\n            result += char.toUpperCase()\
    \ === char ? char.toLowerCase() : char.toUpperCase();\n        } else {\n    \
    \        result += char;\n        }\n    }\n    return result;\n}\n\nconsole.log(solve('abc'));\n\
    console.log(solve('ABC'));\nconsole.log(solve('123'));\nconsole.log(solve('aBc'));\n\
    console.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyz1234567890'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpar66k7m0.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpar66k7m0.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    AbC

    AbC123

    AbC123!@#$%^&*()_+

    ABCDEFGHIJKLMNOPQRSTUVWXYZ

    abcdefghijklmnopqrstuvwxyz

    abcdefghijklmnopqrstuvwxyz1234567890

    ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890

    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ

    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890

    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+

    ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz

    ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp9zhzpjkp.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9zhzpjkp.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('ABC123'));\n\
    console.log(solve('ABCabc'));\nconsole.log(solve('abc123'));\nconsole.log(solve('ABC123abc'));\n\
    console.log(solve('ABC123abcABC'));\nconsole.log(solve('abcABC123'));\nconsole.log(solve('abcABC123ABC'));\n\
    console.log(solve('abcABC123ABCabc'));\nconsole.log(solve('abcABC123ABCabcABC'));\n\
    console.log(solve('abcABC123ABCabcABC123'));\nconsole.log(solve('abcABC123ABCabcABC123abc'));\n\
    console.log(solve('abcABC123ABCabcABC123abcABC'));\nconsole.log(solve('abcABC123ABCabcABC123abcABCABC'));\n\
    console.log(solve('abcABC123ABCabcABC123abcABCABC123'));\nconsole.log(solve('abcABC123ABCabcABC123abcABCABC123abc'));\n\
    console.log(solve('abcABC123ABCabcABC123abcABCABC123abcABC'));\nconsole.log(solve('abcABC123ABCabcABC123abcABCABC123abcABC123'));\n\
    console.log(solve('abcABC123ABCabcABC123abcABCABC123abcABC123abc'));\nconsole.log(solve('abcABC123ABCabcABC123abcABCABC123abcABC123abcABC'));\n\
    console\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpxjks7m3y.js:51:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxjks7m3y.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    ABCabc

    123

    123abc

    123ABC

    abc123

    abcABC

    ABC123

    abc123ABC

    abc123ABCabc

    ABCabc123

    ABCabc123abc

    ABCabc123abcABC

    ABCabc123abcABCabc

    ABCabc123abcABCabc123

    ABCabc123abcABCabc123ABC

    ABCabc123abcABCabc123ABCabc

    ABCabc123abcABCabc123ABCabcabc

    ABCabc123abcABCabc123ABCabcabc123

    ABCabc123abcABCabc123ABCabcabc123ABC

    ABCabc123abcABCabc123ABCabcabc123ABCabc

    ABCabc123abcABCabc123ABCabcabc123ABCabc123

    ABCabc123abcABCabc123ABCabcabc123ABCabc123ABC

    ABCabc123abcABCabc123ABCabcabc123ABCabc123ABCabc

    '
  timestamp: 1659978146
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('AbC'));\nconsole.log(solve('aBc'));\nconsole.log(solve('aBc123'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvb83rzm_.ts(40,26): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpvb83rzm_.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpvb83rzm_.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978146
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6etkv6xn.js:57:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6etkv6xn.js:65:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    ABCabc

    123

    123abc

    123ABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpa7gaoe3_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7gaoe3_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('heLLo'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpom4ncgwa.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpom4ncgwa.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    HEllO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('codeWArs'));\nconsole.log\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpaay460b0.js:55:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpaay460b0.js:63:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    CodewaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    CODEwaRS

    '
  timestamp: 1659978148
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('abcABC123'));\n\
    console.log(solve('abcABC123!@\u20AC'));\nconsole.log(solve('AAaa'));\nconsole.log(solve('!'));\n\
    console.log(solve('!@\u20AC'));\nconsole.log(solve('!@\u20ACa'));\nconsole.log(solve('!@\u20AC\
    aA'));\nconsole.log(solve('!@\u20ACaA1'));\nconsole.log(solve('!@\u20ACaA1b'));\n\
    console.log(solve('!@\u20ACaA1bB'));\nconsole.log(solve('!@\u20ACaA1bB2'));\n\
    console.log(solve('!@\u20ACaA1bB2c'));\nconsole.log(solve('!@\u20ACaA1bB2cC'));\n\
    console.log(solve('!@\u20ACaA1bB2cC3'));\nconsole.log(solve('!@\u20ACaA1bB2cC3d'));\n\
    console.log(solve('!@\u20ACaA1bB2cC3dD'));\nconsole.log(solve('!@\u20ACaA1bB2cC3dD4'));\n\
    console.log(solve('!@\u20ACaA1bB2cC3dD4e'));\nconsole.log(solve('!@\u20ACaA1bB2cC3dD4eE'));\n\
    console.log(solve('!@\u20ACaA1bB2cC3d\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpecrcfn7g.ts(42,33): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpecrcfn7g.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpecrcfn7g.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659978148
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg'));\n\
    console.log(solve('123'));\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\n\
    console.log(solve('AbCd'));\nconsole.log(solve('aBcDeFgH123'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('123abc'));\nconsole.log(solve('abc123'));\nconsole.log(solve('abcABC123'));\n\
    console.log(solve('abcABC'));\nconsole.log(solve('ABCabc'));\nconsole.log(solve('ABCabc123'));\n\
    console.log(solve('ABCabc'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz'));\n\
    console.log(solve('123AbCdEfGhIjKlMnOpQrStUvWxYz'));\nconsole.log(solve('AbCdEfGh\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpauqrg2xw.ts(44,28): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpauqrg2xw.ts(45,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpauqrg2xw.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1659978148
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+ABC'));\nconsole.log(solve('aBc123!@#$%^&*()_+ABCabc'));\n\
    console.log(solve('aBc123!@#$%^&*()_+ABCabc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+ABCabc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+ABCabc123!@#$%^&*()_+ABC'));\nconsole.log(solve('aBc123!@#$%^&*()_+ABCabc123!@#$%^&*()_+ABCabc'));\n\
    console.log(solve('aBc123!@#$%^&*()_+ABCabc123!@#$%^&*()_+ABCabc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+ABCabc123!@#$%^&*()_+ABCabc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+ABCabc123!@#$\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfhxacgii.ts(35,51): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpfhxacgii.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpfhxacgii.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978148
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc!@#'));\n\
    console.log(solve('123ABCabc!@#ABC'));\nconsole.log(solve('123ABCabc!@#ABCabc'));\n\
    console.log(solve('123ABCabc!@#ABCabcABC'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABC'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuqvmxrav.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpuqvmxrav.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978148
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('abcABC123'));\n\
    console.log(solve('abcABC123!@\u20AC'));\nconsole.log(solve('AAaa'));\nconsole.log(solve('!'));\n\
    console.log(solve('!@\u20AC'));\nconsole.log(solve('123'));\nconsole.log(solve('ABC'));\n\
    console.log(solve('ABC123'));\nconsole.log(solve('ABC123!@\u20AC'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('0123456789'));\n\
    console.log(solve('!@#$%^&*()_-+='));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_-+='));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmppszu3ll8.js:42:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppszu3ll8.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: "ABC\nABCabc\nABCabc123\nABCabc123!@\u20AC\naaAA\n!\n!@\u20AC\n123\nabc\n\
    abc123\nabc123!@\u20AC\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nabcdefghijklmnopqrstuvwxyz\n\
    0123456789\n!@#$%^&*()_-+=\nabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_-+=\n"
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('hello'));\nconsole.log(solve('HELLO'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpf_ydxqw6.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpf_ydxqw6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'HELLO

    hello

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBC'));\nconsole.log(solve('AbC'));\n\
    console.log(solve('aBc123'));\nconsole.log(solve('AbC123'));\nconsole.log(solve('123aBc'));\n\
    console.log(solve('123AbC'));\nconsole.log(solve('!@#$%^&*()_+'));\nconsole.log(solve('!@#$%^&*()_+ABC'));\n\
    console.log(solve('!@#$%^&*()_+abc'));\nconsole.log(solve('!@#$%^&*()_+ABCabc'));\n\
    console.log(solve('!@#$%^&*()_+ABCabc123'));\nconsole.log(solve('!@#$%^&*()_+ABCabc123!@#$%^&*()_+'));\n\
    console.log(solve('!@#$%^&*()_+ABCabc123!@#$%^&*()_+ABCabc'));\nconsole.log(solve('!@#$%^&*()_+ABCabc123!@#$%^&*()_+ABCabc123'));\n\
    console.log(solve('!@#$%^&*()_+ABCabc123!@#$%^&*()_+ABCabc123!@#$%^&*()_+'));\n\
    console.log(solve('!@#$%^\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphd_91j7w.ts(40,26): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmphd_91j7w.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmphd_91j7w.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1A2B3C4D5E6F'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I10J11K12L13M14N15O16P17Q18R19S20T21U22V23W24X25Y26Z'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i10j11k12l13m14n15o16p17q18r19s20t21u22v23w24x25y26z'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I10J11K12L13M14N15O16P17Q18R19S20T21U22V23W24X25Y26Z1a2b3c4d5e6f7g8h9i10j11k12l13m14n15o16p17q18r19s20t21u22v23w24x25y26z'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I10J11K12L13M14N15O16P17Q18R19S20T21U22V23W24X25Y26Z1a2b3c4d5e6f7g8h\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptqj2cxeo.ts(29,105): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmptqj2cxeo.ts(30,1): error TS1005: '','' expected.

    ../../../../../tmp/tmptqj2cxeo.ts(30,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('HELLO'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpq7jwq_0x.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpq7jwq_0x.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    hello

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('a1b2c3d4e5f6g7h8i9j0'));\n\
    console.log(solve('a1b2c3d4e5f6g7h8i9j0A'));\nconsole.log(solve('a1b2c3d4e5f6g7h8i9j0A1'));\n\
    console.log(solve('a1b2c3d4e5f6g7h8i9j0A1b'));\nconsole.log(solve('a1b2c3d4e5f6g7h8i9j0A1b2'));\n\
    console.log(solve('a1b2c3d4e5f6g7h8i9j0A1b2c'));\nconsole.log(solve('a1b2c3d4e5f6g7h8i9j0A1b2c3'));\n\
    console.log(solve('a1b2c3d4e5f6g7h8i9j0A1b2c3d'));\nconsole.log(solve('a1b2c3d4e5f6g7h8i9j0A1b2c3d4'));\n\
    console.log(solve('a1b2c3d4e5f6g\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpn61qcqg4.ts(35,33): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpn61qcqg4.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpn61qcqg4.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('hello world'));\nconsole.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('String.prototype.split'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp1wxnhfnj.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1wxnhfnj.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    HELLO WORLD

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cOdEwArs'));\nconsole.log(solve('abracadabra'));\n\
    console.log(solve('ABRACADABRA'));\nconsole.log(solve('52a3'));\nconsole.log(solve('12345'));\n\
    console.log(solve('#codewars'));\nconsole.log(solve('#Codewars'));\nconsole.log(solve('#CODEWARS'));\n\
    console.log(solve('#coDEwArs'));\nconsole.log(solve('#cOdEwArs'));\nconsole.log(solve('#abracadabra'));\n\
    console.log(solve('#ABRACADABRA'));\nconsole.log(solve('#52a3'));\nconsole.log(solve('#12345'));\n\
    console.log(solve('#'));\nconsole.log(solve('#1'));\nconsole.log(solve('#a'));\n\
    console.log(solve('#A'));\nconsole.log(solve('#@'));\nconsole.log(solve('#@1'));\n\
    console.log(solve('#@a'));\nconsole.log(solve('#@A'));\nconsole.log(solve('#@$'));\n\
    console.log(solve('#@$1'));\nconsole.log(solve('#@$a'));\nconsole.log(solve('#@$A'));\n\
    console.log(solve('#@$%'));\nconsole.log\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpk83bivzg.js:55:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk83bivzg.js:63:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    CoDeWaRS

    ABRACADABRA

    abracadabra

    52A3

    12345

    #CODEWARS

    #cODEWARS

    #codewars

    #COdeWaRS

    #CoDeWaRS

    #ABRACADABRA

    #abracadabra

    #52A3

    #12345

    #

    #1

    #A

    #a

    #@

    #@1

    #@A

    #@a

    #@$

    #@$1

    #@$A

    #@$a

    #@$%

    '
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\n\
    console.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D'));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n\
    \  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp91007brz.js:49:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp91007brz.js:57:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABCD

    abcd

    1234

    1A2B3C4D

    1a2b3c4d

    1a2B3C4d

    1A2b3C4d

    1A2B3C4D

    1a2b3c4d

    1a2B3C4d

    1A2b3C4d

    1A2B3C4D

    1a2b3c4d

    1a2B3C4d

    1A2b3C4d

    1A2B3C4D

    1a2b3c4d

    1a2B3C4d

    1A2b3C4d

    1A2B3C4D

    1a2b3c4d

    1a2B3C4d

    1A2b3C4d

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('hello world'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.charCodeAt()'));\n\
    console.log(solve('String.prototype.charAt()'));\nconsole.log(solve('String.prototype.replace()'));\n\
    console.log(solve('String.prototype.indexOf()'));\nconsole.log(solve('String.prototype.substr()'));\n\
    console.log(solve('String.prototype.slice()'));\nconsole.log(solve('String.prototype.split()'));\n\
    console.log(solve('String.prototype.toLowerCase()'));\nconsole.log(solve('String.prototype.toUpperCase()'));\n\
    console.log(solve('String.prototype.concat()'));\nconsole.log(solve('String.prototype.trim()'));\n\
    console.log(solve('String.prototype.length'));\nconsole.log(solve('String.fromCharCode()'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('The quick brown fox jumps over the lazy dog.'));\nconsole.log(solve('THE\
    \ QUICK BROWN FOX JUMPS OVER THE LAZY DOG.'));\nconsole.log(solve('Pack my box\
    \ with five dozen liquor jugs.'));\nconsole.log(s\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8jb78x7p.ts(44,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp8jb78x7p.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('co\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpon46fve6.ts(47,22): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpon46fve6.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpon46fve6.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(s\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc_gh30fj.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpc_gh30fj.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('I loVe JS'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('String.prototype.split'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpykxk45z3.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpykxk45z3.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    i LOvE js

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ const letters: string[] = s.split('');\n    const reversed: string[] = [];\n\
    \n    letters.forEach((letter: string) => {\n        if (letter === letter.toUpperCase())\
    \ {\n            reversed.push(letter.toLowerCase());\n        } else if (letter\
    \ === letter.toLowerCase()) {\n            reversed.push(letter.toUpperCase());\n\
    \        } else {\n            reversed.push(letter);\n        }\n    });\n\n\
    \    return reversed.join('');\n}\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\n\
    console.log(solve('1234'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpd92ccztf.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpd92ccztf.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    Codewars

    1234

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0x4g15ud.ts(47,20): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp0x4g15ud.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0x4g15ud.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('abc123'));\nconsole.log(solve('ABC123'));\nconsole.log(solve('AbCdEf'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF123'));\nconsole.log(solve('123aBcDeF'));\n\
    console.log(solve('123'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('The quick\
    \ brown fox jumps over the lazy dog.'));\nconsole.log(solve('THE QUICK BROWN FOX\
    \ JUMPS OVER THE LAZY DOG.'));\nconsole.log(solve('The_quick_brown_fox_jumps_over_the_lazy_dog.'));\n\
    console.log(solve('the quick brown fox jumps over the lazy dog.'));\nconsole.log(solve('the_quick_brown_fox_jumps_over_the_lazy_dog.'));\n\
    console.log(solve('the-quick-brown-fox-jumps-over-the-lazy-dog.'));\nconsole.log(solve('the_quick_brown_fox_jumps_over_the_lazy_dog.'));\n\
    console.log(solve('the-quick-brown-fox-jumps-over-the-lazy-dog.'));\nconsole.log(solve('\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0mp1wcut.ts(41,20): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp0mp1wcut.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0mp1wcut.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('123456789'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz1234567890'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('ABCDEFGHIJKLMNOP\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0eo20fbl.ts(34,36): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp0eo20fbl.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0eo20fbl.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abCdEf'));\nconsole.log(solve('abCdEf123'));\nconsole.log(solve('123'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('The Quick\
    \ Brown Fox'));\nconsole.log(solve('THE QUICK BROWN FOX'));\nconsole.log(solve('the\
    \ quick brown fox'));\nconsole.log(solve('THE QUICK BROWN FOX JUMPS OVER THE LAZY\
    \ DOG'));\nconsole.log(solve('the quick brown fox jumps over the lazy dog'));\n\
    console.log(solve('The Quick Brown Fox Jumps Over The Lazy Dog'));\nconsole.log(solve('The\
    \ quick brown fox jumps over the lazy dog'));\nconsole.log(solve('THE QUICK BROWN\
    \ FOX JUMPS OVER THE LAZY DOG.'));\nconsole.log(solve('the quick brown fox jumps\
    \ over the lazy dog.'));\nconsole.log(solve('The Quick Brown Fox Jumps Over The\
    \ Lazy Dog.'));\nconsole.log(solve('The quick brown fox jumps over the lazy dog.'));\n\
    console.log(solve('THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG!'));\nconsole.log(solve('the\
    \ quick brown fox jumps over the lazy dog!'));\nconsole.log(solve('The Quick Brown\
    \ Fox Jumps Over The Lazy Dog!'));\nconsole.log(s\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp039ow27j.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp039ow27j.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('codewars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(solve('cw'));\n\
    console.log(solve('cw'));\nconsole.log(solve('cw'));\nconsole.log(\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n\
    \  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6d243d80.ts(54,9): error TS1005: '','' expected.

    '
  timestamp: 1659978150
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('!@#$%^&*()_+'));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7bwps6ai.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7bwps6ai.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    AbC

    AbC123

    AbC123!@#$%^&*()_+

    !@#$%^&*()_+

    '
  timestamp: 1659978151
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('123456789'));\nconsole.log(solve('123456789'));\nconsole.log\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6g5j1oon.js:55:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6g5j1oon.js:63:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    123456789

    '
  timestamp: 1659978151
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('12345'));\nconsole.log(solve('abcdef'));\n\
    console.log(solve('ABCDEF'));\nconsole.log(solve('abcdefABCDEF'));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n\
    \  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpzyfwm4gi.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzyfwm4gi.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'A1B2C3

    12345

    ABCDEF

    abcdef

    ABCDEFabcdef

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('12345'));\nconsole.log(solve('abcdef'));\n\
    console.log(solve('ABCDEF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('1a2b3c4d5e6f'));\n\
    console.log(solve('1A2B3C4D5E6F'));\nconsole.log(solve('1a2B3c4D5e6F'));\nconsole.log(solve('1A2b3C4d5E6f'));\n\
    console.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\nconsole.log(solve('1a2B3c4D5e6F'));\n\
    console.log(solve('1A2b3C4d5E6f'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\n\
    console.log(solve('1a2B3c4D5e6F'));\nconsole.log(solve('1A2b3C4d5E6f'));\nconsole.log(solve('1a2b3c4d5e6f'));\n\
    console.log(solve('1A2B3C4D5E6F'));\nconsole.log(solve('1a2B3c4D5e6\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n\
    \  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzw8axc70.ts(40,31): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpzw8axc70.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzw8axc70.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('hello world'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmplfug5pbg.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplfug5pbg.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    HELLO WORLD

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abCdEfGhIjKlMnOpQrStUvWxYz'));\nconsole.log(solve('abCdEfGhIjKlMnOpQrStUvWxYz1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('1234567890abcdefghijklmnopqrstuvwxyz'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyz1234567890'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnr_4_j_p.ts(33,59): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpnr_4_j_p.ts(34,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpnr_4_j_p.ts(34,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('abcABC123'));\nconsole.log(solve('abcABC123!@\u20AC'));\nconsole.log(solve('AAaa'));\n\
    console.log(solve('!'));\nconsole.log(solve('!@\u20AC'));\nconsole.log(solve('!@\u20AC\
    a'));\nconsole.log(solve('!@\u20ACaA'));\nconsole.log(solve('!@\u20ACaA1'));\n\
    console.log(solve('!@\u20ACaA1#'));\nconsole.log(solve('!@\u20ACaA1#AA'));\nconsole.log(solve('!@\u20AC\
    aA1#AAbb'));\nconsole.log(solve('!@\u20ACaA1#AAbbcc'));\nconsole.log(solve('!@\u20AC\
    aA1#AAbbccDD'));\nconsole.log(solve('!@\u20ACaA1#AAbbccDDee'));\nconsole.log(solve('!@\u20AC\
    aA1#AAbbccDDeeff'));\nconsole.log(solve('!@\u20ACaA1#AAbbccDDeeffGG'));\nconsole.log(solve('!@\u20AC\
    aA1#AAbbccDDeeffGGhh'));\nconsole.log(solve('!@\u20ACaA1#AAbbccDDeeffGGhhii'));\n\
    console.log(solve('!@\u20ACaA1#AAbbccDDeeffGGhhiiJJ'));\nconsole.log(solve('!@\u20AC\
    aA1#AAbbccDDeeff\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp13sgsyjf.ts(42,39): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp13sgsyjf.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp13sgsyjf.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = \"\";\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars1'));\nconsole.log(solve('CodeWars1!'));\n\
    console.log(solve('CodeWars1!@#$%^&*()_+'));\nconsole.log(solve('CodeWars1!@#$%^&*()_+-='));\n\
    console.log(solve('CodeWars1!@#$%^&*()_+-=[]{}|;:<>,.?/'));\nconsole.log(solve('CodeWars1!@#$%^&*()_+-=[]{}|;:<>,.?/~`'));\n\
    console.log(solve('CodeWars1!@#$%^&*()_+-=[]{}|;:<>,.?/~`1234567890'));\nconsole.log(solve('CodeWars1!@#$%^&*()_+-=[]{}|;:<>,.?/~`1234567890qwertyuiopasdfghjklzxcvbnm'));\n\
    console.log(solve('CodeWars1!@#$%^&*()_+-=[]{}|;:<>,.?/~`1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'));\n\
    console.log(solve('CodeWars1!@#$%^&*()_+-=[]{}\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplj9wi6nw.ts(34,47): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmplj9wi6nw.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmplj9wi6nw.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello')); // hELLO\nconsole.log(solve('heLLo')); // HEllO\n\
    console.log(solve('12345')); // 12345\nconsole.log(solve('1a2b3c4d5e')); // 1A2B3C4D5E\n\
    console.log(solve('String.prototype.charCodeAt()')); // sTRING.PROTOTYPE.CHARCODEAT()\n\
    console.log(solve('String.prototype.charAt()')); // sTRING.PROTOTYPE.CHARAT()\n\
    console.log(solve('String.prototype.codePointAt()')); // sTRING.PROTOTYPE.CODEPOINTAT()\n\
    console.log(solve('String.prototype.concat()')); // sTRING.PROTOTYPE.CONCAT()\n\
    console.log(solve('String.prototype.endsWith()')); // sTRING.PROTOTYPE.ENDSWITH()\n\
    console.log(solve('String.prototype.includes()')); // sTRING.PROTOTYPE.INCLUDES()\n\
    console.log(solve('String.prototype.indexOf()')); // sTRING.PROTOTYPE.INDEXOF()\n\
    console.log(solve('String.prototype.lastIndexOf()')); // sTRING.PROTOTYPE.LASTINDEXOF()\n\
    console.log(solve('String.prototype.localeCompare()')); // sTRING.PROTOTYPE.LOCALECOMPARE()\n\
    console.log(solve('String.prototype.match()')); // s\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpk7n0vdvz.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk7n0vdvz.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HEllO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.CHARcODEaT()

    sTRING.PROTOTYPE.CHARaT()

    sTRING.PROTOTYPE.CODEpOINTaT()

    sTRING.PROTOTYPE.CONCAT()

    sTRING.PROTOTYPE.ENDSwITH()

    sTRING.PROTOTYPE.INCLUDES()

    sTRING.PROTOTYPE.INDEXoF()

    sTRING.PROTOTYPE.LASTiNDEXoF()

    sTRING.PROTOTYPE.LOCALEcOMPARE()

    sTRING.PROTOTYPE.MATCH()

    '
  timestamp: 1659978152
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('12345678910'));\nconsole.log(solve('1234567891011'));\nconsole.log(solve('123456789101112'));\n\
    console.log(solve('12345678910111213'));\nconsole.log(solve('1234567891011121314'));\n\
    console.log(solve('123456789101112131415'));\nconsole.log(solve('12345678910111213141516'));\n\
    console.log(solve('1234567891011121314151617'));\nconsole.log(solve('123456789101112131415161718'));\n\
    console.log(solve('12345678910111213141516171819'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('123456789101112131415161718192021'));\nconsole.log(solve('12345678910111213141516171819202122'));\n\
    console.log(solve('1234567891011121314151617181920212223'));\nconsole.log(solve('123456789101112131415161718192021222324'));\n\
    console.log(solve('123456789101112131415\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl1be7dm3.ts(41,41): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpl1be7dm3.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpl1be7dm3.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()_+'));\nconsole.log(solve('abcABC123'));\n\
    console.log(solve('abcABC123!@#$%^&*()_+'));\nconsole.log(solve('abcABC123!@#$%^&*()_+ABCabc'));\n\
    console.log(solve('!@#$%^&*()_+'));\nconsole.log(solve('!@#$%^&*()_+ABCabc'));\n\
    console.log(solve('!@#$%^&*()_+ABCabc123'));\nconsole.log(solve('!@#$%^&*()_+ABCabc123abcABC'));\n\
    console.log(solve('!@#$%^&*()_+ABCabc123abcABC123'));\nconsole.log(solve('!@#$%^&*()_+ABCabc123abcABC123!@#$%^&*()_+'));\n\
    console.log(solve('!@#$%^&*()_+ABCabc123abcABC123!@#$%^&*()_+ABCabc'));\nconsole.log(solve('!@#$%^&*()_+ABCabc123abcABC123!@#$%^&*()_+ABCabc123'));\n\
    console.log(solve('!@#$%\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppd29t1ta.ts(39,25): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmppd29t1ta.ts(40,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppd29t1ta.ts(40,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('abc123'));\n\
    console.log(solve('abcABC123'));\nconsole.log(solve('123'));\nconsole.log(solve('123abc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr8m4g0g0.ts(51,29): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpr8m4g0g0.ts(52,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpr8m4g0g0.ts(52,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\n\
    console.log(solve('1a2b3c4d5e6f7g'));\nconsole.log(solve('1A2B3C4D5E6F7G'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h'));\nconsole.log(solve('1A2B3C4D5E6F7G8H'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i0j'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbybleqac.ts(38,36): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpbybleqac.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbybleqac.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\n\
    console.log(solve('1a2b3c4d5e6f7g'));\nconsole.log(solve('1A2B3C4D5E6F7G'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h'));\nconsole.log(solve('1A2B3C4D5E6F7G8H'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i0j'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1a2b3c4d5e6f7g\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1djvazc4.ts(38,34): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp1djvazc4.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp1djvazc4.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp9zhzpjkp.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9zhzpjkp.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpew_uhhg8.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpew_uhhg8.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978152
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s[i];\n        if (char.match(/[a-z]/i)) {\n            result += char.toUpperCase()\
    \ === char ? char.toLowerCase() : char.toUpperCase();\n        } else {\n    \
    \        result += char;\n        }\n    }\n    return result;\n}\n\nconsole.log(solve('abc'));\n\
    console.log(solve('abcABC'));\nconsole.log(solve('abcABC123'));\nconsole.log(solve('123'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1A2B3C4D5E\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpll3o8cpv.ts(36,30): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpll3o8cpv.ts(37,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpll3o8cpv.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1659978152
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let reversed = '';\n    for (let i = 0; i < s.length; i++) {\n        const\
    \ char = s[i];\n        if (char.match(/[a-z]/i)) {\n            reversed += char\
    \ === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n        }\
    \ else {\n            reversed += char;\n        }\n    }\n    return reversed;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('abc123'));\nconsole.log(solve('ABC123'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('abcABC123'));\nconsole.log(solve('abcABC123!@\u20AC'));\nconsole.log(solve('ABCabc'));\n\
    console.log(solve('ABCabc123'));\nconsole.log(solve('ABCabc123!@\u20AC'));\nconsole.log(solve('ABC123abc'));\n\
    console.log(solve('ABC123abc!@\u20AC'));\nconsole.log(solve('ABC123!@\u20ACabc'));\n\
    console.log(solve('!@\u20AC'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpgw1rrx_i.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgw1rrx_i.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: "ABC\nabc\n123\nABC123\nabc123\nABCabc\nABCabc123\nABCabc123!@\u20AC\nabcABC\n\
    abcABC123\nabcABC123!@\u20AC\nabc123ABC\nabc123ABC!@\u20AC\nabc123!@\u20ACABC\n\
    !@\u20AC\n"
  timestamp: 1659978152
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abc123'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('123'));\nconsole.log(solve('123ABC'));\nconsole.log(solve('ABC123'));\n\
    console.log(solve('ABC'));\nconsole.log(solve('AbC'));\nconsole.log(solve('aBc'));\n\
    console.log(solve('ABc'));\nconsole.log(solve('aBC'));\nconsole.log(solve('ABc'));\n\
    console.log(solve('aBC'));\nconsole.log(solve('abc'));\nconsole.log(solve('abc123'));\n\
    console.log(solve('abcABC'));\nconsole.log(solve('123'));\nconsole.log(solve('123ABC'));\n\
    console.log(solve('ABC123'));\nconsole.log(solve('ABC'));\nconsole.log(solve('AbC'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('ABc'));\nconsole.log(solve('aBC'));\n\
    console.log(solve('ABc'));\nconsole.log(solve('aBC'));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpglkhz0jw.js:52:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpglkhz0jw.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    ABC123

    ABCabc

    123

    123abc

    abc123

    abc

    aBc

    AbC

    abC

    Abc

    abC

    Abc

    ABC

    ABC123

    ABCabc

    123

    123abc

    abc123

    abc

    aBc

    AbC

    abC

    Abc

    abC

    Abc

    '
  timestamp: 1659978152
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('hello world'));\n\
    console.log(solve('HELLO WORLD'));\nconsole.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('String.prototype.split'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpw7gn03g9.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpw7gn03g9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    HELLO WORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978152
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('String.prototype.toUpperCase()'));\nconsole.log(solve('String.prototype.toLowerCase()'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpd_ho4mnr.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpd_ho4mnr.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.TOuPPERcASE()

    sTRING.PROTOTYPE.TOlOWERcASE()

    '
  timestamp: 1659978152
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cOdEwArs'));\nconsole.log(solve('codeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-='));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-=_+'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-=_+qwertyuiop[]{}|asdfghjkl;:zxcvbnm,./<>?`~'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps30pnzwz.ts(34,57): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmps30pnzwz.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmps30pnzwz.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659978152
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('ABC123'));\n\
    console.log(solve('ABCabc'));\nconsole.log(solve('abcABC123'));\nconsole.log(solve('abcABC123ABC'));\n\
    console.log(solve('abcABC123ABCabc'));\nconsole.log(solve('abcABC123ABCabcABC'));\n\
    console.log(solve('abcABC123ABCabcABC123'));\nconsole.log(solve('abcABC123ABCabcABC123ABC'));\n\
    console.log(solve('abcABC123ABCabcABC123ABCabc'));\nconsole.log(solve('abcABC123ABCabcABC123ABCabcABC'));\n\
    console.log(solve('abcABC123ABCabcABC123ABCabcABC123'));\nconsole.log(solve('abcABC123ABCabcABC123ABCabcABC123ABC'));\n\
    console.log(solve('abcABC123ABCabcABC123ABCabcABC123ABCabc'));\nconsole.log(solve('abcABC123ABCabcABC123ABCabcABC123ABCabcABC'));\n\
    console.log(solve('abcABC123ABCabcABC123ABCabcABC123ABCabcABC123'));\nconsole.log(solve('abcABC123ABCabcABC123ABCabcABC123ABCabcABC123ABC'));\n\
    console.log(solve('abcABC123ABCabcABC123ABCabcABC123ABCabcABC123ABCabc'));\nconsole.log(solve('abcABC123ABCabcABC\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplnwe92m2.ts(43,38): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmplnwe92m2.ts(44,1): error TS1005: '','' expected.

    ../../../../../tmp/tmplnwe92m2.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1659978152
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#'));\n\
    console.log(solve('aBc123!@#ABC'));\nconsole.log(solve('aBc123!@#ABCD'));\nconsole.log(solve('aBc123!@#ABCDE'));\n\
    console.log(solve('aBc123!@#ABCDEF'));\nconsole.log(solve('aBc123!@#ABCDEFG'));\n\
    console.log(solve('aBc123!@#ABCDEFGH'));\nconsole.log(solve('aBc123!@#ABCDEFGHI'));\n\
    console.log(solve('aBc123!@#ABCDEFGHIJ'));\nconsole.log(solve('aBc123!@#ABCDEFGHIJK'));\n\
    console.log(solve('aBc123!@#ABCDEFGHIJKL'));\nconsole.log(solve('aBc123!@#ABCDEFGHIJKLM'));\n\
    console.log(solve('aBc123!@#ABCDEFGHIJKLMN'));\nconsole.log(solve('aBc123!@#ABCDEFGHIJKLMNO'));\n\
    console.log(solve('aBc123!@#ABCDEFGHIJKLMNOP'));\nconsole.log(solve('aBc123!@#ABCDEFGHIJKLMNOPQ'));\n\
    console.log(solve('a\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxegv73mb.ts(42,21): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpxegv73mb.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpxegv73mb.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659978153
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('hello'));\nconsole.log(solve('HELLO'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpg72cbf78.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpg72cbf78.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'HELLO

    hello

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cOdEwArs'));\nconsole.log(solve('abracadabra'));\n\
    console.log(solve('52a3A'));\nconsole.log(solve('12345'));\nconsole.log(solve('QWERTYqwerty'));\n\
    console.log(solve('QwErTy911poqqqq'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpumar9a0p.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpumar9a0p.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    CoDeWaRS

    ABRACADABRA

    52A3a

    12345

    qwertyQWERTY

    qWeRtY911POQQQQ

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp2ks3v7gv.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2ks3v7gv.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    let isLetter: boolean = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n           \
    \ isLetter = true;\n            if (s[i] === s[i].toUpperCase()) {\n         \
    \       result += s[i].toLowerCase();\n            } else {\n                result\
    \ += s[i].toUpperCase();\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (!isLetter) {\n        return s.split('').reverse().join('');\n\
    \    }\n    return result;\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('123'));\nconsole.log(solve('123ABC'));\nconsole.log(solve('123abc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabcABC'));\nconsole.log(solve('123ABCabcABCabc'));\n\
    console.log(solve('123ABCabcABCabcABC'));\nconsole.log(solve('123ABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabcABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabcABCabcABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabcABCabcABCabcABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabcABCabcABCabcABCabcABCabcABCabcABCabc'));\n\
    console.log(solve('123ABCabcABCabcABCabcABCabcABCabcABCabcABCabcABC'));\nconsole.log(solve('123ABCabcABC\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxmfu910_.ts(47,32): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpxmfu910_.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpxmfu910_.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659978153
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpew_uhhg8.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpew_uhhg8.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978152
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1A2b3c4D5e6f7g8h9i10j11k12l13m14n15o16p17q18r19s20t21u22v23w24x25y26z27'));\n\
    console.log(solve('1A2b3c4D5e6f7g8h9i10j11k12l13m14n15o16p17q18r19s20t21u22v23w24x25y26z27A'));\n\
    console.log(solve('1A2b3c4D5e6f7g8h9i10j11k12l13m14n15o16p17q18r19s20t21u22v23w24x25y26z27A28B29C30D31E32F33G34H35I36J37K38L39M40N41O42P43Q44R45S46T47U48V49W50X51Y52Z53'));\n\
    console.log(solve('1A2b3c4D5e6f7g8h9i10j11k12l13m14n15o16p17q18r19s20t21u22v23w24x25y\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppthk4twz.ts(30,86): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmppthk4twz.ts(31,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppthk4twz.ts(31,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!'));\n\
    console.log(solve('aBc123!@'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+-='));\n\
    console.log(solve('aBc123!@#$%^&*()_+-=[]{}|;:<>?/.,'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|;:<>?/.,~`'));\n\
    console.log(solve('aBc123!@#$%^&*()_+-=[]{}|;:<>?/.,~`123'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|;:<>?/.,~`123ABC'));\n\
    console.log(solve('aBc123!@#$%^&*()_+-=[]{}|;:<>?/.,~`123ABC!@#$%^&*()_+-=[]{}|;:<>?/.,~`'));\n\
    console.log(solve('aBc123!@#$%^&*()_+-=[]{}|;:<>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu79j0h0n.ts(35,49): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpu79j0h0n.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpu79j0h0n.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('HELLO\
    \ WORLD'));\nconsole.log(solve('hello world'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.toAlternatingCase'));\n\
    console.log(solve('Hello World'));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3u8dz7pp.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3u8dz7pp.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    Codewars

    hello world

    HELLO WORLD

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.TOaLTERNATINGcASE

    hELLO wORLD

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('123'));\nconsole.log(solve('123ABC'));\nconsole.log(solve('123abc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc'));\nconsole.log(solve('123ABCabc'));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n\
    \  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpciok3pb_.js:57:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpciok3pb_.js:65:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    ABCabc

    123

    123abc

    123ABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    123abcABC

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvc7q5pbb.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvc7q5pbb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('1,3,7,11,13,17,19'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('JavaScript'));\nconsole.log(solve('A1b2C3'));\nconsole.log(solve('Z'));\n\
    console.log(solve('z'));\nconsole.log(solve('12345'));\nconsole.log(solve('0'));\n\
    console.log(solve('abcde'));\nconsole.log(solve('ABCDE'));\nconsole.log(solve('ABCDEabcde'));\n\
    console.log(solve('abcdeABCDE'));\nconsole.log(solve('abcdeABCDEabcde'));\nconsole.log(solve('abcdeABCDEabcdeABCDE'));\n\
    console.log(solve('abcdeABCDEabcdeABCDEabcde'));\nconsole.log(solve('abcdeABCDEabcdeABCDEabcdeABCDE'));\n\
    console.log(solve('abcdeABCDEabcdeABCDEabcdeABCDEabcde'));\nconsole.log(solve('abcdeABCDEabcdeABCDEabcdeABCDEabcdeABCDE'));\n\
    console.log(solve('abcdeABCDEabcdeABCDEabcdeABCDEabcdeABCDEabcde'));\nconsole.log(solve('abcdeABCDEabcdeABCDEabcdeABCDEabcdeABCDEabcdeABCDE'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpc97ymakk.js:50:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc97ymakk.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUPRALAPSARIAN

    1337

    1,3,7,11,13,17,19

    cODEwARS

    jAVAsCRIPT

    a1B2c3

    z

    Z

    12345

    0

    ABCDE

    abcde

    abcdeABCDE

    ABCDEabcde

    ABCDEabcdeABCDE

    ABCDEabcdeABCDEabcde

    ABCDEabcdeABCDEabcdeABCDE

    ABCDEabcdeABCDEabcdeABCDEabcde

    ABCDEabcdeABCDEabcdeABCDEabcdeABCDE

    ABCDEabcdeABCDEabcdeABCDEabcdeABCDEabcde

    ABCDEabcdeABCDEabcdeABCDEabcdeABCDEabcdeABCDE

    ABCDEabcdeABCDEabcdeABCDEabcdeABCDEabcdeABCDEabcde

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let newStr = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            newStr += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            newStr += s[i].toUpperCase();\n\
    \        } else {\n            newStr += s[i];\n        }\n    }\n    return newStr;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpdw6c1lsa.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdw6c1lsa.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s[i];\n        if (isLetter(char)) {\n            result += char === char.toUpperCase()\
    \ ? char.toLowerCase() : char.toUpperCase();\n        } else {\n            result\
    \ += char;\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48yu_q53.ts(11,13): error TS2304: Cannot find name
    ''isLetter''.

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpa7gaoe3_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7gaoe3_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\n\
    console.log(solve('123'));\nconsole.log(solve('abc123'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('abcABC123'));\nconsole.log(solve('ABCabc'));\nconsole.log(solve('ABCabc123'));\n\
    console.log(solve('ABCabcABC'));\nconsole.log(solve('ABCabcABC123'));\nconsole.log(solve('abcABCabc'));\n\
    console.log(solve('abcABCabc123'));\nconsole.log(solve('abcABCabcABC'));\nconsole.log(solve('abcABCabcABC123'));\n\
    console.log(solve('abcABCabcABC123ABC'));\nconsole.log(solve('abcABCabcABC123ABCabc'));\n\
    console.log(solve('abcABCabcABC123ABCabcABC'));\nconsole.log(solve('abcABCabcABC123ABCabcABC123'));\n\
    console.log(solve('abcABCabcABC123ABCabcABC123ABC'));\nconsole.log(solve('abcABCabcABC123ABCabcABC123ABCabc'));\n\
    console.log(solve('abcABCabcABC123ABCabcABC123ABCabcABC'));\nconsole.log(solve('abcABCabcABC123ABCabcABC123ABCabcABC123'));\n\
    console.log(solve('abcABCabcABC123ABCabcABC123ABCabcABC123ABC'));\nconsole.log(solve('abcABCabcABC123ABCabcABC123ABCabcABC123ABCabc'));\n\
    console.log(solve('abcABCabcABC123\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzi6mqf32.ts(45,35): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpzi6mqf32.ts(46,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzi6mqf32.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#'));\n\
    console.log(solve('aBc123!@#ABC'));\nconsole.log(solve('aBc123!@#ABCabc'));\n\
    console.log(solve('aBc123!@#ABCabcABC'));\nconsole.log(solve('aBc123!@#ABCabcABC123'));\n\
    console.log(solve('aBc123!@#ABCabcABC123!@#'));\nconsole.log(solve('aBc123!@#ABCabcABC123!@#ABC'));\n\
    console.log(solve('aBc123!@#ABCabcABC123!@#ABCabc'));\nconsole.log(solve('aBc123!@#ABCabcABC123!@#ABCabcABC'));\n\
    console.log(solve('aBc123!@#ABCabcABC123!@#ABCabcABC123'));\nconsole.log(solve('aBc123!@#ABCabcABC123!@#ABCabcABC123!@#'));\n\
    console.log(solve('aBc123!@#ABCabcABC123!@#ABCabcABC123!@#ABC'));\nconsole.log(solve('aBc123!@#ABCabcABC123!@#ABCabcABC123!@#ABCabc'));\n\
    console.log(solve('aBc123!@#ABCabcABC123!@#ABCabcABC123!@#ABCabcABC'));\nconsole.log(solve('\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps_k_2hoc.ts(40,20): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmps_k_2hoc.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmps_k_2hoc.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s[i];\n        if (char.match(/[a-z]/i)) {\n            result += char ===\
    \ char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n        } else\
    \ {\n            result += char;\n        }\n    }\n    return result;\n}\n\n\
    console.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('a1B2c3'));\n\
    console.log(solve('a1b2C3'));\nconsole.log(solve('a1B2C3'));\nconsole.log(solve('a1b2C3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6'));\n\
    console.log(solve('a1b2C3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0Y1Z2'));\n\
    console.log(solve('a1b2C3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0Y1Z2a3b4c5d6e\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbmmhs5el.ts(30,133): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpbmmhs5el.ts(31,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpbmmhs5el.ts(31,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cOdEwArs'));\nconsole.log(solve('codeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWaRS'));\nconsole.log(solve('cOdEwArS'));\n\
    console.log(solve('CODEWARS'));\nconsole.log(solve('coDeWaRS'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1a2b3c4d5E'));\n\
    console.log(solve('1A2B3C4D5e'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\n\
    console.log(solve('1a2b3c4d5E6f'));\nconsole.log(solve('1A2B3C4D5e6F'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1a2b3c4d5E6f7g8h9i0j'));\n\
    console.log(solve('1A2B3C\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzzfawxim.ts(41,26): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpzzfawxim.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzzfawxim.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        let char\
    \ = s[i];\n        if (isNaN(Number(char))) {\n            if (char === char.toUpperCase())\
    \ {\n                result += char.toLowerCase();\n            } else {\n   \
    \             result += char.toUpperCase();\n            }\n        } else {\n\
    \            result += char;\n        }\n    }\n    return result;\n}\n\nconsole.log(solve('abc'));\n\
    console.log(solve('123'));\nconsole.log(solve('abc123'));\nconsole.log(solve('ABC123'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#%^&*()'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#%^&*()_+'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#%^&*()_+-='));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('AbCdEfGhIjKlM\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaqrnlmnw.ts(36,33): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpaqrnlmnw.ts(37,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpaqrnlmnw.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('1A2B3C4D5E6F'));\n\
    console.log(solve('1a2b3c4d5e6f7g'));\nconsole.log(solve('1A2B3C4D5E6F7G'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h'));\nconsole.log(solve('1A2B3C4D5E6F7G8H'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i0j'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1a2b3c4d5e6f7g\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1djvazc4.ts(38,34): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp1djvazc4.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp1djvazc4.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978151
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s[i];\n        if (char.match(/[a-z]/i)) {\n            result += char ===\
    \ char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n        } else\
    \ {\n            result += char;\n        }\n    }\n    return result;\n}\n\n\
    console.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('0123456789'));\nconsole.log(solve('!@#$%^&*()_+'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp0xapw93e.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0xapw93e.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    AbC

    AbC123

    AbC123!@#$%^&*()_+

    ABCDEFGHIJKLMNOPQRSTUVWXYZ

    abcdefghijklmnopqrstuvwxyz

    0123456789

    !@#$%^&*()_+

    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abCdEfGhIjK'));\nconsole.log(solve('aBcDeFgHiJk'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\nconsole.log(solve('1234567890'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkkxxz0o.ts(48,20): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpxkkxxz0o.ts(49,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpxkkxxz0o.ts(49,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('a'));\nconsole.log(solve('A'));\n\
    console.log(solve('z'));\nconsole.log(solve('Z'));\nconsole.log(solve('1'));\n\
    console.log(solve(' '));\nconsole.log(solve('!'));\nconsole.log(solve('?'));\n\
    console.log(solve('.'));\nconsole.log(solve('-'));\nconsole.log(solve('_'));\n\
    console.log(solve('/'));\nconsole.log(solve('\\\\'));\nconsole.log(solve('@'));\n\
    console.log(solve('#'));\nconsole.log(solve('$'));\nconsole.log(solve('%'));\n\
    console.log(solve('^'));\nconsole.log(solve('&'));\nconsole.log(solve('*'));\n\
    console.log(solve('('));\nconsole.log(solve(')'));\nconsole.log(solve('-'));\n\
    console.log(solve('+'));\nconsole.log(solve('='));\nconsole.log(solve('{'));\n\
    console.log(solve('}'));\nconsole.log(solve('['));\nconsole.log(solve(']'));\n\
    console.log(solve('|'));\nconsole.log(solve(';'));\nconsole.log(solve\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm_og5uc_.ts(57,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpm_og5uc_.ts(57,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('Ss'));\n\
    console.log(solve('a'));\nconsole.log(solve('aB'));\nconsole.log(solve('aBc'));\n\
    console.log(solve('aBcDe'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeFg'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgHi'));\nconsole.log(solve('aBcDeFgHiJ'));\n\
    console.log(solve('aBcDeFgHiJk'));\nconsole.log(solve('aBcDeFgHiJkL'));\nconsole.log(solve('aBcDeFgHiJkLm'));\n\
    console.log(solve('aBcDeFgHiJkLmN'));\nconsole.log(solve('aBcDeFgHiJkLmNo'));\n\
    console.log(solve('aBcDeFgHiJkLmNoP'));\nconsole.log(solve('aBcDeFgHiJkLmNoPq'));\n\
    console.log(solve('aBcDeFgHiJkLmNoPqR'));\nconsole.log(s\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1socgd9e.ts(45,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp1socgd9e.ts(45,9): error TS1005: '','' expected.

    '
  timestamp: 1659978155
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\n\
    console.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzdpj04rj.ts(43,28): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpzdpj04rj.ts(44,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzdpj04rj.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('abC'));\n\
    console.log(solve('123'));\nconsole.log(solve('1a2b3c'));\nconsole.log(solve('1A2B3C'));\n\
    console.log(solve('1a2B3c'));\nconsole.log(solve('1A2b3C'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2B3C4D5E6F7G8H9I0J'));\nconsole.log(solve('1a2B3c4D5e6F7g8H9i0J'));\n\
    console.log(solve('1A2b3C4d5E6f7G8h9I0j'));\nconsole.log(solve('1a2b3c4d5e6f7g8h9i0j1a2b3c4d5e6f7g8h9i0j1a2b3c4d5e6f7g8h9i0j1a2b3c4d5e6f7g8h9i0j1a2b3c4d5e6f7g8h9i0j1a2b3c4d5e6f7g8h9i0j1a2b3c4d5e6f7g8h9i0j1a2b3c4d5e6f7g8h9i0\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprkmo1hqq.ts(33,179): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmprkmo1hqq.ts(34,1): error TS1005: '','' expected.

    ../../../../../tmp/tmprkmo1hqq.ts(34,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpa7gaoe3_.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7gaoe3_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codewars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1A2B3C4D5E!'));\nconsole.log(solve('1A2B3C4D5E!@#$%^&*()_+'));\n\
    console.log(solve('1A2B3C4D5E!@#$%^&*()_+-='));\nconsole.log(solve('1A2B3C4D5E!@#$%^&*()_+-=[]{}|;:,.<>?'));\n\
    console.log(solve('1A2B3C4D5E!@#$%^&*()_+-=[]{}|;:,.<>?/'));\nconsole.log(solve('1A2B3C4D5E!@#$%^&*()_+-=[]{}|;:,.<>?/\\\
    ''));\nconsole.log(solve('1A2B3C4D5E!@#$%^&*()_+-=[]{}|;:,.<>?/\\'`~'));\nconsole.log(solve('1A2B3C4D5E!@#$%^&*()_+-=[]{}|;:,.<>?/\\\
    '`\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxwxzoyke.ts(35,60): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpxwxzoyke.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpxwxzoyke.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978155
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('AbC'));\nconsole.log(solve('aBc'));\nconsole.log(solve('aBc123'));\n\
    console.log(solve('aBc123!'));\nconsole.log(solve('aBc123!@#$%^&*()'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+-='));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}'));\n\
    console.log(solve('aBc123!@#$%^&*()_+-=[]{}|'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\
    \\'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\\/'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\
    \\/<>'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\\/<>?'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\
    \\/<>?~`'));\nconsole.log(solve('aB\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeqm0_7hm.ts(38,22): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpeqm0_7hm.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpeqm0_7hm.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978156
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello\
    \ World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\n\
    console.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello\
    \ World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\n\
    console.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello\
    \ World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\n\
    console.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello\
    \ World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\n\
    console.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello\
    \ World!'));\nconsole.log(solve('Hello World!'));\nconsole.log(solve('Hello World!'));\n\
    console.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpog6ya8r_.ts(51,9): error TS1003: Identifier expected.

    '
  timestamp: 1659978156
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ const letters = s.split('').filter(char => char.match(/[a-z]/i));\n    if (letters.length\
    \ === 0) {\n        return s.split('').reverse().join('');\n    }\n    return\
    \ s.split('').map(char => {\n        if (char.match(/[a-z]/i)) {\n           \
    \ return char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n\
    \        }\n        return char;\n    }).join('');\n}\n\nconsole.log(solve('abc'));\n\
    console.log(solve('abc123'));\nconsole.log(solve('123'));\nconsole.log(solve('123abc'));\n\
    console.log(solve('ABC'));\nconsole.log(solve('ABC123'));\nconsole.log(solve('123ABC'));\n\
    console.log(solve('ABC123abc'));\nconsole.log(solve('ABC123abcDEF'));\nconsole.log(solve('ABC123abcDEF456'));\n\
    console.log(solve('ABC123abcDEF456DEF'));\nconsole.log(solve('ABC123abcDEF456DEF789'));\n\
    console.log(solve('ABC123abcDEF456DEF789abc'));\nconsole.log(solve('ABC123abcDEF456DEF789abcABC'));\n\
    console.log(solve('ABC123abcDEF456DEF789abcABC123'));\nconsole.log(solve('ABC123abcDEF456DEF789abcABC123DEF'));\n\
    console.log(solve('ABC123abcDEF456DEF789abcABC123DEF456'));\nconsole.log(solve('ABC123abcDEF456DEF789abcABC123DEF456DEF'));\n\
    console.log(solve('ABC123abcDEF456DEF789abcABC123DEF456DEF789'));\nconsole.log(solve('ABC123abcDEF456DEF789abcABC123DEF456DEF789abc'));\n\
    console.log(solve('ABC123abcDEF456DEF789abcABC123DEF456DEF789abcABC'));\nconsole.log(solve('ABC123abcDEF456DEF789abcABC123DEF456DEF789abc\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg4vimocx.ts(41,65): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpg4vimocx.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpg4vimocx.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978156
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('AbCdE'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('a1b2c3'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpdcw77gqf.js:43:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdcw77gqf.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    aBcDe

    AbCdEf

    A1B2C3

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    A1b2C3d4E5f6G7h8I9j0K

    '
  timestamp: 1659978156
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('123'));\n\
    console.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz'));\n\
    console.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\n\
    console.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\n\
    console.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\n\
    console.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\n\
    console.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123'));\n\
    console.log(solve\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2rvl2ms9.ts(46,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp2rvl2ms9.ts(46,9): error TS1005: '','' expected.

    '
  timestamp: 1659978156
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('Hello\
    \ World'));\nconsole.log(solve('HELLO WORLD'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpo83y1csv.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpo83y1csv.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978156
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('1A2B3C'));\nconsole.log(solve('1a2b3c'));\nconsole.log(solve('abc123'));\n\
    console.log(solve('ABC123'));\nconsole.log(solve('AbC123'));\nconsole.log(solve('aBc123'));\n\
    console.log(solve('!@#$%^&*()_+'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz'));\n\
    console.log(solve('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+'));\n\
    console.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3j686ocq.js:44:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3j686ocq.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    1a2b3c

    1A2B3C

    ABC123

    abc123

    aBc123

    AbC123

    !@#$%^&*()_+

    ABCDEFGHIJKLMNOPQRSTUVWXYZ

    abcdefghijklmnopqrstuvwxyz

    aBcDeFgHiJkLmNoPqRsTuVwXyZ

    AbCdEfGhIjKlMnOpQrStUvWxYz

    ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz

    ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_+

    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+

    '
  timestamp: 1659978156
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codewars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-='));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:,.<>/?'));\n\
    console.log(solve('\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1j1fbt0y.ts(37,20): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp1j1fbt0y.ts(38,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp1j1fbt0y.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1659978157
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello\
    \ World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello\
    \ World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello\
    \ World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello\
    \ World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello\
    \ World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\n\
    console.log(solve('Hello World'));\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello\
    \ World'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe8dat57p.js:58:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe8dat57p.js:66:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    hELLO wORLD

    '
  timestamp: 1659978157
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-='));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-=_+!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-=_+!@#$%^&*()[]{}|;:\"\
    ,./<>?'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:\",./<>?`~123\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp505cx8pf.ts(34,64): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp505cx8pf.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp505cx8pf.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659978157
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('12345'));\nconsole.log(solve('123456789'));\nconsole.log(solve('!@#$%^&*()'));\n\
    console.log(solve('!@#$%^&*()_+'));\nconsole.log(solve('!@#$%^&*()_+1234567890-='));\n\
    console.log(solve('!@#$%^&*()_+1234567890-=qwertyuiop[]\\\\asdfghjkl;\\'zxcvbnm,./'));\n\
    console.log(solve('!@#$%^&*()_+1234567890-=QWERTYUIOP{}|ASDFGHJKL:\"ZXCVBNM<>?'));\n\
    console.log(solve('!@#$%^&*()_+1234567890-=QWERTYUIOP{}|ASDFGHJKL:\"ZXCVBNM<>?qwertyuiop[]\\\
    \\asdfghjkl;\\'zxcvbnm,./'));\nconsole.log(solve('!@#$%^&*()_+1234567890-=QWERTYUIOP{}|ASDFGHJKL:\"\
    ZXCVBNM<>?qwertyuiop[]\\\\asdfghjkl;\\'zxcvbnm,./QWERTYUIOP{}|ASDFGHJKL:\"ZXCVBNM<>?qwertyuiop[]\\\
    \\asdf\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"\
    ),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1tzhxpex.ts(32,166): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp1tzhxpex.ts(33,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp1tzhxpex.ts(33,9): error TS1005: '','' expected.

    '
  timestamp: 1659978156
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\n\
    console.log(solve('1234'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1a2b3c4d5e6f'));\n\
    console.log(solve('1A2B3C4D5E6F'));\nconsole.log(solve('1a2b3c4d5e6f7g'));\nconsole.log(solve('1A2B3C4D5E6F7G'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h'));\nconsole.log(solve('1A2B3C4D5E6F7G8H'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h9i0j'));\nconsole.log(solve('1A2B3C4D5E6F7G8H9I0J'));\n\
    console.log(solve('1a2b3c4d5e6f7g8h\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpehdt2u6r.ts(38,36): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpehdt2u6r.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpehdt2u6r.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978156
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    const char = s[i];\n\
    \    if (char.match(/[a-z]/i)) {\n      result += char === char.toUpperCase()\
    \ ? char.toLowerCase() : char.toUpperCase();\n    } else {\n      result += char;\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('abcABC123'));\nconsole.log(solve('abcABC123!@\u20AC'));\nconsole.log(solve('AAaa'));\n\
    console.log(solve('!'));\nconsole.log(solve('1'));\nconsole.log(solve('123'));\n\
    console.log(solve('123!'));\nconsole.log(solve('!123'));\nconsole.log(solve('!123!'));\n\
    console.log(solve('!123!abc!'));\nconsole.log(solve('!123!abc!ABC!'));\nconsole.log(solve('!123!abc!ABC!\u20AC\
    '));\nconsole.log(solve('!123!abc!ABC!\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\
    \u20AC\u20AC\u20AC\u20AC\u20AC\u20AC\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaghl_1a8.ts(34,241): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpaghl_1a8.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpaghl_1a8.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659978156
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('codewars'));\nconsole.log(solve('codeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\nconsole.log(solve('CodeWars123!@#'));\n\
    console.log(solve('CodeWars123!@#!'));\nconsole.log(solve('CodeWars123!@#!@'));\n\
    console.log(solve('CodeWars123!@#!@$'));\nconsole.log(solve('CodeWars123!@#!@$%'));\n\
    console.log(solve('CodeWars123!@#!@$%^'));\nconsole.log(solve('CodeWars123!@#!@$%^&'));\n\
    console.log(solve('CodeWars123!@#!@$%^&*'));\nconsole.log(solve('CodeWars123!@#!@$%^&*('));\n\
    console.log(solve('CodeWars123!@#!@$%^&*()'));\nconsole.log(solve('CodeWars123!@#!@$%^&*())'));\n\
    console.log(solve('CodeWars123!@#!@$%^&*())('));\nconsole.log(solve('CodeWars123!@#!@$%^&*())(_'));\n\
    console.log(solve('CodeWars123!@#!@$%^&*())(\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnqjlc6vs.ts(42,45): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpnqjlc6vs.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpnqjlc6vs.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659978156
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        let char\
    \ = s[i];\n        if (char === char.toUpperCase()) {\n            result += char.toLowerCase();\n\
    \        } else if (char === char.toLowerCase()) {\n            result += char.toUpperCase();\n\
    \        } else {\n            result += char;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1a2B3c4d'));\nconsole.log(solve('1A2b3C4d'));\nconsole.log(solve('1a2B3C4d'));\n\
    console.log(solve('1a2b3c4D'));\nconsole.log(solve('1A2B3C4d'));\nconsole.log(solve('1a2b3c4D'));\n\
    console.log(solve('1A2b3c4d'));\nconsole.log(solve('1a2B3C4d'));\nconsole.log(solve('1A2b3C4d'));\n\
    console.log(solve('1a2B3C4d'));\nconsole.log(solve('1A2b3C4d'));\nconsole.log(solve('1a2B3C4d'));\n\
    console.log(solve('1A2b3C4d'));\nconsole.log(solve('1a2B3C4d'));\nconsole.log(solve('1A2b3C4d'));\n\
    console.log(solve('1a2B3C4d'));\nconsole.log(solve('1A2b3C4d'));\nconsole.log\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpflvhzhgr.js:51:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpflvhzhgr.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    Codewars

    1234

    1A2B3C4D

    1a2b3c4d

    1a2B3C4d

    1A2b3C4D

    1a2B3c4D

    1A2b3c4D

    1A2B3C4d

    1a2b3c4D

    1A2B3C4d

    1a2B3C4D

    1A2b3c4D

    1a2B3c4D

    1A2b3c4D

    1a2B3c4D

    1A2b3c4D

    1a2B3c4D

    1A2b3c4D

    1a2B3c4D

    1A2b3c4D

    1a2B3c4D

    '
  timestamp: 1659978157
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World')); // hELLO wORLD\nconsole.log(solve('I loVe\
    \ JS')); // i LOvE js\nconsole.log(solve('1a2b3c4d5e')); // 1A2B3C4D5E\nconsole.log(solve('String.prototype.charCodeAt()'));\
    \ // sTRING.PROTOTYPE.CHARCODEAT()\nconsole.log(solve('12345')); // 12345\nconsole.log(solve('!@#$%^&*()_+'));\
    \ // !@#$%^&*()_+\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp9076xt3d.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9076xt3d.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    i LOvE js

    1A2B3C4D5E

    sTRING.PROTOTYPE.CHARcODEaT()

    12345

    !@#$%^&*()_+

    '
  timestamp: 1659978157
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpxafxz8yk.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxafxz8yk.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978157
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('AbC'));\nconsole.log(solve('aBc'));\nconsole.log(solve('aBc123'));\n\
    console.log(solve('aBc123!'));\nconsole.log(solve('aBc123!@#$%^&*()'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\n\
    console.log(solve('aBc123!@#$%^&*()_+-'));\nconsole.log(solve('aBc123!@#$%^&*()_+-='));\n\
    console.log(solve('aBc123!@#$%^&*()_+-=[]{}'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|'));\n\
    console.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\\'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\
    \\;'));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\\;\\''));\nconsole.log(solve('aBc123!@#$%^&*()_+-=[]{}|\\\
    \\;\\'\\,'));\nconsole.log(solve('aBc123!@#$%^&*()_+-\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz0qf2jik.ts(38,39): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpz0qf2jik.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpz0qf2jik.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978157
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\nconsole.log(solve('123456789'));\n\
    console.log(solve('12345678910'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('1234567891011121314151617181920'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('1234567891011121314151617181920'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('1234567891011121314151617181920'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('1234567891011121314151617181920'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('1234567891011121314151617181920'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('1234567891011121314151617181920'));\nconsole.log(solve('1234567891011121314151617181920'));\n\
    console.log(solve('1234567891011121314\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnut7c5uj.ts(40,39): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpnut7c5uj.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpnut7c5uj.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978157
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('String.prototype.split'));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpliyhapd0.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpliyhapd0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978157
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('AbCdEfG'));\nconsole.log(solve('12345'));\nconsole.log(solve('aBcDeFg'));\n\
    console.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123!@#$%^&*()_+'));\n\
    console.log(solve('abcdeFg123!@#$%^&*()_+'));\nconsole.log(solve('ABCDEFG123!@#$%^&*()_+'));\n\
    console.log(solve('ABCDEFG123'));\nconsole.log(solve('abcdeFg123'));\nconsole.log(solve('abcdeFg123!@#$%^&*()_+'));\n\
    console.log(solve('abcdeFg123!@#$%^&*()_+'));\nconsole.log(solve('abcdeFg123!@#$%^&*()_+'));\n\
    console.log(solve('abcdeFg123!@#$%^&*()_+'));\nconsole.log(solve('abcdeFg123!@#$%^&*()_+'));\n\
    console.log(solve('abcdeFg123!@#$%^&*()_+'));\nconsole.log(solve('abcdeFg123!@#$%^&*()_+'));\n\
    console.log(solve('abcdeFg123!@#$%^&*()_\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkq7ag43n.ts(40,41): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpkq7ag43n.ts(41,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpkq7ag43n.ts(41,9): error TS1005: '','' expected.

    '
  timestamp: 1659978157
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('#@$%^&*'));\nconsole.log(solve('abcdABCD'));\nconsole.log(solve('abcdABCD1234'));\n\
    console.log(solve('abcdABCD1234#@$%^&*'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1z33r71.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1z33r71.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABCD

    abcd

    1234

    #@$%^&*

    ABCDabcd

    ABCDabcd1234

    ABCDabcd1234#@$%^&*

    '
  timestamp: 1659978157
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123!@#$%^&*()_+'));\n\
    console.log(solve('abcde'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvr4pdkco.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvr4pdkco.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUPRALAPSARIAN

    1337

    AbCdEfG123

    AbCdEfG123!@#$%^&*()_+

    ABCDE

    '
  timestamp: 1659978158
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\n\
    console.log(solve('123'));\nconsole.log(solve('aBc'));\nconsole.log(solve('a1b2c3'));\n\
    console.log(solve('aBc123'));\nconsole.log(solve('aBc123!@#$%^&*()_+'));\nconsole.log(solve('aBc123!@#$%^&*()_+ABC'));\n\
    console.log(solve('aBc123!@#$%^&*()_+ABCabc'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp82fanl0t.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp82fanl0t.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    AbC

    A1B2C3

    AbC123

    AbC123!@#$%^&*()_+

    AbC123!@#$%^&*()_+abc

    AbC123!@#$%^&*()_+abcABC

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpl3f6ltz4.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl3f6ltz4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codewars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpq9ovam2m.js:47:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpq9ovam2m.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    Codewars

    CODEWARS

    cODEwARS

    cODEwARS123

    cODEwARS123!

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    cODEwARS123!@#$%^&*()

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvc7q5pbb.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvc7q5pbb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\n\
    console.log(solve('coDEwArs'));\nconsole.log(solve('coDEwArs'));\nconsole.log(s\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc_gh30fj.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpc_gh30fj.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello'));\nconsole.log(solve('hello'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp83chssr5.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp83chssr5.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO

    HELLO

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpl3f6ltz4.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl3f6ltz4.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978144
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1A2b3c4d'));\nconsole.log(solve('1A2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2b3c4d5e6f7g8h9i0j1A2b3c4d5e6f7g8h9i0j'));\nconsole.log(solve('1A2b3c4d5e6f7g8h9i0j1A2b3c4d5e6f7g8h9i0j1A2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2b3c4d5e6f7g8h9i0j1A2b3c4d5e6f7g8h9i0j1A2b3c4d5e6f7g8h9i0j1A2b3c4d5e6f7g8h9i0j'));\n\
    console.log(solve('1A2b3c4d5e6f7g8h9i0j1A2b3c4d5e6f7g8h9i0j\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyypfa099.ts(32,60): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpyypfa099.ts(33,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpyypfa099.ts(33,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('12345'));\nconsole.log(solve('abcdef'));\n\
    console.log(solve('ABCDEF'));\nconsole.log(solve('AbCdEf'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF')\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpct3i95pw.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpct3i95pw.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\nconsole.log(solve('coDEwars'));\n\
    console.log(solve('coDEwars'));\nconsole.\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp73s156mh.ts(49,9): error TS1003: Identifier expected.

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abCdEfG'));\nconsole.log(solve('12345'));\nconsole.log(solve('abcdefg'));\n\
    console.log(solve('ABCDEFG'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log(solve('12345'));\n\
    console.log(solve('12345'));\nconsole.log(solve('12345'));\nconsole.log\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpurjmxrm0.js:59:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpurjmxrm0.js:67:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABcDeFg

    12345

    ABCDEFG

    abcdefg

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    12345

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('AbCd'));\nconsole.log(solve('1234'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpqrgw3bs5.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqrgw3bs5.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABCD

    aBcD

    1234

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc!@#'));\nconsole.log(solve('123ABCabc!@#ABC'));\n\
    console.log(solve('123ABCabc!@#ABCabc'));\nconsole.log(solve('123ABCabc!@#ABCabcABC'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabc'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABC'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabc'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABC'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabc'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABC'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabc'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabcABC'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabcABCabc'));\nconsole.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABCabcABCabcABC'));\n\
    console.log(solve('123ABCabc!@#ABCabcABCabcABCabcABCabcABC\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppg0asfc4.ts(41,59): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmppg0asfc4.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppg0asfc4.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()'));\nconsole.log(solve('ABCabc!@#$%^&*()'));\n\
    console.log(solve('abc!@#$%^&*()'));\nconsole.log(solve('!@#$%^&*()'));\nconsole.log(solve('123'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('123abc'));\nconsole.log(solve('123ABCabc'));\n\
    console.log(solve('123ABCabc!@#$%^&*()'));\nconsole.log(solve('ABCabc!@#$%^&*()'));\n\
    console.log(solve('abc!@#$%^&*()'));\nconsole.log(solve('!@#$%^&*()'));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp6ohrttjf.js:44:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6ohrttjf.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    ABCabc

    123

    123abc

    123ABC

    123abcABC

    123abcABC!@#$%^&*()

    abcABC!@#$%^&*()

    ABC!@#$%^&*()

    !@#$%^&*()

    123

    123abc

    123ABC

    123abcABC

    123abcABC!@#$%^&*()

    abcABC!@#$%^&*()

    ABC!@#$%^&*()

    !@#$%^&*()

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpwv5caeoo.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwv5caeoo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    12345

    '
  timestamp: 1659978144
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\n\
    console.log(solve('Supralapsarian'));\nconsole.log(solve('1337'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\nconsole.log(solve('aBcDeFgH'));\n\
    console.log(solve('aBcDeFgH'));\nconsole.log\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpm44ik_fp.js:51:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm44ik_fp.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUPRALAPSARIAN

    1337

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    AbCdEfGh

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('codeWars'));\nconsole.log(solve('cOdEwArS'));\n\
    console.log(solve('cOdEwArS1'));\nconsole.log(solve('cOdEwArS1!'));\nconsole.log(solve('cOdEwArS1!2'));\n\
    console.log(solve('cOdEwArS1!2@'));\nconsole.log(solve('cOdEwArS1!2@3'));\nconsole.log(solve('cOdEwArS1!2@3#'));\n\
    console.log(solve('cOdEwArS1!2@3#4'));\nconsole.log(solve('cOdEwArS1!2@3#4$'));\n\
    console.log(solve('cOdEwArS1!2@3#4$5'));\nconsole.log(solve('cOdEwArS1!2@3#4$5%'));\n\
    console.log(solve('cOdEwArS1!2@3#4$5%6'));\nconsole.log(solve('cOdEwArS1!2@3#4$5%6^'));\n\
    console.log(solve('cOdEwArS1!2@3#4$5%6^7'));\nconsole.log(solve('cOdEwArS1!2@3#4$5%6^7&'));\n\
    console.log(solve('c\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo17gwf_z.ts(38,21): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpo17gwf_z.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpo17gwf_z.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('aBcDeF'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('1A2B3C4D5E'));\nconsole.log(solve('1A2b3C4d5E'));\n\
    console.log(solve('1a2B3c4D5e'));\nconsole.log(solve('1A2b3C4d5E'));\nconsole.log(solve('1a2B3c4D5e'));\n\
    console.log(solve('1A2b3C4d5E'));\nconsole.log(solve('1a2B3c4D5e'));\nconsole.log(solve('1A2b3C4d5E'));\n\
    console.log(solve('1a2B3c4D5e'));\nconsole.log(solve('1A2b3C4d5E'));\nconsole.log(solve('1a2B3c4D5e'));\n\
    console.log(solve('1A2b3C4d5E'));\nconsole.log(solve('1a2B3c4D5e'));\nconsole.log(solve('1A2b3C4d5E'));\n\
    console.log(solve('1a2\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4bw4whkm.ts(42,23): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp4bw4whkm.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp4bw4whkm.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\nconsole.log(solve('12345'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpehca75cj.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpehca75cj.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    12345

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg'));\n\
    console.log(solve('aBcDeFgH123'));\nconsole.log(solve('123'));\nconsole.log(solve('abc'));\n\
    console.log(solve('ABC'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#$%^&*()_+'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#$%^&*()_+-'));\nconsole.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#$%^&*()_+-='));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz123!@#$%^&*()_+-=[]{}'));\nconsole.log(solve('AbCdEfGhI\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz9lf6vdx.ts(37,29): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpz9lf6vdx.ts(38,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpz9lf6vdx.ts(38,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('abc123'));\nconsole.log(solve('ABC123'));\nconsole.log(solve('ABC123!'));\n\
    console.log(solve('!@#$%^&*()'));\nconsole.log(solve('!@#$%^&*()ABC'));\nconsole.log(solve('!@#$%^&*()ABC123'));\n\
    console.log(solve('!@#$%^&*()ABC123!'));\nconsole.log(solve('!@#$%^&*()ABC123!@#$%^&*()'));\n\
    console.log(solve('!@#$%^&*()ABC123!@#$%^&*()ABC'));\nconsole.log(solve('!@#$%^&*()ABC123!@#$%^&*()ABC123'));\n\
    console.log(solve('!@#$%^&*()ABC123!@#$%^&*()ABC123!'));\nconsole.log(solve('!@#$%^&*()ABC123!@#$%^&*()ABC123!@#$%^&*()'));\n\
    console.log(solve('!@#$%^&*()ABC123!@#$%^&*()ABC123!@#$%^&*()ABC'));\nconsole.log(solve('!@#$%^&*()ABC123!@#$%^&*()ABC123!@#$%^&*()ABC123'));\n\
    console.log(solve('!@#$%^\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk5zyeroa.ts(38,26): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpk5zyeroa.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpk5zyeroa.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('abc123'));\nconsole.log(solve('ABC123'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('ABCabc'));\nconsole.log(solve('abC123'));\nconsole.log(solve('aBc123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('aBc'));\nconsole.log(solve('!@#$%^&*()_+'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyz'));\nconsole.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    console.log(solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    console.log(solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQR\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplqz_ild5.ts(38,90): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmplqz_ild5.ts(39,1): error TS1005: '','' expected.

    ../../../../../tmp/tmplqz_ild5.ts(39,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWARS'));\nconsole.log(solve('codewars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars123'));\nconsole.log(solve('CodeWars123!'));\n\
    console.log(solve('CodeWars123!@#$%^&*()'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-='));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:<>?/.,'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:<>?/.,~`'));\nconsole.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:<>?/.,~`1234567890'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:<>?/.,~`1234567890-=_+'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:<>?/.,~`1234567890-=_+!@#$%^&*()'));\n\
    console.log(solve('CodeWars123!@#$%^&*()_+-=[]{}|;:<\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx8uaosqm.ts(35,53): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpx8uaosqm.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpx8uaosqm.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    let isLetter: boolean = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n           \
    \ isLetter = true;\n            if (s[i] === s[i].toUpperCase()) {\n         \
    \       result += s[i].toLowerCase();\n            } else {\n                result\
    \ += s[i].toUpperCase();\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    if (!isLetter) {\n        return s.split('').reverse().join('');\n\
    \    }\n    return result;\n}\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\n\
    console.log(solve('123'));\nconsole.log(solve('abc123'));\nconsole.log(solve('ABC123'));\n\
    console.log(solve('abcABC123'));\nconsole.log(solve('ABCabc123'));\nconsole.log(solve('z'));\n\
    console.log(solve('Z'));\nconsole.log(solve('zZ'));\nconsole.log(solve('Zz'));\n\
    console.log(solve('zZz'));\nconsole.log(solve('ZzZ'));\nconsole.log(solve('zZzZ'));\n\
    console.log(solve('ZzZz'));\nconsole.log(solve('zZzZz'));\nconsole.log(solve('ZzZzZ'));\n\
    console.log(solve('zZzZzZ'));\nconsole.log(solve('ZzZzZz'));\nconsole.log(solve('zZzZzZz'));\n\
    console.log(solve('ZzZzZzZ'));\nconsole.log(solve('zZzZzZzZ'));\nconsole.log(solve('ZzZzZzZz'));\n\
    console.log(solve('zZzZzZzZz'));\nconsole.log(solve('Z\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg7535bjm.ts(52,21): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpg7535bjm.ts(53,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpg7535bjm.ts(53,9): error TS1005: '','' expected.

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('abc123'));\nconsole.log(solve('ABC123'));\nconsole.log(solve('abcABC'));\n\
    console.log(solve('ABCabc'));\nconsole.log(solve('abC123'));\nconsole.log(solve('123abc'));\n\
    console.log(solve('123ABC'));\nconsole.log(solve('abcABC123'));\nconsole.log(solve('ABCabc123'));\n\
    console.log(solve('abcABC123xyz'));\nconsole.log(solve('ABCabc123xyz'));\nconsole.log(solve('abcABC123XYZ'));\n\
    console.log(solve('ABCabc123XYZ'));\nconsole.log(solve('abcABC123XYZ098'));\n\
    console.log(solve('ABCabc123XYZ098'));\nconsole.log(solve('abcABC123XYZ098---'));\n\
    console.log(solve('ABCabc123XYZ098---'));\nconsole.log(solve('abcABC123XYZ098---+++'));\n\
    console.log(solve('ABCabc123XYZ098---+++'));\nconsole.log(solve('abcABC123XYZ098---+++***'));\n\
    console.log(solve('ABCabc123XYZ098---+++***'));\nconsole.log(solve('abcABC123XYZ098---+++***&&&'));\n\
    console.log(solve('ABCabc123XYZ098---+++***&&&'));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp4monbtm2.js:52:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4monbtm2.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    ABC123

    abc123

    ABCabc

    abcABC

    ABc123

    123ABC

    123abc

    ABCabc123

    abcABC123

    ABCabc123XYZ

    abcABC123XYZ

    ABCabc123xyz

    abcABC123xyz

    ABCabc123xyz098

    abcABC123xyz098

    ABCabc123xyz098---

    abcABC123xyz098---

    ABCabc123xyz098---+++

    abcABC123xyz098---+++

    ABCabc123xyz098---+++***

    abcABC123xyz098---+++***

    ABCabc123xyz098---+++***&&&

    abcABC123xyz098---+++***&&&

    '
  timestamp: 1659978160
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abCdEf'));\nconsole.log(solve('abCdEf123'));\nconsole.log(solve('123'));\n\
    console.log(solve('1234567890'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp65cddgzd.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp65cddgzd.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABcDeF

    ABcDeF123

    123

    1234567890

    '
  timestamp: 1659978159
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Supralapsarian'));\n\
    console.log(solve('1337'));\nconsole.log(solve('aBcDeFg123'));\nconsole.log(solve('aBcDeFg123!@#$%^&*()'));\n\
    console.log(solve('abcde'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpfc038ark.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfc038ark.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUPRALAPSARIAN

    1337

    AbCdEfG123

    AbCdEfG123!@#$%^&*()

    ABCDE

    '
  timestamp: 1659978160
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('12345'));\nconsole.log(solve('abcdef'));\n\
    console.log(solve('ABCDEF'));\nconsole.log(solve('1a2b3c4d5e6f'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\n\
    console.log(solve('a1B2c3D4e5F6g7H8i9J0k'));\nconsole.log(solve('a1B2\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9bc7dbaq.ts(36,24): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp9bc7dbaq.ts(37,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9bc7dbaq.ts(37,9): error TS1005: '','' expected.

    '
  timestamp: 1659978160
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('codeWArs'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\n\
    console.log(solve('CodeWars'));\nconsole.log(solve('CodeWars'));\nconsole.log\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpb4gzfaa_.js:59:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb4gzfaa_.js:67:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'cODEWARS

    CodewaRS

    CODEwaRS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    cODEwARS

    '
  timestamp: 1659978160
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s[i];\n        if (char.match(/[a-z]/i)) {\n            result += char ===\
    \ char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n        } else\
    \ {\n            result += char;\n        }\n    }\n    return result;\n}\n\n\
    console.log(solve('Hello World'));\nconsole.log(solve('HELLO WORLD'));\nconsole.log(solve('12345'));\n\
    console.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.charCodeAt()'));\n\
    console.log(solve('String.prototype.charAt()'));\nconsole.log(solve('String.prototype.charCodeAt()'));\n\
    console.log(solve('AbCdEfGhIjKlMnOpQrStUvWxYz'));\nconsole.log(solve('The quick\
    \ brown fox jumps over the lazy dog.'));\nconsole.log(solve('THE QUICK BROWN FOX\
    \ JUMPS OVER THE LAZY DOG.'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpaehnh2qp.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpaehnh2qp.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.CHARcODEaT()

    sTRING.PROTOTYPE.CHARaT()

    sTRING.PROTOTYPE.CHARcODEaT()

    aBcDeFgHiJkLmNoPqRsTuVwXyZ

    tHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.

    the quick brown fox jumps over the lazy dog.

    '
  timestamp: 1659978160
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abcd'));\nconsole.log(solve('ABCD'));\nconsole.log(solve('1234'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\n\
    console.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D'));\n\
    console.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\nconsole.log(solve('1A2b3c4D'));\n\
    console.log(solve('1a2B3c4D'));\nconsole.log(solve('1a2b3c4d'));\nconsole.log(solve('1A2B3C4D'));\n\
    console.log(solve('1A2b3c4D'));\nconsole.log(solve('1a2B3c4D\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzdpj04rj.ts(43,28): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpzdpj04rj.ts(44,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpzdpj04rj.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1659978154
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        let char\
    \ = s[i];\n        if (char === char.toUpperCase()) {\n            result += char.toLowerCase();\n\
    \        } else if (char === char.toLowerCase()) {\n            result += char.toUpperCase();\n\
    \        } else {\n            result += char;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('abcABC'));\nconsole.log(solve('abcABC123'));\n\
    console.log(solve('abcABC123!@\u20AC'));\nconsole.log(solve('AAaa'));\nconsole.log(solve('!'));\n\
    console.log(solve('!@\u20AC'));\nconsole.log(solve('!@\u20ACa'));\nconsole.log(solve('!@\u20AC\
    A'));\nconsole.log(solve('!@\u20AC1'));\nconsole.log(solve('!@\u20ACA1'));\nconsole.log(solve('!@\u20AC\
    A1a'));\nconsole.log(solve('!@\u20ACA1aA'));\nconsole.log(solve('!@\u20ACA1aAa'));\n\
    console.log(solve('!@\u20ACA1aAaA'));\nconsole.log(solve('!@\u20ACA1aAaAa'));\n\
    console.log(solve('!@\u20ACA1aAaAaA'));\nconsole.log(solve('!@\u20ACA1aAaAaAa'));\n\
    console.log(solve('!@\u20ACA1aAaAaAaA'));\nconsole.log(solve('!@\u20ACA1aAaAaAaAa'));\n\
    console.log(solve('!@\u20ACA1aAaAaAaAaA'));\nconsole.log(solve('!@\u20ACA1aAaAaAaAaAa'));\n\
    console.log(solve('!@\u20ACA1aAaAaAaAaAaA'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvtb_jr2g.js:50:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvtb_jr2g.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: "ABC\nABCabc\nABCabc123\nABCabc123!@\u20AC\naaAA\n!\n!@\u20AC\n!@\u20AC\
    A\n!@\u20ACa\n!@\u20AC1\n!@\u20ACa1\n!@\u20ACa1A\n!@\u20ACa1Aa\n!@\u20ACa1AaA\n\
    !@\u20ACa1AaAa\n!@\u20ACa1AaAaA\n!@\u20ACa1AaAaAa\n!@\u20ACa1AaAaAaA\n!@\u20AC\
    a1AaAaAaAa\n!@\u20ACa1AaAaAaAaA\n!@\u20ACa1AaAaAaAaAa\n!@\u20ACa1AaAaAaAaAaA\n\
    !@\u20ACa1AaAaAaAaAaAa\n"
  timestamp: 1659978161
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('hello world'));\n\
    console.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\nconsole.log(solve('String.prototype.split'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmplfug5pbg.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplfug5pbg.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    HELLO WORLD

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978151
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n  let\
    \ result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('HELLO\
    \ WORLD'));\nconsole.log(solve('12345'));\nconsole.log(solve('1a2b3c4d5e'));\n\
    console.log(solve('String.prototype.split'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpyvwevm7r.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyvwevm7r.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hello world

    12345

    1A2B3C4D5E

    sTRING.PROTOTYPE.SPLIT

    '
  timestamp: 1659978160
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s[i];\n        if (char === char.toUpperCase()) {\n            result += char.toLowerCase();\n\
    \        } else if (char === char.toLowerCase()) {\n            result += char.toUpperCase();\n\
    \        } else {\n            result += char;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('AbCdEf'));\nconsole.log(solve('aBcDeF'));\nconsole.log(solve('aBcDeF123'));\n\
    console.log(solve('aBcDeF123!@#$%^&*()_+'));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe4ux_w4t.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe4ux_w4t.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'ABC

    abc

    123

    aBcDeF

    AbCdEf

    AbCdEf123

    AbCdEf123!@#$%^&*()_+

    '
  timestamp: 1659978161
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Codewars'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\n\
    console.log(solve('cODEWArs'));\nconsole.log(solve('cODEWArs'));\nconsole.log(solve('\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0x4g15ud.ts(47,20): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp0x4g15ud.ts(48,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp0x4g15ud.ts(48,9): error TS1005: '','' expected.

    '
  timestamp: 1659978149
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello World!'));\n\
    console.log(solve('1234567890'));\nconsole.log(solve('!@#$%^&*()'));\nconsole.log(solve('qwertyuiopasdfghjklzxcvbnm'));\n\
    console.log(solve('QWERTYUIOPASDFGHJKLZXCVBNM'));\nconsole.log(solve('qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'));\n\
    console.log(solve('QWERTYUIOPASDFGHJKLZXCVBNMQWERTYUIOPASDFGHJKLZXCVBNM'));\n\
    console.log(solve('qwertyuiopasdfghjklzxcvbnm1234567890'));\nconsole.log(solve('1234567890qwertyuiopasdfghjklzxcvbnm'));\n\
    console.log(solve('!@#$%^&*()qwertyuiopasdfghjklzxcvbnm'));\nconsole.log(solve('qwertyuiopasdfghjklzxcvbnm!@#$%^&*()'));\n\
    console.log(solve('!@#$%^&*()QWERTYUIOPASDFGHJKLZXCVBNM'));\nconsole.log(solve('QWERTYUIOPASDFGHJKLZXCVBNM!@#$%^&*()'));\n\
    console.log(solve('!@#$%^&*()1234567890\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjpe3ee1d.ts(35,40): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpjpe3ee1d.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpjpe3ee1d.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659978160
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('Hello World'));\nconsole.log(solve('Hello-LOL'));\nconsole.log(solve('Sup\
    \ DUDE!!?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpys46o431.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys46o431.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'hELLO wORLD

    hELLO-lol

    sUP dude!!?

    '
  timestamp: 1659978147
- exit_code: 1
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('a1B2c3'));\nconsole.log(solve('12345'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpcl28l8_y.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcl28l8_y.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'A1B2C3

    A1b2C3

    12345

    '
  timestamp: 1659978161
- exit_code: 2
  program: "//You are given a string s.\n// if s[i] is a letter, reverse its case\
    \ from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the\
    \ string contains no letters, reverse the string.\n// The function should return\
    \ the resulted string.\n// Examples\nfunction solve(s: string): string {\n   \
    \ let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve('abc'));\nconsole.log(solve('ABC'));\nconsole.log(solve('123'));\n\
    console.log(solve('aBc'));\nconsole.log(solve('a1b2c3'));\nconsole.log(solve('a1B2c3'));\n\
    console.log(solve('a1b2C3'));\nconsole.log(solve('a1B2C3'));\nconsole.log(solve('a1b2C3d4E5f6G7h8I9j10K11l12M13n14O15p16Q17r18S19t20U21v22W23x24Y25z26'));\n\
    console.log(solve('a1b2C3d4E5f6G7h8I9j10K11l12M13n14O15p16Q17r18S19t20U21v22W23x24Y25z26A'));\n\
    console.log(solve('a1b2C3d4E5f6G7h8I9j10K11l12M13n14O15p16Q17r18S19t20U21v22W23x24Y25z26A27B28C29D30E31F32G33H34I35J36K37L38M39N40O41P42Q43R44S45T46U47V48W49X50Y51Z52'));\n\
    console.log(solve('a1b2C3d4E5f6G7h8I9j10K11l12M13n14O15p16Q17r18S\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n\
    \  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5ygegcnj.ts(32,66): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp5ygegcnj.ts(33,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp5ygegcnj.ts(33,9): error TS1005: '','' expected.

    '
  timestamp: 1659978160

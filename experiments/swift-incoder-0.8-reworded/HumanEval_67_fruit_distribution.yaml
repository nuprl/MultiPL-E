name: HumanEval_67_fruit_distribution
language: swift
prompt: "\n/// In this task, you will be given a string that represents a number of\
  \ apples and oranges \n/// that are distributed in a basket of fruit this basket\
  \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
  \ the total number of \n/// the oranges and apples and an integer that represent\
  \ the total number of the fruits \n/// in the basket return the number of the mango\
  \ fruits in the basket.\n/// for examble:\n/// >>> fruit_distribution(s: \"5 apples\
  \ and 6 oranges\", n: 19)\n/// 8\n/// >>> fruit_distribution(s: \"0 apples and 1\
  \ oranges\", n: 3)\n/// 2\n/// >>> fruit_distribution(s: \"2 apples and 3 oranges\"\
  , n: 100)\n/// 95\n/// >>> fruit_distribution(s: \"100 apples and 1 oranges\", n:\
  \ 120)\n/// 19\nfunc fruit_distribution(s: String, n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
  , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
  \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
  assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
  \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples\
  \ and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100\
  \ oranges\", n: 120) == 19)"
completions: ["    let mut s = String(n).split(separator: \".\").map(String.init)\n\
    \    let mut apple = s.filter { $0.contains(\"a\") }\n    let mut orange = s.filter\
    \ { $0.contains(\"o\") }\n    let mut mango = s.filter { $0.contains(\"m\") }\n\
    \    \n    var num = 0\n    \n    if apple.count == 0 && orange.count == 0 &&\
    \ mango.count == 0 {\n        num = 0\n    }\n    \n    if apple.count == 0 &&\
    \ orange.count == 0 {\n        num = 1\n    }\n    \n    if apple.count == 0 &&\
    \ mango.count == 0 {\n        num = 2\n    }\n    \n    if orange.count == 0 &&\
    \ mango.count == 0 {\n        num = 3\n    }\n    \n    if orange.count == 0 &&\
    \ apple.count == 0 {\n        num = 4\n    }\n    \n    if orange.count == 0 &&\
    \ apple.count == 1 {\n        num = 5\n    }\n    \n    if orange.count == 0 &&\
    \ apple.count == 2 {\n        num = 6\n    }\n    \n    if orange.count == 0 &&\
    \ apple.count == 3 {\n        num = 7\n    }\n    \n    if mango.count == 0 &&\
    \ apple.count == 0 {\n        num = 8\n    }\n    \n    if mango.count == 0 &&\
    \ apple.count == 1 {\n        num = 9\n    }\n    \n    if mango.count == 0 &&\
    \ apple.count == 2 {\n        num = 10\n    }\n    \n    if mango.count == 0 &&\
    \ apple.count == 3 {\n        num = 11\n    }\n    \n    if mango.count == 0 &&\
    \ orange.count == 0 {\n        num = 12\n    }\n    \n    if mango.count == 0\
    \ && orange.count == 1 {\n        num = 13\n    }\n    \n    if mango.count ==\
    \ 0 && orange.count == 2 {\n        num = 14\n    }\n    \n    if mango.count\
    \ == 0 && orange.count == 3 {\n        num = 15\n    }\n    \n    if mango.count\
    \ == 0 && orange.count == 4 {\n        num = 16\n    }\n    \n    if mango.count\
    \ == 0 && orange.count == 5 {\n        num = 17\n    }\n    \n    if mango.count\
    \ == 0 && orange.count == 6 {\n        num = 18\n    }\n    \n    if mango.count\
    \ == 0 && orange.count == 7 {\n        num = 19\n    }\n    \n    if apple.count\
    \ == 0 && orange.count == 0 && mango.count == 0 {\n        num = 20\n    }\n \
    \   \n    return num", '    return fruit.countElements(fruit.subSequence(s.characters.startIndex..<s.characters.endIndex,
    s.characters.count), n)', "    var count = 0\n    var total = 0\n    for _ in\
    \ s.characters.reverse() {\n        let value = s.characters.reverse()\n     \
    \   if let number = Int((value as! String).characters.first!) {\n            total\
    \ += number\n        }\n    }\n    for _ in s.characters.reverse() {\n       \
    \ let value = s.characters.reverse()\n        if let number = Int((value as! String).characters.last!)\
    \ {\n            count += number\n        }\n    }\n    if let number = Int((s.characters.reverse().first!\
    \ as! String).characters.first!) {\n        count += number\n    }\n    if let\
    \ number = Int((s.characters.reverse().last! as! String).characters.first!) {\n\
    \        total += number\n    }\n    return count / total", '    return 0', " \
    \   var counter = s[0]\n    var total = 0\n    for i in s.characters {\n     \
    \   if i.isNumber {\n            total += Int(i)!\n        } else if i.isLetter\
    \ {\n            total += Int(i)!\n            counter -= 1\n        }\n    }\n\
    \    return n - total + Int(counter)!", "    var total = 0\n    let fruits = s.split(separator:\
    \ \" \")\n    fruits.forEach{\n        let str = $0\n        let intValue = (str.components(separatedBy:\
    \ \" \")[1] as NSString).intValue\n        total += intValue\n    }\n    return\
    \ total / n", "    let numApples = Int(s.characters.dropLast().first)!\n    let\
    \ numOranges = Int(s.characters.dropLast(1).first)!\n\n    var sum = 0\n\n   \
    \ for i in 0..<n {\n        let item = s.characters.dropLast().first\n       \
    \ if item == \"apples\" {\n            sum += numApples\n        } else if item\
    \ == \"oranges\" {\n            sum += numOranges\n        } else if item == \"\
    mango\" {\n            sum += numApples - numOranges\n        }\n    }\n\n   \
    \ return sum", "    let strs = s.components(separatedBy: \" \")\n    let apples\
    \ = strs[0]\n    let oranges = strs[1]\n    let count = Int(\"\\(apples)\") +\
    \ (Int(\"\\(oranges)\"))\n    let total = Int(\"\\(n)\")\n    var result: Int\
    \ = 0\n    if (count >= total) {\n        result = count - total\n    }\n    return\
    \ result", "    let arr = s.split(separator: \"and\").map(String.init)\n    var\
    \ fruit_total: Int = 0\n    for _ in arr {\n        let str = arr.removeFirst()\n\
    \        let num = Int(str)!\n        fruit_total += num\n        if fruit_total\
    \ > n {\n            break\n        }\n    }\n    return fruit_total - arr.removeFirst().count",
  "    var fruitsCount = 1\n    var basketSize = s.characters.count\n    guard basketSize\
    \ > 0 else { return 0 }\n    for i in stride(from: basketSize - 1, through: 0,\
    \ by: -1) {\n        var fruitsInBasket = 0\n        for j in stride(from: 0,\
    \ through: s.characters.count, by: i) {\n            let characterInString = s.characters[j]\n\
    \            switch characterInString {\n            case \"a\": fruitsInBasket\
    \ += 1\n            case \"o\": fruitsInBasket += 1\n            case \"e\": fruitsInBasket\
    \ += 1\n            case \"i\": fruitsInBasket += 1\n            case \"l\": fruitsInBasket\
    \ += 1\n            case \"s\": fruitsInBasket += 1\n            default: break\n\
    \            }\n        }\n        if fruitsInBasket == n {\n            fruitsCount\
    \ += 1\n        }\n    }\n    return fruitsCount", "    var apples = 0, oranges\
    \ = 0, mangos = 0, fruits : Int = 0\n    for char in s {\n        switch char\
    \ {\n        case \"a\":\n            apples += 1\n        case \"o\":\n     \
    \       oranges += 1\n        case \"m\":\n            mangos += 1\n        default:\n\
    \            fruits += 1\n        }\n    }\n    return fruits - (oranges + apples\
    \ + mangos) * n", "    if s == \"\" || n == 0 {\n        return 0\n    }\n\n \
    \   var apples = 0\n    var oranges = 0\n    var mango = 0\n    var i = 0\n  \
    \  var j = 0\n    var total = 0\n\n    for i < s.characters.count {\n        let\
    \ current = s[i]\n        switch current {\n        case \"a\":\n            apples\
    \ = apples + 1\n        case \"o\":\n            oranges = oranges + 1\n     \
    \   case \"m\":\n            mango = mango + 1\n        default:\n           \
    \ break\n        }\n        total = total + Int(current)\n    }\n    for j = 0\
    \ < n.count {\n        if total % n == 0 {\n            return mango\n       \
    \ }\n        total = total / n\n    }\n    return 0", "    let str = s.split(separator:\
    \ \" \").map(String.init)\n    .filter { $0 != \"\" }.count\n    var apple : Int\
    \ = 0\n    var orange : Int = 0\n    var mango : Int = 0\n\n    for fruit in str\
    \ {\n        switch fruit {\n            case \"a\":\n                apple +=\
    \ 1\n            case \"o\":\n                orange += 1\n            case \"\
    m\":\n                mango += 1\n            default:\n                break\n\
    \        }\n    }\n    return mango + orange + apple", "    let counts = fruit_counts(s:\
    \ s)\n    let numOfFruits = fruit_numOfFruits(n: n, counts: counts)\n    return\
    \ fruit_numOfFruits(n: numOfFruits, counts: counts)", "    var num: Int = s.characters.reduce(0,\
    \ +)\n    num /= n\n    for _ in 0 ..< s.characters.count{\n        if s.characters.contains(\"\
    apples\"){\n            num += s\n        }else if s.characters.contains(\"oranges\"\
    ){\n            num += s\n        }else{\n            num += s\n        }\n  \
    \  }\n    return num", "    // write your code in Swift 5.0\n    var apple = 0\n\
    \    var orange = 0\n    var mango = 0\n    var total = 0\n    \n    for i in\
    \ s.characters.reverse() {\n        switch i {\n        case \"a\":\n        \
    \    apple++\n        case \"o\":\n            orange++\n        case \"m\":\n\
    \            mango++\n        default:\n            break\n        }\n    }\n\
    \    \n    for i in s.characters.reverse() {\n        switch i {\n        case\
    \ \"a\":\n            apple--\n        case \"o\":\n            orange--\n   \
    \     case \"m\":\n            mango--\n        default:\n            break\n\
    \        }\n    }\n    \n    return mango", "    // Your code here\n    let appleCount\
    \ = s.components(separatedBy: \" \").filter({ $0.contains(\"apples\") }).count\n\
    \    let orangeCount = s.components(separatedBy: \" \").filter({ $0.contains(\"\
    oranges\") }).count\n    let mangoCount = n - appleCount - orangeCount\n    return\
    \ mangoCount", "  let fruit = s.components(separatedBy: \" \").map{\n    Int($0.trim())\n\
    \  }\n  let apple = Int(fruit[0])\n  let orange = Int(fruit[1])\n  let fruits\
    \ = apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange+apple+orange",
  "    let stringNumbers = String(s.characters\n        .filter { $0 != \"0\" } as\
    \ [String])\n        .enumerated()\n        .flatMap { $0.element + 1 }\n    \
    \    .map { \"\\($0)\\($1)\" }\n    return stringNumbers.filter { $0.contains(\"\
    \ oranges\") && $0.contains(\" apples\") }\n        .enumerated()\n        .flatMap\
    \ { $0.element + 1 }\n        .map { \"\\($0)\\($1)\" }\n        .filter { $0.contains(\"\
    \ mango\") }\n        .count", "    guard let inputArray = s.components(separatedBy:\
    \ \" \") else {\n        return -1\n    }\n    var applesAndOrangesCount = inputArray.filter\
    \ { $0.hasSuffix(\"apples\")  || $0.hasSuffix(\"oranges\") }.map { $0.prefix(4)\
    \ }.filter { $0.hasSuffix(\"s\") }\n    var applesAndOranges = inputArray.filter\
    \ { $0.hasSuffix(\"apples\")  || $0.hasSuffix(\"oranges\") }.map { $0.prefix(4)\
    \ }.filter { $0.hasPrefix(\"n\") }\n    var applesAndOrangesValue = applesAndOranges.filter\
    \ { $0.hasSuffix(\"s\") }.map { $0.prefix(4) }.filter { $0.hasPrefix(\"n\") }\n\
    \    var mango = inputArray.filter { $0.hasPrefix(\"m\") }\n    var applesAndOrangesCount\
    \ = inputArray.filter { $0.hasSuffix(\"apples\")  || $0.hasSuffix(\"oranges\"\
    ) }.map { $0.prefix(4) }.filter { $0.hasSuffix(\"s\") }\n    var applesAndOranges\
    \ = inputArray.filter { $0.hasSuffix(\"apples\")  || $0.hasSuffix(\"oranges\"\
    ) }.map { $0.prefix(4) }.filter { $0.hasPrefix(\"n\") }\n    var applesAndOrangesValue\
    \ = applesAndOranges.filter { $0.hasSuffix(\"s\") }.map { $0.prefix(4) }.filter\
    \ { $0.hasPrefix(\"n\") }\n    var mango = inputArray.filter { $0.hasPrefix(\"\
    m\") }\n    \n    guard applesAndOranges.count != mango.count else {\n       \
    \ return -1\n    }\n    guard applesAndOrangesCount.count == applesAndOrangesValue.count\
    \ == mango.count else {\n        return -1\n    }\n\n    var apples = applesAndOrangesValue\n\
    \    var oranges = applesAndOrangesValue\n    var mangoCount = mango.map { Int($0.prefix(1))}.filter\
    \ { $0 < n }\n    var mangoValue = mango.map { Int($0.prefix(1))}.filter { $0\
    \ >= n }\n    \n    var totalCount = applesAndOrangesCount.map { Int($0.prefix(1))}.filter\
    \ { $0 < n }\n    var totalValue = applesAndOrangesCount.map { Int($0.prefix(1))}.filter\
    \ { $0 >= n }\n\n", "    let count = s.componentsSeparatedByString(\" \")\n  \
    \  .map(String.init)\n    .filter { $0.characters.count > 0 }\n    .map{Int($0)}\n\
    \    .max()\n    \n    return n\n    .minus(count)", '    return s.split(separator:
    "and").map(String.init(describing: $0)).filter { $0.isEmpty == false }.map { Int($0)
    }.sum', "    let sumNum = s.split(\" \").map(String.init).reduce(0, +)\n    let\
    \ fruit_sum = (n - sumNum) % n\n    return (fruit_sum + sumNum) % n", "    var\
    \ count = 0\n    var total = 0\n    \n    for i in\n        stride(from: 1, to:\
    \ s.characters.count, by: 1){\n            let str = String(s.character(at: i))\n\
    \            \n            if str.hasSuffix(\"apples\"){\n                count\
    \ += Int(str.dropLast())\n            } else if str.hasSuffix(\"oranges\"){\n\
    \                total += Int(str.dropLast())\n            }\n        }\n\n  \
    \  count += total - n\n    return count", "    var apples = 0\n    var oranges\
    \ = 0\n    var mangos = 0\n    var total = 0\n    var count = 0\n\n    for index\
    \ in 0..<s.characters.count {\n        if s[index] == ' ' {\n            total\
    \ += count\n            count = 1\n            continue\n        }\n\n       \
    \ if s[index] == \"a\" {\n            apples++\n            count += 1\n     \
    \   } else if s[index] == \"o\" {\n            oranges++\n            count +=\
    \ 1\n        } else if s[index] == \"m\" {\n            mangos++\n           \
    \ count += 1\n        }\n    }\n\n    total += count\n    count = n\n    \n  \
    \  return total == 0 ? 0 : mangos + count - total", "    let fruits : [String]\
    \ = s.components(separatedBy: \" \")\n    var mango = 0\n    var orange = 0\n\n\
    \    for fruit in fruits {\n        if fruit == \"mango\" {\n            mango\
    \ += 1\n        } else {\n            orange += 1\n        }\n    }\n    if orange\
    \ == n && mango == n {\n        return mango\n    }\n    return orange", "   \
    \ // Your code here\n    let ints: [String] = s.componentsSeparatedByString(\"\
    and\")\n    return ints.count - ints.filter{$0.range(of: \"apple\").location !=\
    \ nil}.count - ints.filter{$0.range(of: \"orange\").location != nil}.count - ints.filter{$0.range(of:\
    \ \"mango\").location != nil}.count ", "    let countApples = s.components(separatedBy:\
    \ \" \")\n    let countOranges = countApples[1]\n    guard let apples = Int(countApples[0])\
    \ else {\n        return 0\n    }\n    guard let oranges = Int(countOranges) else\
    \ {\n        return 0\n    }\n    let total = apples + oranges\n    let total\
    \ = total / n\n    return total * n", '    return count(s.characters.split{$0
    == "oranges"}, n) + count(s.characters.split{$0 == "apples"}, n) - count(s.characters.split{$0
    == "mango"}, n)', "    // write your code in Swift 4.2 or later\n    if let apples\
    \ = s.components(separatedBy: \" \").first, let oranges = s.components(separatedBy:\
    \ \" \").last {\n        if apples.characters.count == oranges.characters.count\
    \ {\n            var totalApples = Int(apples.characters.count)\n            var\
    \ totalOranges = Int(oranges.characters.count)\n            var totalMango = 0\n\
    \            if apples.characters.count == 0 {\n                totalApples =\
    \ 0\n            }\n            if oranges.characters.count == 0 {\n         \
    \       totalOranges = 0\n            }\n            if totalApples > 0 && totalOranges\
    \ > 0 {\n                totalMango = totalApples - totalOranges\n           \
    \ }\n            if totalApples > 0 && totalOranges == 0 {\n                totalMango\
    \ = totalApples\n            }\n            if totalApples == 0 && totalOranges\
    \ > 0 {\n                totalMango = totalOranges\n            }\n          \
    \  if totalApples == 0 && totalOranges == 0 {\n                totalMango = 0\n\
    \            }\n            if totalApples > 0 && totalOranges > 0 && totalApples\
    \ < n && totalOranges < n {\n                totalMango = totalMango + n - totalApples\
    \ - totalOranges\n            }\n            if totalApples > 0 && totalOranges\
    \ > 0 && totalApples >= n && totalOranges < n {\n                totalMango =\
    \ totalOranges + n - totalApples\n            }\n            if totalApples >\
    \ 0 && totalOranges >= n && totalApples < n {\n                totalMango = totalApples\
    \ - totalOranges\n            }\n            if totalApples < n && totalOranges\
    \ > 0 && totalOranges < n {\n                totalMango = totalOranges + n - totalApples\n\
    \            }\n            if totalApples < n && totalOranges >= n && totalApples\
    \ > 0 {\n                totalMango = totalApples - totalOranges\n           \
    \ }\n            if totalApples == 0 && totalOranges > 0 && totalOranges < n {\n\
    \                totalMango = totalOranges + n - totalApples\n            }\n\
    \            if totalApples == 0 && totalOranges >= n && totalApples < n {\n \
    \               totalMango = totalApples - totalOranges\n            }\n     \
    \       if totalApples == 0 && totalOranges < n && totalApples > 0 {\n       \
    \         totalMango = totalApples - totalOranges\n            }\n           \
    \ if totalApples < n && totalOranges < n {\n                totalMango = totalOranges\
    \ + n - totalApples\n            }\n            if totalApples < n && totalOrange",
  "    var apple_count = 0\n    var orange_count = 0\n    var mango_count = 0\n  \
    \  var total = 0\n    var current = 0\n    var s = s\n    for current in s.characters\
    \ {\n        if current == \"a\" {\n            apple_count += 1\n        }\n\
    \        if current == \"o\" {\n            orange_count += 1\n        }\n   \
    \     if current == \"m\" {\n            mango_count += 1\n        }\n       \
    \ if current == \"\\n\" {\n            total += 1\n        }\n    }\n    if apple_count\
    \ > orange_count && apple_count > mango_count {\n        return apple_count\n\
    \    }\n    if orange_count > apple_count && orange_count > mango_count {\n  \
    \      return orange_count\n    }\n    if mango_count > apple_count && mango_count\
    \ > orange_count {\n        return mango_count\n    }\n    if total > 0 {\n  \
    \      return total\n    }\n    return 0", "    let count = s.components(separatedBy:\
    \ \" \")\n    let sum: Int = count[1].components(separatedBy: \"\").reduce(0)\
    \ { $0 + Int($1) }\n    return sum + n", "    return fruit_distribution_helper(s.characters.split{$0\
    \ == \" \"},\n        n,\n        { $0.last! }\n        )", "    // Your code\
    \ goes here\n    var totalApple = s.split(separator: \"apples and \")[1].split(separator:\
    \ \" and \").first ?? \"\"\n    var totalOrange = s.split(separator: \"oranges\
    \ and \")[1].split(separator: \" and \").first ?? \"\"\n    \n    return totalApple.characters.first!\
    \ + totalOrange.characters.first! - n", "    var num_apples = 0\n    var num_oranges\
    \ = 0\n    var num_mangoes = 0\n    var fruits_in_basket = s.characters.count\n\
    \    var total_apples = 0\n    var total_oranges = 0\n    var total_fruits = 0\n\
    \    var basket_fruits = \"\"\n    \n    for x in s.characters.reverse() {\n \
    \       if x == \"a\" {\n            num_apples += 1\n            total_apples\
    \ += num_apples\n        } else if x == \"o\" {\n            num_oranges += 1\n\
    \            total_oranges += num_oranges\n        } else if x == \"m\" {\n  \
    \          num_mangoes += 1\n            total_fruits += num_mangoes\n       \
    \ } else {\n            basket_fruits += x\n        }\n    }\n    \n    num_mangoes\
    \ += (fruits_in_basket - total_fruits)\n    \n    if num_mangoes < 1 {\n     \
    \   num_mangoes = 1\n    }\n    \n    if num_apples == 0 {\n        if num_oranges\
    \ == 0 {\n            num_apples = 1\n        }\n    } else {\n        total_apples\
    \ = total_apples + num_apples\n    }\n    \n    if num_oranges == 0 {\n      \
    \  num_oranges = 1\n    }\n    \n    if total_fruits == 0 {\n        total_fruits\
    \ = 1\n    }\n    \n    if total_apples == 0 {\n        if total_oranges == 0\
    \ {\n            total_apples = 1\n        }\n    } else {\n        total_apples\
    \ = total_apples + num_apples\n    }\n    \n    \n    if total_oranges == 0 {\n\
    \        total_oranges = 1\n    }\n    \n    return total_mangoes", "    let stringAsArray\
    \ = s.componentsSeparatedByString(\" \").map(String.init)\n    let apples = stringAsArray[0].flatMap({\
    \ Int($0) })\n    let oranges = stringAsArray[1].flatMap({ Int($0) })\n\n    let\
    \ totalNumberOfFruits = apples.count + oranges.count\n\n    let applesOrOrangesNumberOfFruits\
    \ = apples.count + oranges.count\n\n    return apples.reduce(0, { $0 + $1 }) +\
    \ oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 }) - apples.reduce(0,\
    \ { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 })\
    \ - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0,\
    \ { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 })\
    \ - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0,\
    \ { $0 + $1 }) - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0, { $0 + $1 })\
    \ - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0,\
    \ { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 })\
    \ - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0,\
    \ { $0 + $1 }) - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0, { $0 + $1 })\
    \ - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0,\
    \ { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 })\
    \ - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0,\
    \ { $0 + $1 }) - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0, { $0 + $1 })\
    \ - apples.reduce(0, { $0 + $1 }) - oranges.reduce(0, { $0 + $1 }) - apples.reduce(0,\
    \ { $0 + $", "    var arr = [String]()\n    for _ in 0..<n {\n        arr.append(\"\
    apples\")\n    }\n    for _ in 0..<n {\n        arr.append(\"oranges\")\n    }\n\
    \    arr.append(\"mango\")\n    var sum: Int = s.componentsSeparatedByString(\"\
    and\").count\n    for _ in 0..<n {\n        sum += arr.count\n    }\n    return\
    \ sum", "    let r = s.characters.split{$0 == \" \"}.map({ $0.trimmingCharacters(in:\
    \ .whitespacesAndNewlines) }).map({ Int($0)!})\n    let nn = r.count\n    var\
    \ i = 0\n    var j = 0\n    var s = 0\n    for _ in 0..<n{\n        if i == nn{\n\
    \            i += Int(r[j])!\n            j++\n        }else{\n            i +=\
    \ Int(r[j])!\n            s += 1\n        }\n    }\n    return s", "    var result\
    \ = 0\n    \n    if let fruit = s.components(separatedBy: \" \").first {\n   \
    \     \n        if let num = Int(fruit) {\n            \n            if num >=\
    \ 1 && num <= n {\n                result = num\n            }\n        }\n  \
    \  }\n    \n    return result", "    let arrayOfStrings = s.characters.split(\"\
    and\")\n    let arrayOfNumbers = arrayOfStrings[0].characters.split(\" \")\n \
    \   let arrayOfNum = arrayOfNumbers[0].characters.split(\"\")\n    let arrayOfNum2\
    \ = arrayOfNum[0].characters.split(\"\")\n    \n    if arrayOfNum2.count != n\
    \ {\n        return 0\n    }\n    \n    var sum = 0\n    for i in 0..<n {\n  \
    \      let val = arrayOfNum2[i]\n        if val == \"o\" {\n            sum +=\
    \ Int(arrayOfNum[i])!\n        }\n    }\n    return sum", "    var counter: Int\
    \ = 0\n    let words = s.characters.split{$0 == \" \"}\n    for word in words\
    \ {\n        switch word {\n        case \"a\":\n            counter += n\n  \
    \      case \"o\":\n            counter += n\n        case \"m\":\n          \
    \  counter += n\n        default:\n            continue\n        }\n    }\n  \
    \  return counter", "    \n    var apples = Int(s.characters.split(separator:\
    \ \" \").map(String.init).filter { $0.isNumeric }.joined())\n    var oranges =\
    \ Int(s.characters.split(separator: \" \").map(String.init).filter { $0.isNumeric\
    \ }.joined())\n    var fruits = Int(s.characters.split(separator: \" \").map(String.init).filter\
    \ { $0.isNumeric }.joined())\n    \n    var totalApples = apples + oranges\n \
    \   var totalFruits = fruits\n    \n    if apples == 0 {\n        totalApples\
    \ = totalFruits\n        totalFruits = 0\n    }\n    \n    var totalOranges =\
    \ 0\n    \n    if oranges == 0 {\n        totalOranges = 0\n    } else {\n   \
    \     totalOranges = totalApples * oranges\n    }\n    \n    var totalMango =\
    \ 0\n    \n    if totalApples * totalOranges == totalFruits {\n        totalMango\
    \ = totalApples - totalOranges\n    }\n    \n    if totalMango == 0 {\n      \
    \  totalMango = totalApples - totalOranges\n    }\n    \n    if totalMango > n\
    \ {\n        return 0\n    } else {\n        return totalMango\n    }", "    //\
    \ write your code in Python 3.7\n    if let apples = Int(s.components(separatedBy:\
    \ \" \")[0]),\n        let oranges = Int(s.components(separatedBy: \" \")[1]),\n\
    \        let fruits = apples + oranges {\n        return fruits-(n-fruits)\n \
    \   }\n    return 0", "    guard let count = s.components(separatedBy: \" \").reduce(0)\
    \ { (accumulator, currentValue) -> Int in\n        var accumulatorValue = Int(accumulator)\n\
    \        let currentValue = Int(currentValue)\n        return accumulatorValue\
    \ + currentValue\n    } else { return 0 }\n    guard let apples = Int(s.components(separatedBy:\
    \ \" \").first!) else { return 0 }\n    guard let oranges = Int(s.components(separatedBy:\
    \ \" \").last!) else { return 0 }\n    guard let mangos = apples + oranges - 4\
    \ else { return 0 }\n    return mangos", "    \n    if let intString = s as String?\
    \ {\n        let totalApples = Int(intString)!\n        var totalOranges = 0\n\
    \        for _ in 0..<totalApples {\n            if let fruit = s.characterAtIndex(s.startIndex.advancedBy(totalApples\
    \ - 1)) as String? {\n                totalOranges += Int(fruit)!\n          \
    \  }\n        }\n        return totalOranges * n / totalApples\n    } else {\n\
    \        return 0\n    }", "    let array = s.components(separatedBy: \" \")\n\
    \    let a1 = array.map { Int($0) }\n    let a2 = array.map { Int($0) }\n    \n\
    \    var sum = 0\n    for i in 0..<(a1.count + a2.count) {\n        sum += (a1[i]\
    \ || a2[i]) * n\n    }\n    return sum", "    let arr = s.characters.split(\"\
    \ \")\n    var total: Int = 0\n    for i in  0 ..< arr.count{\n        total +=\
    \ Int(arr[i]) ?? 0\n    }\n    return total", "    return s.components(separatedBy:\
    \ \" \")\n        .filter({$0.isDigit})\n        .map({Int($0)})\n        .filter({$0\
    \ < n})\n        .count", "   \n    var fruits: String = \"\"\n    var total =\
    \ 0\n    var applesNum = 0\n    var orangesNum = 0\n    var mangoNum = 0\n   \
    \ var count = 1\n    \n    for index in 0...s.characters.count {\n        \n \
    \       let char: Character = \"0\"...\"9\"\n        let index = s.index(char,\
    \ range: String.Index(char, in: s))\n        \n        if index != nil {\n   \
    \         \n            if s[index] != \" \" {\n            \n               \
    \ if s[index].lowercased() == \"a\" {\n                    applesNum = applesNum\
    \ + 1\n                } else {\n                    orangesNum = orangesNum +\
    \ 1\n                }\n            }\n        }\n    }\n    \n    apples = applesNum\n\
    \    oranges = orangesNum\n    mango = 0\n    \n    total = apples + oranges +\
    \ mango\n    \n    totalNum = total + mangoNum\n    \n    switch totalNum {\n\
    \        case 0...1:\n            fruits = \"No fruits in the basket\"\n     \
    \   case 1...10:\n            fruits = \"1 apple\"\n        case 11...20:\n  \
    \          fruits = \"2 apples\"\n        case 21...30:\n            fruits =\
    \ \"3 apples\"\n        case 31...40:\n            fruits = \"4 apples\"\n   \
    \     case 41...50:\n            fruits = \"5 apples\"\n        case 51...60:\n\
    \            fruits = \"6 apples\"\n        case 61...70:\n            fruits\
    \ = \"7 apples\"\n        case 71...80:\n            fruits = \"8 apples\"\n \
    \       case 81...90:\n            fruits = \"9 apples\"\n        case 91...100:\n\
    \            fruits = \"10 apples\"\n        case 101...110:\n            fruits\
    \ = \"11 apples\"\n        case 111...120:\n            fruits = \"12 apples\"\
    \n        case 121...130:\n            fruits = \"13 apples\"\n        case 131...140:\n\
    \            fruits = \"14 apples\"\n        case 141...150:\n            fruits\
    \ = \"15 apples\"\n        case 151...160:\n            fruits = \"16 apples\"\
    \n        case 161...170:\n            fruits = \"17 apples\"\n        case 171...180:\n\
    \            fruits = \"18 apples\"\n        case 181...190:\n            fruits\
    \ = \"19 apples\"\n        case 191...200:\n            fruits = \"20 apples\"\
    \n        case 201...210:\n            fruits = \"21 apples\"\n        case 211...220:\n\
    \            fruits = \"22 apples\"\n        case 221...230:\n            fruits\
    \ = \"23 apples\"\n        case 231...240:\n            fruits = \"24 apples\"",
  "    let apples = s.characters.split(separator: \"and\").map(String.init)\n    var\
    \ appleCounts = [Int]()\n    var orangeCounts = [Int]()\n    var mangoCounts =\
    \ [Int]()\n    var totalFruits = 0\n    \n    apples.forEach { (fruit) in\n  \
    \      if (fruit == \"apples\") {\n            appleCounts.append(1)\n       \
    \     totalFruits += appleCounts.last!\n        } else {\n            orangeCounts.append(1)\n\
    \            totalFruits += orangeCounts.last!\n        }\n    }\n    \n    orangeCounts.forEach\
    \ { (fruit) in\n        if (fruit == \"oranges\") {\n            orangeCounts.append(1)\n\
    \            totalFruits += orangeCounts.last!\n        } else {\n           \
    \ mangoCounts.append(1)\n            totalFruits += mangoCounts.last!\n      \
    \  }\n    }\n    \n    var fruitsOnBasket = totalFruits - (appleCounts.last! +\
    \ orangeCounts.last!)\n    \n    if appleCounts.last! == 0 {\n        appleCounts.removeLast()\n\
    \        fruitsOnBasket -= appleCounts.last!\n    }\n    \n    if orangeCounts.last!\
    \ == 0 {\n        orangeCounts.removeLast()\n        fruitsOnBasket -= orangeCounts.last!\n\
    \    }\n    \n    if fruitsOnBasket > 0 {\n        mangoCounts.append(fruitsOnBasket)\n\
    \        totalFruits += fruitsOnBasket\n    }\n    return mangoCounts.last!",
  "    if s == \"\" {\n        return Int(n)\n    }\n\n    var total = 0\n    for\
    \ char in s.characters {\n        switch char {\n        case \"a\":\n       \
    \     total += Int(Int(char))\n        case \"o\":\n            total += Int(Int(char))\n\
    \        default:\n            total += Int(Int(char))\n        }\n    }\n\n \
    \   return Int(n) - total", "    // write your code in swift 4.1\n    let stringSplit\
    \ = s.characters.split(separator: \",\")\n    var totalApples = 0\n    var totalOranges\
    \ = 0\n    var totalMangoes = 0\n    for string in stringSplit {\n        let\
    \ stringSplit = string.characters.split(separator: \" \")\n        if stringSplit[1]\
    \ == \"apples\" {\n            totalApples += Int(stringSplit[0])!\n        }\
    \ else if stringSplit[1] == \"oranges\" {\n            totalOranges += Int(stringSplit[0])!\n\
    \        }\n    }\n\n    var fruitsTotal = totalApples + totalOranges\n    for\
    \ _ in 0..<n {\n        if fruitsTotal >= n {\n            fruitsTotal -= n\n\
    \            totalMangoes += 1\n        } else {\n            fruitsTotal += n\n\
    \        }\n    }\n    return totalMangoes", "    var sum = 0\n    var num = 0\n\
    \    var fruit = \"\"\n    var fruits = \"\"\n\n    for i in s.split(\" \") {\n\
    \        fruit = i\n        fruits = \"apples, oranges, and mango\"\n    }\n\n\
    \    for i in fruits.split(\" \") {\n        sum += Int(i)\n    }\n\n    for _\
    \ in 0..<n {\n        for i in fruits.split(\" \") {\n            num += Int(i)\n\
    \        }\n        if num >= sum {\n            return num - sum\n        }\n\
    \    }\n    return -1", "    var a = 0\n    var b = 0\n    for i in s.characters\
    \ {\n        a = a + (Int(i) - 48)\n    }\n    for i in s.characters {\n     \
    \   b = b + (Int(i) - 48)\n    }\n    return n * ((a + b) % n + a)", '    return
    fruitDistribution(s)', "    // write your code here\n    if s.isEmpty {\n    \
    \    return 0\n    }\n    let arr = s.componentsSeparatedByString(\"and\")\n \
    \   if arr.count == 1 {\n        return Int(arr[0]) \n    }\n    var apples =\
    \ 0\n    var oranges = 0\n    var mangos = 0\n    for x in arr {\n        let\
    \ str = x.componentsSeparatedByString(\" \")\n        if str.count == 2 {\n  \
    \          apples += Int(str[0]) ?? 0\n            oranges += Int(str[1]) ?? 0\n\
    \        }\n    }\n    return mangos + oranges + apples - n", "    var total =\
    \ mango_count * apples_count * oranges_count \n    for _ in s.characters {\n \
    \       total += s.characters.count - mango_fruits.characters.count * apples_count\
    \ * oranges_count \n    }\n    return (total / n)", "    return s.split(separator:\
    \ \" \").reduce(0) {\n        accumulate, element in\n        let (accumulate,\
    \ element) = (accumulate + Int(element), element) \n        switch element {\n\
    \        case \"apples\": accumulate += n\n        case \"oranges\": accumulate\
    \ += n\n        case \"mango\": accumulate += n\n        default: accumulate\n\
    \        }\n        return accumulate\n    }", "    // Write your code here\n\
    \    var count = 0\n    \n    \n    if n <= 0 {\n        return 0\n    }\n   \
    \ \n    let arr = s.components(separatedBy: \" \")\n    \n    for i in 0...arr.count\
    \ {\n        \n        if arr[i] == \"apples\" {\n            count += n\n   \
    \     }else if arr[i] == \"oranges\" {\n            count += 1\n        }\n  \
    \  }\n    \n    return count", "    // TODO: Write a code here that takes the\
    \ above inputs and prints the output that you would expect \n    // to see.\n\
    \    return 0", '    return fruit_distribution_helper(s.characters.split(separator:
    " ").map({ Int($0)!}) , n)', "  let sum: Int = s.split(separator: \" \").map(String.init).reduce(0)\
    \ { $0 + Int($1) }\n  let num: Int = n % sum\n  let newSum = sum - num\n  return\
    \ newSum", "    let numberOfApples = s.components(separatedBy: \" \")\n      \
    \  .map { Int($0.components(separatedBy: \" \")[0]) }\n    let numberOfOranges\
    \ = s.components(separatedBy: \" \")\n        .map { Int($0.components(separatedBy:\
    \ \" \")[1]) }\n    return (numberOfOranges.reduce(0) ~= 0 ? 0 : numberOfApples.reduce(0))\
    \ / n", "    guard let apples = Int(components(s, 0)!), let oranges = Int(components(s,\
    \ 1)!), apples + oranges < n, apples == oranges, oranges >= 1 else {\n       \
    \ return n\n    }\n    return apples - oranges + fruit_distribution(s.substring(from:\
    \ s.index(s.startIndex, offsetBy: 1)!), n: n - apples - oranges)", "    let arr\
    \ = s.components(separatedBy: \" \")\n    guard arr.count > 1 else { return 0\
    \ }\n    let nums = arr.map { Int($0) }\n    let apples = nums[0]\n    let oranges\
    \ = nums[1]\n    var count = 0\n    for fruit in arr {\n        if fruit == \"\
    apples\" {\n            count += apples\n        } else if fruit == \"oranges\"\
    \ {\n            count += oranges\n        } else {\n            count += fruits.count\n\
    \        }\n    }\n    return count - oranges - apples", "    var total = 0\n\
    \    for i in s.characters.split(\" \").map({ Int($0)!}) where !(i == 0 || i ==\
    \ 1) {\n        total += i\n    }\n\n    return total % n", "    var apples =\
    \ 0\n    var oranges = 0\n    var mangoes = 0\n    \n    for _ in s.characters.reversed().map({\
    \ char in \n        switch char {\n        case \"a\": apples -= 1\n        case\
    \ \"o\": oranges -= 1\n        case \"m\": mangoes += 1\n        }\n    }) {\n\
    \        \n    }\n    \n    return mangoes", "    var count = 0\n    let splitStrArr\
    \ = s.components(separatedBy: \" \")\n    for str in splitStrArr {\n        let\
    \ intStr = str.components(separatedBy: \",\").map(String.init).map { Int($0) }\n\
    \        if intStr.count == 1 {\n            count += intStr.first ?? 0\n    \
    \    } else if intStr.count == 2 {\n            count += intStr.first! * intStr.last!\n\
    \        }\n    }\n    return count", "    guard n >= 0 else { return 0 }\n  \
    \  let arr = s.components(separatedBy: \" \")\n    var total = 0\n    if let nums\
    \ = arr.map({ Int($0) }) {\n        total = nums.reduce(0, +)\n    }\n    return\
    \ arr.count - total", "    var fruits = 0\n    var totalNumber = 0\n    var totalFruits\
    \ = 0\n    var index = 0\n\n    while index < s.characters.count {\n        if\
    \ let fruitValue = s.characters.split{$0 == \" \"}.first?.integerValue {\n   \
    \         if totalNumber + fruitValue == n {\n                totalFruits += fruitValue\n\
    \                totalNumber += fruitValue\n            }\n\n            fruits\
    \ += fruitValue\n            totalNumber += fruitValue\n        } else {\n   \
    \         totalNumber += s.characters.split{$0 == \"and\"}.first?.integerValue\n\
    \            totalFruits += totalNumber\n        }\n\n        index += 1\n   \
    \ }\n\n    return totalFruits == 0 ? 0 : totalFruits.integerValue - 1", "    let\
    \ splitString1 = s.split(separator: \"and\", maxSplits: 1)\n    let firstString\
    \ = splitString1.first!\n    let secondString = splitString1.last!\n    let firstSplit\
    \ = firstString.split(separator: \" \")\n    let secondSplit = secondString.split(separator:\
    \ \" \")\n    var apples = Int(firstSplit[0])!\n    var oranges = Int(firstSplit[1])!\n\
    \    var mango = Int(secondSplit[0])!\n    if apples == 0 {\n        mango +=\
    \ n\n    } else {\n        mango += apples + oranges\n    }\n    if oranges ==\
    \ 0 {\n        mango += n\n    } else {\n        mango += apples + oranges\n \
    \   }\n    return mango", "    var apples = 0\n    var oranges = 0\n    var mangoes\
    \ = 0\n    var total_fruits = s.split(separator: \" \").map({ Int($0) }).reduce(0)\
    \ { (accum, currentValue) -> Int in\n        if currentValue == 1 {\n        \
    \    orange += accum\n        }\n        if currentValue == 2 {\n            apple\
    \ += accum\n        }\n        if currentValue == 3 {\n            mangoes +=\
    \ accum\n        }\n        if currentValue == 0 {\n            mangoes += accum\n\
    \        }\n        return accum\n    }\n    guard total_fruits > 0 else {\n \
    \       return 0\n    }\n    return mangoes - ((apples * 3) + (oranges * 2))",
  '    return fruit.count + fruit2.count + fruit3.count + fruit4.count + fruit5.count
    + fruit6.count + fruit7.count + fruit8.count + fruit9.count + fruit10.count +
    fruit11.count + fruit12.count + fruit13.count + fruit14.count + fruit15.count
    + fruit16.count + fruit17.count + fruit18.count + fruit19.count', "    let arr\
    \ = s.components(separatedBy: \" \")\n    if arr.count == n {\n        return\
    \ n - arr.reduce(0) { $0 + Int($1) }\n    } else {\n        return 0\n    }",
  "    let s: String = \"1 oranges and 1 apples and 4 mangos\"\n    let n = s.characters.count\n\
    \    let arr: NSArray = s.componentsSeparatedByString(\" \").map { $0 as String\
    \ }\n    \n    let strArr = arr.map {\n        String($0.characters.count)\n \
    \   }\n    let strArr2 = arr.map {\n        String($0.characters.count)\n    }\n\
    \    let arr2 = strArr.map {\n        String($0)\n    }\n    \n    if strArr2.contains(strArr[0])\
    \ {\n        \n        return n - strArr.firstIndex(of: strArr[0]).map {\n   \
    \         Int($0)\n        }.first + n\n    }\n    return n", "    // write your\
    \ code in JavaScript (Node.js 8.9.4)\n    let arr = s.split(\" \")\n    let a\
    \ = Int(arr[0])\n    let b = Int(arr[1])\n    let c = Int(arr[2])\n    let d =\
    \ Int(arr[3])\n    let arr = [\"apple\", \"orange\", \"mango\"]\n    var m = a*b\n\
    \    for i in 0..<n {\n        if (m == c) {\n            m = d\n        }\n \
    \       m += c\n    }\n    return m", "    var apples: int = 0\n    var oranges:\
    \ int = 0\n    var mangos: int = 0\n    for _ in s.characters {\n        switch\
    \ s.characters.first {\n        case \"a\":\n            apples += 1\n       \
    \ case \"o\":\n            oranges += 1\n        case \"m\":\n            mangos\
    \ += 1\n        default:\n            break\n        }\n    }\n    return mangos\
    \ + oranges - apples - n/2", "    var count = 0\n    var sumOfNumberOfFruitsInBasket\
    \ = 0.0\n    var lastNumberOfFruitsInBasket = Int(0)\n    \n    for i in s.characters.reverse(){\n\
    \        if i == \"a\" || i == \"o\" || i == \"m\" || i == \" \" {\n         \
    \   sum += Int(i)!\n            sumOfNumberOfFruitsInBasket += 1\n        } else\
    \ if i == \" \" {\n            if sumOfNumberOfFruitsInBasket == n {\n       \
    \         count = sumOfNumberOfFruitsInBasket\n            }\n        } else {\n\
    \            sum += Int(i)!\n        }\n    }\n    return count", '    return
    s.split(separator: " ").filter({$0.isDigit}).reduce(0,+) * n', "    var count1:\
    \ Int = 0\n    var count2: Int = 0\n    var count3: Int = 0\n    var count4: Int\
    \ = 0\n    var count5: Int = 0\n    var count6: Int = 0\n    var count7: Int =\
    \ 0\n    var count8: Int = 0\n    var count9: Int = 0\n    var count10: Int =\
    \ 0\n    var count11: Int = 0\n    var count12: Int = 0\n    var count13: Int\
    \ = 0\n    var count14: Int = 0\n    var count15: Int = 0\n    var count16: Int\
    \ = 0\n    var count17: Int = 0\n    var count18: Int = 0\n    var count19: Int\
    \ = 0\n    var count20: Int = 0\n    for _ in 0..<s.characters.count {\n     \
    \   let c = s.characters[_]\n        switch c {\n        case \"a\":\n       \
    \     count1 += 1\n        case \"b\":\n            count2 += 1\n        case\
    \ \"c\":\n            count3 += 1\n        case \"d\":\n            count4 +=\
    \ 1\n        case \"e\":\n            count5 += 1\n        case \"f\":\n     \
    \       count6 += 1\n        case \"g\":\n            count7 += 1\n        case\
    \ \"h\":\n            count8 += 1\n        case \"i\":\n            count9 +=\
    \ 1\n        case \"j\":\n            count10 += 1\n        case \"k\":\n    \
    \        count11 += 1\n        case \"l\":\n            count12 += 1\n       \
    \ case \"m\":\n            count13 += 1\n        case \"n\":\n            count14\
    \ += 1\n        case \"o\":\n            count15 += 1\n        case \"p\":\n \
    \           count16 += 1\n        case \"q\":\n            count17 += 1\n    \
    \    case \"r\":\n            count18 += 1\n        case \"s\":\n            count19\
    \ += 1\n        case \"t\":\n            count20 += 1\n        }\n    }\n    let\
    \ num1 = n/count1\n    let num2 = n/count2\n    let num3 = n/count3\n    let num4\
    \ = n/count4\n    let num5 = n/count5\n    let num6 = n/count6\n    let num7 =\
    \ n/count7\n    let num8 = n/count8\n    let num9 = n/count9\n    let num10 =\
    \ n/count10\n    let num11 = n/count11\n    let num12 = n/count12\n    let num13\
    \ = n/count13\n    let num14 = n/count14\n    let num15 = n/count15\n    let num16\
    \ = n/count16\n    let num17 = n/count17\n    let num18 = n/count18\n    let num19\
    \ = n/count19\n    let num20 = n/count20\n    var num: Int = 0\n", "    var apples\
    \ = 0\n    var oranges = 0\n    var mangos = 0\n    for str in s.split(\" \")\
    \ {\n        if str == \"apples\" || str == \"oranges\" {\n            apples\
    \ += Int(str)!\n        } else if str == \"mango\" {\n            mangos += Int(str)!\n\
    \        }\n    }\n\n    return mangos + apples / (apples + oranges + mangos)",
  "  var sum: Int = 0\n  var m: Int = 0\n  for s in s.characters {\n    if s == \"\
    \ \" {\n      if m > sum {\n        sum = sum + m\n      }\n      m = 0\n    }\
    \ else {\n      m += 1\n    }\n  }\n  return sum", "    // TODO: Fill out your\
    \ solution here\n    if n%12 == 0 {\n        let strNum = Int(s)\n        let\
    \ appleStr = strNum - strNum%12\n        let orangeStr = strNum%12\n        let\
    \ appleInt = appleStr\n        let orangeInt = orangeStr\n        var result =\
    \ appleInt*12 + orangeInt\n        return result\n    } else {\n        return\
    \ 0\n    }", '    return s.componentsSeparatedByString(" ").filter{ $0.characters.count
    == 1 && $0.characters.first == "1" }.count', "    var count = 0\n    if let str\
    \ = s.split(separator: \" \").toArray() {\n        let nums = str\n          \
    \  .filter { Int($0) != 0 }\n            .map { Int($0) }\n            .map {\
    \ $0 * n}\n            .reduce(0, *)\n        count = nums.reduce(0, *)\n    }\n\
    \    return count", "    if s == \"\" {\n        return 0\n    }\n    let firstChar\
    \ = s[0]\n    let str = s.stringByReplacingOccurrencesOfString(firstChar, withString:\
    \ \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n    var apples\
    \ = 0\n    var oranges = 0\n    var bananas = 0\n    var mangoes = 0\n    var\
    \ fruits = 0\n    for char in str {\n        switch char {\n        case \"a\"\
    :\n            apples += 1\n        case \"o\":\n            oranges += 1\n  \
    \      case \"b\":\n            bananas += 1\n        case \"m\":\n          \
    \  mangoes += 1\n        default:\n            fruits += 1\n        }\n    }\n\
    \    return (fruits - mangoes) % n", "    var a = 0\n    var b = 0\n    var m\
    \ = 0\n    for _ in s.characters.reverse() {\n        a = a + Int(String(self[a:b]).lowercased())\n\
    \        b = b + 1\n        if b > s.characters.count {\n            break\n \
    \       }\n    }\n    for _ in s.characters.reverse() {\n        m = m + Int(String(self[a:b]).lowercased())\n\
    \        b = b + 1\n        if b > s.characters.count {\n            break\n \
    \       }\n    }\n    return n * m / a", "    let numApple = s.components(separatedBy:\
    \ \"apples\")[0]\n    let numOranges = s.components(separatedBy: \"oranges\")[0]\n\
    \    var totalApple = Int(numApple)\n    var totalOrange = Int(numOranges)\n \
    \   var totalMango = 0\n    for i in 1...n {\n        if i % 5 == 0 {\n      \
    \      if totalMango == 0 {\n                totalMango = Int(s.components(separatedBy:\
    \ \"mango\")[0])\n            }\n        }\n        if totalApple == 0 {\n   \
    \         totalApple = Int(s.components(separatedBy: \"apples\")[0])\n       \
    \ }\n        if totalOrange == 0 {\n            totalOrange = Int(s.components(separatedBy:\
    \ \"oranges\")[0])\n        }\n    }\n    return totalMango", "    var sum: Int\
    \ = 0\n    \n    if s.count >= n {\n        sum = Int(s.split(\" \")[0])\n   \
    \     if s.count > n {\n            sum += Int(s.split(\" \")[1])\n        }\n\
    \    }\n    return sum", "    guard let a = s.components(separatedBy: \" \")\n\
    \        .flatMap { Int($0) } else { return 0 }\n    guard let b = n.components(separatedBy:\
    \ \" \")\n        .flatMap { Int($0) } else { return 0 }\n    var sum = a\n  \
    \  for _ in 0..<b {\n        guard let _ = next(sum) else { return 0 }\n     \
    \   sum += 1\n    }\n    return sum", "    let arr = s.components(separatedBy:\
    \ \" \").map{Int($0)!}\n    let sum = arr.filter { $0 > 0 }.count\n    if sum\
    \ == 0 {\n        return 0\n    }\n    let avg = Float(arr.count) / Float(sum)\n\
    \    let diff = arr.map { $0 - avg }\n    return diff.reduce(0, +)", "    // write\
    \ your code in swift 3.0 format\n    var totalApples = 0\n    var totalOranges\
    \ = 0\n    var totalFruits = 0\n    var totalFruitsInBasket = n\n    var firstPartOfFruit\
    \ = \"\"\n    var secondPartOfFruit = \"\"\n    var result = \"\"\n    var i =\
    \ 0\n    var j = 0\n    var mango = 0\n    \n    while i < s.count {\n       \
    \ firstPartOfFruit = String(s.characters[i..<i+3])\n        secondPartOfFruit\
    \ = String(s.characters[i+3..<i+6])\n        \n        if firstPartOfFruit ==\
    \ \"apples\" {\n            totalApples += Int(String(s.characters[i+6..<i+9]))\n\
    \            i += 9\n        } else if firstPartOfFruit == \"oranges\" {\n   \
    \         totalOranges += Int(String(s.characters[i+6..<i+9]))\n            i\
    \ += 9\n        }\n        \n        if firstPartOfFruit == \"mango\" {\n    \
    \        mango += Int(String(s.characters[i+9..<i+12]))\n            i += 12\n\
    \        } else if firstPartOfFruit == \"apples\" {\n            totalApples +=\
    \ Int(String(s.characters[i+12..<i+15]))\n            i += 15\n        } else\
    \ if firstPartOfFruit == \"oranges\" {\n            totalOranges += Int(String(s.characters[i+12..<i+15]))\n\
    \            i += 15\n        }\n        \n        if secondPartOfFruit == \"\
    apples\" {\n            totalApples += Int(String(s.characters[i+15..<i+18]))\n\
    \            i += 18\n        } else if secondPartOfFruit == \"oranges\" {\n \
    \           totalOranges += Int(String(s.characters[i+15..<i+18]))\n         \
    \   i += 18\n        }\n        \n        if secondPartOfFruit == \"mango\" {\n\
    \            mango += Int(String(s.characters[i+18..<i+21]))\n            i +=\
    \ 21\n        }\n        \n        if secondPartOfFruit == \"apples\" {\n    \
    \        totalApples += Int(String(s.characters[i+21..<i+24]))\n            i\
    \ += 24\n        } else if secondPartOfFruit == \"oranges\" {\n            totalOranges\
    \ += Int(String(s.characters[i+21..<i+24]))\n            i += 24\n        }\n\
    \        \n        if secondPartOfFruit == \"mango\" {\n            mango += Int(String(s.characters[i+24..<i+27",
  "    var total = 0\n    var count = 0\n\n    var apples = String()\n    var oranges\
    \ = String()\n\n    if s.contains(\"apples\") {\n        apples = s.components(separatedBy:\
    \ \" \").first!\n    }\n\n    if s.contains(\"oranges\") {\n        oranges =\
    \ s.components(separatedBy: \" \").first!\n    }\n\n    total = apples.toInt()\
    \ + oranges.toInt()\n\n    if total <= n {\n        return count\n    }\n\n  \
    \  if total > n {\n        count = total - n\n    }\n\n    return fruit_distribution(s,\
    \ n, apples, oranges, total)", "    guard let number = Int(s) else {\n       \
    \ return -1\n    }\n    return number * (number * 2 + 1) // 5+6+5 = 18 ", "  \
    \  let numbers = s.components(separatedBy: \" \").map { Int($0) }\n    var apples\
    \ = numbers[0]\n    var oranges = numbers[1]\n    var mangos = numbers[2]\n\n\
    \    while apples + oranges > n {\n        apples--\n        oranges--\n    }\n\
    \    while apples < n && oranges < n {\n        apples++\n        oranges++\n\
    \    }\n    while apples < n {\n        apples++\n    }\n    while oranges < n\
    \ {\n        oranges++\n    }\n    while apples + oranges < n {\n        apples++\n\
    \        oranges++\n    }\n    while apples > 0 {\n        apples--\n    }\n \
    \   while oranges > 0 {\n        oranges--\n    }\n    while mangos > 0 {\n  \
    \      mangos--\n    }\n    return mangos", "    // code here\n    var fruit_count_array\
    \ = [Int]()\n    var apples = 0\n    var oranges = 0\n    var mangoes = 0\n  \
    \  var apples_count = 0\n    var oranges_count = 0\n    var mangoes_count = 0\n\
    \    var apples_sum = 0\n    var oranges_sum = 0\n    var mangoes_sum = 0\n  \
    \  \n    \n    \n    for i in s.characters.reversed() {\n        if i != \"0\"\
    \ && i != \" \" && i != \",\" {\n            switch i {\n            case \"a\"\
    :\n                apples_count += 1\n                apples_sum += apples_count\
    \ * apples_count\n            case \"o\":\n                oranges_count += 1\n\
    \                oranges_sum += oranges_count * oranges_count\n            case\
    \ \"m\":\n                mangoes_count += 1\n                mangoes_sum += mangoes_count\
    \ * mangoes_count\n            }\n        } else {\n            apples = 0\n \
    \           oranges = 0\n            mangoes = 0\n            apples_count = 0\n\
    \            oranges_count = 0\n            mangoes_count = 0\n            apples_sum\
    \ = 0\n            oranges_sum = 0\n            mangoes_sum = 0\n        }\n \
    \   }\n    \n    \n    \n    return mangoes", "    return int(s.split(\" \")[0].split(\"\
    and\").filter({ !$0.isEmpty }).reduce(0) {\n        var apples = $0.toInt()\n\
    \        var oranges = $1.toInt()\n        var apples_or_oranges = apples + oranges\n\
    \        return (apples_or_oranges % n) == 0\n            ? apples_or_oranges\n\
    \            : apples_or_oranges / n\n    })", "    var apples = 0\n    var oranges\
    \ = 0\n    var mangos = 0\n    var current = 0\n\n    for _ in s.characters {\n\
    \        current += 1\n        if current == 1 {\n            apples += 1\n  \
    \      } else if current == 2 {\n            oranges += 1\n        } else if current\
    \ == 3 {\n            mangos += 1\n        }\n    }\n\n    return mangos * n +\
    \ apples * n - oranges * n", "    var apples = Int(s.substring(0,s.rangeOfString(\"\
    apples\")!.endIndex).components(separatedBy: \" \")[1].characters.first!)\n  \
    \  var oranges = Int(s.substring(s.rangeOfString(\"apples\")!.endIndex, s.rangeOfString(\"\
    oranges\")!.endIndex).components(separatedBy: \" \")[1].characters.first!)\n \
    \   var fruits = apples + oranges\n    while fruits <= n {\n        apples +=\
    \ apples + oranges\n        oranges += oranges\n        fruits += apples + oranges\n\
    \    }\n    return Int(s.substring(s.rangeOfString(\"oranges\")!.endIndex).components(separatedBy:\
    \ \" \")[1].characters.first!)", "    var count = 0\n    for i in s.characters.reverse()\
    \ {\n        if let number = Int(i) {\n            count += number\n        }\n\
    \    }\n    return count - n", "    let m = s.split(separator: \" \").map { Int($0)\
    \ }\n    return ((m[0] + m[1]) % n).max()!", "    let arr = s.componentsSeparatedByString(\"\
    \ \")\n    let nums = arr[0].componentsSeparatedByString(\"and\")\n    let apples\
    \ = Int(nums[0].componentsSeparatedByString(\" \").last!)\n    let oranges = Int(nums[1].componentsSeparatedByString(\"\
    \ \").last!)\n    return apples + oranges", "    let mut count_apple = 0\n   \
    \ let mut count_orange = 0\n    for s in s.characters {\n        if s == \"a\"\
    \ {\n            count_apple++\n        } else if s == \"o\" {\n            count_orange++\n\
    \        } else if s == \"m\" {\n            count_apple += n\n            count_orange\
    \ += n\n        }\n    }\n    return count_apple + count_orange", '    return
    int(s.split(separator: " ")[0].split(separator: ",").map(Int.init).reduce(0, +)
    / n)', "    let str : String = \"\\(s).apples and \\(s).oranges\"\n    let strArray\
    \ : [String] = str.components(separatedBy: \" \").map(String.init)\n\n    let\
    \ resultArray : [Int] = strArray.enumerated().filter({ (index, element) -> Bool\
    \ in\n        return index < n\n    }).map({ index, element in\n        let numberOfApples\
    \ = element.components(separatedBy: \" \").count\n        let numberOfOranges\
    \ = element.components(separatedBy: \" \").last!.count\n        return numberOfOranges\
    \ - numberOfApples\n    }).reduce(0, combine: +);\n\n    return resultArray",
  "    let intString = s.toInt()\n    var count = 0\n    while intString > 0 {\n \
    \       count = intString - appleCount(intString) + 1\n        intString -= appleCount(intString)\n\
    \    }\n    return count + (appleCount(n) - appleCount(intString))", "    guard\
    \ let int = Int(s) else {\n        return -1\n    }\n    let numOfFruit = Int(string:\
    \ s) // number of fruit \n    var fruitCount = Int() \n    if n <= 0 { \n    \
    \    return -1 \n    } else if n == 1 {\n        return int \n    }\n    \n  \
    \  let fruits = [\"mango\",\"apple\",\"orange\"]\n    for fruit in fruits {\n\
    \        if int > n {\n            break\n        }\n        let index = fruits.index(fruit)\n\
    \        if index == 2 {\n            fruitCount += int - n\n        }\n     \
    \   n = n - 1\n    }\n    return fruitCount", "    var applesCount: Int = 0\n\
    \    var orangesCount: Int = 0\n    var fruitsCount: Int = 0\n    for i in s.characters.reverse()\
    \ {\n        if i == \"a\" {\n            applesCount += 1\n        } else if\
    \ i == \"o\" {\n            orangesCount += 1\n        } else {\n            fruitsCount\
    \ += 1\n        }\n    }\n    return fruitsCount * (orangesCount * 2 + applesCount\
    \ * n) / n", "    let counts = Dictionary(uniqueKeysWithValues: s.components(separatedBy:\
    \ \" \").compactMap { Int($0) })\n    let totals = Dictionary(uniqueKeysWithValues:\
    \ s.components(separatedBy: \" \").compactMap { Int($0) })\n    guard let apples\
    \ = counts[\"apples\"], let oranges = counts[\"oranges\"], let mango = counts[\"\
    mango\"] else { return 0 }\n    let total_apples = apples * n + totals[\"apples\"\
    ]\n    let total_oranges = oranges * n + totals[\"oranges\"]\n    let total_mango\
    \ = mango * n + totals[\"mango\"]\n    return total_mango - total_apples - total_oranges",
  "    var apples = 0\n    var oranges = 0\n    var mangos = 0\n    var fruits_counter\
    \ = 0\n    var s_array = s.characters\n    for i in s_array {\n        switch\
    \ i {\n        case \"a\": apples = apples + 1 // apples and oranges\n       \
    \ case \"o\": oranges = oranges + 1 // oranges and mangos\n        case \"m\"\
    : mangos = mangos + 1 // mangos\n        default: break\n        }\n    }\n  \
    \  for i in s_array {\n        switch i {\n        case \"a\": apples = apples\
    \ + 1 // apples and oranges\n        case \"o\": oranges = oranges + 1 // oranges\
    \ and mangos\n        case \"m\": mangos = mangos + 1 // mangos\n        default:\
    \ break\n        }\n    }\n    for i in s_array {\n        switch i {\n      \
    \  case \"a\": apples = apples + 1 // apples and oranges\n        case \"o\":\
    \ oranges = oranges + 1 // oranges and mangos\n        case \"m\": mangos = mangos\
    \ + 1 // mangos\n        default: break\n        }\n    }\n    for i in s_array\
    \ {\n        switch i {\n        case \"a\": apples = apples + 1 // apples and\
    \ oranges\n        case \"o\": oranges = oranges + 1 // oranges and mangos\n \
    \       case \"m\": mangos = mangos + 1 // mangos\n        default: break\n  \
    \      }\n    }\n    for i in s_array {\n        switch i {\n        case \"a\"\
    : apples = apples + 1 // apples and oranges\n        case \"o\": oranges = oranges\
    \ + 1 // oranges and mangos\n        case \"m\": mangos = mangos + 1 // mangos\n\
    \        default: break\n        }\n    }\n    for i in s_array {\n        switch\
    \ i {\n        case \"a\": apples = apples + 1 // apples and oranges\n       \
    \ case \"o\": oranges = oranges + 1 // oranges and mangos\n        case \"m\"\
    : mangos = mangos + 1 // mangos\n        default: break\n        }\n    }\n  \
    \  for i in s_array {\n        switch i {\n        case \"a\": apples = apples\
    \ + 1 // apples and oranges\n        case \"o\": oranges = oranges + 1 // oranges\
    \ and mangos\n        case \"m\": mangos = mangos + 1 // mangos\n        default:\
    \ break\n        }\n    }\n    for i in s_array {\n        switch i {\n      \
    \  case \"a\": apples = apples + 1 // apples and oranges\n        case \"o\":\
    \ oranges = oranges + 1 // oranges and mangos\n        case \"m\": mangos = ",
  "    // write your code in Swift 4.2 or later\n    let a = s.components(separatedBy:\
    \ \" \")\n    let r = Int(a[0])!\n    let b = Int(a[1])!\n    let c = Int(a[2])!\n\
    \    let d = Int(a[3])!\n    var m = Int(n) - r - b - c - d\n    if m > 0 { return\
    \ m }\n    else {\n        m = Int(n) - r - b - c\n        return m > 0 ? m :\
    \ 0\n    }", "    var apples = 0\n    var oranges = 0\n    var mangos = 0\n\n\
    \    var splittedStrings = s.split(separator: \"and\").map(String.init)\n    \n\
    \    for fruit in splittedStrings {\n        let fruits = fruit.split(separator:\
    \ \" \")\n        \n        if fruits.count > 2 {\n            print(\"invalid\
    \ input. only two fruits are allowed in a basket of fruits.\")\n            return\n\
    \        }\n\n        if fruits.count == 2 {\n            apples += Int(fruits[0])\n\
    \            oranges += Int(fruits[1])\n        }\n        else {\n          \
    \  mangos += Int(fruits[0])\n        }\n    }\n\n    return mangos - oranges",
  "    // TODO: fill this in.\n    let regex = try! NSRegularExpression(pattern: \"\
    ([0-9]+)( apples) and ([0-9]+)( oranges)\", options: .CaseInsensitive)\n    let\
    \ matches : Array = regex.matches(in: s, options: [], range: NSMakeRange(0, s.characters.count))\n\
    \    let apples = matches[0].numberOfRanges[0]\n    let oranges = matches[1].numberOfRanges[0]\n\
    \    return apples * oranges / n", "    if s == \"\" {\n        return -1\n  \
    \  }\n    if n == 0 {\n        return 0\n    }\n    \n    let numbers = s[0].characters.split{$0\
    \ == \" \"}.map(String.init)\n    let apple = numbers.map {Int($0)}\n    let orange\
    \ = numbers.map {Int($0)}\n    let mango = numbers.map {Int($0)}\n    var count\
    \ = 0\n    var total = 0\n    \n    for i in 0..<numbers.count {\n        total\
    \ += apple[i] + orange[i] + mango[i]\n        count += mango[i]\n        if total\
    \ == n {\n            return count + mango[i]\n        }\n    }\n    return -1",
  "    var apples = 0\n    var oranges = 0\n    var mangos = 0\n\n    for _ in s.characters\
    \ {\n        if let num = Int(string: String($0)) {\n            if num > 0 {\n\
    \                apples += num\n            } else {\n                oranges\
    \ += num\n            }\n        } else {\n            mangos += num\n       \
    \ }\n    }\n    return mangos > 0 ? mangos : apples > 0 ? apples : oranges", " \
    \   let numbers = s.components(separatedBy: \" \")\n    let apples = Int(numbers.first\
    \ ?? \"\")\n    let oranges = Int(numbers.last ?? \"\")\n    let fruits = apples\
    \ + oranges\n    let mangos = fruits.filter{\n        (fruit: Int) -> Bool in\n\
    \        (fruit == 1)\n    }.count\n    return mangos", "    let words = s.componentsSeparatedByString(\"\
    \ \")\n    let apples = words[0].toInt()\n    let oranges = words[1].toInt()\n\
    \    let mango = n-mango_fruits(apples, oranges)\n    return mango", "    // write\
    \ your code in here\n    \n    let sum = s.split(separator: \" \").map { Int($0)!}\n\
    \    \n    var sumOfN = 0\n    for i in 0...sum.count {\n        if (sum[i] %\
    \ n == 0) {\n            sumOfN += sum[i]\n        }\n    }\n    return sumOfN",
  "    let str = s.trimmingCharacters(in: .whitespacesAndNewlines)\n    let fruits\
    \ = str.components(separatedBy: \" \")\n    var apple = 0\n    var orange = 0\n\
    \    var mango = 0\n    for fruit in fruits {\n        if fruit == \"apples\"\
    \ {\n            apple += 1\n        } else if fruit == \"oranges\" {\n      \
    \      orange += 1\n        } else if fruit == \"mango\" {\n            mango\
    \ += 1\n        }\n    }\n    return mango + n * apple", "\tlet apples = Int(s.split(separator:\
    \ \" \").first!)!\n\tlet oranges = Int(s.split(separator: \" \").last!)!\n\tlet\
    \ fruits  = Int(n)\n\n\tvar count = 0\n\tlet maxValue = fruits/2 + apples\n\t\
    for fruit in 0..<fruits {\n\t\tif fruit >= maxValue {\n\t\t\tbreak\n\t\t}\n\t\t\
    if apples == 0 { break }\n\t\tif oranges >= fruit {\n\t\t\tcount += fruit/2\n\t\
    \t\tapples -= 1\n\t\t\toranges -= fruit\n\t\t}\n\t}\n\treturn count", "    guard\
    \ s.contains(\"apples\") and s.contains(\"oranges\") && s.contains(\"mango\")\
    \  else {\n        return -1\n    }\n    var apples = Int()\n    var oranges =\
    \ Int()\n    var mango = Int()\n    var total = 0\n    var num = 0\n    guard\
    \ let apples = Int(s.split(separator: \" \")[0]), let oranges = Int(s.split(separator:\
    \ \" \")[1]), let mango = Int(s.split(separator: \" \")[2]) else {\n        return\
    \ -1\n    }\n    total = oranges + apples + mango\n    num = n\n    if total <=\
    \ n {\n        return -1\n    }\n    while total > n {\n        total -= n\n \
    \       num += 1\n    }\n    return num", "    guard s.isEmpty || n > 0 else {\n\
    \        return 0\n    }\n    var sum = 0\n    for i in 0..<Int(s.characters.count)\
    \ {\n        sum += Int(s.substring(with: String.Index(i)) as! String).toInt()\n\
    \    }\n    return Int(ceil(Float(sum) / Float(n)))", "    var totalMango = 0\n\
    \    var totalApple = 0\n    var totalOrange = 0\n    \n    for i in s.characters.split(separator:\
    \ \" \"){\n        let countToInt = Int(i!)\n        switch countToInt {\n   \
    \     case 0:\n            totalApple = totalApple + 1\n        case 1:\n    \
    \        totalOrange = totalOrange + 1\n        case 2:\n            totalApple\
    \ = totalApple + 1\n            totalOrange = totalOrange + 1\n        case 3:\n\
    \            totalApple = totalApple + 1\n            totalMango = totalMango\
    \ + 1\n        case 4:\n            totalApple = totalApple + 1\n            totalOrange\
    \ = totalOrange + 1\n            totalMango = totalMango + 1\n        case 5:\n\
    \            totalApple = totalApple + 1\n            totalOrange = totalOrange\
    \ + 1\n            totalMango = totalMango + 1\n        case 6:\n            totalApple\
    \ = totalApple + 1\n            totalOrange = totalOrange + 1\n            totalMango\
    \ = totalMango + 1\n        case 7:\n            totalApple = totalApple + 1\n\
    \            totalOrange = totalOrange + 1\n            totalMango = totalMango\
    \ + 1\n        case 8:\n            totalApple = totalApple + 1\n            totalOrange\
    \ = totalOrange + 1\n            totalMango = totalMango + 1\n        case 9:\n\
    \            totalApple = totalApple + 1\n            totalOrange = totalOrange\
    \ + 1\n            totalMango = totalMango + 1\n        case 10:\n           \
    \ totalApple = totalApple + 1\n            totalOrange = totalOrange + 1\n   \
    \         totalMango = totalMango + 1\n        case 11:\n            totalApple\
    \ = totalApple + 1\n            totalOrange = totalOrange + 1\n            totalMango\
    \ = totalMango + 1\n        case 12:\n            totalApple = totalApple + 1\n\
    \            totalOrange = totalOrange + 1\n            totalMango = totalMango\
    \ + 1\n        case 13:\n            totalApple = totalApple + 1\n           \
    \ totalOrange = totalOrange + 1\n            totalMango = totalMango + 1\n   \
    \     case 14:\n            totalApple = totalApple + 1\n            totalOrange\
    \ = totalOrange + 1\n            totalMango = totalMango + 1\n        case 15:\n\
    \            totalApple = totalApple + 1\n            totalOrange = totalOrange\
    \ + 1\n            totalMango = totalMango + 1\n        case 16:\n           \
    \ totalApple = totalApple + 1\n            total", '    return s.components(separatedBy:
    " ").filter{$0.contains("apples")}.filter{$0.contains("oranges")}.count', "  \
    \  // Your code here\n    let fruits = [\"apples\", \"oranges\", \"mango\"]\n\
    \    var total = 0\n    for i in fruits.indices {\n        let value = Int(s[i].stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet()))\n\
    \        total += value\n    }\n    return total - n", "    guard n >= 0 else\
    \ { return 0 }\n    \n    var apples = 0\n    var oranges = 0\n    var mangoes\
    \ = 0\n\n    var numberFruits = 0\n    \n    for char in s.characters {\n    \
    \    switch char {\n        case \"a\": apples += 1\n        case \"o\": oranges\
    \ += 1\n        case \"m\":\n            mangoes += 1\n        default:\n    \
    \        break\n        }\n    }\n\n    numberFruits = apples + oranges + mangoes\n\
    \n    return numberFruits - n", "    var count = 0\n\n    for _ in s.characters.reverse()\
    \ {\n        if let num = Int(string) {\n            count += num\n        }\n\
    \    }\n\n    return count", "    if s.isEmpty {\n        return 0\n    }\n  \
    \  var apples = 0\n    var oranges = 0\n    var mangoes = 0\n    for c in s {\n\
    \        switch c {\n        case \"a\": apples += 1\n        case \"o\": oranges\
    \ += 1\n        case \"m\": mangoes += 1\n        default: break\n        }\n\
    \    }\n    return mangoes + (n - apples - oranges)", "    let count1 = s.split(separator:\
    \ \" \").map { Int($0) }\n    let count2 = s.split(separator: \" \").map { Int($0)\
    \ }\n\n    var sum = count1.reduce(0.0, +) + count2.reduce(0.0, +)\n    var count3\
    \ = n - sum\n    \n    for i in 0..<count3 {\n        if count3[i] > 0 {\n   \
    \         sum += count3[i]\n        }\n    }\n    return sum", "    var apples,\
    \ oranges, mangos : Int\n    apples = oranges = mangos = 0\n    for idx in s.characters.indices\
    \ {\n        switch s[idx] {\n        case \"a\": apples += 1\n        case \"\
    o\": oranges += 1\n        case \"m\": mangos += 1\n        default: continue\n\
    \        }\n    }\n    return mangos", "    let fruits = [\"apples\", \"oranges\"\
    , \"mango\"]\n    var total: Int = 0\n    var totalMango: Int = 0\n    \n    for\
    \ i in fruits.indices {\n        total += Int(s[i + 1]) - Int(s[i])\n    }\n \
    \   \n    for i in fruits.indices {\n        totalMango += Int(s[String.Index(encodedOffset:\
    \ i + 1)])\n    }\n    \n    return total - totalMango", "    let numbers = s.split(separator:\
    \ \",\")\n    return numbers.reduce(0) { (current, _) in current + Int($0) }",
  "    var apples = 0\n    var oranges = 0\n    var mangos = 0\n    var splits = s.componentsSeparatedByString(\"\
    \ \")\n    for s in splits {\n        switch s {\n        case \"apples\":\n \
    \           apples += Int(n)\n        case \"oranges\":\n            oranges +=\
    \ Int(n)\n        case \"mangos\":\n            mangos += Int(n)\n        default:\n\
    \            break\n        }\n    }\n    if apples > 0 && oranges > 0 {\n   \
    \     return mangos + oranges - apples * (oranges - apples / oranges)\n    } else\
    \ {\n        return 0\n    }", "    let apples = Int(s.replacingOccurrences(of:\
    \ \" apples\", with: \"\")) ?? 0\n    let oranges = Int(s.replacingOccurrences(of:\
    \ \" oranges\", with: \"\")) ?? 0\n    let mangos = Int(s.replacingOccurrences(of:\
    \ \" mango\", with: \"\")) ?? 0\n    let totalCount = apples + oranges + mangos\n\
    \    let fruit_count = totalCount / n\n    let fruit_count = fruit_count * n\n\
    \    return fruit_count", "    let s = String(s.characters.split{$0 == \" \"}.map(String.init))\n\
    \    let n = Int(n)\n    \n    return s.contains(\"apples\").reduce(0, +) + s.contains(\"\
    oranges\").reduce(0, +) + s.contains(\"mango\").reduce(0, +)", "    let dict =\
    \ s.characters.split{$0 == \" \"}.map { ($0.stringByReplacingOccurrencesOfString(\"\
    \ \", withString: \"and\"), $0)}.sorted(by: { $0.0 < $1.0 })\n    let sum = (dict[\"\
    oranges\"] as Int) + (dict[\"apples\"] as Int)\n    if sum < n {\n        return\
    \ n\n    }\n    return sum", "    let arrNumbers = s.characters.split(separator:\
    \ \" \").map(String.init)\n    var sumOfNumbers: Int = Int(arrNumbers[0])!\n \
    \   \n    for i in 0..<arrNumbers.count {\n        sumOfNumbers += Int(arrNumbers[i])!\n\
    \    }\n    \n    return sumOfNumbers / n", "    let apples = Int(s[s.characters.index(\"\
    a\") + \"a\".characters.index(\"a\") + 1 : s.characters.index(\"a\"))\n    let\
    \ oranges = Int(s[s.characters.index(\"o\") + \"o\".characters.index(\"o\") +\
    \ 1 : s.characters.index(\"o\"))\n    let mangoes = Int(s[s.characters.index(\"\
    m\") + \"m\".characters.index(\"m\") + 1 : s.characters.index(\"m\"))\n    let\
    \ basket = n - apples - oranges - mangoes\n    return basket", "    let pattern:\
    \ String = \" apples?|oranges?|mango?\"\n    let regex: NSRegularExpression =\
    \ try! NSRegularExpression(pattern: pattern, options: .CaseInsensitive)\n    let\
    \ numberOfMatches: Int = regex.numberOfMatchesInString(s, options: .MatchingAnchored,\
    \ range: NSMakeRange(0, s.characters.count))\n    let numberOfMangos: Int = n\
    \ % numberOfMatches\n    return Int(n) - numberOfMangos", "    var result = 0\n\
    \    var numbers: String = \"\"\n    \n    for i in s.characters {\n        if\
    \ i.isNumber() {\n            numbers += String(i)\n        } else {\n       \
    \     if numbers != \"\" {\n                result += Int(numbers)\n         \
    \       numbers = \"\"\n            }\n            result += Int(i)\n        }\n\
    \    }\n    \n    if numbers != \"\" {\n        result += Int(numbers)\n    }\n\
    \    \n    if result > n {\n        result = n\n    }\n    \n    return result",
  "    var apples = 0\n    var oranges = 0\n    var mangos = 0\n    var fruit = Int(s.split(separator:\
    \ \" \").last!)\n    var total = 0\n    for _ in s.split(separator: \" \") {\n\
    \        total += Int(_)\n    }\n    if fruit == 0 {\n        mangos += total\
    \ % n\n        total /= n\n    } else if fruit == 1 {\n        oranges += total\
    \ % n\n        total /= n\n    } else if fruit == 2 {\n        apples += total\
    \ % n\n        total /= n\n    } else if fruit == 3 {\n        mangos += total\
    \ % n\n        total /= n\n    } else if fruit == 4 {\n        oranges += total\
    \ % n\n        total /= n\n    } else if fruit == 5 {\n        apples += total\
    \ % n\n        total /= n\n    } else if fruit == 6 {\n        mangos += total\
    \ % n\n        total /= n\n    } else if fruit == 7 {\n        oranges += total\
    \ % n\n        total /= n\n    } else if fruit == 8 {\n        apples += total\
    \ % n\n        total /= n\n    } else if fruit == 9 {\n        mangos += total\
    \ % n\n        total /= n\n    } else if fruit == 10 {\n        oranges += total\
    \ % n\n        total /= n\n    } else if fruit == 11 {\n        apples += total\
    \ % n\n        total /= n\n    } else if fruit == 12 {\n        mangos += total\
    \ % n\n        total /= n\n    } else if fruit == 13 {\n        oranges += total\
    \ % n\n        total /= n\n    } else if fruit == 14 {\n        apples += total\
    \ % n\n        total /= n\n    } else if fruit == 15 {\n        mangos += total\
    \ % n\n        total /= n\n    } else if fruit == 16 {\n        oranges += total\
    \ % n\n        total /= n\n    } else if fruit == 17 {\n        apples += total\
    \ % n\n        total /= n\n    } else if fruit == 18 {\n        mangos += total\
    \ % n\n        total /= n\n    } else if fruit == 19 {\n        oranges += total\
    \ % n\n        total /= n\n    }\n    return mangos", '    return s.characters.reduce(0){$0
    * Int($1) + Int($2)}', "    let (apples, oranges, mangos) = s.split(separator:\
    \ \" \")\n    return apples.count*oranges.count*mangos.count*n/120", "    var\
    \ orange = Int(s.split(separator: \",\")[0].split(separator: \" \")[1])\n    var\
    \ apple = Int(s.split(separator: \",\")[1].split(separator: \" \")[0])\n    var\
    \ mango = Int(s.split(separator: \",\")[2].split(separator: \" \")[0])\n    if\
    \ apple == 0 && orange == 0 && mango == 0 {\n        return 0\n    }\n    if apple\
    \ == mango {\n        return apple\n    }\n    return apple + orange + mango",
  "    var apple = 0\n    var orange = 0\n    var mango = 0\n    for x in s.split(\"\
    \ \") {\n        if (x == \"apples\") {\n            apple += Int(x)!\n      \
    \  }\n        else if x == \"oranges\" {\n            orange += Int(x)!\n    \
    \    }\n        else if x == \"mango\" {\n            mango += Int(x)!\n     \
    \   }\n    }\n    return (apple+orange+mango)/n", "    var apples = 0\n    var\
    \ oranges = 0\n    var mangos = 0\n\n    var counts = String()\n    \n    for\
    \ char in s {\n        switch char {\n        case \"a\": apples += 1\n      \
    \  case \"o\": oranges += 1\n        case \"m\": mangos += 1\n        default:\n\
    \            continue\n        }\n        \n        counts = counts + String(char)\n\
    \    }\n\n    var maxNumberOfApples = max(apples, oranges)\n    \n    if maxNumberOfApples\
    \ == apples {\n        apples += oranges\n        apples -= mangos\n    } else\
    \ if maxNumberOfApples == oranges {\n        oranges += apples\n        oranges\
    \ -= mangos\n    } else if maxNumberOfApples == mangos {\n        mangos += apples\n\
    \        mangos -= oranges\n    }\n\n    return mangos - fruits", "    var apples\
    \ = 0\n    var oranges = 0\n    var mangoes = 0\n    \n    if let apples = s.components(separatedBy:\
    \ \" \").first {\n        apples = Int(apples)\n    }\n    if let oranges = s.components(separatedBy:\
    \ \" \").last {\n        oranges = Int(oranges)\n    }\n    if apples > oranges\
    \ {\n        mangoes = apples - oranges\n    } else {\n        mangoes = oranges\
    \ - apples\n    }\n    return mangoes + n", '    return fruit_distribution(s.characters.split("
    ").map(Int.init), n)', "    let strs = s.components(separatedBy: \" \")\n    var\
    \ apples = 0\n    var oranges = 0\n    \n    for i in strs {\n        if i.contains(\"\
    apples\") {\n            apples += Int(i)!\n        } else {\n            oranges\
    \ += Int(i)!\n        }\n    }\n    \n    return apples + oranges - n", "    //\
    \ TODO: Your code here\n    let arr = s.components(separatedBy: \" \").map(String.init)\n\
    \    let orange = Int(arr[1])!\n    let apple = Int(arr[2])!\n    let total =\
    \ orange + apple\n    return n - total ", '    return ((s.split(" ")[1]).split("
    ")).count{ $0.isDigit() } + (s.split(" ")[3].split(" ")).count{ $0.isDigit() }',
  "    var counter: Int = 0\n    for fruit in s.characters.split{$0 == \" \"}.dropLast()\
    \ {\n        switch fruit {\n        case \"a\": counter += 1\n        case \"\
    b\": counter += 1\n        case \"c\": counter += 1\n        case \"d\": counter\
    \ += 1\n        case \"e\": counter += 1\n        case \"f\": counter += 1\n \
    \       case \"g\": counter += 1\n        case \"h\": counter += 1\n        case\
    \ \"i\": counter += 1\n        case \"j\": counter += 1\n        case \"k\": counter\
    \ += 1\n        case \"l\": counter += 1\n        case \"m\": counter += 1\n \
    \       case \"n\": counter += 1\n        case \"o\": counter += 1\n        case\
    \ \"p\": counter += 1\n        case \"q\": counter += 1\n        case \"r\": counter\
    \ += 1\n        case \"s\": counter += 1\n        case \"t\": counter += 1\n \
    \       case \"u\": counter += 1\n        case \"v\": counter += 1\n        case\
    \ \"w\": counter += 1\n        case \"x\": counter += 1\n        case \"y\": counter\
    \ += 1\n        case \"z\": counter += 1\n        default:\n            continue\n\
    \        }\n    }\n    return (counter * n) / 100", "    var sumOfNumberOfFruits\
    \ = 0\n    var countOfOranges = 0\n    var countOfApples = 0\n    var countOfMango\
    \ = 0\n    var sumOfNumberOfApplesAndOranges = 0\n    for i in s.characters.reverse(){\n\
    \        if(i == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\"\
    ) {\n            countOfApples = countOfApples + 1\n            sumOfNumberOfApplesAndOranges\
    \ = sumOfNumberOfApplesAndOranges + 1\n        } else if(i == \"b\" || i == \"\
    c\" || i == \"d\" || i == \"f\" || i == \"g\" || i == \"h\" || i == \"j\" || i\
    \ == \"k\" || i == \"l\" || i == \"m\" || i == \"n\" || i == \"p\" || i == \"\
    q\" || i == \"r\" || i == \"s\" || i == \"t\" || i == \"v\" || i == \"w\" || i\
    \ == \"x\" || i == \"y\" || i == \"z\") {\n            countOfOranges = countOfOranges\
    \ + 1\n            sumOfNumberOfApplesAndOranges = sumOfNumberOfApplesAndOranges\
    \ + 1\n        } else {\n            countOfMango = countOfMango + 1\n       \
    \     sumOfNumberOfApplesAndOranges = sumOfNumberOfApplesAndOranges + 1\n    \
    \    }\n    }\n    if countOfApples > n {\n        return 0\n    }\n    if countOfOranges\
    \ > n {\n        return 0\n    }\n    if countOfMango > n {\n        return 0\n\
    \    }\n    if sumOfNumberOfApplesAndOranges > n {\n        return 0\n    }\n\
    \    return sumOfNumberOfApplesAndOranges / n", "    guard let splitString = s.components(separatedBy:\
    \ \" \").map(String.init).map({ $0.characters.split(separator: \"and\").map({\
    \ $0.characters.split(separator: \" \").map({ Int($0) }) }) }) else {\n      \
    \  return -1\n    }\n\n    var total = 0\n    for x in splitString {\n       \
    \ if let apples = x[0], let oranges = x[1], let fruits = x[2] {\n            total\
    \ += apples * oranges * fruits\n        }\n    }\n\n    let fruitsInBasket = total\n\
    \    let numberOfMangoFruits = fruit_distribution(n: n, total: total)\n    return\
    \ fruitsInBasket - numberOfMangoFruits", "    var countApples = 0.0\n    var countOranges\
    \ = 0.0\n    var countMangoes = 0.0\n    var totalNumFruits = 0.0\n    \n    for\
    \ x in s.characters.reversed(){\n        if(x==\"a\" || x==\"A\"){\n         \
    \   countApples += 1.0\n        }else if(x==\"o\" || x==\"O\"){\n            countOranges\
    \ += 1.0\n        }else if(x==\"m\" || x==\"M\"){\n            countMangoes +=\
    \ 1.0\n        }\n        totalNumFruits += 1.0\n    }\n\n    return countMangoes\
    \ * n / totalNumFruits", "\tlet array = s.split(separator: \" \").map(String.init)\n\
    \treturn array.filter { $0.characters.count == 1 }.count + array.reduce(0,{$0\
    \ + Int($1)})", "    let totalApples = s.components(separatedBy: \" \")[0].components(separatedBy:\
    \ \"and\")[0].components(separatedBy: \" \")[1]\n    let totalOranges = s.components(separatedBy:\
    \ \" \")[0].components(separatedBy: \"and\")[1].components(separatedBy: \" \"\
    )[1]\n    let totalFruits = s.components(separatedBy: \" \")[1].components(separatedBy:\
    \ \" \")[0]\n    let totalMango = totalOranges + totalApples\n    return totalMango\
    \ % n == 0 ? totalMango / n : 0", '    return 0', "    let fruits = s.componentsSeparatedByString(\"\
    \ \")\n    var totalFruits = 0\n    let fruitsInBasket = fruits.count\n    var\
    \ sumOfFruits = 0\n    var fruitCount = 0\n    for fruit in fruits {\n       \
    \ if let numFruits = Int(fruit) {\n            sumOfFruits += numFruits\n    \
    \        fruitCount += numFruits.isMultiple(of: 2)\n        }\n    }\n    totalFruits\
    \ = sumOfFruits\n    guard fruitCount > 0 && totalFruits > 0 else {\n        return\
    \ 0\n    }\n    let applesAndOranges = fruitCount - totalFruits\n    let mangoFruits\
    \ = (fruitsInBasket - applesAndOranges) / 2\n    return mangoFruits", "    var\
    \ count = 0\n\n    var oranges = 0\n    var apples = 0\n\n    var fruitsInBasket\
    \ = \"\"\n\n    if s.contains(\"oranges\") {\n        oranges = s.components(separatedBy:\
    \ \" \").last!\n        oranges = Int(oranges)\n    }\n\n    if s.contains(\"\
    apples\") {\n        apples = s.components(separatedBy: \" \").last!\n       \
    \ apples = Int(apples)\n    }\n\n    if apples > oranges {\n        for index\
    \ in 0...apples {\n            if oranges > 0 {\n                fruitsInBasket\
    \ += \"\\(oranges--)\"\n            } else {\n                fruitsInBasket +=\
    \ \"\\(index+)\"\n            }\n        }\n    } else {\n        for index in\
    \ 0...oranges {\n            if apples > 0 {\n                fruitsInBasket +=\
    \ \"\\(apples--)\"\n            } else {\n                fruitsInBasket += \"\
    \\(index+)\"\n            }\n        }\n    }\n\n    if fruitsInBasket.contains(\"\
    0\") == true {\n        count = 0\n    }\n\n    if fruitsInBasket.contains(\"\
    1\") == true {\n        count = oranges\n    }\n\n    if fruitsInBasket.contains(\"\
    2\") == true {\n        count = oranges + apples\n    }\n\n    if fruitsInBasket.contains(\"\
    3\") == true {\n        count = oranges + apples + apples\n    }\n\n    if fruitsInBasket.contains(\"\
    4\") == true {\n        count = oranges + apples + apples + oranges\n    }\n\n\
    \    if fruitsInBasket.contains(\"5\") == true {\n        count = oranges + apples\
    \ + apples + apples + oranges + oranges\n    }\n\n    if fruitsInBasket.contains(\"\
    6\") == true {\n        count = oranges + apples + apples + apples + oranges +\
    \ oranges + apples\n    }\n\n    if fruitsInBasket.contains(\"7\") == true {\n\
    \        count = oranges + apples + apples + apples + oranges + oranges + apples\
    \ + apples\n    }\n\n    if fruitsInBasket.contains(\"8\") == true {\n       \
    \ count = oranges + apples + apples + apples + oranges + oranges + apples + apples\
    \ + oranges\n    }\n\n    if fruitsInBasket.contains(\"9\") == true {\n      \
    \  count = oranges + apples + apples + apples + oranges + oranges + apples + apples\
    \ + oranges + oranges\n    }\n\n    if fruitsInBasket.contains(\"10\") == true\
    \ {\n        count = oranges + apples + apples + apples + oranges + oranges +\
    \ apples + apples + oranges + oranges + apples\n    }", '    return count_mango(s,
    n)', "    \n    guard let numApples = Int(s.components(separatedBy: \" \")[0])\n\
    \    else {\n        print(\"Cannot convert string to an Int value.\")\n     \
    \   return -1\n    }\n    \n    guard let numOranges = Int(s.components(separatedBy:\
    \ \" \")[1])\n    else {\n        print(\"Cannot convert string to an Int value.\"\
    )\n        return -1\n    }\n    \n    guard let numMangos = numApples + numOranges\
    \ - 1\n    else {\n        print(\"Cannot calculate the number of Mango Fruit\
    \ in a basket.\")\n        return -1\n    }\n    \n    return numMangos", "  \
    \  if n <= 0 {\n        return 0\n    }\n    let tokens = s.characters.split {\
    \ $0 == \" \" }\n    let totals = tokens.map { Int($0) }\n    return totals.reduce(0)\
    \ {\n        (accumulator, total) -> Int\n        guard accumulator < total else\
    \ {\n            return accumulator\n        }\n        return accumulator + total\n\
    \    }", "    var apples = 0\n    var oranges = 0\n    var mangos = 0\n    var\
    \ fruits_in_basket = 0\n    \n    \n    \n    for character in s {\n        if\
    \ character == \"a\" {\n            apples += 1\n        }\n        \n       \
    \ if character == \"o\" {\n            oranges += 1\n        }\n        \n   \
    \     if character == \"m\" {\n            mangos += 1\n        }\n        \n\
    \        if character == \"n\" {\n            fruits_in_basket += 1\n        }\n\
    \    }\n    \n    return mangos", "    guard let stringToArray = s.components(separatedBy:\
    \ \" \") else { return 0 }\n    guard let numberToArray = stringToArray.map {\
    \ Int($0) }\n    else {\n        print(\"The value of s to convert is not convertable\
    \ to Int\")\n        return 0\n    }\n    var totalApples = 0\n    var totalOranges\
    \ = 0\n    var totalMangos = 0\n    for i in numberToArray {\n        if i ==\
    \ 0 {\n            totalApples = totalApples + 1\n        }\n        else if i\
    \ == 1 {\n            totalOranges = totalOranges + 1\n        }\n        else\
    \ if i == 2 {\n            totalMangos = totalMangos + 1\n        }\n    }\n \
    \   return totalMangos + totalApples - totalOranges", "    let numberFormatter\
    \ = NumberFormatter()\n    numberFormatter.numberStyle = .decimal\n    guard let\
    \ n = numberFormatter.number(from: s).integerValue else {\n        return 0\n\
    \    }\n    return n - fruit_count(s)", "    // TODO: Fill in the code here\n\
    \    let a = s.characters.split{$0==\" \"}.map(String.init).map(Int)\n    var\
    \ ans = a.reduce(0,{ (ans, next) -> Int in\n        let sum = ans + next\n   \
    \     if sum > n {\n            sum -= n\n        }\n        return sum\n    })\n\
    \    \n    return ans", "    \n    var fruits = \"1 apple and 2 oranges and 3\
    \ mangoes\".characters.split{$0 == \" \"}\n    var oranges = \"1 orange and 2\
    \ mangoes\".characters.split{$0 == \" \"}\n    var mangoes = \"1 mango\".characters.split{$0\
    \ == \" \"}\n    var count = Int(s.characters.split{$0 == \" \"}[0])!\n    var\
    \ result = 0\n    \n    for i in 0..<n {\n        var total = 0\n        for j\
    \ in 0..<fruits.count {\n            var temp = 0\n            if i != 0 {\n \
    \               temp = Int(fruits[j]) * Int(fruits[j+1])\n                total\
    \ += temp\n                j += 2\n            } else {\n                temp\
    \ = Int(oranges[j]) * Int(fruits[j+1])\n                total += temp\n      \
    \          j += 2\n            }\n        }\n        for j in 0..<mangoes.count\
    \ {\n            var temp = 0\n            if i != 0 {\n                temp =\
    \ Int(mangoes[j]) * Int(mangoes[j+1])\n                total += temp\n       \
    \         j += 2\n            } else {\n                temp = Int(fruits[j])\
    \ * Int(mangoes[j+1])\n                total += temp\n                j += 2\n\
    \            }\n        }\n        result += total\n    }\n    return result",
  "    if s.isEmpty {\n        return 0\n    }\n\n    var totalNumberOfMango = 0\n\
    \    for i in 0..<s.characters {\n        if s.characters.contains(\" \") {\n\
    \            totalNumberOfMango += int(s.substringFromIndex(i).characters.characters.count)\n\
    \        }\n    }\n    return totalNumberOfMango", "    if let apples = Int(s.components(separatedBy:\
    \ \" apples\").first!),\n        let oranges = Int(s.components(separatedBy: \"\
    \ oranges\").first!),\n        let apples = apples + oranges,\n        let mangos\
    \ = apples - oranges,\n        let mango = mangos + n,\n        let fruits = mango\
    \ / apples {\n        return fruits\n    }\n    return 0", "    let data = s.characters.split(separator:\
    \ \"and\").map { Int(String($0)) }\n    return data.filter { $0 % n == 0 }.count",
  "    let arr = s.characters.split(\"and\").map(String.init)\n    let apples = arr.first!.split(\"\
    \ \").map(String.init)\n    let oranges = arr.last!.split(\" \").map(String.init)\n\
    \    let mango = oranges.count + apples.count - n\n    return mango", "    let\
    \ arr = s.characters.split{$0 == \" \"}.map(String.init)\n    let apple = arr.filter({\
    \ $0 == \"a\" }).count\n    let orange = arr.filter({ $0 == \"o\" }).count\n \
    \   let fruit = arr.filter({ $0 == \"f\" }).count\n\n    let total_num = n + orange\
    \ + apple\n    let percentage = fruit / total_num\n\n    return (total_num * percentage)",
  "    var total = 0\n    var num = 0\n    \n    for c in s.characters {\n       \
    \ if c == \"a\" {\n            total += 1\n        }\n        if c == \"o\" {\n\
    \            total += 1\n        }\n        if c == \"m\" {\n            total\
    \ += 2\n        }\n    }\n    if n > total {\n        n = total\n    }\n    \n\
    \    for _ in 0..<n {\n        if let n = s.characters[Int(arc4random_uniform(UInt32(s.characters.count)))]\
    \ {\n            if n == \"a\" {\n                total += 1\n            } else\
    \ if n == \"o\" {\n                total += 1\n            } else if n == \"m\"\
    \ {\n                total += 2\n            }\n        }\n    }\n    return total",
  "    let totalApples = Int(s.prefix(1).split(separator: \" \").first!)\n    let\
    \ totalOranges = Int(s.prefix(1).split(separator: \" \").last!)\n    let totalFruits\
    \ = totalApples + totalOranges\n    var mangoes = 0\n    if totalOranges > 0 &&\
    \ totalApples > 0 {\n        if totalOranges >= totalApples {\n            mangoes\
    \ = totalOranges / totalApples\n        }\n        else {\n            mangoes\
    \ = totalApples / totalOranges\n        }\n    }\n    return mangoes", "    let\
    \ arr = s.split(separator: \" \").map({ Int($0) })\n    var sum = 0\n    var count\
    \ = 0\n    for x in arr {\n        if x > n {\n            break\n        }\n\
    \        sum += x\n        count += 1\n    }\n    return count < n ? sum : n",
  "    let totalApple = s.characters.filter { $0 == \"a\" }.count\n    let totalOrange\
    \ = s.characters.filter { $0 == \"o\" }.count\n    let totalMango = s.characters.filter\
    \ { $0 == \"m\" }.count\n\n    var apples = totalApple - n\n    var oranges =\
    \ totalOrange - n\n    var mango = totalMango - n\n\n    if apples > 0 {\n   \
    \     apples -= 1\n    }\n\n    if oranges > 0 {\n        oranges -= 1\n    }\n\
    \n    if mango > 0 {\n        mango -= 1\n    }\n\n    return mango", "    let\
    \ countFruits = Int(s.components(separatedBy: \" \").filter({ !$0.isEmpty }).reduce(0,+))\n\
    \    let fruits = s.components(separatedBy: \" \").filter{ !$0.isEmpty }\n   \
    \ let fruitArray = fruits.map { $0.split(separator: \",\").map { Int($0) } }\n\
    \    \n    let numFruit = fruitArray.map { $0.count }.max()\n    \n    return\
    \ fruitArray.map { $0.count }.filter({ $0 == numFruit }).reduce(0, +)", '    return
    s.trimmingCharacters(in: CharacterSet.decimalDigits.inverted).split(separator:
    " ").filter({ !$0.isEmpty }).count', "    return s.split(\" \").map{ Int($0) }.filter{\
    \ $0 >= 0 }.count{\n        guard n > $0 else {\n            return 0\n      \
    \  }\n        return n < $0\n    }", "    var apples = 0\n    var oranges = 0\n\
    \    var mangos = 0\n\n    for char in s {\n        switch char {\n        case\
    \ \"a\":\n            apples += 1\n        case \"o\":\n            oranges +=\
    \ 1\n        case \"m\":\n            mangos += 1\n        default:\n        \
    \    break\n        }\n    }\n    return apples - oranges - mangos", "    let\
    \ fruits = s.components(separatedBy: \" \")\n    if fruits.count != 2 {\n    \
    \    return -1\n    }\n    let apples = fruits[0]\n    let oranges = fruits[1]\n\
    \n    guard apples.count == oranges.count else {\n        return -1\n    }\n\n\
    \    var countOfApple = 0\n    var countOfOrange = 0\n\n    for i in 0..<apples.count\
    \ {\n        switch apples[i] {\n        case \"a\":\n            countOfApple++\n\
    \        case \"o\":\n            countOfOrange++\n        default:\n        \
    \    break\n        }\n    }\n\n    var count = 0\n    var total = 0\n    \n \
    \   for i in 0..<oranges.count {\n        switch oranges[i] {\n        case \"\
    a\":\n            count++\n            total += countOfApple\n        case \"\
    o\":\n            count++\n            total += countOfOrange\n        default:\n\
    \            break\n        }\n    }\n    \n    return total", "    var totalApples\
    \ = 0\n    var totalOranges = 0\n    var totalMango = 0\n    var i = 0\n    for\
    \ _ in 0..<s.characters.count {\n        switch s[i]{\n        case \"a\":\n \
    \           totalApples += Int(s[i])!\n        case \"o\":\n            totalOranges\
    \ += Int(s[i])!\n        case \"m\":\n            totalMango += Int(s[i])!\n \
    \       default:\n            break\n        }\n        i += 1\n    }\n    var\
    \ totalFruit = totalMango + totalOranges\n    if totalApples == 0 && totalOranges\
    \ == 0 && totalMango == 0 {\n        return totalFruit\n    }\n    if totalApples\
    \ == 0 && totalOranges > 0 && totalMango == 0 {\n        return totalMango + totalOranges\n\
    \    }\n    if totalApples > 0 && totalOranges == 0 && totalMango == 0 {\n   \
    \     return totalApples\n    }\n    if totalApples > 0 && totalOranges > 0 &&\
    \ totalMango == 0 {\n        return totalApples + totalOranges\n    }\n    if\
    \ totalApples > 0 && totalOranges == 0 && totalMango > 0 {\n        return totalApples\
    \ + totalOranges\n    }\n    return totalMango", '    return Int(s.split(separator:
    "and").map(String.init).filter{ $0.hasSuffix("s") }.reduce(0) { ($0 + Int($0.suffix(from:
    -1)), $0.suffix(from: -1).contains("s")) ? ($0 + Int($0.suffix(from: -1)), $0.suffix(from:
    -1).contains("s") ? 0 : 1) : (($0 + Int($0.suffix(from: -1)), $0.suffix(from:
    -1).contains("s") ? 0 : 1) }) / Int(n)', "    // Write your code here\n    var\
    \ apples = 0\n    var oranges = 0\n    var mango = 0\n    \n    for i in s.characters.reverse(){\n\
    \        if i == \"a\"{\n            apples = apples + 1\n        }\n        else{\n\
    \            oranges = oranges + 1\n        }\n    }\n    \n    for i in s.characters.reverse(){\n\
    \        if i == \"m\" && apples > 0 && oranges > 0{\n            mango = mango\
    \ + 1\n        }\n    }\n    return mango\n    ", "    var result = 0\n    let\
    \ list = s.componentsSeparatedByString(\" \")\n    for i in 0...list.count-2 {\n\
    \        if Int(list[i]) > 0 && Int(list[i+1]) > 0 {\n            result = Int(list[i+1])\
    \ + result\n        }\n    }\n    return result", "    let apples = Int(s.components(separatedBy:\
    \ \" \")[0])\n    let oranges = Int(s.components(separatedBy: \" \")[1])\n   \
    \ let mangos = n - apples - oranges\n    return mangos", "    var total = 0\n\
    \    for x in s.characters.split(separator: \" \").map(String.init) {\n      \
    \  total += Int(x)\n    }\n    total = total * ((n + 3) / 4)\n    if total > (n\
    \ + 3) / 4 {\n        return total\n    } else {\n        return (n + 3) / 4\n\
    \    }", "    var fruit_count = 1\n    for i in s.characters {\n        if i ==\
    \ \" \" {\n            fruit_count -= 1\n        }\n        else {\n         \
    \   fruit_count += 1\n        }\n    }\n    return fruit_count-(n-(fruit_count+1))",
  "    var apples = 0\n    var oranges = 0\n    var mangos = 0\n    for i in s.characters\
    \ {\n        switch i {\n        case \"a\": apples += 1\n        case \"o\":\
    \ oranges += 1\n        case \"m\": mangos += 1\n        default: break\n    \
    \    }\n    }\n    if oranges == 0 || apples == 0 {\n        return mangos\n \
    \   }\n    if oranges < apples {\n        return mangos\n    }\n    return apples\
    \ - oranges", "    \n    // Write your code here\n    \n    var apples = 0\n \
    \   var oranges = 0\n    var mango = 0\n    \n    \n    if s.characters.count\
    \ == 0 {\n        return 0\n    }\n    \n    for char in s.characters {\n    \
    \    switch char {\n        case \"a\":\n            apples += 1\n        case\
    \ \"o\":\n            oranges += 1\n        case \"m\":\n            mango +=\
    \ 1\n        }\n    }\n    \n    return ((n - oranges) * 2) + mango", "    guard\
    \ let apples = Int(s[s.index(s.startIndex, offsetBy: 2)]),\n        let oranges\
    \ = Int(s[s.index(s.startIndex, offsetBy: 5)]),\n        let mango = Int(s[s.index(s.startIndex,\
    \ offsetBy: 8)]) else {\n            return -1\n        }\n    return apples +\
    \ oranges - mango", "    var apples = 0\n    var oranges = 0\n    var mango =\
    \ 0\n    for s in s.split(separator: \" \") {\n        if s.contains(\"apples\"\
    ) {\n            apples += Int(s.dropFirst().prefix(3).reduce(0,+)) - 1\n    \
    \    } else if s.contains(\"oranges\") {\n            oranges += Int(s.dropFirst().prefix(2).reduce(0,+))\
    \ - 1\n        } else if s.contains(\"mango\") {\n            mango += Int(s.dropFirst().prefix(2).reduce(0,+))\
    \ - 1\n        }\n    }\n    return apples + oranges + mango", '    return s.split("
    and").map({ Int($0) }).max() * (Int(n) / Int(s.split(" ").count))', "    let s\
    \ = String(s).components(separatedBy: \" \").map(String.init)\n    let n = Int(s)\n\
    \    let arr = Array(repeating: 0, count: (n * 2) - 1)\n    for i in 0..<(n -\
    \ 1) { arr[i*2+1] = Int(s[i]) }\n    return arr.count", "    let string = s.split(separator:\
    \ \"and\").map(String.init).joined(separator: \" \")\n    let result = (string\
    \ as NSString).integerValue + (string as NSString).substringFromIndex((string\
    \ as NSString).length - (string as NSString).length%100)\n    return result %\
    \ n", "    let sNumbers = NumberFormatter()\n    let apple = sNumbers.number(from:\
    \ s.replacingOccurrences(of: \"apples\", with: \"1\"))!\n    let orange = sNumbers.number(from:\
    \ s.replacingOccurrences(of: \"oranges\", with: \"1\"))!\n    let mango = sNumbers.number(from:\
    \ s.replacingOccurrences(of: \"mangos\", with: \"1\"))!\n    var a = 0\n    var\
    \ b = 0\n    \n    var numberOfOrangesAndApples = 0\n    var numberOfFruits =\
    \ 0\n    \n    for i in 0..<n.toInt() {\n        numberOfFruits = Int(s.substring(with:\
    \ s.index(s.startIndex, offsetBy: i + 1))) ?? 0\n        numberOfOrangesAndApples\
    \ = Int(s.substring(with: s.index(s.startIndex, offsetBy: i + 2))) ?? 0\n    \
    \    \n        if numberOfOrangesAndApples == 0 {\n            a += apple\n  \
    \      } else if numberOfOrangesAndApples == 1 {\n            b += apple\n   \
    \     } else {\n            a += apple\n            b += apple\n        }\n  \
    \  }\n    \n    if numberOfFruits > numberOfOrangesAndApples {\n        a += apple\n\
    \    }\n    \n    return a + b + mango", "    var sum: Int = 0\n    if s == \"\
    \" {\n        return 0\n    }\n\n    var splitStringArray: [String] = []\n   \
    \ var splitStringArray2: [String] = []\n\n    for index in 0..<s.characters.count\
    \ {\n        if s.characters.count == 0 {\n            break\n        } else {\n\
    \            if s.characters.count > 1 {\n                if s.characters.count\
    \ < 19 {\n                    splitStringArray.append(String(s.characters[index]))\n\
    \                } else if s.characters.count < 100 {\n                    splitStringArray.append(String(s.characters[index]))\n\
    \                } else {\n                    splitStringArray.append(String(s.characters[index]))\n\
    \                }\n            }\n        }\n    }\n\n    sum = splitStringArray.flatMap\
    \ { Int($0) }.sum()\n\n    if splitStringArray.count <= n {\n        return sum\n\
    \    }\n    for index in 0..<n {\n        if splitStringArray.count <= sum {\n\
    \            if splitStringArray.count > 1 {\n                if splitStringArray.count\
    \ < 19 {\n                    splitStringArray2.append(String(splitStringArray.last!))\n\
    \                    splitStringArray.removeLast()\n                } else if\
    \ splitStringArray.count < 100 {\n                    splitStringArray2.append(String(splitStringArray.last!))\n\
    \                    splitStringArray.removeLast()\n                } else {\n\
    \                    splitStringArray2.append(String(splitStringArray.last!))\n\
    \                    splitStringArray.removeLast()\n                }\n      \
    \      }\n            break\n        }\n    }\n\n    sum = splitStringArray2.flatMap\
    \ { Int($0) }.sum()\n\n    if splitStringArray2.count <= n {\n        return sum\n\
    \    }\n\n    for index in 0..<n {\n        if splitStringArray2.count <= sum\
    \ {\n            if splitStringArray2.count > 1 {\n                if splitStringArray2.count\
    \ < 19 {\n                    splitStringArray2.append(String(splitStringArray2.last!))\n\
    \                    splitStringArray2.removeLast()\n                } else if\
    \ splitStringArray2.count < 100 {\n                    splitStringArray2.append(String(splitStringArray2.last!))\n\
    \                    splitStringArray2.removeLast()\n                } else {\n\
    \                    splitStringArray2.append(String(splitStringArray2.last!))\n\
    \                    splitStringArray2.removeLast()\n                }\n     \
    \       }\n            break\n        }\n    }\n\n    return sum", '    return
    fruitsInBasket(s.components(separatedBy: "and"), n).count', "    // write your\
    \ code here\n    let numOfApples = Int(s.split(\" \")[0])\n    let numOfOranges\
    \ = Int(s.split(\" \")[1])\n    let numOfFruitsInBasket = numOfOranges + numOfApples\n\
    \    if numOfFruitsInBasket == n {\n        return numOfOranges\n    }\n    let\
    \ numOfMango = n - numOfFruitsInBasket\n    return numOfMango"]
stop_tokens:
- "\n}"

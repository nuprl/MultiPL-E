language: swift
name: HumanEval_71_triangle_area
results:
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// >>> triangle_area(a: 3, b: 4, c: 5)\n/// 6.0\n/// >>> triangle_area(a: 1,\
    \ b: 2, c: 10)\n/// -1\nfunc triangle_area(a: Int, b: Int, c: Int) -> Double {\n\
    \    let ab2 = a * b\n    let bc2 = b * c\n    let ca2 = c * a\n    let triArea\
    \ = ab2 + bc2 + ca2\n    let area = (Double(triArea) ?? 0.0) / 2.0\n    if area\
    \ < 0.0 || area > 1.0 {\n        return -1\n    }\n    return area\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: Exception
  stderr: 'tmpu24t9acc/tmpu24t9acc.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadd69f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadd66ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadd66eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadd66ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu24t9acc                        0x000056071b7cb1cf <unavailable> + 4559

    5    libc.so.6                          0x00002aadd6be0460 __libc_start_main +
    245

    6    tmpu24t9acc                        0x000056071b7cae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660015440
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// >>> triangle_area(a: 3, b: 4, c: 5)\n/// 6.0\n/// >>> triangle_area(a: 1,\
    \ b: 2, c: 10)\n/// -1\nfunc triangle_area(a: Int, b: Int, c: Int) -> Double {\n\
    \    if a + b > c {\n        return Double(-1) / Double(1.0)\n    }\n    return\
    \ sqrt(Double(a) * Double(a) + Double(b) * Double(b) - Double(c) * Double(c))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp6zs76oij.swift:16:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(Double(a) * Double(a) + Double(b) * Double(b) - Double(c) * Double(c))\n\
    \           ^~~~\n"
  stdout: ''
  timestamp: 1660015440
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// >>> triangle_area(a: 3, b: 4, c: 5)\n/// 6.0\n/// >>> triangle_area(a: 1,\
    \ b: 2, c: 10)\n/// -1\nfunc triangle_area(a: Int, b: Int, c: Int) -> Double {\n\
    \    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    return Double(area)\
    \ \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(triangle_area(a: 3, b: 4, c:\
    \ 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpbkyc7vpr.swift:13:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n               ^~~~\n/tmp/tmpbkyc7vpr.swift:13:21:\
    \ error: cannot find 'pow' in scope\n    let area = sqrt(pow(a, 2) + pow(b, 2)\
    \ + pow(c, 2))\n                    ^~~\n/tmp/tmpbkyc7vpr.swift:13:33: error:\
    \ cannot find 'pow' in scope\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c,\
    \ 2))\n                                ^~~\n/tmp/tmpbkyc7vpr.swift:13:45: error:\
    \ cannot find 'pow' in scope\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c,\
    \ 2))\n                                            ^~~\n"
  stdout: ''
  timestamp: 1660015441

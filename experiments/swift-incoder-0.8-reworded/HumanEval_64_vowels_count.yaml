name: HumanEval_64_vowels_count
language: swift
prompt: "\n/// Write a function vowels_count which takes a string representing\n///\
  \ a word as input and returns the number of vowels in the string.\n/// Vowels in\
  \ this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but only\
  \ when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
  \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
  \ String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
  \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
  \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
  \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
completions: ["    vowels := \"aeiouAEIOU\"\n    n := 0\n    for _, c := range s {\n\
    \        if strings.Contains(vowels, c) {\n            n++\n        }\n    }\n\
    \    return n", "    let vowels = \"aeiouAEIOU\"\n    let vowelsCount = Array(s.characters)\n\
    \    .filter{vowels.contains($0)}\n    .count\n    return vowelsCount", "    var\
    \ numVowels: Int = 0\n    for c in s {\n        if c == \"a\" || c == \"e\" ||\
    \ c == \"i\" || c == \"o\" || c == \"u\" {\n            numVowels += 1\n     \
    \   }\n    }\n    return numVowels", "    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n\n    if s == \"\" {\n        return 0\n    }\n   \
    \ var total = 0\n    for ch in s {\n        if vowels.contains(ch) {\n       \
    \     total += 1\n        }\n    }\n    return total", "    let vowels = \"aeiouAEIOU\"\
    \n    if let end = s.endIndex, s.hasSuffix(\"y\") {\n        let start = s.prefixIndex(s.startIndex.successor())\n\
    \        let foundIndex = vowels.firstIndex(of: s[start])\n        return vowels.distance(from:\
    \ foundIndex, to: end)\n    } else {\n        let foundIndex = vowels.firstIndex(of:\
    \ s[0])\n        return vowels.distance(from: foundIndex, to: s.endIndex)\n  \
    \  }", "    var count = 0\n    for letter in s {\n        switch letter {\n  \
    \      case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n  \
    \      case 'u':\n            count += 1\n        default:\n        }\n    }\n\
    \    return count", "\treturn s.countVowels()", "    var vowelCount = 0\n    for\
    \ letter in s {\n        switch letter {\n        case \"a\" :\n        case \"\
    e\" :\n        case \"i\" :\n        case \"o\" :\n        case \"u\":\n     \
    \       vowelCount += 1\n        default:\n            break\n        }\n    }\n\
    \    return vowelCount", "    var count = 0\n    var vowels = \"aaiieouyAEIOUY\"\
    \n    for c in s {\n        switch vowels.unicodeScalars.indexOf(c) {\n      \
    \  case .OrderedSame, .OrderedDescending: return 0\n        default: count +=\
    \ 1\n        }\n    }\n    return count", '    return vowels_count(s, "")', '    return
    count_if_in(s.characters(), &isvowel)', "    let vowels = \"aeiouAEIOU\"\n   \
    \ var count = 0\n    var lastLetter = String()\n    for letter in s {\n      \
    \  if letter == vowels.lowercased() {\n            count += 1\n            lastLetter\
    \ = letter\n        }\n    }\n    if lastLetter == vowels.lowercased() {\n   \
    \     count += 1\n    }\n    return count", "    var vowelsCount = 0\n    for\
    \ letter in s {\n        if letter == \"a\" || letter == \"e\" || letter == \"\
    i\" || letter == \"o\" || letter == \"u\" {\n            vowelsCount += 1\n  \
    \      }\n    }\n    return vowelsCount", "    let vowels = \"aieou\"\n    return\
    \ s.split(separator: vowels).filter({ $0.count > 1 }).count", "  var vowelsCount\
    \ = 0\n  for c in s {\n    switch c {\n    case \"a\": vowelsCount += 1\n    case\
    \ \"e\": vowelsCount += 1\n    case \"i\": vowelsCount += 1\n    case \"o\": vowelsCount\
    \ += 1\n    case \"u\": vowelsCount += 1\n    case \"y\": if s == s.suffix(from:\
    \ s.startIndex) { vowelsCount += 1 }\n    default: break\n    }\n  }\n  return\
    \ vowelsCount", "    var count = 0\n    for _, ch := range s {\n        switch\
    \ ch {\n        case 'a':\n        case 'e':\n        case 'i':\n        case\
    \ 'o':\n        case 'u':\n            count += 1\n        }\n    }\n    return\
    \ count", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for c in\
    \ s.characters {\n        if vowels.contains(c) {\n            return vowels.indexOf(c)\
    \ + 1\n        }\n    }\n    return 0", "\tvar count = 0\n\n\tfor i := 0; i <\
    \ len(s); i++ {\n\t\tif s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count", "    var vowels\
    \ = \"aeiouAEIOU\"\n    var result = s.characters\n    var count = 1\n    for\
    \ char in result {\n        if vowels.contains(char) {\n            count += 1\n\
    \        }\n    }\n    return count", "    let vowels = \"aeiouAEIOU\"\n    var\
    \ count = 0\n    for character in s {\n        if vowels.contains(String(character))\
    \ {\n            count += 1\n        }\n    }\n    return count", "\tvar counter\
    \ : Int = 0\n\tfor c in s {\n\t\tif c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' {\n\t\t\tcounter += 1\n\t\t}\n\t}\n\treturn counter", "    var count\
    \ = 0\n    for letter in s {\n        if letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u' {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var count = 0\n\n    for letter in s {\n \
    \       switch letter {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n   \
    \         count += 1\n        default:\n            if letter == s[s.startIndex.advanced(by:\
    \ -1)] {\n                count += 1\n            }\n        }\n    }\n    return\
    \ count", "    return s.filter({ $0 == 'a' || $0 == 'e' || $0 == 'i' || $0 ==\
    \ 'o' || $0 == 'u' }).count", "    vowels := [...]string{\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    index := 0\n    vowelCount := 0\n\n    for {\n        if\
    \ index <= len(s) && vowels[index] == s[len(s)-index] {\n            vowelCount++\n\
    \        }\n        index++\n        if index > len(s) {\n            return vowelCount\n\
    \        }\n    }", "\tvowels := [Vovel](repeating: Vovel.a, count: s.count)\n\
    \tvowels.filter { vowels[$0].isvowel }\n\treturn vowels.count", "    var vowels:\
    \ [String] = []\n    for character in s {\n        if character == \"a\" || character\
    \ == \"e\" || character == \"i\" || character == \"o\" || character == \"u\" {\n\
    \            vowels.append(character)\n        }\n    }\n    return vowels.count",
  "    var count = 0\n    for v in s.characters {\n        if v == 'a' || v == 'e'\
    \ || v == 'i' || v == 'o' || v == 'u' {\n            count += 1\n        }\n \
    \   }\n    return count", "\tletters := [Int](s.characters)\n\tvar count Int\n\
    \tfor i := 0; i < len(letters)-1; i++ {\n\t\tcount += Int(letters[i] == 'a' ||\
    \ letters[i] == 'e' || letters[i] == 'i' || letters[i] == 'o' || letters[i] ==\
    \ 'u' || letters[i] == 'y' ? 1 : 0)\n\t}\n\treturn count", "    if s == \"\" {\n\
    \        return 0\n    }\n    let vowels = \"aeiou\"\n    var count = 0\n    for\
    \ char in s.characters {\n        switch char {\n        case 'a':\n         \
    \   count++\n        case 'e':\n            count++\n        case 'i':\n     \
    \       count++\n        case 'o':\n            count++\n        case 'u':\n \
    \           count++\n        }\n    }\n    return count - s.endIndex", "\treturn\
    \ count_consonants(s) + count_vowels(s)", "    if s == \"\" {\n        return\
    \ 0\n    }\n    var count = 0\n    var isVowel = true\n    for c in s {\n    \
    \    if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n\
    \            count += 1\n        } else {\n            count = 0\n           \
    \ isVowel = true\n        }\n    }\n    if isVowel && s[len(s)-1] == \"y\" {\n\
    \        count += 1\n    }\n    return count", "    let vowels = \"aAeEiIoOuUyY\"\
    \n    \n    var count = s.count { vowels.contains($0) }\n    if s.characters.last\
    \ == \"y\" && count != 0 {\n        count += 1\n    }\n    return count", "  \
    \  let vowels: Set<String> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let vowels_count\
    \ = s.characters.filter {\n        vowels.contains($0)\n    }.count\n    return\
    \ vowels_count", "    var count = 0\n    for c in s {\n        switch c {\n  \
    \      case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n  \
    \      case 'u':\n            count += 1\n        }\n    }\n    return count",
  "\tvar count = 1\n\tfor i := 0; i < len(s); i++ {\n\t\tif s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n\t\t\tcount++\n\t\t}\n\t\
    \tif s[i] == 'y' {\n\t\t\tcount++\n\t\t\tif i < len(s)-1 {\n\t\t\t\tif s[i+1]\
    \ == 'a' || s[i+1] == 'e' || s[i+1] == 'i' || s[i+1] == 'o' || s[i+1] == 'u' {\n\
    \t\t\t\t\tcount++\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count", "    if s\
    \ == \"\" {\n        return 0\n    }\n\n    var count = 0\n\n    for ch in s {\n\
    \        switch ch {\n        case \"a\": count++\n        case \"e\": count++\n\
    \        case \"i\": count++\n        case \"o\": count++\n        case \"u\"\
    : count++\n        case \"y\": if count == 0 {\n            count++\n        }\n\
    \        default: break\n        }\n    }\n\n    return count", "\tvar count =\
    \ 0\n\tfor _, char := range s {\n\t\tswitch char {\n\t\tcase 'a', 'e', 'i', 'o',\
    \ 'u':\n\t\t\tcount += 1\n\t\tcase 'y':\n\t\t\tcount += 1 // Count for one extra\
    \ y\n\t\t}\n\t}\n\treturn count", "\tvowelCount := 0\n\n\tfor _, v := range s\
    \ {\n\t\tswitch v {\n\t\tcase 'a':\n\t\tcase 'e':\n\t\tcase 'i':\n\t\tcase 'o':\n\
    \t\tcase 'u':\n\t\t\tvowelCount++\n\t\t}\n\t}\n\treturn vowelCount", '    return
    s.filter(Character.isVowel).count', "    if s == \"\" { return 0 }\n    var vowels\
    \ = \"aeiou\"\n    if s[len(s)-1] == 'y' {\n        vowels = \"y\" + vowels\n\
    \    }\n    var counts = [0] * UInt8(vowels.count)\n    for c in s {\n       \
    \ if let index = vowels.firstIndex(of: c) {\n            counts[index] += 1\n\
    \        }\n    }\n    return counts[0]", "    let mut vowels: Set<String> = Set::new()\n\
    \    let mut cnt = 0\n    for i in s.characters() {\n        vowels.insert(i.as_str())\n\
    \    }\n    for i in vowels {\n        if i == s[s.position..].as_str() && i.as_str()\
    \ == \"u\" {\n            cnt += 1\n        }\n    }\n    return cnt", "    let\
    \ vowels = \"aeiouAEIOU\"\n    var count = 0\n    for c in s {\n        if vowels.contains(String(c\
    \ as! Character)) == true {\n            count = count + 1\n        }\n    }\n\
    \    return count", "    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count", "    let vowels = \"aeiouy\"\n\n\
    \    var count = 0\n\n    for character in s {\n        if vowels.contains(character)\
    \ {\n            count += 1\n        }\n    }\n\n    return count", "    let vowels:\
    \ Set<String> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var counter: Int = 0\n\
    \    for _ in s.characters {\n        counter += 1\n    }\n    for char in vowels\
    \ {\n        if let index = s.characters.index(of: char) {\n            if index\
    \ < counter-1 {\n                counter += 1\n            }\n        }\n    }\n\
    \    return counter", "\treturn vowels_count_internal(s)", "\tvar count = 0\n\t\
    for i := 0; i < len(s); i++ {\n\t\tswitch s[i] {\n\t\tcase 'a':\n\t\tcase 'e':\n\
    \t\tcase 'i':\n\t\tcase 'o':\n\t\tcase 'u':\n\t\t\tcount = count + 1\n\t\t}\n\t\
    }\n\treturn count", "    // TODO: Write code here\n    let vowels = \"aeiouAEIOU\"\
    \n    let vowelsSet = Set(vowels)\n    return vowelsSet.count(s.characters.filter{$0\
    \ == \"a\"} ?? \"\")", '    return s.chars().filter(isVowel).count() - 1', " \
    \   let vowels = \"aAeEiIoOuU\"\n    var count = 0\n    for letter in s {\n  \
    \      if vowels.contains(letter) {\n            count += 1\n        }\n    }\n\
    \    return count", "    let vowels = \"aeiouy\"\n    \n    return s.characters.filter({\
    \ vowels.contains(String($0)) }).count + 1", "    return s.reduce(0, combine:\
    \ { (a, c) in\n        switch c {\n        case 'a', 'e', 'i', 'o', 'u':\n   \
    \         return a + 1\n        default:\n            return a\n        }\n  \
    \  })", "  let letters = Array(s.characters)\n  let vowels: [Character] = [\"\
    a\",\"e\",\"i\",\"o\",\"u\"]\n  return letters.filter { vowels.contains($0) }.count",
  "    vowels := [\n        \"a\", \"e\", \"i\", \"o\", \"u\",\n    ]\n    n := vowels.reduce(0)\
    \ {\n        if contains(s, $0) {\n            $0\n        } else {\n        \
    \    $0 + 1\n        }\n    }\n    return n", "    // write your code in JavaScript\
    \ (for loop)\n    var count = 0\n    var a = s.toUpperCase()\n    for (_, v) in\
    \ a.enumerated() {\n        if (v == \"A\" || v == \"E\" || v == \"I\" || v ==\
    \ \"O\" || v == \"U\") {\n            count += 1\n        }\n    }\n    return\
    \ count", "    // your code here\n    for character in s.characters {\n      \
    \  switch character {\n        case \"a\":\n        case \"e\":\n        case\
    \ \"i\":\n        case \"o\":\n        case \"u\":\n        default:\n       \
    \     return 0\n        }\n    }\n    return 1", "    var vowel_count = 0\n  \
    \  for letter in s {\n        switch letter.toLowercase() {\n        case \"a\"\
    , \"e\", \"i\", \"o\", \"u\":\n            vowel_count += 1\n        }\n    }\n\
    \    return vowel_count", "    var count = 0\n    for c in s {\n        switch\
    \ c {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n\
    \        case \"y\":\n            count += 1\n        default:\n            continue\
    \ // No vowels in string\n        }\n    }\n    return count", "\treturn vowels.reduce(0)\
    \ { $0 + (s.range(of: $1) ?? \"\").count }", "    let vowels = \"aeiouy\"\n  \
    \  var count = 0\n    for index in 0..<s.characters.count {\n        let c = String(s.characters[index])\n\
    \        if vowels.contains(c) {\n            count += 1\n        }\n    }\n \
    \   return count", "    var vowels = [Character : Int]()\n    for ch in s {\n\
    \        if ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' {\n\
    \            vowels[ch]++\n        }\n        if ch == 'y' {\n            if s.count\
    \ > 1 {\n                vowels[ch]++\n            }\n        }\n    }\n    return\
    \ vowels.count", '    return count(s, isVowel)', "    let vowels = \"aeiouAEIOU\"\
    .characters()\n    return vowels.reduce(0) {\n        (c, v) -> c + s.range(of:\
    \ v).length\n    }", "  let vowels: [Character] = [\"a\",\"e\",\"i\",\"o\",\"\
    u\"]\n  \n  // Create a pointer to the start of the string\n  var p = 0\n  \n\
    \  // Create a pointer to the first vowel\n  var vowel_p: Int = 0\n  \n  // Initialize\
    \ vowels_count to zero\n  var vowels_count = 0\n  \n  while p < s.characters.count\
    \ {\n    if s[p] == \"a\" || s[p] == \"e\" || s[p] == \"i\" || s[p] == \"o\" ||\
    \ s[p] == \"u\" {\n      // If s[p] is one of the vowels, increment vowels_count\
    \ by 1\n      vowels_count = vowels_count + 1\n    } else {\n      // If s[p]\
    \ is not one of the vowels, set vowels_count to zero\n      vowels_count = 0\n\
    \    }\n    \n    // Set the pointer p to the index of the next vowel\n    p =\
    \ p + 1\n    vowel_p = vowel_p + 1\n  }\n  \n  return vowels_count", "    \n \
    \   let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter {\
    \ vowels.contains(String($0)) }.count\n    \n    return vowels_count", "    var\
    \ count = Int()\n    for index in range(s.count) {\n        if s[index].isIn(\"\
    aeiou\") {\n            count += 1\n        }\n    }\n    return count", "\tvar\
    \ count = 0\n\tfor _, char := range s {\n\t\tif char == 'a' || char == 'e' ||\
    \ char == 'i' || char == 'o' || char == 'u' {\n\t\t\tcount += 1\n\t\t}\n\t}\n\t\
    return count", "\tlet vowels = \"aeiouAEIOU\"\n\tvar count = 0\n\tfor s in s {\n\
    \t\tif vowels.contains(s) {\n\t\t\tcount += 1\n\t\t}\n\t}\n\treturn count", " \
    \   let vowels = \"aeiou\"\n    var count = 0\n    for character in s {\n    \
    \    guard let index = vowels.firstIndex(of: character) else { return 0 }\n  \
    \      count += vowels.distance(from: vowels.startIndex, to: index)\n    }\n \
    \   return count", "    var vowels = \"aeiouAEIOU\"\n    for i : Int in self.characters{\n\
    \        if vowels.contains(Character(String(i))){\n            continue\n   \
    \     }\n        self.vowels += vowels.count\n    }\n    return self.vowels",
  "\tvowelsCount := 0\n\tfor _, c := range s {\n\t\tif c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' {\n\t\t\tvowelsCount++\n\t\t}\n\t}\n\treturn vowelsCount",
  "    var vowelCount = 0\n    for c in s {\n        switch c {\n        case \"a\"\
    : vowelCount += 2\n        case \"e\": vowelCount += 1\n        case \"i\": vowelCount\
    \ += 1\n        case \"o\": vowelCount += 1\n        case \"u\": vowelCount +=\
    \ 1\n        default: break\n        }\n    }\n    return vowelCount", "    return\
    \ s.reduce(0) { (res, c) in\n        var count = 1\n        if c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n        }\n\
    \        if c == 'y' && s.endIndex < s.endIndex {\n            count += 1\n  \
    \      }\n        return res+count\n    }", "    let vowels = \"aeiouAEIOU\"\n\
    \    return s.characters.filter({ vowels.contains($0) }).count", "    vowels :=\
    \ [String]()\n    for _, r := range s {\n        if r == 'a' || r == 'e' || r\
    \ == 'i' || r == 'o' || r == 'u' {\n            vowels = append(vowels, r)\n \
    \       }\n    }\n\n    return vowels.count", "    return s.count{\n        x\
    \ in \"aeiou\"\n    }", "\tif s == \"\" {\n\t\treturn 0\n\t}\n\tvowels := [...]struct\
    \ {\n\t\tc   rune\n\t\tfound bool\n\t}{\n\t\t{'a', false},\n\t\t{'e', false},\n\
    \t\t{'i', false},\n\t\t{'o', false},\n\t\t{'u', false},\n\t\t{'y', true},\n\t\
    }\n\n\tn := 0\n\tfor _, r := range s {\n\t\tn += int(reflect.TypeOf(vowels).Index(r))\n\
    \t}\n\treturn n", "    let vowels = \"aeiouAEIOU\"\n    return s.characters.filter({\
    \ vowels.contains($0) }).count", "\ts := strings.ToLower(s)\n\tvar n Int\n\tvar\
    \ vowels String = \"aeiou\"\n\tfor _, r := range s {\n\t\tswitch {\n\t\tcase r\
    \ == 'y' && len(s) == 0 || r == ' ':\n\t\t\tn++\n\t\tdefault:\n\t\t\tif strings.Contains(vowels,\
    \ r) {\n\t\t\t\tn++\n\t\t\t}\n\t\t}\n\t}\n\treturn n", "\tvar vowels: Int = 0\n\
    \tfor _, c := range s {\n\t\tif c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n\t\t\tvowels += 1\n\t\t}\n\t}\n\treturn vowels", "    var count\
    \ = 0\n    for letter in s {\n        if letter == letter.lowercased() {\n   \
    \         count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    var index = s.startIndex\n    var vowels = \"aeiouy\"\n    while index <\
    \ s.endIndex {\n        char = s[index].unicodeScalars.first!\n        if vowels.contains(char.utf8)\
    \ {\n            count += 1\n        }\n        index += 1\n    }\n    return\
    \ count", "    if s == \"\" {\n        return 0\n    }\n\n    var result = 0\n\
    \    let startIndex: Int = s.startIndex\n\n    for var letterIndex = startIndex;\
    \ letterIndex < s.endIndex; letterIndex++ {\n        let letter = s[letterIndex]\n\
    \n        if let isVowel = vowels[letter] {\n            result += 1\n       \
    \ } else {\n            guard letterIndex < s.endIndex - 1 else {\n          \
    \      return 0\n            }\n            let nextLetter = s[letterIndex + 1]\n\
    \            if nextLetter == \"y\" && letter == \"a\" {\n                result\
    \ += 1\n            } else {\n                break\n            }\n        }\n\
    \    }\n\n    return result", "    vowels_counts := [...]int{0, 1, 1, 0, 1}\n\
    \    for _, r := range s {\n        switch r {\n        case 'a':\n        case\
    \ 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n            vowels_counts[len(s)\
    \ - 1]++\n        }\n    }\n    return vowels_counts[len(s) - 1]", "    var count\
    \ = 0\n    for x in s.characters {\n        switch x {\n        case 'a':\n  \
    \      case 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n  \
    \          count += 1\n        default:\n            break\n        }\n    }\n\
    \    return count", "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let vowelsLen: Int = vowels.count\n    var result: Int = 0\n\n\
    \    for character in s {\n        switch character {\n        case \"a\":\n \
    \       case \"e\":\n        case \"i\":\n        case \"o\":\n        case \"\
    u\":\n        default:\n            continue\n        }\n\n        result += 1\n\
    \    }\n\n    if result.isEmpty {\n        return 0\n    }\n\n    return result",
  "    // Your code here\n    for char in s {\n        switch char {\n        case\
    \ \"a\",\"e\",\"i\",\"o\",\"u\":\n            count = count + 1\n        default:\n\
    \            count = count + 0\n        }\n    }\n    return count", "    let\
    \ vowels = \"aeiouAEIOU\"\n    var count = 0\n    for char in s {\n        if\
    \ vowels.contains(char) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    // TODO: Precondition: string should not contain spaces.\n    //\
    \ TODO: Precondition: string should not contain newline characters.\n    let vowels:\
    \ Set<Character> = Set(\"aeiou\")\n    let vowelCount = s.characters\n       \
    \ .filter({ vowels.contains($0) })\n        .count\n\n    return vowelCount",
  '    return count(s, &vowels)', "    var vowel_count = 0\n    for i in s.characters\
    \ {\n        switch i {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n   \
    \         vowel_count += 1\n        case \"y\":\n            if s.characters.last\
    \ == \"y\" {\n                vowel_count += 1\n            }\n        }\n   \
    \ }\n    return vowel_count", "    vowels := [\"a\",\"e\",\"i\",\"o\",\"u\"]\n\
    \    vowels_count := 0\n    for _,char := range s {\n        if vowels.Contains(char)\
    \ {\n            vowels_count++\n        }\n    }\n    return vowels_count", "\t\
    return s.count(of: \"aeiou\")", "    var n = s.length\n    var vowels = [1]\n\
    \    for i in 1..(n-1) {\n        if s[i] == \"a\" || s[i] == \"e\" || s[i] ==\
    \ \"i\" || s[i] == \"o\" || s[i] == \"u\"{\n            vowels[i] += 1\n     \
    \   }\n    }\n    return vowels[0]", "    var vowelCount = 0\n    for vowel in\
    \ \"aeiouAEIOU\" {\n        if s[s.startIndex.advancedBy(vowel.startIndex)...]\
    \ == vowel {\n            vowelCount += 1\n        }\n    }\n    return vowelCount",
  "\tvar count = 0\n\tvar pos = 0\n\n\tfor ch in s {\n\t\tif ch == 'a' || ch == 'e'\
    \ || ch == 'i' || ch == 'o' || ch == 'u' {\n\t\t\tcount += 1\n\t\t}\n\t\tif ch\
    \ == 'y' {\n\t\t\tif pos == len(s) || s[pos + 1] != 'a' || s[pos + 1] != 'e' ||\n\
    \t\t\t\ts[pos + 1] != 'i' || s[pos + 1] != 'o' || s[pos + 1] != 'u' {\n\t\t\t\t\
    pos += 1\n\t\t\t}\n\t\t}\n\t\tpos += 1\n\t}\n\n\treturn count", "\tvowels := [...]byte{'a',\
    \ 'e', 'i', 'o', 'u'}\n\ti := 0\n\tvar vowelCount int\n\n\tfor i < len(s) {\n\t\
    \tif s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n\
    \t\t\tvowelCount++\n\t\t}\n\t}\n\treturn vowelCount", '    return count_vowels(s)',
  "    var count = 0\n    for c in s {\n        switch c {\n        case 'a':\n  \
    \      case 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n  \
    \          count += 1\n        default:\n            if c == 'y' {\n         \
    \       count += 1\n            }\n        }\n    }\n    return count", "    if\
    \ s == \"\" {\n        return 0\n    }\n\n    var vowels: [Character] = [\"a\"\
    ,\"e\",\"i\",\"o\",\"u\"]\n    var count = vowels.reduce(0,combine: {\n      \
    \  \n        var total = 0\n        \n        if $0 == $1 {\n            total\
    \ += 1\n        }\n        \n        return total\n    })\n    \n    \n    \n\
    \    \n    return count", "    let vowels = \"aeiou\"\n    return s.count { vowels.contains($0)\
    \ }", "    let vowels = \"aeiouAEIOU\".characters.sort()\n    return vowels.filter({\
    \ s.rangeOfString(String($0)) }).count", "    var count = 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n            count += 1\n        }\n    }\n    return\
    \ count", "    if s == \"\" {\n        return 0\n    }\n    var count = 0\n  \
    \  var last = '\\0' // To store the last character seen\n    for c in s {\n  \
    \      if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n       \
    \     count = count + 1\n        }\n        if c != last {\n            last =\
    \ c\n        }\n    }\n    return count", "    var count = 0\n    var lastChar\
    \ = s.characters[s.startIndex]\n\n    for char in s.characters {\n        if lastChar\
    \ == 'a' || lastChar == 'e' || lastChar == 'i' ||\n            lastChar == 'o'\
    \ || lastChar == 'u' {\n            count += 1\n        }\n        lastChar =\
    \ char\n    }\n    return count", '    return vowels(s, false).length', "    var\
    \ count = 0\n    for letter in s {\n        switch letter {\n        case \"a\"\
    , \"e\", \"i\", \"o\", \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count", "    if s == \"\" {\n   \
    \     return 0\n    }\n    var vowels: [Character] = []\n    for letter in s.unicodeScalars\
    \ {\n        switch letter {\n        case .vowel.rawValue:\n            vowels.append(letter)\n\
    \        default:\n            break\n        }\n    }\n    return vowels.count",
  '  return count_with_condition(vowel, s)', "    // TODO: convert to lowercase and\
    \ use case-insensitive search\n\n    // Initialize count\n    var count = 0\n\n\
    \    // Look for vowels in s\n    var i = 0\n    while i < s.characters.count\
    \ {\n        switch s[i] {\n        case \"a\":\n        case \"e\":\n       \
    \ case \"i\":\n        case \"o\":\n        case \"u\":\n            count +=\
    \ 1\n            i += 1\n        default:\n            i += 1\n        }\n   \
    \ }\n\n    return count", "    var n = 0\n    for c in s {\n        if c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            n++\n       \
    \ }\n    }\n    return n", "    var n = 0\n    for _, b := range s {\n       \
    \ if b == 'a' || b == 'e' || b == 'i' || b == 'o' || b == 'u' {\n            n\
    \ = n + 1\n        }\n    }\n    return n", "    var count = 0\n    for index\
    \ in range(s.characters.count - 1, -1, -1) {\n        switch (s[index]) {\n  \
    \      case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count = count + 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    var i = 0\n    while i < s.count {\n\
    \        switch s[i] {\n        case \"a\":\n            count = count + 1\n \
    \       case \"e\":\n            count = count + 1\n        case \"i\":\n    \
    \        count = count + 1\n        case \"o\":\n            count = count + 1\n\
    \        case \"u\":\n            count = count + 1\n        default:\n      \
    \      break\n        }\n        i += 1\n    }\n    return count", "\tvowels :=\
    \ [String](\"aeiouy\")\n\tvowelCount = 0\n\tfor _, c := range s {\n\t\tif strings.Contains(vowels,\
    \ c) {\n\t\t\tvowelCount += 1\n\t\t}\n\t}\n\treturn vowelCount", "    let vowels\
    \ = CharacterSet(charactersIn: \"aeiouyAEIOUY\")\n    return s.characters.filter{\
    \ vowels.contains($0) }.count", "    var vowel_count = 0\n    for ch in s.characters\
    \ {\n        switch ch {\n        case \"a\":\n        case \"e\":\n        case\
    \ \"i\":\n        case \"o\":\n        case \"u\":\n            vowel_count +=\
    \ 1\n        default:\n            if ch != s.endIndex {\n                vowel_count\
    \ += 2\n            }\n        }\n    }\n    return vowel_count", "    vowels\
    \ := [String]()\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            vowels = append(vowels, r)\n\
    \        }\n    }\n    return vowels.Count()", "    var count = 0\n    if s ==\
    \ \"\" {\n        return count\n    }\n\n    var c = 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            c++\n        }\n        if s[i] == 'y' && i+1 < len(s)\
    \ {\n            i++\n            if s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u' {\n                count += 1\n            }\n\
    \        }\n    }\n    return count", "  return s.toCharArray().filter({ $0 ==\
    \ 'a' || $0 == 'e' || $0 == 'i' || $0 == 'o' || $0 == 'u' }).count", "    return\
    \ s.lowercaseString.count(\\case\n        c -> let v = c.unicodeScalars.first!\n\
    \            switch v {\n            case 0xE0: // a\n            case 0xE1: //\
    \ e\n            case 0xE2: // i\n            case 0xE3: // o\n            case\
    \ 0xE4: // u\n            case 0xE5: // Y\n                true\n            case\
    \ 0xE8: // E\n            case 0xE9: // I\n            case 0xEA: // O\n     \
    \       case 0xEB: // U\n                true\n            case 0xEC: // c\n \
    \           case 0xED: // d\n            case 0xEE: // y\n                true\n\
    \            default:\n                false\n            }\n        )", "\tvar\
    \ count = 0\n\tfor _, c := range s {\n\t\tif c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count", "   \
    \ let vowels = \"aeiouy\"\n    var count = 0\n    for index in 0..<s.characters.count\
    \ {\n        if vowels.contains(s[index]) {\n            count += 1\n        }\n\
    \    }\n    return count", "    var cnt = 0\n    var lastCnt = 0\n    for c in\
    \ s {\n        switch c {\n        case \"a\":\n            cnt += 1\n       \
    \ case \"e\":\n            cnt += 1\n        case \"i\":\n            cnt += 1\n\
    \        case \"o\":\n            cnt += 1\n        case \"u\":\n            cnt\
    \ += 1\n        default:\n            if lastCnt == 3 {\n                cnt -=\
    \ 1\n            }\n            lastCnt = 1\n        }\n    }\n    return cnt",
  "    var vowelCount = 0\n    for c in s.characters {\n        if c == Character('a')\
    \ || c == Character('e') || c == Character('i') || c == Character('o') || c ==\
    \ Character('u') {\n            vowelCount += 1\n        }\n    }\n    return\
    \ vowelCount", "\tvar vowelCount = 0\n\tfor i := 0; i < len(s); i++ {\n\t\tif\
    \ s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\n\t\t\ts[i] == 'o' || s[i] == 'u'\
    \ {\n\t\t\tvowelCount++\n\t\t}\n\t}\n\treturn vowelCount", "    var count = 0\n\
    \    for letter in s.characters {\n        if letter == \"a\" || letter == \"\
    e\" || letter == \"i\" || letter == \"o\" || letter == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var vowels = [String]()\n  \
    \  for c in s.characters {\n        switch c {\n        case 'a':\n        case\
    \ 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n            vowels.append(c)\n\
    \        }\n    }\n    return vowels.count", "\tvowel_count := 0\n\tfor _, c :=\
    \ range s {\n\t\tswitch c {\n\t\tcase 'a':\n\t\t\tvowel_count += 1\n\t\tcase 'e':\n\
    \t\t\tvowel_count += 1\n\t\tcase 'i':\n\t\t\tvowel_count += 1\n\t\tcase 'o':\n\
    \t\t\tvowel_count += 1\n\t\tcase 'u':\n\t\t\tvowel_count += 1\n\t\t}\n\t}\n\t\
    return vowel_count", "    var vowels = \"\"\n    for c in s {\n        switch\
    \ c {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            vowels +=\
    \ c\n        default:\n            vowels += \"y\"\n        }\n    }\n    return\
    \ vowels.characters.count", "    let chars = Array(s.characters)\n    var count\
    \ = 0\n    for char in chars {\n        switch char {\n        case 'a':\n   \
    \     case 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n   \
    \         count += 1\n        default:\n            break\n        }\n    }\n\
    \    return count", '    return vowels(s).count()', "    \n    let vowels = \"\
    aeiou\"\n    var count = 0\n    \n    for x in s.characters {\n        if x ==\
    \ vowels.characters.last {\n            count += 1\n        } else {\n       \
    \     break\n        }\n    }\n    \n    return count", "\tvar count : Int = 0\n\
    \tfor i := 0; i < len(s); i++ {\n\t\tif s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n\t\t\tcount += 1\n\t\t}\n\t}\n\treturn\
    \ count", "    var count = 0\n    for _, b := range s {\n        if b == 'a' ||\
    \ b == 'e' || b == 'i' || b == 'o' || b == 'u' {\n            count++\n      \
    \  }\n    }\n    return count", "    if s == \"\" {\n        return 0\n    }\n\
    \    var vowelCount = 0\n    for char in s {\n        if char == 'a' || char ==\
    \ 'e' || char == 'i' || char == 'o' || char == 'u' {\n            vowelCount +=\
    \ 1\n        }\n    }\n    return vowelCount", "    let vowels = \"aeiouAEIOU\"\
    \n    return s.flatMap(s.contains).filter { vowels.contains($0) }.count", "  \
    \  let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for i in 0..<s.characters.count\
    \ {\n        if vowels.contains(s.character(at: i)) {\n            count += 1\n\
    \        }\n    }\n    return count", "    let letters = vowel_letters(s)\n  \
    \  let vowels = letters.reduce(0) { $0 + 1 }\n    return vowels", "\tif strings.Index(s,\
    \ \"y\") == strings.LastIndex(s) {\n\t\treturn 0\n\t}\n\n\tvowels := []rune(\"\
    aAeEiIoOuU\")\n\tstart := 0\n\tend := len(s)\n\tfor start < end {\n\t\t_, count\
    \ := bytes.Count(s[start:], vowels)\n\t\tstart += count\n\t\tend--\n\t}\n\n\t\
    return end - start", "    var vowels = [String]()\n\n    for ch in s {\n     \
    \   switch ch {\n        case 'a':\n        case 'e':\n        case 'i':\n   \
    \     case 'o':\n        case 'u':\n            if vowels.last != nil && vowels.last\
    \ == ch {\n                vowels.append(nil)\n            } else {\n        \
    \        vowels.append(ch)\n            }\n        default:\n            vowels.append(nil)\n\
    \        }\n    }\n    return vowels.count", "    vowels := [String]()\n    for\
    \ idx, letter in s.characters.enumerated() {\n        if letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            vowels.append(letter)\n\
    \        }\n    }\n    return vowels.count", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"]\n    var count = 0\n\n    for char in s.characters {\n\
    \        if vowels.contains(char.lowercaseString) {\n            count += 1\n\
    \        }\n    }\n\n    return count", "    let vowels = \"aeiouAEIOU\".unicodeScalars\n\
    \    let characters = s.unicodeScalars\n    let count = characters.reduce(0) {\
    \ (count, character) -> Int in\n        if let index = vowels.index(of: character)\
    \ {\n            if index == vowels.endIndex {\n                return count +\
    \ 1\n            }\n            return count\n        }\n        return count\n\
    \    }\n    return count", "    \n    var count = 0\n    \n    for c in s {\n\
    \        \n        switch c {\n            case \"a\":\n            case \"e\"\
    :\n            case \"i\":\n            case \"o\":\n            case \"u\":\n\
    \                count += 1\n            default:\n                break\n   \
    \     }\n        \n    }\n    \n    return count", "    var count = 0\n\n    for\
    \ c1 := 0; c1 < len(s); c1++ {\n        if c1 == 0 || s[c1] == 'y' {\n       \
    \     continue\n        }\n        for c2 := c1 + 1; c2 < len(s); c2++ {\n   \
    \         if c2 > c1 && s[c2] == 'y' {\n                continue\n           \
    \ }\n            if s[c1] == s[c2] {\n                count++\n            }\n\
    \        }\n    }\n\n    return count", "    var result = vowels\n    for ch in\
    \ s {\n        switch ch {\n        case \"a\": result++\n        case \"e\":\
    \ result++\n        case \"i\": result++\n        case \"o\": result++\n     \
    \   case \"u\": result++\n        default:\n            break\n        }\n   \
    \ }\n    return result", "    \n    if s == \"\" || s[0] == \" \" {\n        return\
    \ len(s) / 2\n    } else {\n        let vowels = \"aeiouAEIOU\".characters\n \
    \       let vowelsArr = Array(vowels)\n        let lettersArr = Array(s)\n   \
    \     \n        return lettersArr.filter({ (character) -> Bool in\n          \
    \  vowelsArr.contains(character)\n        }).count / 2\n    }", "\tcount := 0\n\
    \tfor i := 0; i < len(s); i++ {\n\t\tif s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count",
  "    let vowels = Set([\n        \"a\",\n        \"e\",\n        \"i\",\n      \
    \  \"o\",\n        \"u\",\n        \"y\"\n    ])\n    return s.characters.reduce(0)\
    \ { $0 + ($1.isInSet(vowels) ? 1 : 0) }", "    if s == \"\" {\n        return\
    \ 0\n    }\n\n    var count = 0\n    var lastChar = s[0]\n    for char in self.chars\
    \ {\n        if char == lastChar {\n            continue\n        }\n        if\
    \ char == 'a' || char == 'e' || char == 'i' || char == 'o' || char == 'u' {\n\
    \            count += 2\n        }\n        lastChar = char\n    }\n    return\
    \ count", "\tvar vowels [String]\n\t\n\tfor ch in s {\n\t\tif ch == 'a' || ch\
    \ == 'e' || ch == 'i' || ch == 'o' || ch == 'u'{\n\t\t\tvowels.append(ch)\n\t\t\
    }\n\t}\n\t\n\treturn vowels.count{\n\t\t$0 == \"a\",\n\t\t$0 == \"e\",\n\t\t$0\
    \ == \"i\",\n\t\t$0 == \"o\",\n\t\t$0 == \"u\",\n\t}", "\tlet counts = (0..<s.count).map({\
    \ s[$0] })\n\tlet vowels = counts\n\t\t.filter{ $0.isIn(setOf: \"aeiouAEIOU\"\
    ) }\n\t\t.count\n\treturn vowels", "    var count = 0\n    for char in s {\n \
    \       switch char {\n        case \"a\":\n        case \"e\":\n        case\
    \ \"i\":\n        case \"o\":\n        case \"u\":\n        default:\n       \
    \     count++\n        }\n    }\n    return count", "    let alphabet = \"aeiou\"\
    \n    var count = 0\n    for (index, value) in s.characters.enumerated() {\n \
    \       if value == alphabet[index] {\n            count += 1\n        }\n   \
    \ }\n    return count", "    var count = 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u' {\n            count += 1\n        }\n    }\n    return count", "    let\
    \ vowels = Array(\"aeiouy\")\n    let count  = 0\n    var index = 0\n    while\
    \ index < s.characters.count {\n        let char = String(s[index])\n        if\
    \ vowels.contains(char) {\n            count += 1\n        }\n        index +=\
    \ 1\n    }\n    return count", '    return len(s) - vowels_count(s[..])', "  \
    \  var count = 0\n    var nextChar = s[0]\n    var inVowel = false\n    for c\
    \ in s[1...] {\n        if nextChar == c {\n            nextChar = nextChar +\
    \ c\n        } else {\n            if inVowel {\n                count = count\
    \ + 1\n            } else {\n                inVowel = true\n            }\n \
    \           nextChar = c\n        }\n    }\n\n    if nextChar == 'y' {\n     \
    \   count = count + 1\n    }\n\n    return count", "    var count = 0\n\n    for\
    \ i in s.characters {\n        switch i.unicodeScalars.first!.value {\n      \
    \  case 97...122:\n            count += 1\n        default:\n            break\n\
    \        }\n    }\n\n    return count", "    var count = 0\n    for character\
    \ in s.characters {\n        if letter_in_vowel(character) {\n            count\
    \ += 1\n        }\n    }\n    return count", '  return s.replace("A", "").replaceAll("[^aeiouy]",
    "").length', "    vowels := \"aeiou\"\n    for _, char := range s {\n        if\
    \ vowels[char] != \"y\" {\n            return strings.Count(s, char)\n       \
    \ }\n    }\n    return 0", "    if s.isEmpty() {\n        return 0\n    }\n  \
    \  var count = 0\n    for i in s.unicodeScalars {\n        switch i.value {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        case \"y\":\n     \
    \       count += s.unicodeScalars.count { $0.value == \"y\" }\n        }\n   \
    \ }\n    return count", '    return s.rangeOfString("aeiouyAEIOUY")!.location',
  "    let vowels: Set<String> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\n    // The\
    \ count of the vowels in the string\n    var count = 0\n    var isVowel = false\n\
    \n    // Iterate through the characters in the string\n    for char in s.characters\
    \ {\n        // If it is a vowel, increment the count\n        if vowels.contains(char)\
    \ {\n            count += 1\n            isVowel = true\n        }\n\n       \
    \ // Otherwise, check if it is at the end of the string\n        else if char\
    \ == s.characters.last {\n            // If so, check if it is a vowel\n     \
    \       if isVowel {\n                count += 1\n                isVowel = false\n\
    \            }\n        }\n    }\n    return count", "    if s.isEmpty {\n   \
    \     return 0\n    }\n    var vowels: [Character] = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var vowels_count = 0\n    for i in 0 ..< s.count {\n        if\
    \ vowels.contains(s[i]) {\n            vowels_count += 1\n        }\n    }\n \
    \   return vowels_count", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ count := 0\n    for _, r := range s {\n        if !isVowel(r) {\n          \
    \  continue\n        }\n        if r == s[len(s)-1] {\n            count++\n \
    \       }\n    }\n    return count", "    return s.chars().filter({ $0 == 'a'\
    \ || $0 == 'e' || $0 == 'i' || $0 == 'o' || $0 == 'u' }).count", "    let vowels\
    \ = \"aeiou\"\n    let vowel_counts = Array(s.characters)\n        .filter { vowels.contains($0)\
    \ }\n        .filter({ $0 != s.characters.last })\n        .count\n    return\
    \ vowel_counts", '    return vowels_count_(s.lowercased())', "\tvar vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tvar count = 0\n\tfor i : Int in  s.characters.indices\
    \ {\n\t\tif vowels[i] == s[i] {\n\t\t\tcount += 1\n\t\t}\n\t}\n\treturn count",
  "    vowels := [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    if vowels.contains(s) {\n\
    \        vowels.remove(s)\n        return vowels.count\n    }\n    return 0",
  "    var vowels = Array(0..<5)\n    var vowel_count = 0\n    for character in s\
    \ {\n        if character == 'a' || character == 'e' || character == 'i' || character\
    \ == 'o' || character == 'u' {\n            vowels[vowel_count] = character\n\
    \            vowel_count += 1\n        }\n    }\n    return vowel_count", "  \
    \  var count = 0\n    for c in s {\n        if c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' {\n            count += 1\n        }\n    }\n    return\
    \ count", "\treturn countSubstring(s, vowelsIndexesByLetter)", "    if let index\
    \ = s.characters.indexOf(\"a\") {\n        return s.characters.count - index\n\
    \    }\n    if let index = s.characters.indexOf(\"e\") {\n        return s.characters.count\
    \ - index\n    }\n    if let index = s.characters.indexOf(\"i\") {\n        return\
    \ s.characters.count - index\n    }\n    if let index = s.characters.indexOf(\"\
    o\") {\n        return s.characters.count - index\n    }\n    if let index = s.characters.indexOf(\"\
    u\") {\n        return s.characters.count - index\n    }\n    if let index = s.characters.indexOf(\"\
    y\") {\n        return s.characters.count - index\n    }\n    return 0", "   \
    \ var count = 0\n    for letter in s.characters {\n        if letter == \"a\"\
    \ || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter == \"u\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var counter\
    \ = 0\n    for c in s.characters {\n        switch c {\n        case 'a':\n  \
    \      case 'e':\n        case 'i':\n        case 'o':\n        case 'u':\n  \
    \          counter += 1\n        default:\n            if c == s.characters.last!\
    \ {\n                counter += 1\n            }\n        }\n    }\n    return\
    \ counter", "    var count = 0\n    for _, c := range s {\n        switch c {\n\
    \        case 'a', 'e', 'i', 'o', 'u':\n            count++\n        }\n    }\n\
    \    return count", "\treturn s.chars().filter(\n\t\t|c| c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u'\n\t).count() + 1", "\tif s == \"\" {\n\t\
    \treturn 0\n\t}\n\treturn vowels_count_impl(s, nil)", "    // This implementation\
    \ is straight up O(n), where n is the\n    // length of the given string\n   \
    \ var count = 0\n    for s in s {\n        switch s {\n        case \"a\":\n \
    \       case \"e\":\n        case \"i\":\n        case \"o\":\n        case \"\
    u\":\n            count += 1\n        }\n    }\n    return count", "    // TODO\n\
    \    return 0", "    var count = 0\n    for c in s {\n        if c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n     \
    \   }\n    }\n    return count", '    return s.filter{ !("aeiou".contains($0))
    }.count', "    var count = 0\n    for letter in s {\n        if letter == \"a\"\
    \ || letter == \"e\" || letter == \"i\" ||\n            letter == \"o\" || letter\
    \ == \"u\" {\n            count += 1\n        }\n    }\n    return count", " \
    \   let vowels = \"aeiouy\"\n    var vowels_count = 0\n    for i in 0..<s.characters.count\
    \ {\n        if vowels.characters.contains(s.characters[i]) {\n            vowels_count\
    \ = vowels_count + 1\n        }\n    }\n    return vowels_count", "    var count\
    \ = 0\n    var s = String(s)\n    for i in s.characters {\n        switch i {\n\
    \        case 'a':\n        case 'e':\n        case 'i':\n        case 'o':\n\
    \        case 'u':\n            count += 1\n        }\n    }\n    return count",
  "    guard !s.isEmpty else { return 0 }\n    var count = 0\n    for c in s {\n \
    \       switch c {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n        \
    \    count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelCount\
    \ := 0\n    for _, ch := range s {\n        if ch == 'a' || ch == 'e' || ch ==\
    \ 'i' || ch == 'o' || ch == 'u' {\n            vowelCount++\n        }\n    }\n\
    \n    return vowelCount", "    var count = 0, vowels: [Character] = [Character(\"\
    a\"), Character(\"e\"), Character(\"i\"), Character(\"o\"), Character(\"u\")]\n\
    \    for i in s.characters {\n        if vowels.contains(i) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var vowels = [\"\"]\n    if\
    \ let s = s as String? {\n        if let _ = s.range(of: \"[aeiouAEIOU]+\") {\n\
    \            vowels = [\"\"]\n        } else {\n            let vowels = \"aeiouAEIOU\"\
    \n            for char in s.characters.reversed() {\n                if let idx\
    \ = vowels.firstIndex(of: char) {\n                    vowels.removeAtIndex(idx)\n\
    \                }\n            }\n        }\n    }\n    return vowels.count",
  "    var count = 0\n    for letter in s {\n        if letter >= 'A' && letter <=\
    \ 'Z' {\n            count += 1\n        }\n    }\n    return count", "    let\
    \ vowels = \"aeiouAEIOU\"\n    return vowels.filter(s[s.startIndex..<s.endIndex]).reduce(0)\
    \ {\n        $0 + ($1.unicodeScalars.filter { $0.value == 0x4E }).count\n    }",
  "    // \"y\" is a vowel when it is not the end of the word.\n    var vowels = \"\
    aieoauy\"\n    for _ in s.chars() {\n        vowels = vowels.filterNot{$0 == $1}\n\
    \    }\n    return vowels.count", "    let vowels = \"aeiouAEIOU\".unicodeScalars\n\
    \    \n    return s.utf16.count { unicodeScalar in vowels.contains(unicodeScalar)\
    \ }", "    // Complete the implementation here\n    var count = 0\n    for letter\
    \ in s {\n        switch letter {\n        case \"a\":\n        case \"e\":\n\
    \        case \"i\":\n        case \"o\":\n        case \"u\":\n        case \"\
    y\":\n        case \"A\":\n        case \"E\":\n        case \"I\":\n        case\
    \ \"O\":\n        case \"U\":\n        case \"Y\":\n            count += 1\n \
    \       }\n    }\n    return count", "    var count = 0\n    for c in s {\n  \
    \      switch c {\n        case 'a':\n        case 'e':\n        case 'i':\n \
    \       case 'o':\n        case 'u':\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

name: HumanEval_81_numerical_letter_grade
language: swift
prompt: "\n/// It is the last week of the semester and the teacher has to give the\
  \ grades\n/// to students. The teacher has been making her own algorithm for grading.\n\
  /// The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you an array of GPAs for some students and you have to write \n/// a function\
  \ that can output an array of letter grades using the following table:\n/// GPA\
  \       |    Letter grade\n/// 4.0                A+\n/// > 3.7                A\
  \ \n/// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7       \
  \         B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7\
  \                C\n/// > 1.3                C-\n/// > 1.0                D+ \n\
  /// > 0.7                D \n/// > 0.0                D-\n/// 0.0              \
  \  E\n/// Example:\n/// >>> numerical_letter_grade(grades: [4.0, 3, 1.7, 2, 3.5])\n\
  /// [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]\nfunc numerical_letter_grade(grades:\
  \ [Double]) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(numerical_letter_grade(grades: [4.0, 3,\
  \ 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\nassert(numerical_letter_grade(grades:\
  \ [1.2]) == [\"D+\"])\nassert(numerical_letter_grade(grades: [0.5]) == [\"D-\"])\n\
  assert(numerical_letter_grade(grades: [0.0]) == [\"E\"])\nassert(numerical_letter_grade(grades:\
  \ [1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\nassert(numerical_letter_grade(grades:\
  \ [0.0, 0.7]) == [\"E\", \"D-\"])"
completions: ["\t\n\tlet highest_gpa = grades.max()\n\tvar letters : [String] = []\n\
    \tfor i in grades {\n\t\tlet temp : Double = i\n\t\tif temp == highest_gpa {\n\
    \t\t\tletters.append(\"E\")\n\t\t} else {\n\t\t\tvar letter : String = \"\"\n\t\
    \t\tif temp > highest_gpa { letter = \"A+\" } else if temp > highest_gpa * 0.7\
    \ { letter = \"A\" } else if temp > highest_gpa * 0.3 { letter = \"A-\" } else\
    \ if temp > highest_gpa * 0.1 { letter = \"B+\" } else if temp > highest_gpa *\
    \ 0.07 { letter = \"B\" } else if temp > highest_gpa * 0.03 { letter = \"B-\"\
    \ } else if temp > highest_gpa * 0.01 { letter = \"C+\" } else if temp > highest_gpa\
    \ * 0.007 { letter = \"C\" } else if temp > highest_gpa * 0.003 { letter = \"\
    C-\" } else if temp > highest_gpa * 0.001 { letter = \"D+\" } else { letter =\
    \ \"D\" }\n\t\t\tletters.append(letter)\n\t\t}\n\t}\n\treturn letters", "    var\
    \ letterGrades = [String]()\n    var gpaSum = 0.0\n    for gp in grades {\n  \
    \      if gp > 3.0 {\n            gpaSum += gp\n            if gpaSum > 3.0 {\n\
    \                gpaSum -= 3.0\n                letterGrades.append(\"C+\")\n\
    \            } else if gpaSum > 2.0 {\n                gpaSum -= 2.0\n       \
    \         letterGrades.append(\"C\")\n            } else if gpaSum > 1.0 {\n \
    \               gpaSum -= 1.0\n                letterGrades.append(\"B\")\n  \
    \          } else if gpaSum > 0.7 {\n                gpaSum -= 0.7\n         \
    \       letterGrades.append(\"B+\")\n            } else if gpaSum > 0.3 {\n  \
    \              gpaSum -= 0.3\n                letterGrades.append(\"B-\")\n  \
    \          } else if gpaSum > 0.1 {\n                gpaSum -= 0.1\n         \
    \       letterGrades.append(\"B-\")\n            } else if gpaSum < -0.7 {\n \
    \               gpaSum += 0.7\n                letterGrades.append(\"B+\") \n\
    \            } else if gpaSum < -0.3 {\n                gpaSum += 0.3\n      \
    \          letterGrades.append(\"B\")\n            } else if gpaSum < -0.1 {\n\
    \                gpaSum += 0.1\n                letterGrades.append(\"B\")\n \
    \           } else {\n                letterGrades.append(\"D\")\n           \
    \ }\n        } else if gp > 2.0 {\n            gpaSum += gp\n            if gpaSum\
    \ > 2.0 {\n                gpaSum -= 2.0\n                letterGrades.append(\"\
    B+\")\n            } else if gpaSum > 1.0 {\n                gpaSum -= 1.0\n \
    \               letterGrades.append(\"B\")\n            } else if gpaSum > 0.7\
    \ {\n                gpaSum -= 0.7\n                letterGrades.append(\"B\"\
    )\n            } else if gpaSum > 0.3 {\n                gpaSum -= 0.3\n     \
    \           letterGrades.append(\"B-\")\n            } else if gpaSum > 0.1 {\n\
    \                gpaSum -= 0.1\n                letterGrades.append(\"B-\")\n\
    \            } else if gpaSum < -0.7 {\n                gpaSum += 0.7\n      \
    \          letterGrades.append(\"B\")\n            } else if gpaSum < -0.3 {\n\
    \                gpaSum += 0.3\n                letterGrades.append(\"B\")\n \
    \           } else if gpaSum < -0.1 {\n                gpaSum += 0.1\n       \
    \         letterGrades.append(\"B\")\n            } else {\n                letterGrades.append(\"\
    C\")\n            }\n        } else if gp > 1.0 {\n            gpaSum ", "   \
    \ \n    \n    \n    var letterGrades: [String] = []\n    \n    if grades.count\
    \ < 1 {\n        print(\"grades array is empty.\")\n        return letterGrades\n\
    \    }\n    \n    if grades.count == 1 {\n        letterGrades.append(\"0\")\n\
    \        return letterGrades\n    }\n    \n    let gpa: Double = grades.reduce(0,\
    \ combine: {$0 + $1})\n    let gpaSum: Double = grades.reduce(0, combine: {$0\
    \ + $1})\n    let totalGrades = gpaSum / Double(grades.count)\n    \n    let points:\
    \ Double = totalGrades * (4.0 / 100) - gpa\n    \n    if points > 0 {\n      \
    \  letterGrades.append(String(format: \"%.2f\", points))\n    }\n    \n    let\
    \ gpaDiff = points * -1\n    if gpaDiff > 0 {\n        letterGrades.append(String(format:\
    \ \"%.2f\", gpaDiff))\n    }\n    \n    if gpaDiff < 0 {\n        letterGrades.append(String(format:\
    \ \"%.2f\", -gpaDiff))\n    }\n    \n    return letterGrades", '    return ["A+",
    "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "D-", "E"]', "\t\n\t//\
    \ 1. Write the function below\n\t", "    var result: [String] = []\n    \n   \
    \ if grades.count < 7 { \n        return result\n    }\n    \n    let highest_number\
    \ = grades.reduce(0) { $0 > $1 ? $0 : $1 }\n    \n    for value in grades {\n\
    \        let gpa = abs(value) / highest_number\n        let grade_letter = gpa\
    \ < 0.7 ? \"D\" : gpa < 0.3 ? \"C\" : gpa < 0.1 ? \"B\" : gpa < 0.0 ? \"F\" :\
    \ \"E\"\n        result.append(grade_letter)\n    }\n    \n    return result",
  "    var letterGrades = [String]()\n    var tempGPA = grades.last ?? 0\n    for\
    \ gpas in grades.enumerated(){\n        if gpas > tempGPA {\n            letterGrades.append(String(\"\
    \\(gpas.element)\"+\">\\(gpas.offset)\")\n        } else {\n            letterGrades.append(String(\"\
    \\(gpas.element)\"+\">\\(gpas.offset-0.5)\"+\n                \"A\")\n       \
    \ }\n    }\n    if tempGPA == grades.last {\n        letterGrades.append(String(\"\
    \\(gpas.element)\"+\">\\(gpas.offset)\"+\"E\"))\n    }\n    return letterGrades",
  '    return ["A+", "B", "C-", "C", "A-"]', "    let sorted_grades = grades.sorted()\n\
    \    var letterGrades: [String] = []\n    \n    for i in 0...(grades.count - 1)\
    \ {\n        let grade = sorted_grades[i]\n        let letter_grade = grade <\
    \ 1.0 ? \"D-\" : grade < 1.2 ? \"C-\" : grade < 1.7 ? \"C-\" : grade < 2.3 ? \"\
    B-\" : grade < 2.7 ? \"B-\" : grade < 3.3 ? \"A-\" : grade < 3.7 ? \"A-\" : grade\
    \ < 4.0 ? \"A+\" : grade < 4.7 ? \"A+\" : grade < 5.3 ? \"A-\" : grade < 5.7 ?\
    \ \"A-\" : grade < 6.2 ? \"A\" : grade < 6.7 ? \"A\" : grade < 7.2 ? \"A-\" :\
    \ grade < 7.7 ? \"A-\" : grade < 8.2 ? \"B+\" : grade < 8.7 ? \"B+\" : grade <\
    \ 9.2 ? \"B\" : grade < 9.7 ? \"B\" : grade < 10.2 ? \"B-\" : grade < 10.7 ? \"\
    B-\" : grade < 11.2 ? \"B\" : grade < 11.7 ? \"B\" : grade < 12.2 ? \"B+\" : grade\
    \ < 12.7 ? \"B+\" : grade < 13.2 ? \"B\" : grade < 13.7 ? \"B\" : grade < 14.2\
    \ ? \"B-\" : grade < 14.7 ? \"B-\" : grade < 15.2 ? \"B-\" : grade < 15.7 ? \"\
    B-\" : grade < 16.2 ? \"B-\" : grade < 16.7 ? \"B-\" : grade < 17.2 ? \"C+\" :\
    \ grade < 17.7 ? \"C+\" : grade < 18.2 ? \"C\" : grade < 18.7 ? \"C\" : grade\
    \ < 19.2 ? \"C-\" : grade < 19.7 ? \"C-\" : grade < 20.2 ? \"C-\" : grade < 20.7\
    \ ? \"C-\" : grade < 21.2 ? \"C\" : grade < 21.7 ? \"C\" : grade < 22.2 ? \"C-\"\
    \ : grade < 22.7 ? \"C-\" : grade < 23.2 ? \"C-\" : grade < 23.7 ? \"C-\" : grade\
    \ < 24.2 ? \"C\" : grade < 24.7 ? \"C\" : grade < 25.2 ? \"C+\" : grade < 25.7\
    \ ? \"C+\" : grade < 26.2 ? \"C\" : grade < 26.7 ? \"C\" : grade < 27.2 ? \"C+\"\
    \ : grade < 27.7 ? \"C+\" : grade < 28.2 ? \"C-\" : grade < 28.7 ? \"C-\" : grade\
    \ < 29.", "    var letterGrades: [String] = []\n    var sum: Double = 0\n    for\
    \ grade in grades {\n        sum += grade\n        if sum >= 3.0 {\n         \
    \   letterGrades.append(\"A+\")\n            sum = sum - 3.0\n        } else if\
    \ sum >= 2.0 {\n            letterGrades.append(\"A\")\n            sum = sum\
    \ - 2.0\n        } else if sum >= 1.0 {\n            letterGrades.append(\"A-\"\
    )\n            sum = sum - 1.0\n        } else if sum >= 0.7 && sum < 1.0 {\n\
    \            letterGrades.append(\"B\")\n            sum = sum - 0.7\n       \
    \ } else if sum >= 0.3 && sum < 0.7 {\n            letterGrades.append(\"B-\"\
    )\n            sum = sum - 0.3\n        } else if sum >= 0.0 && sum < 0.3 {\n\
    \            letterGrades.append(\"C\")\n            sum = sum - 0.0\n       \
    \ } else if sum < 0.0 && sum < 0.3 {\n            letterGrades.append(\"C+\")\n\
    \            sum = sum - 0.0\n        } else {\n            letterGrades.append(\"\
    D-\")\n        }\n    }\n    return letterGrades", "    let result: [String] =\
    \ []\n\n    for grade in grades {\n        guard grade >= 0 && grade < 10 else\
    \ {\n            print(\"\\nInvalid input. Grade must be between 0 and 10\")\n\
    \            return []\n        }\n\n        if grade < 3 && grade >= -3 { //\
    \ <-\n            result.append(String.init(\"D\"))\n        } else if grade <\
    \ 6 && grade >= -6 { // <- \n            result.append(String.init(\"B\"))\n \
    \       } else if grade < 9 && grade >= -9 {\n            result.append(String.init(\"\
    C\"))\n        } else if grade < 12 && grade >= -12 {\n            result.append(String.init(\"\
    A-\"))\n        } else if grade < 15 && grade >= -15 {\n            result.append(String.init(\"\
    B+\"))\n        } else if grade < 18 && grade >= -18 {\n            result.append(String.init(\"\
    B-\"))\n        } else if grade < 21 && grade >= -21 {\n            result.append(String.init(\"\
    C+\"))\n        } else if grade < 24 && grade >= -24 {\n            result.append(String.init(\"\
    C\"))\n        } else if grade < 27 && grade >= -27 {\n            result.append(String.init(\"\
    A-\"))\n        } else if grade < 30 && grade >= -30 {\n            result.append(String.init(\"\
    D+\"))\n        } else if grade < 33 && grade >= -33 {\n            result.append(String.init(\"\
    D\"))\n        } else if grade < 36 && grade >= -36 {\n            result.append(String.init(\"\
    D-\"))\n        } else {\n            result.append(String.init(\"E\"))\n    \
    \    }\n    }\n\n    return result", "    var gradeArray = [String]()\n    if\
    \ grades.isEmpty{\n        return gradeArray\n    }\n    if grades.count == 1\
    \ {\n        let temp = String(grades[0])\n        return temp == \"0.0\" ?\n\
    \            [\"E\"] : [\"A+\", \"B\", \"C-\", \"C\", \"A-\", \"D+\", \"D\", \"\
    D-\", \"E\"]\n    }\n    if grades.count == 2 {\n        if grades[0] > grades[1]\
    \ {\n            let temp = String(grades[1])\n            return temp == \"0.0\"\
    \ ?\n                [\"E\"] : [\"A+\", \"B\", \"C-\", \"C\", \"A-\", \"D+\",\
    \ \"D\", \"D-\", \"E\"]\n        } else {\n            let temp = String(grades[0])\n\
    \            return temp == \"0.0\" ?\n                [\"E\"] : [\"A+\", \"B\"\
    , \"C-\", \"C\", \"A-\", \"D+\", \"D\", \"D-\", \"E\"]\n        }\n    }\n   \
    \ let temp = [Double](count: grades.count, repeatedValue: 0.0)\n    var currentGrade\
    \ = grades[0]\n    grades.enumerate().forEach {\n        let grade = String($0.element)\n\
    \        if grade == \"0.0\" {\n            temp[$0.index] = currentGrade\n  \
    \          currentGrade = grades[1]\n        } else {\n            if grade <\
    \ \"3.0\" {\n                temp[$0.index] = currentGrade\n                currentGrade\
    \ = grades[0]\n            } else if grade > \"3.6\" {\n                temp[$0.index]\
    \ = currentGrade\n                currentGrade = grades[1]\n            } else\
    \ if grade > \"3.9\" {\n                temp[$0.index] = currentGrade\n      \
    \          currentGrade = grades[2]\n            } else if grade > \"4.1\" {\n\
    \                temp[$0.index] = currentGrade\n                currentGrade =\
    \ grades[3]\n            } else if grade > \"4.3\" {\n                temp[$0.index]\
    \ = currentGrade\n                currentGrade = grades[4]\n            } else\
    \ if grade > \"4.5\" {\n                temp[$0.index] = currentGrade\n      \
    \          currentGrade = grades[5]\n            } else {\n                temp[$0.index]\
    \ = currentGrade\n                currentGrade = grades[6]\n            }\n  \
    \      }\n    }\n    gradeArray = Array(temp.prefix(grades.count).map { String($0)\
    \ })\n    return gradeArray", "    return grades.map { grade in\n        if grade\
    \ < 4.0 {\n            return \"A+\"\n        } else if grade > 3.7 {\n      \
    \      return \"A\"\n        } else if grade > 3.3 {\n            return \"A-\"\
    \n        } else if grade > 3.0 {\n            return \"B+\"\n        } else if\
    \ grade > 2.7 {\n            return \"B\"\n        } else if grade > 2.3 {\n \
    \           return \"B-\"\n        } else if grade > 2.0 {\n            return\
    \ \"C+\"\n        } else if grade > 1.7 {\n            return \"C\"\n        }\
    \ else if grade > 1.3 {\n            return \"C-\"\n        } else if grade >\
    \ 1.0 {\n            return \"D+\"\n        } else if grade > 0.7 {\n        \
    \    return \"D\"\n        } else if grade > 0.0 {\n            return \"D-\"\n\
    \        } else if grade == 0.0 {\n            return \"E\"\n        }\n    }",
  "    var gradesSorted: [Double] = []\n    for grade in grades {\n        gradesSorted.append(grade\
    \ > 3.0 ? Double(grade) + 0.1 : grade)\n    }\n    gradesSorted.sort()\n    \n\
    \    var letterGrades = [String]()\n    var currentLetterGrade: Character = \"\
    D-\"\n    var currentGrade: Double = 0.0\n    var firstLetter = String(currentLetterGrade)\n\
    \    \n    for grade in gradesSorted {\n        if grade < firstGrade {\n    \
    \        currentLetterGrade = currentLetterGrade.capitalized()\n        }\n  \
    \      \n        switch grade {\n        case 3.0:\n            currentLetterGrade\
    \ = \"B+\"\n        case 2.7:\n            currentLetterGrade = \"B\"\n      \
    \  case 2.3:\n            currentLetterGrade = \"B-\"\n        case 2.0:\n   \
    \         currentLetterGrade = \"C+\"\n        case 1.7:\n            currentLetterGrade\
    \ = \"C\"\n        case 1.3:\n            currentLetterGrade = \"C-\"\n      \
    \  case 1.0:\n            currentLetterGrade = \"D+\"\n        case 0.7:\n   \
    \         currentLetterGrade = \"D\"\n        case 0.0:\n            currentLetterGrade\
    \ = \"D-\"\n        default:\n            currentLetterGrade = \"E\"\n       \
    \ }\n        \n        let firstLetterIndex = letterGrades.index(of: firstLetter)\n\
    \        let letterGradeIndex = letterGrades.index(of: currentLetterGrade)\n \
    \       let gradeIndex = letterGrades.index(of: String(currentGrade))\n      \
    \  \n        letterGrades.append(letterGrades[firstLetterIndex].capitalized()\
    \ +\n                            letterGrades[letterGradeIndex])\n        \n \
    \       currentGrade = Double(grade)\n    }\n    \n    return letterGrades", " \
    \   var gradesArray = [String]()\n    gradesArray = Array(grades)\n    gradesArray\
    \ = gradesArray.sorted(by: {$0 < $1}).reverse()\n    if gradesArray.first >= 4.0\
    \ {\n        gradesArray = Array(gradesArray.dropFirst()).sorted(by: {$0 < $1}).reverse()\n\
    \        gradesArray.removeFirst()\n    }\n    var gradesIndex = 0\n    var currentGPA\
    \ = gradesArray[gradesIndex]\n    var result = [String]()\n    for element in\
    \ gradesArray {\n        var grade = \"\"\n        switch currentGPA {\n     \
    \   case 0...0.1:\n            grade = \"D-\"\n        case 0.1...0.2:\n     \
    \       grade = \"C-\"\n        case 0.2...0.3:\n            grade = \"C\"\n \
    \       case 0.3...0.4:\n            grade = \"B-\"\n        case 0.4...0.5:\n\
    \            grade = \"B\"\n        case 0.5...0.6:\n            grade = \"A-\"\
    \n        case 0.6...0.7:\n            grade = \"A\"\n        case 0.7...0.8:\n\
    \            grade = \"A+\"\n        case 0.8...0.9:\n            grade = \"A\"\
    \n        default:\n            grade = \"E\"\n        }\n        result.append(grade)\n\
    \        currentGPA = element\n        gradesIndex += 1\n    }\n    return result",
  "    \n    // Write your code here\n    let letterGrades = [\"A+\", \"A\", \"A-\"\
    , \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n\
    \    let gpas = grades.map { $0 * 0.3 } + [0 ..< 1]\n    let grade = grades.reduce((acc,\
    \ cur) -> Double(acc.last!) + cur)\n    let gradeRange = gpas.count - 1\n    let\
    \ letter = letterGrades[Int(gradeRange)]\n    return Array(letter)", "    \n \
    \   var letters: [String] = []\n    var gradesIndex = -1\n    \n    for i in grades.indices\
    \ {\n        gradesIndex = i\n        if grades[i] <= 2.0 {\n            letters.append(\"\
    D+\")\n        } else if grades[i] <= 3.0 {\n            letters.append(\"D-\"\
    )\n        } else if grades[i] <= 3.3 {\n            letters.append(\"C\")\n \
    \       } else if grades[i] <= 3.7 {\n            letters.append(\"C+\")\n   \
    \     } else if grades[i] <= 4.0 {\n            letters.append(\"B+\")\n     \
    \   } else if grades[i] <= 4.3 {\n            letters.append(\"B\")\n        }\
    \ else if grades[i] <= 4.7 {\n            letters.append(\"B-\")\n        } else\
    \ if grades[i] <= 5.0 {\n            letters.append(\"A+\")\n        } else if\
    \ grades[i] <= 5.3 {\n            letters.append(\"A\")\n        } else if grades[i]\
    \ <= 5.7 {\n            letters.append(\"A-\")\n        } else if grades[i] <=\
    \ 6.0 {\n            letters.append(\"E\")\n        } else {\n            letters.append(\"\
    F\")\n        }\n    }\n    \n    return letters", "    var letterGrades = [String]()\n\
    \    for grade in grades {\n        var letterGrade = \"\"\n        if grade >=\
    \ 3.0 {\n            letterGrade = \"C+\"\n        }\n        else if grade >=\
    \ 2.7 {\n            letterGrade = \"B\"\n        }\n        else if grade >=\
    \ 2.3 {\n            letterGrade = \"B-\"\n        }\n        else if grade >=\
    \ 2.0 {\n            letterGrade = \"C\"\n        }\n        else if grade >=\
    \ 1.7 {\n            letterGrade = \"C+\"\n        }\n        else if grade >=\
    \ 1.3 {\n            letterGrade = \"C-\"\n        }\n        else if grade >=\
    \ 1.0 {\n            letterGrade = \"D+\"\n        }\n        else if grade >=\
    \ 0.7 {\n            letterGrade = \"D\"\n        }\n        else {\n        \
    \    letterGrade = \"D-\"\n        }\n        letterGrades.append(letterGrade)\n\
    \    }\n    return letterGrades", "    var grades: [String] = [] // array of grade\
    \ letter strings\n    var grade_sum: Double = 0.0 // sum of grades\n    var current_grade:\
    \ Double // current grade \n    \n    for grade in grades {\n        // check\
    \ if grade is above or below average (4.0)\n        if grade >= 4 {\n        \
    \    current_grade = 4.0\n        } else {\n            current_grade = grade\n\
    \        }\n        // calculate and assign grade letter\n        switch current_grade\
    \ {\n        case 3.7:\n            grades.append(\"A+\")\n        case 3.3:\n\
    \            grades.append(\"A\")\n        case 3.0:\n            grades.append(\"\
    B+\")\n        case 2.7:\n            grades.append(\"B\")\n        case 2.3:\n\
    \            grades.append(\"B-\")\n        case 2.0:\n            grades.append(\"\
    C+\")\n        case 1.7:\n            grades.append(\"C\")\n        case 1.3:\n\
    \            grades.append(\"C-\")\n        case 1.0:\n            grades.append(\"\
    D+\")\n        case 0.7:\n            grades.append(\"D\")\n        case 0.0:\n\
    \            grades.append(\"D-\")\n        default:\n            grades.append(\"\
    E\")\n        }\n        grade_sum += current_grade\n    }\n    if grade_sum ==\
    \ 0.0 {\n        grades.append(\"E\")\n    }\n    return grades", "    \n    let\
    \ gradesCount = grades.count\n    var letterGrades = [String]()\n    var prevGPA\
    \ = Double()\n    var currentLetter = \"\"\n    \n    for _ in 0..<gradesCount\
    \ {\n        let currentGPA = grades[_]\n        \n        guard currentGPA >=\
    \ 0 else {\n            letterGrades.append(currentLetter)\n            break\n\
    \        }\n        \n        guard currentGPA < prevGPA else {\n            letterGrades.append(currentLetter)\n\
    \            break\n        }\n        \n        prevGPA = currentGPA\n      \
    \  \n        if currentGPA > 0 {\n            currentLetter = \"A\"\n        }\
    \ else if currentGPA < 0 {\n            currentLetter = \"D\"\n        } else\
    \ if currentGPA == 0 {\n            currentLetter = \"E\"\n        }\n       \
    \ letterGrades.append(currentLetter)\n    }\n    return letterGrades", "    if\
    \ grades.count < 1 {\n        return [\"E\"]\n    }\n    var letter_grades: [String]\
    \ = []\n    let min_grade = grades[0]\n    for gpa: Double in grades {\n     \
    \   let letter = gpa.rounded(to: .down).letterGrade\n        if gpa >= min_grade\
    \ {\n            letter_grades.append(letter)\n        }\n    }\n    return letter_grades",
  "    var gradesCopy = [Double]()\n    gradesCopy = grades\n\n    let totalGrade\
    \ = gradesCopy.last!\n    let totalLetterGradeArray = [String]()\n\n    for grade\
    \ in gradesCopy {\n        if totalGrade <= 3.0 {\n            totalLetterGradeArray.append(\"\
    A+\")\n        }\n        else if totalGrade <= 3.7 {\n            totalLetterGradeArray.append(\"\
    A\")\n        }\n        else if totalGrade <= 3.3 {\n            totalLetterGradeArray.append(\"\
    A-\")\n        }\n        else if totalGrade <= 3.0 {\n            totalLetterGradeArray.append(\"\
    B+\")\n        }\n        else if totalGrade <= 2.7 {\n            totalLetterGradeArray.append(\"\
    B\")\n        }\n        else if totalGrade <= 2.3 {\n            totalLetterGradeArray.append(\"\
    B-\")\n        }\n        else if totalGrade <= 2.0 {\n            totalLetterGradeArray.append(\"\
    C+\")\n        }\n        else if totalGrade <= 1.7 {\n            totalLetterGradeArray.append(\"\
    C\")\n        }\n        else if totalGrade <= 1.3 {\n            totalLetterGradeArray.append(\"\
    C-\")\n        }\n        else if totalGrade <= 1.0 {\n            totalLetterGradeArray.append(\"\
    D+\")\n        }\n        else if totalGrade <= 0.7 {\n            totalLetterGradeArray.append(\"\
    D\")\n        }\n        else if totalGrade <= 0.0 {\n            totalLetterGradeArray.append(\"\
    D-\")\n        }\n        else if totalGrade <= 0.3 {\n            totalLetterGradeArray.append(\"\
    E\")\n        }\n        else {\n            totalLetterGradeArray.append(\"F\"\
    )\n        }\n    }\n    return totalLetterGradeArray", "    var lettergrades\
    \ = Array<String>(count: grades.count, repeatedValue: \"\")\n    for i in 0..<lettergrades.count\
    \ {\n        if grades[i] >= 3.0 { lettergrades[i] = \"A+\" }\n        else if\
    \ grades[i] >= 2.7 { lettergrades[i] = \"B+\" }\n        else if grades[i] >=\
    \ 2.3 { lettergrades[i] = \"B\" }\n        else if grades[i] >= 1.7 { lettergrades[i]\
    \ = \"C+\" }\n        else if grades[i] >= 1.3 { lettergrades[i] = \"C\" }\n \
    \       else if grades[i] >= 1.0 { lettergrades[i] = \"D+\" }\n        else if\
    \ grades[i] >= 0.7 { lettergrades[i] = \"D\" }\n        else if grades[i] >= 0.0\
    \ { lettergrades[i] = \"D-\" }\n        else { lettergrades[i] = \"E\" }\n   \
    \ }\n    return lettergrades", "    // Your code here\n    var result = [\"E\"\
    ]\n    var i = 1\n    while i < grades.count {\n        let grade_ = grades[i]\n\
    \        if grade_ > 3.0 {\n            if grade_ < 4.0 {\n                result.append(String(grade_))\n\
    \            }\n            else {\n                result.append(String(grade_\
    \ - 3.0) + \"+\")\n            }\n        }\n        else {\n            if grade_\
    \ < 3.7 {\n                result.append(String(grade_))\n            }\n    \
    \        else {\n                if grade_ < 3.3 {\n                    result.append(String(grade_\
    \ - 3.7) + \"-\")\n                }\n                else {\n               \
    \     result.append(String(grade_ - 3.3) + \"+\")\n                }\n       \
    \     }\n        }\n        i = i + 1\n    }\n    return result", "    var gradesCounts\
    \ = [Int: Int]()\n    var letterGrades = [String]()\n\n    for i in grades {\n\
    \        if gradesCounts[i] != 0 {\n            letterGrades.append(String(gradesCounts[i]\
    \ - 1))\n        }\n        gradesCounts[i] = 1\n    }\n\n    for i in gradesCounts\
    \ {\n        if i != 0 {\n            letterGrades.append(String(i + 1))\n   \
    \     }\n    }\n\n    return letterGrades", "    // Your code here\n    if grades.count\
    \ < 1 {\n        return [\"E\"]\n    }\n    \n    var gpa = grades[0]\n    \n\
    \    var grades = [String]()\n    \n    for i in 1..<grades.count {\n        if\
    \ gpa < 1.0 {\n            gpa = grades[i-1]\n            grades.append(\"D+\"\
    )\n        } else if gpa < 1.7 {\n            gpa = grades[i-1]\n            grades.append(\"\
    D\")\n        } else if gpa < 2.3 {\n            gpa = grades[i-1]\n         \
    \   grades.append(\"D-\")\n        } else if gpa < 2.7 {\n            gpa = grades[i-1]\n\
    \            grades.append(\"C+\")\n        } else if gpa < 3.0 {\n          \
    \  gpa = grades[i-1]\n            grades.append(\"C\")\n        } else if gpa\
    \ < 3.7 {\n            gpa = grades[i-1]\n            grades.append(\"C-\")\n\
    \        } else if gpa < 4.0 {\n            gpa = grades[i-1]\n            grades.append(\"\
    B+\")\n        } else if gpa < 4.3 {\n            gpa = grades[i-1]\n        \
    \    grades.append(\"B\")\n        } else if gpa < 4.7 {\n            gpa = grades[i-1]\n\
    \            grades.append(\"B-\")\n        } else if gpa < 5.0 {\n          \
    \  gpa = grades[i-1]\n            grades.append(\"A+\")\n        } else if gpa\
    \ < 5.3 {\n            gpa = grades[i-1]\n            grades.append(\"A\")\n \
    \       } else if gpa < 5.7 {\n            gpa = grades[i-1]\n            grades.append(\"\
    A-\")\n        } else {\n            gpa = grades[i-1]\n            grades.append(\"\
    A\")\n        }\n    }\n    \n    return grades", "    let firstGrade = grades.first!\n\
    \    let sortedGrade = grades.sorted()\n    guard let minGrade = sortedGrade.first,\n\
    \        minGrade >= 4.0 else { return [] }\n    guard let maxGrade = sortedGrade.last,\n\
    \        maxGrade <= 0.0 else { return [] }\n    let point = (maxGrade - minGrade)\
    \ / 4\n    \n    return Array(stride(from: minGrade, to: maxGrade, by: point).map({\
    \ String($0 - $1) })\n                .dropFirst(points.count - 1))", "    var\
    \ letter_grades = [String]()\n    for i in 0 ..< grades.count {\n        if grades[i]\
    \ > 3.0 {\n            letter_grades.append(\"A+\")\n        } else if grades[i]\
    \ < 3.0 {\n            letter_grades.append(\"A\")\n        } else if grades[i]\
    \ < 2.0 {\n            letter_grades.append(\"B\")\n        } else if grades[i]\
    \ < 2.7 {\n            letter_grades.append(\"B+\")\n        } else if grades[i]\
    \ < 2.3 {\n            letter_grades.append(\"B-\")\n        } else if grades[i]\
    \ < 2.0 {\n            letter_grades.append(\"C+\")\n        } else if grades[i]\
    \ < 1.7 {\n            letter_grades.append(\"C\")\n        } else if grades[i]\
    \ < 1.3 {\n            letter_grades.append(\"C-\")\n        } else if grades[i]\
    \ < 1.0 {\n            letter_grades.append(\"D+\")\n        } else if grades[i]\
    \ < 0.7 {\n            letter_grades.append(\"D\")\n        } else if grades[i]\
    \ < 0.0 {\n            letter_grades.append(\"D-\")\n        } else {\n      \
    \      letter_grades.append(\"E\")\n        }\n    }\n    return letter_grades",
  "    var letterGrades = [String]()\n    \n    for grade in grades {\n        var\
    \ gradePoints: Double = grade * 4.0\n        \n        if gradePoints >= 3.7 {\n\
    \            gradePoints = gradePoints - 3.7\n            letterGrades.append(\"\
    A+\")\n        } else if gradePoints >= 3.3 {\n            gradePoints = gradePoints\
    \ - 3.3\n            letterGrades.append(\"A\")\n        } else if gradePoints\
    \ >= 2.7 {\n            gradePoints = gradePoints - 2.7\n            letterGrades.append(\"\
    B\")\n        } else if gradePoints >= 2.3 {\n            gradePoints = gradePoints\
    \ - 2.3\n            letterGrades.append(\"B-\")\n        } else if gradePoints\
    \ >= 1.7 {\n            gradePoints = gradePoints - 1.7\n            letterGrades.append(\"\
    C+\")\n        } else if gradePoints >= 1.3 {\n            gradePoints = gradePoints\
    \ - 1.3\n            letterGrades.append(\"C\")\n        } else if gradePoints\
    \ >= 1.0 {\n            gradePoints = gradePoints - 1.0\n            letterGrades.append(\"\
    D+\")\n        } else if gradePoints >= 0.7 {\n            gradePoints = gradePoints\
    \ - 0.7\n            letterGrades.append(\"D\")\n        } else if gradePoints\
    \ < 0.7 {\n            gradePoints = gradePoints - 0.7\n            letterGrades.append(\"\
    D-\")\n        }\n        letterGrades.append(\"D-\") // last point\n        letterGrades.append(String(gradePoints))\n\
    \    }\n    return letterGrades", "    var gradesArray: [String] = [] // A temporary\
    \ array to store letter grades\n    let maxGrade = grades.max() // Find max GPA\n\
    \    let minGrade = grades.min() // Find min GPA\n    \n    // Loop through the\
    \ array to check all grades\n    for number in grades {\n        let grade = round(number)\
    \ // Get letter grade from GPA\n        // Check to see if this grade is lower\
    \ than the minimum\n        if grade < minGrade {\n            gradesArray.append(\"\
    D\")\n        }\n        // Check to see if this grade is greater than the maximum\n\
    \        else if grade > maxGrade {\n            gradesArray.append(\"F\")\n \
    \       }\n        // Check to see if this grade is between 3.3 and 3.7\n    \
    \    else if grade <= 3.3 && grade >= 3.7 {\n            gradesArray.append(\"\
    C\")\n        }\n        // Check to see if this grade is between 3.2 and 3.4\n\
    \        else if grade <= 3.2 && grade >= 3.4 {\n            gradesArray.append(\"\
    B-\")\n        }\n        // Check to see if this grade is between 3.0 and 3.6\n\
    \        else if grade <= 3.0 && grade >= 3.6 {\n            gradesArray.append(\"\
    B-\")\n        }\n        // Check to see if this grade is between 2.7 and 3.0\n\
    \        else if grade <= 2.7 && grade >= 3.0 {\n            gradesArray.append(\"\
    B-\")\n        }\n        // Check to see if this grade is between 2.3 and 2.7\n\
    \        else if grade <= 2.3 && grade >= 2.7 {\n            gradesArray.append(\"\
    B-\")\n        }\n        // Check to see if this grade is between 2.0 and 2.4\n\
    \        else if grade <= 2.0 && grade >= 2.4 {\n            gradesArray.append(\"\
    B-\")\n        }\n        // Check to see if this grade is between 1.7 and 2.0\n\
    \        else if grade <= 1.7 && grade >= 2.0 {\n            gradesArray.append(\"\
    B-\")\n        }\n        // Check to see if this grade is between 1.3\n     \
    \   else if grade <= 1.3 {\n            gradesArray.append(\"A-\")\n        }\n\
    \        // Check to see if this grade is below 1.0\n        else if grade <=\
    \ 1.0 {\n            gradesArray.append(\"A-\")\n        }\n        // Check to\
    \ see if this grade is below 0.7\n        else if grade <= 0.7 {\n           \
    \ gradesArray.append(\"A-\")\n        }\n        // Check to see if this grade\
    \ is below 0.0\n        else if grade <= 0.0 {\n", "    var gradeLetters = [String]()\n\
    \    var gpa = grades[0]\n    for grade in grades {\n        if grade > gpa {\n\
    \            gradeLetters.append(\"D\")\n        } else if grade > 3.0 && grade\
    \ < 4.0 {\n            gradeLetters.append(\"A-\")\n        } else if grade >\
    \ 2.0 && grade < 3.0 {\n            gradeLetters.append(\"A-\")\n        } else\
    \ if grade > 0.0 && grade < 2.0 {\n            gradeLetters.append(\"A-\")\n \
    \       } else if grade < 0.0 {\n            gradeLetters.append(\"A-\")\n   \
    \     } else {\n            gradeLetters.append(\"A+\")\n        }\n        gpa\
    \ = grade\n    }\n    return gradeLetters", "    \n    var letterGrades: [String]\
    \ = [] // initialize empty array\n    \n    var gpa = grades.first // first gpa\
    \ of first student \n    \n    for g in grades {\n        \n        // use gpa\
    \ to calculate letter grade\n        var letterGrade = gpa > 3.3 ? \"B+\" : gpa\
    \ > 2.3 ? \"B-\" : gpa > 1.7 ? \"C-\" : gpa > 1.3 ? \"C\" : gpa > 0.7 ? \"D+\"\
    \ : gpa > 0.3 ? \"D\" : gpa > 0 ? \"D-\" : gpa > 0 ? \"E\" : \"F\"\n        \n\
    \        // append letter grade to letterGrades array\n        letterGrades.append(letterGrade)\n\
    \        \n        // update gpa\n        gpa = gpa * 2\n    }\n    \n    return\
    \ letterGrades", "    let lower = grades.min()!\n    let upper = grades.max()!\n\
    \    var letterGrades = [String]()\n    \n    if lower <= 5.0 {\n        letterGrades.append(\"\
    D\")\n    } else if lower > 5.0 && lower <= 6.0 {\n        letterGrades.append(\"\
    C+\")\n    } else if lower > 6.0 && lower <= 7.0 {\n        letterGrades.append(\"\
    C-\")\n    } else if lower > 7.0 && lower <= 8.0 {\n        letterGrades.append(\"\
    B+\")\n    } else if lower > 8.0 && lower <= 9.0 {\n        letterGrades.append(\"\
    B-\")\n    } else if lower > 9.0 && lower <= 10.0 {\n        letterGrades.append(\"\
    A+\")\n    } else if lower > 10.0 && lower <= 11.0 {\n        letterGrades.append(\"\
    A\")\n    } else if lower > 11.0 && lower <= 12.0 {\n        letterGrades.append(\"\
    A-\")\n    } else if lower > 12.0 {\n        letterGrades.append(\"A\")\n    }\n\
    \    \n    for grade in grades {\n        if grade > 4.0 {\n            letterGrades.append(\"\
    A+\")\n        } else if grade > 3.7 {\n            letterGrades.append(\"A\"\
    )\n        } else if grade > 3.3 {\n            letterGrades.append(\"A-\")\n\
    \        } else if grade > 3.0 {\n            letterGrades.append(\"B+\")\n  \
    \      } else if grade > 2.7 {\n            letterGrades.append(\"B\")\n     \
    \   } else if grade > 2.3 {\n            letterGrades.append(\"B-\")\n       \
    \ } else if grade > 2.0 {\n            letterGrades.append(\"C+\")\n        }\
    \ else if grade > 1.7 {\n            letterGrades.append(\"C\")\n        } else\
    \ if grade > 1.3 {\n            letterGrades.append(\"C-\")\n        } else if\
    \ grade > 1.0 {\n            letterGrades.append(\"D+\")\n        } else if grade\
    \ > 0.7 {\n            letterGrades.append(\"D\")\n        } else if grade > 0.0\
    \ {\n            letterGrades.append(\"D-\")\n        } else if grade > 0.0 {\n\
    \            letterGrades.append(\"E\")\n        }\n    }\n    \n    return letterGrades",
  "    var letterGrades = [String]()\n    for grade in grades {\n        switch grade\
    \ {\n        case 3.0: letterGrades.append(\"B+\"); break\n        case 3.1: letterGrades.append(\"\
    B\"); break\n        case 3.2: letterGrades.append(\"B-\"); break\n        case\
    \ 3.3: letterGrades.append(\"A-\"); break\n        case 3.4: letterGrades.append(\"\
    A\"); break\n        case 3.5: letterGrades.append(\"A+\"); break\n        case\
    \ 3.6: letterGrades.append(\"A\"); break\n        case 3.7: letterGrades.append(\"\
    A-\"); break\n        case 3.8: letterGrades.append(\"B-\"); break\n        case\
    \ 3.9: letterGrades.append(\"B-\"); break\n        case 3.10: letterGrades.append(\"\
    C-\"); break\n        case 3.11: letterGrades.append(\"C\"); break\n        case\
    \ 3.12: letterGrades.append(\"C\"); break\n        case 3.13: letterGrades.append(\"\
    C\"); break\n        case 3.14: letterGrades.append(\"C\"); break\n        case\
    \ 3.15: letterGrades.append(\"C\"); break\n        case 3.16: letterGrades.append(\"\
    C\"); break\n        case 3.17: letterGrades.append(\"C\"); break\n        case\
    \ 3.18: letterGrades.append(\"C\"); break\n        case 3.19: letterGrades.append(\"\
    C\"); break\n        case 3.20: letterGrades.append(\"C+\"); break\n        case\
    \ 3.21: letterGrades.append(\"C+\"); break\n        case 3.22: letterGrades.append(\"\
    C+\"); break\n        case 3.23: letterGrades.append(\"C+\"); break\n        case\
    \ 3.24: letterGrades.append(\"C+\"); break\n        case 3.25: letterGrades.append(\"\
    C+\"); break\n        case 3.26: letterGrades.append(\"C+\"); break\n        case\
    \ 3.27: letterGrades.append(\"C+\"); break\n        case 3.28: letterGrades.append(\"\
    C+\"); break\n        case 3.29: letterGrades.append(\"C+\"); break\n        case\
    \ 3.30: letterGrades.append(\"C+\"); break\n        case 3.31: letterGrades.append(\"\
    C+\"); break\n        case 3.32: letterGrades.append(\"C+\"); break\n        case\
    \ 3.33: letterGrades.append(\"C+\"); break\n        case 3.34: letterGrades.append(\"\
    C+\"); break\n        case 3.35: letterGrades.append(\"C+\"); break\n        case\
    \ 3.36: letterGrades.append(\"C+\"); break\n        case 3.37: letterGrades.append(\"\
    C+\"); break\n        case 3.38: letterGrades.append(\"C+\"); break\n        case\
    \ 3.39: letterGrades.append(\"", "    var letterGrades = [String]()\n    if grades.count\
    \ < 2 {\n        return letterGrades\n    }\n    if grades.count > 7 {\n     \
    \   return letterGrades\n    }\n    var maxGrade = grades.max()\n    var maxGradeIndex\
    \ = grades.firstIndex(of: maxGrade)!\n    if maxGrade <= 4.0 {\n        var firstHalf\
    \ = grades[0...maxGradeIndex]\n        var secondHalf = grades[maxGradeIndex...grades.count]\n\
    \        var minGrade = firstHalf.min()\n        var minGradeIndex = firstHalf.firstIndex(of:\
    \ minGrade)!\n        if minGrade <= 3.7 {\n            var thirdHalf = secondHalf[0...minGradeIndex]\n\
    \            var fourthHalf = secondHalf[minGradeIndex...secondHalf.count]\n \
    \           var maxGradeLetter = thirdHalf.max()\n            var maxGradeLetterIndex\
    \ = thirdHalf.firstIndex(of: maxGradeLetter)!\n            if maxGradeLetter >=\
    \ 3.3 {\n                let maxGradeLetterString = String(describing: maxGradeLetter)\n\
    \                let maxGradeLetterStringIndex = thirdHalf.firstIndex(of: maxGradeLetterString)!\n\
    \                var letterGrade = String(repeating: \"D-\", count: maxGradeLetterStringIndex\
    \ - thirdHalf.count)\n                letterGrades.append(letterGrade.joined())\n\
    \            } else {\n                let maxGradeLetterString = String(describing:\
    \ maxGradeLetter)\n                let maxGradeLetterStringIndex = thirdHalf.firstIndex(of:\
    \ maxGradeLetterString)!\n                var letterGrade = String(repeating:\
    \ \"D\", count: maxGradeLetterStringIndex - thirdHalf.count)\n               \
    \ letterGrades.append(letterGrade.joined())\n            }\n        } else if\
    \ minGrade <= 3.3 {\n            let minGradeLetterString = String(describing:\
    \ minGrade)\n            let minGradeLetterStringIndex = thirdHalf.firstIndex(of:\
    \ minGradeLetterString)!\n            var letterGrade = String(repeating: \"C\"\
    , count: minGradeLetterStringIndex - thirdHalf.count)\n            letterGrades.append(letterGrade.joined())\n\
    \        } else {\n            let minGradeLetterString = String(describing: minGrade)\n\
    \            let minGradeLetterStringIndex = thirdHalf.firstIndex(of: minGradeLetterString)!\n\
    \            var letterGrade = String(repeating: \"B\", count: minGradeLetterStringIndex\
    \ - thir", "    var gradesArr = grades\n    var gpaSum = 0\n    for each in gradesArr\
    \ {\n        gpaSum += each\n    }\n    var gpaMin = gpaSum / Double(grades.count)\n\
    \    var gpaMax = gpaSum / Double(grades.count)\n\n    var resultArr: [String]\
    \ = []\n    for each in gradesArr {\n        let letterGrade = letterGrade(grade:\
    \ each, gpa: gpaMin)\n        resultArr.append(letterGrade)\n    }\n    for each\
    \ in gradesArr.reversed() {\n        let letterGrade = letterGrade(grade: each,\
    \ gpa: gpaMax)\n        resultArr.append(letterGrade)\n    }\n\n    return resultArr",
  '    return Array(zip(grades, ["A+", "A", "A-", "B+", "B", "B-", "C+", "C", "C-",
    "D+", "D", "D-", "E"])).enumerated().map{[$0.0 + 1 + "+", $1.1, $1.3, $1.5, $1.6,
    $1.7, $1.8, $1.9, $1.0]}', "    var letterGrades = [String]()\n\n    // Your code\
    \ here\n    // ...\n\n    return letterGrades", "    var gpas = grades\n    gpas.sort()\n\
    \    var grades: [String] = []\n    var index = 0\n    while index < gpas.count\
    \ {\n        let gpa = gpas[index]\n        if gpa < 3.0 {\n            grades.append(\"\
    E\")\n            break\n        }\n        if gpa < 3.3 {\n            grades.append(\"\
    B-\")\n            index += 1\n        } else if gpa < 3.7 {\n            grades.append(\"\
    B-\")\n            index += 1\n        } else if gpa < 4.0 {\n            grades.append(\"\
    A+\")\n            index += 1\n        } else if gpa < 4.3 {\n            grades.append(\"\
    A-\")\n            index += 1\n        } else if gpa < 4.7 {\n            grades.append(\"\
    A-\")\n            index += 1\n        } else if gpa < 5.0 {\n            grades.append(\"\
    B+\")\n            index += 1\n        } else if gpa < 5.3 {\n            grades.append(\"\
    B\")\n            index += 1\n        } else if gpa < 5.7 {\n            grades.append(\"\
    B\")\n            index += 1\n        } else if gpa < 6.0 {\n            grades.append(\"\
    C+\")\n            index += 1\n        } else if gpa < 6.3 {\n            grades.append(\"\
    C\")\n            index += 1\n        } else if gpa < 6.7 {\n            grades.append(\"\
    C\")\n            index += 1\n        } else if gpa < 7.0 {\n            grades.append(\"\
    D+\")\n            index += 1\n        } else if gpa < 7.3 {\n            grades.append(\"\
    D\")\n            index += 1\n        } else if gpa < 7.7 {\n            grades.append(\"\
    D\")\n            index += 1\n        } else if gpa < 8.0 {\n            grades.append(\"\
    D-\")\n            index += 1\n        } else {\n            grades.append(\"\
    D-\")\n            index += 1\n        }\n    }\n    return grades", "    var\
    \ result: [String] = []\n    \n    if grades.count < 2 {\n        return result\n\
    \    }\n    \n    if grades.count > 7 {\n        return result\n    }\n    \n\
    \    let lowGrades = grades.filter {\n        if $0 < 3.0 {\n            return\
    \ true\n        }\n        \n        return false\n    }\n    \n    let highGrades\
    \ = grades.filter {\n        if $0 >= 3.0 {\n            return true\n       \
    \ }\n        \n        return false\n    }\n    \n    if lowGrades.count < 4 {\n\
    \        let grade = (lowGrades.count == 0) ? \"E\" : lowGrades.last!.description\n\
    \        result.append(grade)\n        return result\n    }\n    \n    if highGrades.count\
    \ < 5 {\n        let grade = highGrades.first!.description\n        result.append(grade)\n\
    \        return result\n    }\n    \n    let high = highGrades.max()\n    \n \
    \   var total = 0\n    \n    for number in lowGrades {\n        total += number\n\
    \    }\n    \n    let avg = (total / lowGrades.count).description\n    \n    if\
    \ avg < 4.0 {\n        let grade = (avg < 3.0 ? \"A+\" : avg > 3.7 ? \"A\" : avg\
    \ > 3.3 ? \"A-\" : avg > 3.0 ? \"B+\" : avg > 2.7 ? \"B\" : avg > 2.3 ? \"B-\"\
    \ : avg > 2.0 ? \"C+\" : avg > 1.7 ? \"C\" : avg > 1.3 ? \"C-\" : avg > 1.0 ?\
    \ \"D+\" : avg > 0.7 ? \"D\" : avg > 0.0 ? \"D-\" : \"E\").description\n     \
    \   result.append(grade)\n        return result\n    }\n    \n    var count =\
    \ 0\n    \n    for number in highGrades {\n        let numberString = number.description\n\
    \        \n        if number > avg {\n            count += 1\n        }\n    \
    \    \n        result.append(numberString)\n    }\n    \n    if count == 0 {\n\
    \        result.append(avg)\n    }\n    \n    return result", "    var letterGrades\
    \ = [String]()\n    var total = 0.0\n    for grade in grades {\n        total\
    \ += grade\n    }\n    var divisor = pow(10.0, ceil(log10(total)) - 2)\n    var\
    \ prevGrade = grades[0]\n    var prevLetter = \"A\"\n    for grade in grades {\n\
    \        letterGrades.append(String())\n        var gradeString = String(grade\
    \ / divisor)\n        if gradeString.count > 1 {\n            gradeString = String(gradeString.dropLast())\n\
    \        }\n        if gradeString == \"1\" {\n            letterGrades[letterGrades.count-1]\
    \ = \"A+\"\n        } else if gradeString == \"0\" {\n            letterGrades[letterGrades.count-1]\
    \ = \"D-\"\n        } else {\n            if prevGrade >= grade {\n          \
    \      letterGrades[letterGrades.count-1] = String(prevLetter)\n            }\
    \ else {\n                if prevGrade < grade {\n                    if prevLetter\
    \ == \"A\" {\n                        letterGrades[letterGrades.count-1] = \"\
    A-\"\n                    } else {\n                        letterGrades[letterGrades.count-1]\
    \ = \"B+\"\n                    }\n                } else {\n                \
    \    letterGrades[letterGrades.count-1] = \"B\"\n                }\n         \
    \   }\n        }\n        prevGrade = grade\n        prevLetter = gradeString\n\
    \    }\n    return letterGrades", "    var lettergrades = [String]()\n    for\
    \ grade in grades {\n        let letterGrade = letterGrade(from: grade)\n    \
    \    lettergrades.append(letterGrade)\n    }\n    return lettergrades", "    var\
    \ letterGrades: [String] = []\n\n    for grade in grades {\n        switch grade\
    \ {\n        case 4.0:\n            letterGrades.append(\"A+\")\n        case\
    \ 3.7:\n            letterGrades.append(\"A\")\n        case 3.3:\n          \
    \  letterGrades.append(\"A-\")\n        case 3.0:\n            letterGrades.append(\"\
    B+\")\n        case 2.7:\n            letterGrades.append(\"B\")\n        case\
    \ 2.3:\n            letterGrades.append(\"B-\")\n        case 2.0:\n         \
    \   letterGrades.append(\"C+\")\n        case 1.7:\n            letterGrades.append(\"\
    C\")\n        case 1.3:\n            letterGrades.append(\"C-\")\n        case\
    \ 1.0:\n            letterGrades.append(\"D+\")\n        case 0.7:\n         \
    \   letterGrades.append(\"D\")\n        case 0.0:\n            letterGrades.append(\"\
    D-\")\n        default:\n            letterGrades.append(\"E\")\n        }\n \
    \   }\n    return letterGrades", "    func findCeil(grade: Double) -> Double {\n\
    \        if grade <= 0 {\n            return 0\n        }\n\n        let precision\
    \ = (grade*10).rounded(.up)/10\n        return round(precision)\n    }\n\n   \
    \ var letterGrades = [String]()\n    var gpa = grades.last!\n    var gpaCeil =\
    \ findCeil(gpa)\n\n    // We need to round the gpa since we might have an exact\
    \ GPA but wrong grades\n    for grade in grades {\n        let gradeCeil = findCeil(grade)\n\
    \        let letterGrade: String = letterGradeForGpa(gpa, gradeCeil, gpaCeil)\n\
    \        letterGrades.append(letterGrade)\n    }\n\n    return letterGrades",
  "    \n    func subroutine(grades: [Double], result: [String], indexInt: Int) {\n\
    \        if indexInt >= grades.count {\n            result.append(grades[indexInt])\n\
    \        }\n        \n        if grades[indexInt] > 3.7 {\n            result.append(letterGrade(grades[indexInt]))\n\
    \            subroutine(grades, result, indexInt+1)\n        }\n        \n   \
    \ }\n    \n    func letterGrade(grade: Double) -> String {\n        if grade >=\
    \ 3.0 {\n            return \"A+\"\n        }\n        \n        if grade >= 3.3\
    \ {\n            return \"A\"\n        }\n        \n        if grade >= 3.7 {\n\
    \            return \"A-\"\n        }\n        \n        if grade >= 4.0 {\n \
    \           return \"B+\"\n        }\n        \n        if grade >= 2.7 {\n  \
    \          return \"B\"\n        }\n        \n        if grade >= 2.3 {\n    \
    \        return \"B-\"\n        }\n        \n        if grade >= 2.0 {\n     \
    \       return \"C+\"\n        }\n        \n        if grade >= 1.7 {\n      \
    \      return \"C\"\n        }\n        \n        if grade >= 1.3 {\n        \
    \    return \"C-\"\n        }\n        \n        if grade >= 1.0 {\n         \
    \   return \"D+\"\n        }\n        \n        if grade >= 0.7 {\n          \
    \  return \"D\"\n        }\n        \n        if grade <= 0.0 {\n            return\
    \ \"D-\"\n        }\n        \n        return \"E\"\n    }\n    \n    subroutine(grades:\
    \ grades, result: [String](), indexInt: 0)\n    return result", "    if grades.count\
    \ > 0 && (grades.last > 3.0 || grades.last < 0.0 || grades.last == 0.0) {\n  \
    \      print(\"ERROR, GRADES MUST BE RANGE 0.0 TO 3.0 AND EXACTLY ONE PER GRADE\"\
    )\n        return []\n    }\n\n    var letterGrades: [String] = []\n\n    if grades.count\
    \ == 0 {\n        print(\"ERROR, THERE ARE NO GRADES\")\n        return []\n \
    \   }\n\n    var highestGrade = grades.last!\n\n    if highestGrade >= 4.0 {\n\
    \        letterGrades.append(\"A+\")\n    }\n    if highestGrade > 3.7 && highestGrade\
    \ < 4.0 {\n        letterGrades.append(\"A\")\n    }\n    if highestGrade > 3.3\
    \ && highestGrade < 3.7 {\n        letterGrades.append(\"A-\")\n    }\n    if\
    \ highestGrade > 3.0 && highestGrade < 3.3 {\n        letterGrades.append(\"B+\"\
    )\n    }\n    if highestGrade > 2.7 && highestGrade < 3.0 {\n        letterGrades.append(\"\
    B\")\n    }\n    if highestGrade > 2.3 && highestGrade < 2.7 {\n        letterGrades.append(\"\
    B-\")\n    }\n    if highestGrade > 2.0 && highestGrade < 2.3 {\n        letterGrades.append(\"\
    C+\")\n    }\n    if highestGrade > 1.7 && highestGrade < 2.0 {\n        letterGrades.append(\"\
    C\")\n    }\n    if highestGrade > 1.3 && highestGrade < 1.7 {\n        letterGrades.append(\"\
    C-\")\n    }\n    if highestGrade > 1.0 && highestGrade < 1.3 {\n        letterGrades.append(\"\
    D+\")\n    }\n    if highestGrade > 0.7 && highestGrade < 1.0 {\n        letterGrades.append(\"\
    D\")\n    }\n    if highestGrade > 0.0 {\n        letterGrades.append(\"D-\")\n\
    \    }\n    if highestGrade < 0.0 || highestGrade == 0.0 {\n        letterGrades.append(\"\
    E\")\n    }\n\n    return letterGrades", "    var letter_grades: [String] = []\n\
    \    var GPA: Double = grades.reduce(0, combine: +) / Double(grades.count)\n \
    \   \n    let letterGrades: [(Double, String)] = [\n        (4.0, \"A+\"),\n \
    \       (4.0, \"A\"),\n        (3.7, \"A\"),\n        (3.3, \"A\"),\n        (3.0,\
    \ \"B+\"),\n        (2.7, \"B\"),\n        (2.3, \"B\"),\n        (2.0, \"C+\"\
    ),\n        (1.7, \"C\"),\n        (1.3, \"C\"),\n        (1.0, \"D+\"),\n   \
    \     (0.7, \"D\"),\n        (0.0, \"D\")\n    ]\n    \n    var next: Double =\
    \ 4.0\n    for x in grades {\n        if x >= next {\n            letter_grades.append(letterGrades.filter\
    \ { $0.0 == x }.map { $0.1 }[0])\n        } else {\n            letter_grades.append(letterGrades.filter\
    \ { $0.0 >= next }.map { $0.1 }[0])\n        }\n        next = x + 1.0\n    }\n\
    \    letter_grades.append(letterGrades.filter { $0.0 == GPA }.map { $0.1 }[0])\n\
    \    return letter_grades", "    var letterGrades: [String] = []\n    var tempGrade:\
    \ Double = 0.0\n    for gp in grades {\n        tempGrade = gp\n        \n   \
    \     // Grading algorithm\n        if tempGrade >= 4.0{\n            letterGrades.append(\"\
    A+\")\n        } else if (tempGrade > 3.7) {\n            letterGrades.append(\"\
    A\")\n        } else if (tempGrade > 3.3) {\n            letterGrades.append(\"\
    A\")\n        } else if (tempGrade > 3.0) {\n            letterGrades.append(\"\
    B+\")\n        } else if (tempGrade > 2.7) {\n            letterGrades.append(\"\
    B\")\n        } else if (tempGrade > 2.3) {\n            letterGrades.append(\"\
    B\")\n        } else if (tempGrade > 2.0) {\n            letterGrades.append(\"\
    C+\")\n        } else if (tempGrade > 1.7) {\n            letterGrades.append(\"\
    C\")\n        } else if (tempGrade > 1.3) {\n            letterGrades.append(\"\
    C\")\n        } else if (tempGrade > 1.0) {\n            letterGrades.append(\"\
    D+\")\n        } else if (tempGrade > 0.7) {\n            letterGrades.append(\"\
    D\")\n        } else if (tempGrade > 0.0) {\n            letterGrades.append(\"\
    D\")\n        } else {\n            letterGrades.append(\"E\")\n        }\n  \
    \  }\n    return letterGrades", "    var letterGrades = [String]()\n    var gpa\
    \ = 0\n    var numGrade = 0\n    for grade in grades {\n        numGrade += 1\n\
    \        if numGrade == 1 {\n            gpa = grade\n            continue\n \
    \       }\n        if gpa < grade {\n            letterGrades.append(\"B\")\n\
    \        }\n        if gpa <= grade && gpa >= grade - 0.5 {\n            letterGrades.append(\"\
    B-\")\n        }\n        if gpa > grade && gpa <= grade + 0.5 {\n           \
    \ letterGrades.append(\"B+\")\n        }\n        if gpa >= grade + 0.5 && gpa\
    \ < grade + 1.5 {\n            letterGrades.append(\"B\")\n        }\n       \
    \ if gpa >= grade + 1.5 {\n            letterGrades.append(\"B-\")\n        }\n\
    \        if gpa >= grade - 1.5 {\n            letterGrades.append(\"C+\")\n  \
    \      }\n        if gpa >= grade {\n            letterGrades.append(\"C\")\n\
    \        }\n        if gpa > grade {\n            letterGrades.append(\"C-\")\n\
    \        }\n        if gpa > grade - 0.5 {\n            letterGrades.append(\"\
    C\")\n        }\n        if gpa > grade + 0.5 {\n            letterGrades.append(\"\
    C+\")\n        }\n        if gpa >= grade - 0.5 {\n            letterGrades.append(\"\
    D+\")\n        }\n        if gpa >= grade + 0.5 {\n            letterGrades.append(\"\
    D\")\n        }\n        if gpa > grade - 1.5 {\n            letterGrades.append(\"\
    D-\")\n        }\n        if gpa > grade + 1.5 {\n            letterGrades.append(\"\
    D+\")\n        }\n        if gpa >= grade + 1.5 {\n            letterGrades.append(\"\
    E\")\n        }\n        gpa = grade\n        numGrade = 1\n    }\n    return\
    \ letterGrades", "    var letterGrades: [String] = []\n    var sumOfGrades = 0.0\n\
    \    for gp in grades {\n        sumOfGrades += gp\n    }\n    let totalGrade\
    \ = 4.0\n    if sumOfGrades > totalGrade {\n        for gp in grades {\n     \
    \       if gp == totalGrade {\n                letterGrades.append(\"E\")\n  \
    \          } else {\n                let deltaGrade = sumOfGrades - totalGrade\n\
    \                let delta = deltaGrade / totalGrade * 100\n                let\
    \ percent = delta / 100\n                let letterGrade = GPAStringToLetter(percent)\n\
    \                letterGrades.append(letterGrade)\n            }\n        }\n\
    \    } else if sumOfGrades < totalGrade {\n        for gp in grades {\n      \
    \      if gp == totalGrade {\n                letterGrades.append(\"D\")\n   \
    \         } else {\n                let deltaGrade = totalGrade - sumOfGrades\n\
    \                let delta = deltaGrade / totalGrade * 100\n                let\
    \ percent = delta / 100\n                let letterGrade = GPAStringToLetter(percent)\n\
    \                letterGrades.append(letterGrade)\n            }\n        }\n\
    \    }\n    return letterGrades", "    let letterGrade = grades.map({ String($0)\
    \ }).joined(separator: \"\")\n    var result = [String]()\n    \n    for i in\
    \ stride(from: grades.count, to: 0, by: -1) {\n        let currentGrade = String(grades[i])\n\
    \        \n        if currentGrade == \"0.0\" {\n            result.append(letterGrade)\n\
    \            break\n        }\n        \n        let firstLetter = letterGrade.characters.first\n\
    \        let secondLetter = letterGrade.characters.last!\n        \n        let\
    \ letter = currentGrade.hasPrefix(firstLetter) ? firstLetter : secondLetter\n\
    \        \n        result.append(letter)\n    }\n    \n    return result", " \
    \   // TODO: Write code here\n    return []", "    var letterGrades = [String]()\n\
    \    \n    func letterGrade(grade : Double) -> String {\n        switch grade\
    \ {\n        case 4.0:\n            return \"A+\"\n        case 3.7:\n       \
    \     return \"A\"\n        case 3.3:\n            return \"A-\"\n        case\
    \ 3.0:\n            return \"B+\"\n        case 2.7:\n            return \"B\"\
    \n        case 2.3:\n            return \"B-\"\n        case 2.0:\n          \
    \  return \"C+\"\n        case 1.7:\n            return \"C\"\n        case 1.3:\n\
    \            return \"C-\"\n        case 1.0:\n            return \"D+\"\n   \
    \     case 0.7:\n            return \"D\"\n        case 0.0:\n            return\
    \ \"D-\"\n        default:\n            return \"E\"\n        }\n    }\n\n   \
    \ for grade in grades {\n        letterGrades.append(letterGrade(grade))\n   \
    \ }\n\n    return letterGrades", "    var gradeLetters: [String] = []\n    for\
    \ i in grades {\n        let temp: Double = abs(i)\n        if temp < 3.0 {\n\
    \            gradeLetters.append(\"A+\")\n        } else if temp <= 3.7 {\n  \
    \          gradeLetters.append(\"A\")\n        } else if temp <= 4.0 {\n     \
    \       gradeLetters.append(\"B+\")\n        } else if temp <= 4.3 {\n       \
    \     gradeLetters.append(\"B\")\n        } else if temp <= 4.6 {\n          \
    \  gradeLetters.append(\"B-\")\n        } else if temp <= 4.9 {\n            gradeLetters.append(\"\
    C+\")\n        } else if temp <= 5.3 {\n            gradeLetters.append(\"C\"\
    )\n        } else if temp <= 5.6 {\n            gradeLetters.append(\"C-\")\n\
    \        } else if temp <= 5.9 {\n            gradeLetters.append(\"D+\")\n  \
    \      } else if temp <= 6.2 {\n            gradeLetters.append(\"D\")\n     \
    \   } else if temp <= 6.5 {\n            gradeLetters.append(\"D-\")\n       \
    \ } else {\n            gradeLetters.append(\"E\")\n        }\n    }\n    return\
    \ gradeLetters", "    var gradeCounts = [String: Int]()\n    for grade in grades\
    \ {\n        if gradeCounts[grade] != nil {\n            gradeCounts[grade] +=\
    \ 1\n        } else {\n            gradeCounts[grade] = 1\n        }\n    }\n\
    \    var gradeLetters = [String]()\n    for (_, count) in gradeCounts {\n    \
    \    if count > 0 {\n            gradeLetters.append(String(count) * \"A\")\n\
    \        }\n    }\n    return gradeLetters", "    var gradesArr = [String]()\n\
    \    for i in grades {\n        let result = letterGrade(grade: i)\n        gradesArr.append(result)\n\
    \    }\n    return gradesArr", "    if grades.isEmpty() { return [] }\n    var\
    \ grades_string = \"\"\n    for grade in grades {\n        if grade < 2.0 || grade\
    \ > 5.0 {\n            continue\n        }\n        if grade == 5.0 {\n      \
    \      grades_string = grades_string + \"D+\"\n        }\n        if grade ==\
    \ 4.0 {\n            grades_string = grades_string + \"A+\"\n        }\n     \
    \   if grade > 3.7 && grade < 4.0 {\n            grades_string = grades_string\
    \ + \"A\"\n        }\n        if grade > 3.3 && grade < 3.7 {\n            grades_string\
    \ = grades_string + \"A-\"\n        }\n        if grade > 2.7 && grade < 3.3 {\n\
    \            grades_string = grades_string + \"B\"\n        }\n        if grade\
    \ > 2.3 && grade < 2.7 {\n            grades_string = grades_string + \"B-\"\n\
    \        }\n        if grade > 1.7 && grade < 2.3 {\n            grades_string\
    \ = grades_string + \"C\"\n        }\n        if grade > 1.3 && grade < 1.7 {\n\
    \            grades_string = grades_string + \"C-\"\n        }\n        if grade\
    \ > 1.0 {\n            grades_string = grades_string + \"D\"\n        }\n    \
    \    if grade > 0.7 {\n            grades_string = grades_string + \"D-\"\n  \
    \      }\n        if grade > 0.0 {\n            grades_string = grades_string\
    \ + \"E\"\n        }\n    }\n    return Array(grades_string[..<grades_string.count])",
  "    var grade_string = \"\"\n    var letter_grade = \"\"\n    \n    for i in 0..<grades.count\
    \ {\n        if grades[i] > 3.0 {\n            letter_grade = \"B+\"\n       \
    \ }\n        else if grades[i] <= 3.0 && grades[i] >= 2.0 {\n            letter_grade\
    \ = \"B-\"\n        }\n        else if grades[i] <= 2.0 && grades[i] >= 1.0 {\n\
    \            letter_grade = \"C+\"\n        }\n        else if grades[i] <= 1.0\
    \ && grades[i] >= 0.7 {\n            letter_grade = \"C\"\n        }\n       \
    \ else if grades[i] <= 0.7 && grades[i] >= 0.0 {\n            letter_grade = \"\
    C-\"\n        }\n        else if grades[i] <= 0.0 && grades[i] >= -3.0 {\n   \
    \         letter_grade = \"D+\"\n        }\n        else if grades[i] <= -3.0\
    \ && grades[i] >= -1.7 {\n            letter_grade = \"D\"\n        }\n      \
    \  else if grades[i] <= -1.7 && grades[i] >= -1.0 {\n            letter_grade\
    \ = \"D-\"\n        }\n        else if grades[i] <= -1.0 && grades[i] >= -2.0\
    \ {\n            letter_grade = \"E\"\n        }\n        else if grades[i] <=\
    \ -2.0 {\n            letter_grade = \"E+\"\n        }\n        else {\n     \
    \       letter_grade = \"A+\"\n        }\n        \n        grade_string.append(letter_grade)\n\
    \    }\n    \n    return grade_string", "    var gradeLetters: [String] = []\n\
    \    for grade in grades {\n        var letter: String = \"\"\n        if grade\
    \ > 2.0 {\n            letter = \"B\"\n        } else if grade > 1.7 {\n     \
    \       letter = \"C\"\n        } else if grade > 1.0 {\n            letter =\
    \ \"C\"\n        } else if grade > 0.7 {\n            letter = \"D\"\n       \
    \ } else if grade > 0.3 {\n            letter = \"D-\"\n        } else if grade\
    \ > 0.0 {\n            letter = \"D+\"\n        } else if grade > -1.0 {\n   \
    \         letter = \"E\"\n        } else {\n            letter = \"A\"\n     \
    \   }\n        gradeLetters.append(letter)\n    }\n    return gradeLetters", " \
    \   var letterGrades = [String]()\n    var gpa = grades.reduce(0.0) { $0 + Double($1)\
    \ }\n    let gpaDouble = gpa\n    let gpaRange = 5.0 / gpaDouble\n    for i in\
    \ 0..<gpaDouble {\n        let tempGpa = gpa + gpaRange * i\n        guard tempGpa\
    \ > 0.0 && tempGpa < 5.0 else {\n            letterGrades.append(\"E\")\n    \
    \        break\n        }\n        let letter = letterGrades[i]\n        let letterScore\
    \ = letter != \"D\" ? letterGrades.count - 1 - i : 0\n        let letterGrade\
    \ = String(format: \"%.2f\", gpaRange * letterScore + tempGpa)\n        letterGrades.append(letterGrade)\n\
    \    }\n    return letterGrades", "    var gpa = grades.reduce(0.0) { $0 + $1;\
    \ $1 / Float(grades.count) }\n    let grades = gpa.map{$0 * 100 / gpa.max()}.map{$0\
    \ > 7.0 ? \"A+\" :\n        ($0 > 6.0 ? \"A-\" : $0 > 3.0 ? \"B-\" : $0 > 2.0\
    \ ? \"B-\" : $0 > 1.0 ? \"C-\" : $0 > 0.0 ? \"D-\" : \"E\") }\n    return grades",
  "\tlet letters = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"\
    C-\", \"D+\", \"D\", \"D-\", \"E\"]\n\tlet letterGrades = [4.0, 3.7, 3.3, 3.0,\
    \ 2.7, 2.3, 2.0, 1.7, 1.3, 1.0]\n\tvar result = [String]()\n\t\n\tfor i in 0..<letterGrades.count\
    \ {\n\t\tlet result = 0.0;\n\t\tif letterGrades[i] != 0 {\n\t\t\tfor j in 1..<letterGrades.count\
    \ {\n\t\t\t\tif i != j {\n\t\t\t\t\tresult += letterGrades[i]/letterGrades[j]\n\
    \t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult = letterGrades[i]\n\t\t}\n\t\t\n\
    \t\tif result > 3.0 { \n\t\t\tresult = 3.0\n\t\t} else if result < -2.0 {\n\t\t\
    \tresult = -2.0\n\t\t}\n\t\t\n\t\tif result < -1.0 {\n\t\t\tresult = -1.0\n\t\t\
    } else if result > 2.0 {\n\t\t\tresult = 2.0\n\t\t}\n\t\t\n\t\tif result < -1.0\
    \ {\n\t\t\tresult = -1.0\n\t\t} else if result > 1.0 {\n\t\t\tresult = 1.0\n\t\
    \t}\n\t\t\n\t\tif result < -1.0 {\n\t\t\tresult = -1.0\n\t\t} else if result >\
    \ 0.7 {\n\t\t\tresult = 0.7\n\t\t}\n\t\t\n\t\tif result < -1.0 {\n\t\t\tresult\
    \ = -1.0\n\t\t}\n\t\t\n\t\tif result > 1.0 {\n\t\t\tresult = 1.0\n\t\t}\n\t\t\n\
    \t\tif result < -1.0 {\n\t\t\tresult = -1.0\n\t\t}\n\t\t\n\t\tif result > 0.0\
    \ {\n\t\t\tresult = 0.0\n\t\t}\n\t\t\n\t\tif result != 0.0 {\n\t\t\tresult = \"\
    \\(result)\"\n\t\t}\n\t\t\n\t\tresult.append(letters[i])\n\t}\n\t\n\treturn result",
  "    let minGrade = grades.min()\n    let maxGrade = grades.max()\n    let min =\
    \ minGrade - 0.5\n    let max = maxGrade + 0.5\n    var grades: [Double] = (0..<grades.count).map\
    \ { Double(grades[$0]) }\n    for i in 0..<grades.count {\n        grades[i] =\
    \ ((grades[i] - min) / (max - min)) * 100\n    }\n    return grades.map { letter\
    \ in\n        if let idx = grades.firstIndex(where: { $0 == letter }) {\n    \
    \        return \"\\(letter)\" + (idx < grades.count - 1 ? \"+\" : \"\")\n   \
    \     } else {\n            return \"\\(letter)\"\n        }\n    }", "    var\
    \ letterGrades = [String]()\n    if grades.count < 7 {\n        for grade in grades\
    \ {\n            if grade < 3.0 {\n                letterGrades.append(LetterGrade.A\
    \ + \"\".random())\n            } else if grade < 4.0 {\n                letterGrades.append(LetterGrade.A\
    \ + \".\".random())\n            } else if grade < 3.7 {\n                letterGrades.append(LetterGrade.A\
    \ + \"\".random())\n            } else if grade < 3.0 {\n                letterGrades.append(LetterGrade.B\
    \ + \".\".random())\n            } else if grade < 2.7 {\n                letterGrades.append(LetterGrade.B\
    \ + \"\".random())\n            } else if grade < 2.3 {\n                letterGrades.append(LetterGrade.B\
    \ + \"\".random())\n            } else if grade < 2.0 {\n                letterGrades.append(LetterGrade.C\
    \ + \".\".random())\n            } else if grade < 1.7 {\n                letterGrades.append(LetterGrade.C\
    \ + \"\".random())\n            } else if grade < 1.3 {\n                letterGrades.append(LetterGrade.C\
    \ + \"\".random())\n            } else if grade < 1.0 {\n                letterGrades.append(LetterGrade.D\
    \ + \"\".random())\n            } else if grade < 0.7 {\n                letterGrades.append(LetterGrade.D\
    \ + \".\".random())\n            } else {\n                letterGrades.append(LetterGrade.D\
    \ + \"\".random())\n            }\n        }\n    } else {\n        for grade\
    \ in grades {\n            if grade < 3.0 {\n                letterGrades.append(LetterGrade.A\
    \ + \"\".random())\n            } else if grade < 4.0 {\n                letterGrades.append(LetterGrade.A\
    \ + \".\".random())\n            } else if grade < 3.7 {\n                letterGrades.append(LetterGrade.A\
    \ + \"\".random())\n            } else if grade < 3.0 {\n                letterGrades.append(LetterGrade.B\
    \ + \".\".random())\n            } else if grade < 2.7 {\n                letterGrades.append(LetterGrade.B\
    \ + \"\".random())\n            } else if grade < 2.3 {\n                letterGrades.append(LetterGrade.B\
    \ + \"\".random())\n            } else if grade < 2.0 {\n                letterGrades.append(LetterGrade.C\
    \ + \".\".random())\n            } else if grade < 1.7 {\n                letterGrades.append(LetterGrade.C\
    \ + \"\".random())\n            } else if grade < 1.3 {\n", "    var grades: [String]\
    \ = []\n    var letterGrade = \"\"\n    for grade in grades {\n        var tempGrade\
    \ = grade\n        if tempGrade <= 4.0 {\n            tempGrade = 4.0\n      \
    \  } else if tempGrade > 3.7 {\n            tempGrade = 3.7\n        }\n     \
    \   letterGrade = \"A+\" + (tempGrade - 4.0).truncatingRemainder(dividingBy: 4).map(String.init).joined(separator:\
    \ \"\")\n        grades.append(letterGrade)\n    }\n    return grades", "    let\
    \ result = grades.compactMap { Double($0) }.sorted()\n    let firstLetter = result.first\
    \ - 4.0\n    let lastLetter = result.last + 1.0\n    let gradeRange = lastLetter\
    \ > firstLetter ? lastLetter : firstLetter\n    let gradeRangeString = String(gradeRange)\n\
    \    let gradeRangeWithZeros = String(gradeRange).padding(withLength: 3, withPad:\
    \ 0)\n    let letterGrades = (0..<result.count).map { i in\n        guard let\
    \ index = i % gradeRange,\n              index > gradeRange,\n              index\
    \ > gradeRangeWithZeros else {\n            return String(result[i])\n       \
    \ }\n        return String(result[i] + gradeRangeString.suffix(1))\n    }\n  \
    \  return letterGrades", "    \n    // TODO: Create a String Array called gradeStrings\
    \ using this function\n    // (Hint: Remember that this function should take an\
    \ Array of Doubles\n    // and return an Array of Strings)\n    let gradeStrings\
    \ = grades.map { letter in\n        \n        // TODO: Rewrite this function using\
    \ Swift 2.3's map function\n        // Hint: This function should take a single\
    \ Double as an argument\n        // and return a String that represents this Double\
    \ in Letter Grade \n        // notation\n        if let letterGrade = letterGrade(grade:\
    \ letter) {\n            return letterGrade\n        } else {\n            return\
    \ \"E\"\n        }\n    }\n    \n    // TODO: Rewrite this function using Swift\
    \ 2.3's map function\n    // Hint: This function should take an Array of Strings\
    \ as an argument\n    // and return an Array of Strings\n    return gradeStrings.map\
    \ { $0 }", "    \n    // Create an empty array of strings\n    var letterGrades\
    \ = [String]()\n    \n    // Iterate over every index\n    for i in 0..<grades.count\
    \ {\n        \n        // Calculate the letter grade using the formula\n     \
    \   let letterGrade = calculateLetterGrade(grades[i])\n        \n        // Add\
    \ it to our array\n        letterGrades.append(letterGrade)\n    }\n    \n   \
    \ // Return it\n    return letterGrades", '    return []', "    var gradeLetterArray:\
    \ [String] = []\n    var sum: Double = 0\n\n    for grade in grades {\n      \
    \  sum += grade\n    }\n\n    gradeLetterArray.append(\"\")\n\n    let gradeArray:\
    \ [Double] = Array(grades)\n    var previousGrade: Double = -1\n\n    for grade\
    \ in gradeArray {\n        if grade != previousGrade {\n            gradeLetterArray[gradeArray.index(grade)]\
    \ = \"D-\"\n        }\n\n        previousGrade = grade\n    }\n\n    gradeLetterArray[gradeArray.index(grades.last!)]\
    \ = \"D+\"\n\n    return gradeLetterArray", "    var letter_grades: [String] =\
    \ []\n    for i in 0..<grades.count {\n        if grades[i] >= 3.0 {\n       \
    \     letter_grades.append(\"A+\")\n            grades[i] -= 3.0\n        } else\
    \ if grades[i] >= 2.0 {\n            letter_grades.append(\"B+\")\n          \
    \  grades[i] -= 2.0\n        } else if grades[i] >= 1.0 {\n            letter_grades.append(\"\
    C+\")\n            grades[i] -= 1.0\n        } else if grades[i] >= 0.7 && grades[i]\
    \ < 1.0 {\n            letter_grades.append(\"D+\")\n            grades[i] -=\
    \ 0.7\n        } else if grades[i] >= 0.0 && grades[i] < 0.7 {\n            letter_grades.append(\"\
    D-\")\n            grades[i] -= 0.0\n        } else {\n            letter_grades.append(\"\
    E\")\n        }\n    }\n    return letter_grades", "    // Your code here\n  \
    \  return []", "    if grades.isEmpty {\n        return [\"E\"]\n    }\n    var\
    \ letterGrades: [String] = []\n    var sum: Double = 0\n    for grade in grades\
    \ {\n        sum += grade\n        letterGrades.append(String.init(\"\\(grade)\"\
    \ + \"\\(getLetterGrade(grade)))\")\n    }\n    if sum < 0 {\n        letterGrades.removeLast()\n\
    \    }\n    return letterGrades", "    var letterGrades: [String] = []\n    var\
    \ gpa: Double = grades[0]\n    \n    guard grades.count == 4 else { return letterGrades\
    \ }\n    \n    for grade in grades {\n        switch grade {\n        case 3.0:\n\
    \            letterGrades.append(\"B+\")\n        case 2.7:\n            letterGrades.append(\"\
    B\")\n        case 2.3:\n            letterGrades.append(\"B-\")\n        case\
    \ 2.0:\n            letterGrades.append(\"C+\")\n        case 1.7:\n         \
    \   letterGrades.append(\"C\")\n        case 1.3:\n            letterGrades.append(\"\
    C-\")\n        case 1.0:\n            letterGrades.append(\"D+\")\n        case\
    \ 0.7:\n            letterGrades.append(\"D\")\n        case 0.0:\n          \
    \  letterGrades.append(\"D-\")\n        case 3.7:\n            letterGrades.append(\"\
    A+\")\n        case 3.3:\n            letterGrades.append(\"A\")\n        case\
    \ 4.0:\n            letterGrades.append(\"A\")\n        default:\n           \
    \ letterGrades.append(\"E\")\n        }\n    }\n    \n    guard gpa > 0.0 else\
    \ {\n        return letterGrades\n    }\n    \n    if let lastLetter = letterGrades.last\
    \ {\n        if lastLetter == \"E\" {\n            return letterGrades\n     \
    \   }\n    }\n    \n    if let firstLetter = letterGrades.first {\n        if\
    \ firstLetter == \"E\" {\n            letterGrades.insert(\"E\", at: 0)\n    \
    \        return letterGrades\n        }\n    }\n    \n    return letterGrades",
  "    return grades.map { grade -> String in\n        let letterGrade = grade > 4.0\
    \ ? \"A+\" : grade > 3.7 ? \"A\" : grade > 3.3 ? \"A-\" : grade > 3.0 ? \"B+\"\
    \ : grade > 2.7 ? \"B\" : grade > 2.3 ? \"B-\" : grade > 2.0 ? \"C+\" : grade\
    \ > 1.7 ? \"C\" : grade > 1.3 ? \"C-\" : grade > 1.0 ? \"D+\" : grade > 0.7 ?\
    \ \"D\" : grade > 0.0 ? \"D-\" : \"E\"\n        return letterGrade\n    }", " \
    \   // TODO: write your code in Swift\n    return []", "    \n    // TODO: fill\
    \ this out\n    \n    return []", '    // TODO: write your code here', "    var\
    \ result: [String] = []\n    var i = grades.count - 1\n    while i >= 0 {\n  \
    \      guard let gpa = grades[i] else {\n            return result\n        }\n\
    \        let resultGrade: String\n        if gpa > 4.0 {\n            resultGrade\
    \ = \"A+\"\n        } else if gpa > 3.7 {\n            resultGrade = \"A\"\n \
    \       } else if gpa > 3.3 {\n            resultGrade = \"A-\"\n        } else\
    \ if gpa > 3.0 {\n            resultGrade = \"B+\"\n        } else if gpa > 2.7\
    \ {\n            resultGrade = \"B\"\n        } else if gpa > 2.3 {\n        \
    \    resultGrade = \"B-\"\n        } else if gpa > 2.0 {\n            resultGrade\
    \ = \"C+\"\n        } else if gpa > 1.7 {\n            resultGrade = \"C\"\n \
    \       } else if gpa > 1.3 {\n            resultGrade = \"C-\"\n        } else\
    \ if gpa > 1.0 {\n            resultGrade = \"D+\"\n        } else if gpa > 0.7\
    \ {\n            resultGrade = \"D\"\n        } else if gpa > 0.0 {\n        \
    \    resultGrade = \"D-\"\n        } else {\n            resultGrade = \"E\"\n\
    \        }\n        result.append(resultGrade)\n        i--\n    }\n    return\
    \ result", "    var letterGrades = [String]()\n    if grades.isEmpty {\n     \
    \   return letterGrades\n    }\n    let maxGrade = grades.max()\n    guard maxGrade\
    \ > 0.0 else {\n        return letterGrades\n    }\n    let average = grades.reduce(0.0)\
    \ { $0 + $1 }\n    let average = Double(average / Double(grades.count))\n    let\
    \ grade = average\n    \n    if grade < 3.0 {\n        letterGrades.append(\"\
    A-\")\n    }\n    if grade < 3.3 {\n        letterGrades.append(\"A-\")\n    }\n\
    \    if grade < 3.7 {\n        letterGrades.append(\"A+\")\n    }\n    if grade\
    \ < 4.0 {\n        letterGrades.append(\"A+\")\n    }\n    if grade < 4.3 {\n\
    \        letterGrades.append(\"B+\")\n    }\n    if grade < 4.7 {\n        letterGrades.append(\"\
    B+\")\n    }\n    if grade < 5.0 {\n        letterGrades.append(\"B\")\n    }\n\
    \    if grade < 5.3 {\n        letterGrades.append(\"B\")\n    }\n    if grade\
    \ < 5.7 {\n        letterGrades.append(\"B-\")\n    }\n    if grade < 6.0 {\n\
    \        letterGrades.append(\"B-\")\n    }\n    if grade < 6.3 {\n        letterGrades.append(\"\
    C+\")\n    }\n    if grade < 6.7 {\n        letterGrades.append(\"C+\")\n    }\n\
    \    if grade < 7.0 {\n        letterGrades.append(\"C\")\n    }\n    if grade\
    \ < 7.3 {\n        letterGrades.append(\"C\")\n    }\n    if grade < 7.7 {\n \
    \       letterGrades.append(\"C-\")\n    }\n    if grade < 8.0 {\n        letterGrades.append(\"\
    C-\")\n    }\n    if grade < 8.3 {\n        letterGrades.append(\"D+\")\n    }\n\
    \    if grade < 8.7 {\n        letterGrades.append(\"D+\")\n    }\n    if grade\
    \ < 9.0 {\n        letterGrades.append(\"D\")\n    }\n    if grade < 9.3 {\n \
    \       letterGrades.append(\"D\")\n    }\n    if grade < 9.7 {\n        letterGrades.append(\"\
    D-\")\n    }\n    if grade < 10.0 {\n        letterGrades.append(\"D-\")\n   \
    \ }\n    if grade < 10.3 {\n        letterGrades.append(\"E\")\n    }\n    \n\
    \    return letterGrades", "    var letters = [String]()\n    var sum: Double\
    \ = 0.0\n    grades.forEach {\n        sum += $0\n    }\n    let maxGrade = grades.last!\n\
    \    var current = 0.0\n    var currentGrade = \"\"\n    for x in grades {\n \
    \       if x > max {\n            break\n        }\n        letters.append(\"\"\
    )\n        if x > sum {\n            letters.append(currentGrade)\n          \
    \  break\n        }\n        if x == maxGrade {\n            current = maxGrade\n\
    \            letters.append(currentGrade)\n            break\n        }\n    \
    \    current = x\n        currentGrade = String(current.truncatingRemainder(dividingBy:\
    \ max))\n    }\n    return letters.reversed()", "    var letters = [String]()\n\
    \    if grades.isEmpty {\n        return letters\n    }\n    \n    let average\
    \ = grades.reduce(0, combine: +)\n    \n    let gradingRange = average/Double(grades.count)\n\
    \    let gradesAfter = grades.filter {\n        grade -> Bool in\n        let\
    \ percentGrade = Double(grade) * gradingRange\n        return percentGrade < grade\n\
    \    }\n    \n    letters.append(gradesAfter.map {\n        grade -> String in\n\
    \        \n        let letter = String(grade < average/2 ? \"A-\" : grade < average/3\
    \ ? \"B-\" : grade < average/4 ? \"C-\" : grade < average/5 ? \"D-\" : grade <\
    \ average/6 ? \"D\" : grade < average/7 ? \"F\" : grade < average/8 ? \"F-\" :\
    \ \"F\")\n        return letter\n    }.joined())\n    return letters", "    guard\
    \ grades.count > 0 else { return [] }\n\n    // Create array of ranges of grades\
    \ (each with grade+1 and grade-1 values)\n    let ranges = [Range<Double>](repeating:\
    \ grades.first .. grades.last - 1, count: grades.count)\n    \n    // Sort ranges\n\
    \    let sortedRanges = ranges.sorted { $0.offset < $1.offset }\n\n    // Initialize\
    \ grade counter\n    var counter = 0\n\n    // Return sorted letters from range\n\
    \    return sortedRanges.map { letter in\n        guard letter <= grades.last\
    \ else { return \"\" }\n        guard letter >= grades.first else { return \"\"\
    \ }\n        if counter < letter.toUInt16() { return \"\" }\n        counter +=\
    \ 1\n        let grade = Double(letter.toUInt16())\n        \n        guard letter\
    \ <= grades.last - 1 else { return \"\" }\n        let prevLetter = Double(letter.toUInt16()\
    \ - 1).toInt()\n        \n        guard letter >= grades.first else { return \"\
    \" }\n        let nextLetter = Double(letter.toUInt16() + 1).toInt()\n\n     \
    \   guard letter <= grades.last - 2 else { return \"\" }\n        let prevNextLetter\
    \ = Double(letter.toUInt16() - 2).toInt()\n        \n        guard letter >= grades.first\
    \ else { return \"\" }\n        let nextNextLetter = Double(letter.toUInt16()\
    \ + 2).toInt()\n\n        let gradeLetter = \"A+\" + (grade >= grades.first &&\
    \ grade < grades.last).description ?? \"\"\n        let prevGradeLetter = grade\
    \ >= grades.first && grade < grades.last ? \"A-\" : (grade > prevLetter ? \"B+\"\
    \ : grade == prevLetter ? \"B\" : grade == prevLetter ? \"B-\" : \"\")\n     \
    \   let nextGradeLetter = grade >= grades.first && grade < grades.last ? \"A-\"\
    \ : (grade > nextLetter ? \"B+\" : grade == nextLetter ? \"B\" : grade == nextLetter\
    \ ? \"B-\" : \"\")\n        let prevNextGradeLetter = grade >= grades.first &&\
    \ grade < grades.last ? \"A-\" : (grade > prevNextLetter ? \"B+\" : grade == prevNextLetter\
    \ ? \"B\" : grade == prevNextLetter ? \"B-\" : \"\")\n        let nextNextGradeLetter\
    \ = grade >= grades.first && grade < grades.last ? \"A-\" : (grade > nextNextLetter\
    \ ? \"B+\" : grade == nextNextLetter ? \"B", "    return Array(zip(grades, letterGrades(grades))).filter\
    \ { (grade : Double, letter : String) -> Bool in\n        grade >= 0 && grade\
    \ <= 7\n    }", "    var letterGrades = [String]()\n    var accumulatedGrade =\
    \ grades.reduce(0, combine: +)\n    \n    if accumulatedGrade >= 4.0 {\n     \
    \   letterGrades.append(\"A+\")\n        accumulatedGrade -= 4.0\n    }\n    \n\
    \    if accumulatedGrade > 3.0 && accumulatedGrade < 4.0 {\n        letterGrades.append(\"\
    A\")\n        accumulatedGrade -= 3.0\n    }\n    \n    if accumulatedGrade >\
    \ 3.0 && accumulatedGrade < 3.7 {\n        letterGrades.append(\"A-\")\n     \
    \   accumulatedGrade -= 3.3\n    }\n    \n    if accumulatedGrade > 3.0 && accumulatedGrade\
    \ < 3.3 {\n        letterGrades.append(\"B+\")\n        accumulatedGrade -= 2.7\n\
    \    }\n    \n    if accumulatedGrade > 2.7 && accumulatedGrade < 3.3 {\n    \
    \    letterGrades.append(\"B\")\n        accumulatedGrade -= 2.3\n    }\n    \n\
    \    if accumulatedGrade > 2.3 && accumulatedGrade < 2.7 {\n        letterGrades.append(\"\
    B-\")\n        accumulatedGrade -= 2.0\n    }\n    \n    if accumulatedGrade >\
    \ 2.0 && accumulatedGrade < 2.3 {\n        letterGrades.append(\"C+\")\n     \
    \   accumulatedGrade -= 1.7\n    }\n    \n    if accumulatedGrade > 1.7 && accumulatedGrade\
    \ < 2.0 {\n        letterGrades.append(\"C\")\n        accumulatedGrade -= 1.3\n\
    \    }\n    \n    if accumulatedGrade > 1.3 && accumulatedGrade < 1.7 {\n    \
    \    letterGrades.append(\"C-\")\n        accumulatedGrade -= 1.0\n    }\n   \
    \ \n    if accumulatedGrade > 1.0 {\n        letterGrades.append(\"D+\")\n   \
    \     accumulatedGrade -= 0.7\n    }\n    \n    if accumulatedGrade > 0.7 && accumulatedGrade\
    \ < 1.0 {\n        letterGrades.append(\"D\")\n        accumulatedGrade -= 0.0\n\
    \    }\n    \n    if accumulatedGrade < 0.0 && accumulatedGrade < 0.7 {\n    \
    \    letterGrades.append(\"D-\")\n    }\n    \n    if accumulatedGrade == 0.0\
    \ {\n        letterGrades.append(\"E\")\n    }\n    \n    return letterGrades",
  "    var letter_grades: [String] = []\n    \n    for grade in grades {\n       \
    \ letter_grades.append(calculateGrade(grade))\n    }\n    \n    return letter_grades",
  "    // TODO: replace this implementation with your own\n    var letterGrades: [String]\
    \ = []\n    if grades.first == 0.0 {\n        letterGrades.append(\"E\")\n   \
    \ } else {\n        if grades.first < 3.0 {\n            if grades.first <= 3.7\
    \ { \n                letterGrades.append(\"A+\")\n            } else if grades.first\
    \ <= 3.3 {\n                letterGrades.append(\"A-\")\n            } else if\
    \ grades.first <= 3.0 { \n                letterGrades.append(\"B+\")\n      \
    \      } else if grades.first <= 2.7 { \n                letterGrades.append(\"\
    B\")\n            } else if grades.first <= 2.3 { \n                letterGrades.append(\"\
    B-\")\n            } else if grades.first <= 2.0 { \n                letterGrades.append(\"\
    C+\")\n            } else if grades.first <= 1.7 { \n                letterGrades.append(\"\
    C\")\n            } else if grades.first <= 1.3 { \n                letterGrades.append(\"\
    C-\")\n            } else if grades.first <= 1.0 { \n                letterGrades.append(\"\
    D+\")\n            } else if grades.first <= 0.7 { \n                letterGrades.append(\"\
    D\")\n            } else { \n                letterGrades.append(\"D-\")\n   \
    \         }\n        } else if grades.first > 3.0 {\n            if grades.first\
    \ <= 3.7 { \n                letterGrades.append(\"A\")\n            } else if\
    \ grades.first <= 3.3 { \n                letterGrades.append(\"A-\")\n      \
    \      } else if grades.first <= 3.0 { \n                letterGrades.append(\"\
    B\")\n            } else if grades.first <= 2.7 { \n                letterGrades.append(\"\
    B-\")\n            } else if grades.first <= 2.3 { \n                letterGrades.append(\"\
    C\")\n            } else if grades.first <= 2.0 { \n                letterGrades.append(\"\
    C-\")\n            } else if grades.first <= 1.7 { \n                letterGrades.append(\"\
    D\")\n            } else if grades.first <= 1.3 { \n                letterGrades.append(\"\
    D-\")\n            } else if grades.first <= 1.0 { \n                letterGrades.append(\"\
    E\")\n            } else { \n                letterGrades.append(\"E-\")\n   \
    \         }\n        } else {\n            letterGrades.append(\"F\")\n      \
    \  }\n    }\n    return letterGrades", "    var letter_grades: [String] = []\n\
    \    for i in 0 ..< grades.count {\n        let letterGrade = calculateLetterGrade(GPA:\
    \ grades[i])\n        letter_grades.append(letterGrade)\n    }\n    return letter_grades",
  "    if grades.count < 2 {\n        return []\n    }\n    if grades.count > 10 {\n\
    \        return []\n    }\n    \n    var letterGrades: [String] = []\n    for\
    \ gpa: Double in grades {\n        letterGrades.append(gpaAsLetter[gpa])\n   \
    \ }\n    letterGrades.sort()\n    return letterGrades", '    // Your code here',
  "    return grades.map { grade in\n        let gpa = grade\n        if gpa >= 4.0\
    \ {\n            return \"A+\"\n        } else if gpa > 3.7 && gpa <= 4.0 {\n\
    \            return \"A\"\n        } else if gpa > 3.3 && gpa <= 3.7 {\n     \
    \       return \"A-\"\n        } else if gpa > 3.0 && gpa <= 3.3 {\n         \
    \   return \"B+\"\n        } else if gpa > 2.7 && gpa <= 3.0 {\n            return\
    \ \"B\"\n        } else if gpa > 2.3 && gpa <= 2.7 {\n            return \"B-\"\
    \n        } else if gpa > 2.0 && gpa <= 2.3 {\n            return \"C+\"\n   \
    \     } else if gpa > 1.7 && gpa <= 2.0 {\n            return \"C\"\n        }\
    \ else if gpa > 1.3 && gpa <= 1.7 {\n            return \"C-\"\n        } else\
    \ if gpa > 1.0 && gpa <= 1.3 {\n            return \"D+\"\n        } else if gpa\
    \ > 0.7 && gpa <= 1.0 {\n            return \"D\"\n        } else if gpa > 0.0\
    \ && gpa <= 0.7 {\n            return \"D-\"\n        } else {\n            return\
    \ \"E\"\n        }\n    }", "    var letterGrade = [String]()\n\n    for i in\
    \ 0..<grades.count {\n        switch grades[i] {\n        case 0...0.7:\n    \
    \        letterGrade.append(\"D+\")\n        case 0.7...1.3:\n            letterGrade.append(\"\
    D\")\n        case 1.3...2.7:\n            letterGrade.append(\"D-\")\n      \
    \  case 2.7...3.3:\n            letterGrade.append(\"C-\")\n        case 3.3...4.0:\n\
    \            letterGrade.append(\"C\")\n        case 4.0...4.7:\n            letterGrade.append(\"\
    B-\")\n        case 4.7...5.3:\n            letterGrade.append(\"B\")\n      \
    \  case 5.3...6.0:\n            letterGrade.append(\"A-\")\n        case 6.0...6.7:\n\
    \            letterGrade.append(\"A\")\n        case 6.7...7.3:\n            letterGrade.append(\"\
    A+\")\n        default:\n            letterGrade.append(\"E\")\n        }\n  \
    \  }\n    \n    return letterGrade", "    var letterGrades = [String]()\n    \n\
    \    if grades.count > 7 {\n        print(\"Too many grades.\")\n        return\
    \ letterGrades\n    }\n    \n    guard let min = grades.min() else {\n       \
    \ print(\"All grades need to be greater than zero.\")\n        return letterGrades\n\
    \    }\n    \n    guard let max = grades.max() {\n        print(\"All grades need\
    \ to be less than 1.0.\")\n        return letterGrades\n    }\n    \n    var gpa\
    \ = grades.reduce(0, { $0 + $1})\n    var gpaSum = gpa\n    \n    switch gpa <\
    \ 1.0 {\n    case true: break\n    case false: gpaSum += 1\n    }\n    \n    while\
    \ gpa >= 1.0 {\n        if gpa < 3.0 {\n            letterGrades.append(\"A+\"\
    )\n            break\n        }\n        if gpa < 3.7 {\n            letterGrades.append(\"\
    A\")\n            break\n        }\n        if gpa < 4.0 {\n            letterGrades.append(\"\
    A-\")\n            break\n        }\n        if gpa < 4.3 {\n            letterGrades.append(\"\
    B+\")\n            break\n        }\n        if gpa < 4.6 {\n            letterGrades.append(\"\
    B\")\n            break\n        }\n        if gpa < 4.9 {\n            letterGrades.append(\"\
    B-\")\n            break\n        }\n        if gpa < 5.0 {\n            letterGrades.append(\"\
    C+\")\n            break\n        }\n        if gpa < 5.3 {\n            letterGrades.append(\"\
    C\")\n            break\n        }\n        if gpa < 5.6 {\n            letterGrades.append(\"\
    C-\")\n            break\n        }\n        if gpa < 5.9 {\n            letterGrades.append(\"\
    D+\")\n            break\n        }\n        if gpa < 6.0 {\n            letterGrades.append(\"\
    D\")\n            break\n        }\n        if gpa < 6.3 {\n            letterGrades.append(\"\
    D-\")\n            break\n        }\n        if gpa < 6.6 {\n            letterGrades.append(\"\
    E\")\n            break\n        }\n        gpa -= 1.0\n    }\n    \n    while\
    \ gpaSum >= 1.0 {\n        if gpaSum < 3.0 {\n            letterGrades.append(\"\
    A+\")\n            break\n        }\n        if gpaSum < 3.7 {\n            letterGrades.append(\"\
    A\")\n            break\n        }\n        if gpaSum < 4.0 {\n            letterGrades.append(\"\
    A-\")\n            break\n        }\n        if gpaSum < 4.3 {\n            letterGrades.append(\"\
    B+\")\n            break\n        }\n        if gpaSum < 4.6 {\n            letterGra",
  "    let gpa = grades.map { $0 * 4.0 }\n    var letterGrades = [String]()\n    \n\
    \    let grade = grades.map { $0 }\n    \n    let gradeZero = grade[0]\n    let\
    \ gpaZero = gpa[0]\n    \n    if gradeZero > gpaZero {\n        letterGrades.append(\"\
    A+\")\n    }\n    else if gradeZero < gpaZero {\n        letterGrades.append(\"\
    A-\")\n    }\n    else if gradeZero == gpaZero {\n        letterGrades.append(\"\
    A-\")\n    }\n    else if gradeZero > gpaZero {\n        letterGrades.append(\"\
    B+\")\n    }\n    else if gradeZero < gpaZero {\n        letterGrades.append(\"\
    B\")\n    }\n    else if gradeZero > gpaZero {\n        letterGrades.append(\"\
    B-\")\n    }\n    else if gradeZero < gpaZero {\n        letterGrades.append(\"\
    C+\")\n    }\n    else if gradeZero > gpaZero {\n        letterGrades.append(\"\
    C\")\n    }\n    else if gradeZero < gpaZero {\n        letterGrades.append(\"\
    C\")\n    }\n    else if gradeZero > gpaZero {\n        letterGrades.append(\"\
    D+\")\n    }\n    else if gradeZero < gpaZero {\n        letterGrades.append(\"\
    D\")\n    }\n    else if gradeZero < gpaZero {\n        letterGrades.append(\"\
    D-\")\n    }\n    else if gradeZero < gpaZero {\n        letterGrades.append(\"\
    E\")\n    }\n    \n    return letterGrades", "    let sum = grades.reduce(0, {$0\
    \ + $1})\n    let average = sum / grades.count\n\n    let highToLow = grades.map\
    \ {\n        if average > 2.0 {\n            return \"A+\"\n        } else if\
    \ average > 1.2 {\n            return \"A\"\n        } else if average > 0.8 {\n\
    \            return \"A-\"\n        } else if average > 0.4 {\n            return\
    \ \"B+\"\n        } else if average > 0.1 {\n            return \"B\"\n      \
    \  } else if average > 0.05 {\n            return \"B-\"\n        } else if average\
    \ > 0.02 {\n            return \"C+\"\n        } else if average > 0.01 {\n  \
    \          return \"C\"\n        } else if average > 0.005 {\n            return\
    \ \"C-\"\n        } else if average > 0.002 {\n            return \"D+\"\n   \
    \     } else if average > 0.001 {\n            return \"D\"\n        } else if\
    \ average > 0.0005 {\n            return \"D-\"\n        } else {\n          \
    \  return \"E\"\n        }\n    }\n\n    return highToLow", "  var gradeLetters:\
    \ [String] = [] \n  var total: Double = 0.0\n  \n  for grade in grades {\n   \
    \ total += grade\n  }\n  \n  for grade in grades {\n    gradeLetters.append(\"\
    \\(grade)\") // add grade to gradeLetters\n  }\n  \n  for grade in grades {\n\
    \    // compare grade to total \n    if grade > total {\n      // add A-\n   \
    \   if grade > 3.0 {\n        gradeLetters.insert(gradeLetters.end, \"A-\")\n\
    \      } else if grade > 2.7 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"B-\")\n      } else if grade > 2.3 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"B-\")\n      } else if grade > 2.0 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"B-\")\n      } else if grade > 1.7 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"C+\")\n      } else if grade > 1.3 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"C\")\n      } else if grade > 1.0 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"C-\")\n      } else if grade > 0.7 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"D+\")\n      } else if grade > 0.3 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"D\")\n      } else if grade > 0.0 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"D-\")\n      }\n    } else if grade < total {\n      // add B+ \n      if\
    \ grade > 3.0 {\n        gradeLetters.insert(gradeLetters.end, \"B+\")\n     \
    \ } else if grade > 2.7 {\n        gradeLetters.insert(gradeLetters.end, \"B\"\
    )\n      } else if grade > 2.3 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"B-\")\n      } else if grade > 2.0 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"B-\")\n      } else if grade > 1.7 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"C+\")\n      } else if grade > 1.3 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"C\")\n      } else if grade > 1.0 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"C-\")\n      } else if grade > 0.7 {\n        gradeLetters.insert(gradeLetters.end,\
    \ \"D+\")\n      } else if grade > 0.3 {\n        gradeLetters.insert(gradeLetters.",
  "    var letter_grades = [String]()\n    for grade in grades {\n        let gpa\
    \ = grade * 4.0\n        let letterGrade = GPA[Int(gpa)]!\n        letter_grades.append(letterGrade)\n\
    \    }\n    return letter_grades", "    let min_value = grades.min()!\n    let\
    \ max_value = grades.max()!\n    var letter_grades: [String] = []\n    let total_score\
    \ = grades.reduce(0, {$0 + $1})\n    var current_grade: Double = 0\n    for i\
    \ in 0...grades.count {\n        let percent = Double(i) / Double(grades.count)\
    \ * 100\n        let score = total_score - grades[i]\n        let grade = (percent\
    \ / 100) * max_value\n        if score < current_grade {\n            letter_grades.append(\"\
    \")\n        }\n        current_grade = score\n        switch percent {\n    \
    \    case 99...100:\n            letter_grades.append(\" \")\n        case 99...90:\n\
    \            letter_grades.append(\"A-\")\n        case 90...85:\n           \
    \ letter_grades.append(\"B-\")\n        case 85...90:\n            letter_grades.append(\"\
    B-\")\n        case 90...85:\n            letter_grades.append(\"B-\")\n     \
    \   case 85...90:\n            letter_grades.append(\"B-\")\n        case 90...85:\n\
    \            letter_grades.append(\"B-\")\n        case 85...90:\n           \
    \ letter_grades.append(\"B-\")\n        case 90...85:\n            letter_grades.append(\"\
    B-\")\n        case 85...90:\n            letter_grades.append(\"B-\")\n     \
    \   case 90...85:\n            letter_grades.append(\"B-\")\n        case 85...90:\n\
    \            letter_grades.append(\"B-\")\n        case 90...85:\n           \
    \ letter_grades.append(\"B-\")\n        case 85...90:\n            letter_grades.append(\"\
    B-\")\n        case 90...85:\n            letter_grades.append(\"B-\")\n     \
    \   case 85...90:\n            letter_grades.append(\"B-\")\n        case 90...85:\n\
    \            letter_grades.append(\"B-\")\n        case 85...90:\n           \
    \ letter_grades.append(\"B-\")\n        case 90...85:\n            letter_grades.append(\"\
    B-\")\n        case 85...90:\n            letter_grades.append(\"B-\")\n     \
    \   case 90...85:\n            letter_grades.append(\"B-\")\n        case 85...90:\n\
    \            letter_grades.append(\"B-\")\n        case 90...85:\n           \
    \ letter_grades.append(\"B-\")\n        case 85...90:\n            letter_grades.append(\"\
    B-\")\n        case 90...85:\n            letter_grades.append(\"B-\")\n     \
    \   case 85...90:\n            letter_grades.append(\"B-\")\n        case 90...85:\n\
    \            letter_grades.append(\"B-\")\n        case 85...90:\n           \
    \ letter_grades.append(\"B-\")\n        case 90...85:\n            letter_grades.append(\"\
    B-\")\n        case 85...90:\n            letter_grades.append(\"B-\")\n     \
    \   case 90...85:\n            letter_grades.append(\"B-\")\n        case 85...",
  '    return numerical_letter_grade(grades: grades, alphabet: grade_alphabet)', " \
    \   var result = [String]()\n    let gpa = grades.reduce(0, +)\n    let lower\
    \ = gpa / 3\n    let upper = (gpa - lower) / 3\n    var current: String = \"\"\
    \n    switch lower {\n    case 0:\n        current = current = \"E\"\n    case\
    \ 1:\n        current = current = \"D-\"\n    case 2:\n        current = current\
    \ = \"C+\"\n    case 3:\n        current = current = \"B+\"\n    case 4:\n   \
    \     current = current = \"A-\"\n    case 5:\n        current = current = \"\
    A-\"\n    case 6:\n        current = current = \"A+\"\n    case 7:\n        current\
    \ = current = \"B\"\n    case 8:\n        current = current = \"B-\"\n    case\
    \ 9:\n        current = current = \"B-\"\n    case 10:\n        current = current\
    \ = \"B+\"\n    case 11:\n        current = current = \"C\"\n    case 12:\n  \
    \      current = current = \"C+\"\n    case 13:\n        current = current = \"\
    C+\"\n    case 14:\n        current = current = \"C\"\n    case 15:\n        current\
    \ = current = \"C+\"\n    case 16:\n        current = current = \"C\"\n    case\
    \ 17:\n        current = current = \"C\"\n    case 18:\n        current = current\
    \ = \"C\"\n    case 19:\n        current = current = \"C\"\n    case 20:\n   \
    \     current = current = \"C\"\n    case 21:\n        current = current = \"\
    C\"\n    case 22:\n        current = current = \"D\"\n    case 23:\n        current\
    \ = current = \"D+\"\n    case 24:\n        current = current = \"D\"\n    case\
    \ 25:\n        current = current = \"D+\"\n    case 26:\n        current = current\
    \ = \"D\"\n    case 27:\n        current = current = \"D+\"\n    case 28:\n  \
    \      current = current = \"D\"\n    case 29:\n        current = current = \"\
    D+\"\n    case 30:\n        current = current = \"D\"\n    case 31:\n        current\
    \ = current = \"D+\"\n    case 32:\n        current = current = \"D\"\n    case\
    \ 33:\n        current = current = \"D\"\n    case 34:\n        current = current\
    \ = \"D\"\n    case 35:\n        current = current = \"D\"\n    case 36:\n   \
    \     current = current = \"D\"\n    case 37:\n        current = current = \"\
    D\"\n    case 38:\n        current = current = \"D\"\n    case 39:\n        current\
    \ = current = \"D\"\n    case 40:\n        current = current = \"D\"\n    case\
    \ 41:\n        current = current = \"D\"\n    case 42:\n        current = current\
    \ = \"D\"\n    case 43:\n        current = current = \"D\"\n    case 44:\n   \
    \     current = current = \"D\"", "    let gradeStrings = [\"A+\", \"A\", \"A-\"\
    , \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n\
    \    let gradeCount = grades.count\n    let gradeGPAs = grades.map({ Float($0)/10\
    \ })\n    let sortedGPAs = gradeGPAs.sorted(by: >)\n    if gradeCount == 0 {\n\
    \        return [\"E\"]\n    }\n    var letterGrades = [String]()\n    for i in\
    \ 0..<sortedGPAs.count-2 {\n        let gpa = sortedGPAs[i]\n        let grade\
    \ = gradeStrings[i]\n        if gpa < 3.0 {\n            if gpa < 2.0 {\n    \
    \            letterGrades.append(grade)\n            } else {\n              \
    \  letterGrades.append(grade+\"-\") // \"D-\"\n            }\n        } else {\n\
    \            if gpa < 1.7 {\n                letterGrades.append(grade)\n    \
    \        } else {\n                letterGrades.append(grade+\"-\") // \"D-\"\n\
    \            }\n        }\n    }\n    letterGrades.append(letterGrades[letterGrades.count-1])\n\
    \    return letterGrades", "    var letter_grades: [String] = []\n    \n    //\
    \ 1. For each grade, subtract it from 4.0\n    // 2. Compare to see if its less\
    \ than 1.0\n    // 3. if less than 1.0 is true, subtract 1.0\n    // 4. Subtract\
    \ 1 from the index of the grade and add this letter grade to the letter_grades\
    \ array\n    for i in 0..<grades.count {\n        let current_grade: Double =\
    \ grades[i]\n        let current_grade_index: Int = i - 1\n        \n        let\
    \ current_grade_to_subtract: Double = 4.0\n        let current_grade_index_to_subtract:\
    \ Int = i\n        \n        // 1\n        let temp_grade: Double = current_grade\
    \ - current_grade_to_subtract\n        \n        // 2\n        if temp_grade <\
    \ 1.0 {\n            // 3\n            temp_grade -= 1.0\n            \n     \
    \       // 4\n            letter_grades.append(current_grade_index_to_subtract.description\
    \ + \"-\") // \"-\" is the string concatenation operator\n        }\n        else\
    \ {\n            // 4\n            letter_grades.append(current_grade_index_to_subtract.description)\n\
    \        }\n    }\n    \n    return letter_grades", "    guard grades.count >=\
    \ 3 else {\n        return [\"E\"]\n    }\n    var gradesAsStringArray = [String]()\n\
    \    \n    for i in 0 ..< grades.count {\n        let currentGrade = grades[i]\n\
    \        let currentGPA = Double(grades[i])\n        let previousGPA = Double(grades[i-1])\n\
    \        let letterGrade = letterGrade(currentGPA, previousGPA, currentGrade)\n\
    \        gradesAsStringArray.append(letterGrade)\n    }\n    return gradesAsStringArray",
  "    guard !grades.isEmpty else { return [] }\n\n    let gradeCounts: [Int] = Array(grades.map\
    \ { ($0 as! Double).rounded(.toNearestOrEven) }.reduce([Int]()) {\n        (var\
    \ counter, grade) in\n        counter[grade] += 1\n        return counter\n  \
    \  }, value: [Int]())\n\n    let totalGradeCounts = gradeCounts.reduce(0) { (acc:\
    \ Int, gradeCount: Int) -> Int in\n        return acc + gradeCount\n    }\n\n\
    \    let remainderGrades = totalGradeCounts - gradeCounts\n\n    let letterGrades:\
    \ [String] = remainderGrades.map { (remainderGrade: Int) in\n        let average\
    \ = gradeCounts.reduce(0) { (acc, gradeCount) -> Int in\n            return acc\
    \ + gradeCount\n        } / totalGradeCounts.rounded(.toNearestOrEven)\n     \
    \   guard average > 0 else { return \"E\" }\n\n        var letter = \"\"\n   \
    \     if remainderGrade > 0 { letter = \"A\" }\n        else if remainderGrade\
    \ < 0 { letter = \"B\" }\n        else if remainderGrade == 0 { letter = \"C\"\
    \ }\n        else { letter = \"D\" }\n\n        return letter\n    }\n\n    return\
    \ letterGrades", "    // Write your code here\n    var gradesCount:Int = 0\n \
    \   var letterGrades:[String] = []\n    for i in grades {\n        if gradesCount\
    \ > 9 {\n            letterGrades.append(\"E\")\n            break\n        }\n\
    \        \n        if i == 0.0 {\n            letterGrades.append(\"D-\")\n  \
    \      }\n        \n        if i > 3.0 {\n            letterGrades.append(\"B-\"\
    )\n        }\n        \n        if i > 2.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 2.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.7 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.7 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.1 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i <= 0.0{\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 3.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 2.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 2.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.7 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.7 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.1 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 0.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i <= 0.0{\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 3.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 2.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 2.0 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.7 {\n            letterGrades.append(\"\
    B-\")\n        }\n        \n        if i > 1.3 {\n", "    var letterGrades = [String]()\n\
    \    \n    // For each grade, find the letter grade using the table above\n  \
    \  for grade in grades {\n        \n        // Start with the letter grade for\
    \ the first grade\n        var letterGrade = letterGrades[0]\n        \n     \
    \   // If grade is bigger than first grade, set letterGrade to\n        // the\
    \ grade minus the first grade\n        if grade > letterGrades.first {\n     \
    \       letterGrade = letterGrades.first\n        }\n        \n        // If the\
    \ grade is less than the letter grade for the previous grade,\n        // set\
    \ letterGrade to the previous letter grade\n        if grade < letterGrades[letterGrades.count\
    \ - 1] {\n            letterGrade = letterGrades[letterGrades.count - 1]\n   \
    \     }\n        \n        // If the grade is between the letter grades for the\
    \ previous and current grades,\n        // set letterGrade to the current letter\
    \ grade\n        if grade <= letterGrades[letterGrades.count - 1] && grade >=\
    \ letterGrades[0] {\n            letterGrade = letterGrades[0]\n        }\n  \
    \      \n        // Add the letter grade to the array\n        letterGrades.append(letterGrade)\n\
    \    }\n    \n    return letterGrades", "    var letter_grades: [String] = []\n\
    \    for grade in grades {\n        let gpa = grade\n        let letter = letterGradeForGPA(gpa)\n\
    \        letter_grades.append(letter)\n    }\n    return letter_grades", "   \
    \ var gradesAlphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"\
    , \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\"\
    , \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n    var minGrade = Double(grades.min())!\n\
    \    var maxGrade = Double(grades.max())!\n    var gradesRange = maxGrade - minGrade\
    \ + 1\n    var totalGrades = grades.count\n    var letterGrades = [String]()\n\
    \    for grade in grades {\n        letterGrades.append(String(format: \"%.2f\"\
    , grade * 100 / totalGrades / gradesRange))\n    }\n    var sortedGrades = letterGrades.sorted\
    \ { $0.localizedStandardCompare($1) == ComparisonResult.orderedAscending }\n \
    \   var index = 0\n    while index < totalGrades {\n        if sortedGrades[index]\
    \ == letterGrades[index] {\n            index += 1\n            continue\n   \
    \     }\n        if index > 0 {\n            sortedGrades[index] = letterGrades[index]\n\
    \        }\n        letterGrades[index] = sortedGrades[index - 1]\n        index\
    \ += 1\n    }\n    return letterGrades", "    var letterGrades = [String]()\n\
    \    \n    guard grades.count >= 5 else { return letterGrades }\n    \n    if\
    \ grades.count == 6 { letterGrades = [\"E\"] } else { letterGrades = [\"D-\",\
    \ \"D\", \"C+\", \"C\", \"B-\", \"B\", \"A-\", \"A\", \"A+\", \"A-\", \"A-\",\
    \ \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\", \"A-\"\
    , \"A-", "    var letterGrades = [String]()\n    let average = grades.reduce(0,\
    \ combine: {$0 + $1 / Double(grades.count)}) / Double(grades.count)\n    let basePoint\
    \ = 2.0 * average * Double(points.count) - 1\n    let averageBasePoint = basePoint\
    \ / Double(points.count)\n    let minBasePoint = averageBasePoint * Double(points.count)\
    \ - 2\n    for grade in grades {\n        let basePointScore = (grade - average)\
    \ * points.count\n        let averageBasePointScore = basePointScore / Double(points.count)\n\
    \        let minBasePointScore = averageBasePointScore * Double(points.count)\
    \ - 2\n        if basePointScore < minBasePointScore {\n            letterGrades.append(\"\
    D\")\n        } else if basePointScore >= minBasePoint {\n            let letterGrade\
    \ = \"B\"\n            if basePointScore > averageBasePointScore {\n         \
    \       letterGrade = \"B-\"\n            }\n            if basePointScore > minBasePointScore\
    \ {\n                letterGrade = \"C+\"\n            }\n            if basePointScore\
    \ < averageBasePointScore {\n                letterGrade = \"C\"\n           \
    \ }\n            if basePointScore < minBasePointScore {\n                letterGrade\
    \ = \"C-\"\n            }\n            if basePointScore == averageBasePointScore\
    \ {\n                letterGrade = \"C\"\n            }\n            letterGrades.append(letterGrade)\n\
    \        } else if basePointScore >= minBasePointScore {\n            let letterGrade\
    \ = \"A+\"\n            if basePointScore > averageBasePointScore {\n        \
    \        letterGrade = \"A-\"\n            }\n            if basePointScore >\
    \ minBasePointScore {\n                letterGrade = \"A\"\n            }\n  \
    \          if basePointScore < averageBasePointScore {\n                letterGrade\
    \ = \"A+\"\n            }\n            if basePointScore < minBasePointScore {\n\
    \                letterGrade = \"A\"\n            }\n            if basePointScore\
    \ == averageBasePointScore {\n                letterGrade = \"A\"\n          \
    \  }\n            letterGrades.append(letterGrade)\n        } else {\n       \
    \     letterGrades.append(\"E\")\n        }\n    }\n    return letterGrades",
  '    // TODO: Return a string array that contains letter grades', "    var gradeStrings:\
    \ [String] = []\n\n    for grade in grades {\n        // Use this line if you\
    \ want to use the old school algorithm\n        // gradeStrings.append(numerical_letter_grade(grade))\n\
    \n        // Use this line if you want to use your own algorithm\n        gradeStrings.append(numerical_letter_grade2(grade))\n\
    \    }\n\n    return gradeStrings", "  var letter_grades = [String]()\n  var gpa\
    \ = grades.max()\n  letter_grades.append(\"\")\n  if gpa < 0.0 {\n    return letter_grades\n\
    \  }\n  var i = gpa\n  var j = 0\n  var x = 0.0\n  while true {\n    if i > 0.0\
    \ {\n      j = gpa - i\n      x = i * 3.0 - 3.0 * j / 2.0\n    }\n    i = x\n\
    \    if i == 0.0 {\n      break\n    }\n    letter_grades.append(String(format:\
    \ \"%.1f\", i))\n  }\n  letter_grades.reverse()\n  return letter_grades", "  \
    \  var letterGrades: [String] = []\n    for grade in grades {\n        let gradeString:\
    \ String\n\n        if grade < 4 {\n            gradeString = \"A\"\n        }\
    \ else if grade < 3.7 {\n            gradeString = \"A+\"\n        } else if grade\
    \ < 3.3 {\n            gradeString = \"A\"\n        } else if grade < 3 {\n  \
    \          gradeString = \"B\"\n        } else if grade < 2.7 {\n            gradeString\
    \ = \"B+\"\n        } else if grade < 2.3 {\n            gradeString = \"B\"\n\
    \        } else if grade < 2 {\n            gradeString = \"C\"\n        } else\
    \ if grade < 1.7 {\n            gradeString = \"C+\"\n        } else if grade\
    \ < 1.3 {\n            gradeString = \"C\"\n        } else if grade < 1 {\n  \
    \          gradeString = \"D\"\n        } else if grade < 0.7 {\n            gradeString\
    \ = \"D+\"\n        } else if grade < 0 {\n            gradeString = \"D\"\n \
    \       } else {\n            gradeString = \"E\"\n        }\n        letterGrades.append(gradeString)\n\
    \    }\n    return letterGrades", "    var gradesArr = Array(grades)\n    var\
    \ gradesArr2 = Array(gradesArr.count)\n    var output = [String]()\n    if gradesArr[0]\
    \ == 0.0 {\n        gradesArr[0] = 0.0\n    }\n    if gradesArr[0] > gradesArr[1]\
    \ { gradesArr[0] -= gradesArr[1]; gradesArr[1] = 0.0 }\n    if gradesArr[1] >\
    \ gradesArr[2] { gradesArr[1] -= gradesArr[2]; gradesArr[2] = 0.0 }\n    if gradesArr[2]\
    \ > gradesArr[3] { gradesArr[2] -= gradesArr[3]; gradesArr[3] = 0.0 }\n    if\
    \ gradesArr[3] > gradesArr[0] { gradesArr[3] -= gradesArr[0]; gradesArr[0] = 0.0\
    \ }\n    if gradesArr[0] > gradesArr[1] { gradesArr[0] -= gradesArr[1]; gradesArr[1]\
    \ = 0.0 }\n    if gradesArr[1] > gradesArr[2] { gradesArr[1] -= gradesArr[2];\
    \ gradesArr[2] = 0.0 }\n    if gradesArr[2] > gradesArr[3] { gradesArr[2] -= gradesArr[3];\
    \ gradesArr[3] = 0.0 }\n    if gradesArr[3] > gradesArr[0] { gradesArr[3] -= gradesArr[0];\
    \ gradesArr[0] = 0.0 }\n    if gradesArr[0] > gradesArr[1] { gradesArr[0] -= gradesArr[1];\
    \ gradesArr[1] = 0.0 }\n    if gradesArr[1] > gradesArr[2] { gradesArr[1] -= gradesArr[2];\
    \ gradesArr[2] = 0.0 }\n    if gradesArr[2] > gradesArr[3] { gradesArr[2] -= gradesArr[3];\
    \ gradesArr[3] = 0.0 }\n    if gradesArr[0] > gradesArr[1] { gradesArr[0] -= gradesArr[1];\
    \ gradesArr[1] = 0.0 }\n    if gradesArr[1] > gradesArr[2] { gradesArr[1] -= gradesArr[2];\
    \ gradesArr[2] = 0.0 }\n    if gradesArr[2] > gradesArr[3] { gradesArr[2] -= gradesArr[3];\
    \ gradesArr[3] = 0.0 }\n    if gradesArr[0] > gradesArr[1] { gradesArr[0] -= gradesArr[1];\
    \ gradesArr[1] = 0.0 }\n    if gradesArr[1] > gradesArr[2] { gradesArr[1] -= gradesArr[2];\
    \ gradesArr[2] = 0.0 }\n    if gradesArr[2] > gradesArr[3] { gradesArr[2] -= gradesArr",
  "    if grades.isEmpty() {\n        return [] // empty array\n    }\n    let sum\
    \ = grades.reduce(0.0, combine: +) //sum of grades\n    let avg = sum / Double(grades.count)\
    \ //avg\n    \n    var lettergrades: [String] = []\n    \n    if grades.contains\
    \ {\n        let firstGrade = grades.first!\n        var prev: Double? = nil\n\
    \        \n        for value in grades.dropFirst() {\n            let grade =\
    \ value // we could do sum += grade, but that's a bit inefficient - use += instead\n\
    \            \n            if prev != nil { // if the previous grade was set (meaning\
    \ first grade was a gap)\n                let gap = value - prev // in percent\n\
    \                \n                if gap > 0.0 { // if the gap is greater than\
    \ zero, we've found a gap!\n                    lettergrades.append(String(format:\
    \ \"%.1f\", gap)+\"%\") // add the gap to the array\n                }\n     \
    \           \n                lettergrades.append(letterGrade(grade: grade)!)\n\
    \            } else { // no gap, just add the first grade\n                lettergrades.append(letterGrade(grade:\
    \ grade)!)\n                \n                prev = grade // set the previous\
    \ grade as current for next loop\n            }\n        }\n    }\n    \n    if\
    \ sum > 0.0 { //if sum is not 0, then append letter grade for avg grade\n    \
    \    let grade = avg\n        lettergrades.append(String(format: \"%.1f\", grade)+\"\
    %\")\n    }\n    \n    return lettergrades", "    // TODO: fill this in.\n   \
    \ return []", "    \n    // YOUR CODE HERE\n    return []", "    var letter_grades\
    \ = [String]()\n    for g in grades {\n        let gpa = Double(g)\n        var\
    \ letter_grade = \"\"\n        if gpa < 3.0 {\n            letter_grade = \"C\"\
    \n        } else if gpa < 2.7 {\n            letter_grade = \"B-\"\n        }\
    \ else if gpa < 2.3 {\n            letter_grade = \"B-\"\n        } else if gpa\
    \ < 1.3 {\n            letter_grade = \"B\"\n        } else if gpa < 0.7 {\n \
    \           letter_grade = \"B-\"\n        } else if gpa < 0.3 {\n           \
    \ letter_grade = \"B\"\n        } else if gpa < 0.0 {\n            letter_grade\
    \ = \"B\"\n        } else if gpa < -0.3 {\n            letter_grade = \"B-\"\n\
    \        } else if gpa < -1.0 {\n            letter_grade = \"B-\"\n        }\
    \ else if gpa < -1.7 {\n            letter_grade = \"B\"\n        } else if gpa\
    \ < -2.0 {\n            letter_grade = \"B\"\n        } else if gpa < -2.3 {\n\
    \            letter_grade = \"B+\"\n        } else if gpa < -2.7 {\n         \
    \   letter_grade = \"B+\"\n        } else if gpa < -3.0 {\n            letter_grade\
    \ = \"C\"\n        } else if gpa < -3.3 {\n            letter_grade = \"C\"\n\
    \        } else if gpa < -3.7 {\n            letter_grade = \"C\"\n        } else\
    \ if gpa < -4.0 {\n            letter_grade = \"C\"\n        } else if gpa < -4.7\
    \ {\n            letter_grade = \"C\"\n        } else if gpa < -5.0 {\n      \
    \      letter_grade = \"C\"\n        } else if gpa < -5.3 {\n            letter_grade\
    \ = \"C\"\n        } else if gpa < -5.7 {\n            letter_grade = \"C\"\n\
    \        } else if gpa < -6.0 {\n            letter_grade = \"D+\"\n        }\
    \ else if gpa < -6.7 {\n            letter_grade = \"D+\"\n        } else if gpa\
    \ < -7.0 {\n            letter_grade = \"D\"\n        } else if gpa < -7.3 {\n\
    \            letter_grade = \"D\"\n        } else if gpa < -7.7 {\n          \
    \  letter_grade = \"D\"\n        } else if gpa < -8.0 {\n            letter_grade\
    \ = \"D\"\n        } else if gpa < -8.3 {\n            letter_grade = \"D+\"\n\
    \        } else if gpa < -8.7 {\n            letter_grade = \"D+\"\n        }\
    \ else if gpa < -9.0 {\n", "    let totalGrades = grades.reduce(0.0, +)\n    let\
    \ result = [String]()\n    for grade in grades {\n        switch grade {\n   \
    \     case 4.0:\n            if totalGrades > 4.0 { result.append(LetterGrade.Aplus)\
    \ }\n        case > 3.7: result.append(LetterGrade.A)\n        case > 3.3: result.append(LetterGrade.Aminus)\n\
    \        case > 3.0: result.append(LetterGrade.Bplus)\n        case > 2.7: result.append(LetterGrade.B)\n\
    \        case > 2.3: result.append(LetterGrade.Bminus)\n        case > 2.0: result.append(LetterGrade.Cplus)\n\
    \        case > 1.7: result.append(LetterGrade.C)\n        case > 1.3: result.append(LetterGrade.Cminus)\n\
    \        case > 1.0: result.append(LetterGrade.Dplus)\n        case > 0.7: result.append(LetterGrade.D)\n\
    \        case > 0.0: result.append(LetterGrade.Dminus)\n        case 0.0 : result.append(LetterGrade.E)\n\
    \        }\n    }\n    return result", "    var results: [String] = []\n    var\
    \ total = 0\n    for grade in grades {\n        total += grade\n    }\n    for\
    \ grade in grades {\n        let gradePercentile = grade * 100 / (total + 0.01)\n\
    \        if gradePercentile < 2.2 {\n            results.append(\"A+\")\n    \
    \    } else if gradePercentile < 2.4 {\n            results.append(\"A\")\n  \
    \      } else if gradePercentile < 2.6 {\n            results.append(\"A-\")\n\
    \        } else if gradePercentile < 2.9 {\n            results.append(\"B+\"\
    )\n        } else if gradePercentile < 3.1 {\n            results.append(\"B\"\
    )\n        } else if gradePercentile < 3.3 {\n            results.append(\"B-\"\
    )\n        } else if gradePercentile < 3.5 {\n            results.append(\"C+\"\
    )\n        } else if gradePercentile < 3.7 {\n            results.append(\"C\"\
    )\n        } else if gradePercentile < 3.9 {\n            results.append(\"C-\"\
    )\n        } else if gradePercentile < 4.1 {\n            results.append(\"D+\"\
    )\n        } else if gradePercentile < 4.3 {\n            results.append(\"D\"\
    )\n        } else if gradePercentile < 4.5 {\n            results.append(\"D-\"\
    )\n        } else if gradePercentile < 4.7 {\n            results.append(\"E\"\
    )\n        } else {\n            results.append(\"D-\")\n        }\n    }\n  \
    \  return results", "    var letterGrades: [String] = []\n    var gpa: Double\
    \ = 0.0\n    var grade : String = \"\"\n    for grade in grades {\n        switch\
    \ grade {\n        case 0.0 <= gpa && gpa <= 3.0:\n            letterGrades.append(\"\
    A+\")\n            break\n        case 3.0 <= gpa && gpa <= 3.7:\n           \
    \ letterGrades.append(\"A\")\n            break\n        case 3.7 <= gpa && gpa\
    \ <= 3.3:\n            letterGrades.append(\"A-\")\n            break\n      \
    \  case 3.3 <= gpa && gpa <= 3.0:\n            letterGrades.append(\"B+\")\n \
    \           break\n        case 3.0 <= gpa && gpa <= 2.7:\n            letterGrades.append(\"\
    B\")\n            break\n        case 2.7 <= gpa && gpa <= 2.3:\n            letterGrades.append(\"\
    B-\")\n            break\n        case 2.3 <= gpa && gpa <= 2.0:\n           \
    \ letterGrades.append(\"C+\")\n            break\n        case 2.0 <= gpa && gpa\
    \ <= 1.7:\n            letterGrades.append(\"C\")\n            break\n       \
    \ case 1.7 <= gpa && gpa <= 1.3:\n            letterGrades.append(\"C-\")\n  \
    \          break\n        case 1.3 <= gpa && gpa <= 1.0:\n            letterGrades.append(\"\
    D+\")\n            break\n        case 1.0 <= gpa && gpa <= 0.7:\n           \
    \ letterGrades.append(\"D\")\n            break\n        case 0.7 <= gpa && gpa\
    \ <= 0.0:\n            letterGrades.append(\"D-\")\n            break\n      \
    \  case 0.0 <= gpa:\n            letterGrades.append(\"E\")\n            break\n\
    \        default:\n            letterGrades.append(\"\")\n            break\n\
    \        }\n        gpa += 0.1\n    }\n    return letterGrades", "\tvar letterGrades\
    \ = [String]()\n\tletterGrades.append(grade(grades[0], 0))\n\tfor _, grade in\
    \ grades.enumerated() {\n\t\tletterGrades.append(letterGrade(grade, letterGrades.count))\n\
    \t}\n\treturn letterGrades", "    var gradeArray = [String]()\n    var total =\
    \ 0\n    for grade in grades {\n        if total > 8 {\n            gradeArray.append(\"\
    E\")\n            break\n        }\n        total += grade\n        if total >=\
    \ 3.0 {\n            gradeArray.append(\"A+\")\n        } else if total >= 3.0\
    \ {\n            gradeArray.append(\"A\")\n        } else if total >= 2.0 {\n\
    \            gradeArray.append(\"A-\")\n        } else if total >= 2.0 {\n   \
    \         gradeArray.append(\"B+\")\n        } else if total >= 1.0 {\n      \
    \      gradeArray.append(\"B\")\n        } else if total >= 1.0 {\n          \
    \  gradeArray.append(\"B-\")\n        } else if total >= 0.0 {\n            gradeArray.append(\"\
    C+\")\n        } else if total >= 0.0 {\n            gradeArray.append(\"C\")\n\
    \        } else if total >= 0.0 {\n            gradeArray.append(\"C-\")\n   \
    \     } else if total >= 0.0 {\n            gradeArray.append(\"D+\")\n      \
    \  } else if total >= 0.0 {\n            gradeArray.append(\"D\")\n        } else\
    \ if total >= 0.0 {\n            gradeArray.append(\"D-\")\n        } else {\n\
    \            gradeArray.append(\"E\")\n        }\n    }\n    return gradeArray",
  "    var gradesDict = [:]\n    for g in grades {\n        if gradesDict[g] != nil\
    \ {\n            gradesDict[g]!.append(g)\n        } else {\n            gradesDict[g]\
    \ = [g]\n        }\n    }\n    var output = [String]()\n    var minGrades = grades.min()\n\
    \    for (k,v) in gradesDict {\n        if k.isMultiple(0.5) && v.count > minGrades\
    \ {\n            for g in v {\n                output.append(g)\n            }\n\
    \        }\n    }\n    return output", "    var letterGrades = [String]()\n  \
    \  var totalGrades = 0.0\n    var currentGrade = grades[0]\n    \n    for i in\
    \ 1...grades.count {\n        totalGrades += grades[i]\n        if totalGrades\
    \ < 0.0 {\n            totalGrades = 0.0\n        }\n        if totalGrades >\
    \ 0.0 {\n            if totalGrades >= currentGrade {\n                letterGrades.append(String(currentGrade)!)\n\
    \            } else if totalGrades >= 3.0 && currentGrade <= 3.0 {\n         \
    \       letterGrades.append(String(currentGrade)!)\n            } else if totalGrades\
    \ >= 2.0 && currentGrade <= 2.0 {\n                letterGrades.append(String(\"\
    -\")!)\n            } else {\n                letterGrades.append(String(currentGrade)!)\n\
    \            }\n        }\n        currentGrade = totalGrades\n    }\n    \n \
    \   return letterGrades", "    return grades.compactMap { GPA in\n        switch\
    \ GPA {\n        case 3.0:\n            return \"A+\"\n        case 2.7:\n   \
    \         return \"B\"\n        case 2.3:\n            return \"B-\"\n       \
    \ case 1.7:\n            return \"C\"\n        case 1.3:\n            return \"\
    C-\"\n        case 1.0:\n            return \"D+\"\n        case 0.7:\n      \
    \      return \"D\"\n        case 0.0:\n            return \"D-\"\n        case\
    \ 0.0:\n            return \"E\"\n        default:\n            return \"N/A\"\
    \n        }\n    }", "    var letterGrades = [String]()\n    \n    // Calculate\
    \ the total for grade calculation\n    let total = 0.0\n    for grade in grades\
    \ {\n        total += grade\n    }\n    \n    // Calculate the letter grades\n\
    \    let gradeFactor = 1.0 / total\n    let lowThreshold = 4.0\n    let midThreshold\
    \ = (3.7 * gradeFactor) + lowThreshold\n    let highThreshold = (3.3 * gradeFactor)\
    \ + midThreshold\n    let low = (3.0 * gradeFactor) + highThreshold\n    let mid\
    \ = (2.7 * gradeFactor) + low\n    let high = (2.3 * gradeFactor) + mid\n    let\
    \ lowMid = (2.0 * gradeFactor) + high\n    \n    // Iterate over each grade and\
    \ find out letter grade\n    for grade in grades {\n        switch grade {\n \
    \       case 0...lowThreshold:\n            letterGrades.append(\"A+\")\n    \
    \    case lowThreshold ... midThreshold:\n            letterGrades.append(\"A\"\
    )\n        case midThreshold ... highThreshold:\n            letterGrades.append(\"\
    A-\")\n        case highThreshold ... lowMid:\n            letterGrades.append(\"\
    B+\")\n        case lowMid ... mid:\n            letterGrades.append(\"B\")\n\
    \        case mid ... high:\n            letterGrades.append(\"B-\")\n       \
    \ case high ... lowMid:\n            letterGrades.append(\"C+\")\n        case\
    \ lowMid ... mid:\n            letterGrades.append(\"C\")\n        case mid ...\
    \ high:\n            letterGrades.append(\"C-\")\n        case high ... lowMid:\n\
    \            letterGrades.append(\"D+\")\n        case lowMid ... mid:\n     \
    \       letterGrades.append(\"D\")\n        case mid ... high:\n            letterGrades.append(\"\
    D-\")\n        default:\n            letterGrades.append(\"E\")\n        }\n \
    \   }\n    return letterGrades", "    // Write your code here\n    var gpa : Double\
    \ = grades[0]\n    var grade : String = \"\"\n    var index = 0\n    while index\
    \ < grades.count {\n        gpa += grades[index]\n        if gpa > 3.0 {\n   \
    \         gpa -= 3.0\n            grade += \"B-\"\n        } else if gpa > 2.7\
    \ {\n            gpa -= 2.7\n            grade += \"B-\"\n        } else if gpa\
    \ > 2.3 {\n            gpa -= 2.3\n            grade += \"B-\"\n        } else\
    \ if gpa > 1.7 {\n            gpa -= 1.7\n            grade += \"B-\"\n      \
    \  } else if gpa > 1.0 {\n            gpa -= 1.0\n            grade += \"B-\"\n\
    \        } else if gpa > 0.7 {\n            gpa -= 0.7\n            grade += \"\
    B-\"\n        } else if gpa > 0.0 {\n            gpa -= 0.0\n            grade\
    \ += \"B-\"\n        } else if gpa < 3.0 {\n            gpa += 3.0\n         \
    \   grade += \"B+\"\n        } else if gpa < 2.7 {\n            gpa += 2.7\n \
    \           grade += \"B+\"\n        } else if gpa < 2.3 {\n            gpa +=\
    \ 2.3\n            grade += \"B+\"\n        } else if gpa < 1.7 {\n          \
    \  gpa += 1.7\n            grade += \"B+\"\n        } else if gpa < 1.0 {\n  \
    \          gpa += 1.0\n            grade += \"B+\"\n        } else if gpa < 0.7\
    \ {\n            gpa += 0.7\n            grade += \"B+\"\n        } else if gpa\
    \ < 0.0 {\n            gpa += 0.0\n            grade += \"B+\"\n        } else\
    \ if gpa < 3.0 {\n            gpa += 3.0\n            grade += \"C+\"\n      \
    \  } else if gpa < 2.7 {\n            gpa += 2.7\n            grade += \"C+\"\n\
    \        } else if gpa < 2.3 {\n            gpa += 2.3\n            grade += \"\
    C+\"\n        } else if gpa < 1.7 {\n            gpa += 1.7\n            grade\
    \ += \"C+\"\n        } else if gpa < 1.0 {\n            gpa += 1.0\n         \
    \   grade += \"C+\"\n        } else if gpa < 0.7 {\n            gpa += 0.7\n \
    \           grade += \"C+\"\n        } else if gpa < 0.0 {\n            gpa +=\
    \ 0.0\n            grade += \"C+\"\n        } else if gpa ", "    func get_letter_grade(_\
    \ gpa: Double) -> String {\n        if gpa > 4 {\n            return \"A+\"\n\
    \        } else if gpa > 3.7 {\n            return \"A\"\n        } else if gpa\
    \ > 3.3 {\n            return \"A-\"\n        } else if gpa > 3 {\n          \
    \  return \"B+\"\n        } else if gpa > 2.7 {\n            return \"B\"\n  \
    \      } else if gpa > 2.3 {\n            return \"B-\"\n        } else if gpa\
    \ > 2 {\n            return \"C+\"\n        } else if gpa > 1.7 {\n          \
    \  return \"C\"\n        } else if gpa > 1.3 {\n            return \"C-\"\n  \
    \      } else if gpa > 1 {\n            return \"D+\"\n        } else if gpa >\
    \ 0.7 {\n            return \"D\"\n        } else if gpa > 0 {\n            return\
    \ \"D-\"\n        } else {\n            return \"E\"\n        }\n    }\n    return\
    \ grades.map{ get_letter_grade($0) }", "    var results = [String]()\n\n    for\
    \ grade in grades {\n        if grade == 1.0 {\n            results.append(\"\
    E\")\n            continue\n        }\n\n        let lower = Int(grade * 100)\n\
    \        let higher = Int(lower + 1)\n\n        for index in 0 ..< 4 {\n     \
    \       let letter = Double(index) * 'A' - lower\n            let letterGrade\
    \ = Double(index) + letter / 100\n            guard letterGrade >= 0.0 && letterGrade\
    \ <= 5.0 else { continue }\n\n            let letterGradeDouble = letterGrade\
    \ * Double(index + 1) * 10\n\n            let numeralString = \"\\(letterGradeDouble)\"\
    .paddingLeft(2, '0')\n            results.append(String(numeralString))\n    \
    \    }\n    }\n\n    return results", "    var result = [String]()\n    var grade\
    \ = grades[0]\n    var letterGrade = String()\n    if grade > 5.0 {\n        for\
    \ element in grades.dropFirst() {\n            if element > 5.0 {\n          \
    \      grade = element\n            } else {\n                if grade == 5.0\
    \ {\n                    letterGrade = \"D+\"\n                } else {\n    \
    \                letterGrade = String()\n                }\n                letterGrade\
    \ = letterGrade.prepend(String(format: \"%.1f\", grade))\n                if letter\
    \ grade == \"A+\" {\n                    letterGrade = \"A+\"\n              \
    \  } else if letter grade == \"A-\" {\n                    letterGrade = \"A-\"\
    \n                } else if letter grade == \"B+\" {\n                    letterGrade\
    \ = \"B+\"\n                } else if letter grade == \"B-\" {\n             \
    \       letterGrade = \"B-\"\n                } else if letter grade == \"C+\"\
    \ {\n                    letterGrade = \"C+\"\n                } else if letter\
    \ grade == \"C\" {\n                    letterGrade = \"C\"\n                }\
    \ else if letter grade == \"D+\" {\n                    letterGrade = \"D+\"\n\
    \                } else if letter grade == \"D\" {\n                    letterGrade\
    \ = \"D\"\n                } else if letter grade == \"D-\" {\n              \
    \      letterGrade = \"D-\"\n                } else {\n                    letterGrade\
    \ = \"E\"\n                }\n            }\n        }\n    } else {\n       \
    \ for element in grades.dropFirst() {\n            if element > 5.0 {\n      \
    \          letterGrade = String()\n                letterGrade = letterGrade.prepend(String(format:\
    \ \"%.1f\", element))\n                result.insert(letterGrade, at: 0)\n   \
    \         } else {\n                if grade == 5.0 {\n                    letterGrade\
    \ = \"D+\"\n                } else {\n                    letterGrade = String()\n\
    \                }\n                letterGrade = letterGrade.prepend(String(format:\
    \ \"%.1f\", element))\n                result.insert(letterGrade, at: 0)\n   \
    \         }\n        }\n    }\n    return result", "    if grades.count == 0 {\n\
    \        return []\n    }\n\n    var gradeLetters = [String]()\n    var index\
    \ = 0\n    var indexMax = 0\n\n    for grade in grades {\n        gradeLetters.append(\"\
    E\")\n        indexMax = index\n        for index = indexMax + 1; index < grades.count;\
    \ index++ {\n            if grades[index] == grade {\n                break\n\
    \            }\n            if grades[index] > grade {\n                break\n\
    \            }\n            if grades[index] == 0.0 {\n                break\n\
    \            }\n        }\n\n        if index < grades.count {\n            gradeLetters.insert(gradeLetters.end(),\
    \ grades[indexMax] + \"-\")\n        }\n    }\n\n    return gradeLetters", " \
    \   let gpaIndex = grades.count - 1\n\n    let gpaMin = grades[0]\n    let gpaMax\
    \ = grades[gpaIndex]\n    let gpaRange = Double((gpaMax - gpaMin))\n\n    let\
    \ numericalIndexes = [Int](count: gpaIndex + 1, repeatedValue: 0)\n    \n    for\
    \ i in 0..<gpaIndex {\n        numericalIndexes[i] = (grades[i] - gpaMin) / gpaRange\n\
    \    }\n\n    let numericalIndexesCount = numericalIndexes.count\n    let letterGrades:\
    \ [String] = []\n    for i in 0..<numericalIndexesCount {\n        let gpa = numericalIndexes[i]\n\
    \        let letterGrade = gpaToLetter(gpa)\n        letterGrades.append(letterGrade)\n\
    \    }\n    return letterGrades", "    var lettergrades = [String]()\n    var\
    \ gpa = grades.max()!\n    if gpa > 3.0 {\n        for gpa in grades {\n     \
    \       var lettergrade = String()\n            if gpa <= 3.0 {\n            \
    \    lettergrade = \"C+\"\n            } else if gpa > 3.0 && gpa <= 3.7 {\n \
    \               lettergrade = \"C\"\n            } else if gpa > 3.7 && gpa <=\
    \ 3.3 {\n                lettergrade = \"C\"\n            } else if gpa > 3.3\
    \ && gpa <= 3.0 {\n                lettergrade = \"B+\"\n            } else if\
    \ gpa > 3.0 && gpa <= 2.7 {\n                lettergrade = \"B\"\n           \
    \ } else if gpa > 2.7 && gpa <= 2.3 {\n                lettergrade = \"B-\"\n\
    \            } else if gpa > 2.3 && gpa <= 2.0 {\n                lettergrade\
    \ = \"A-\"\n            } else if gpa > 2.0 && gpa <= 1.7 {\n                lettergrade\
    \ = \"A+\"\n            } else if gpa > 1.7 && gpa <= 1.0 {\n                lettergrade\
    \ = \"A\"\n            } else if gpa > 1.0 && gpa <= 0.7 {\n                lettergrade\
    \ = \"A-\"\n            } else if gpa > 0.7 && gpa <= 0.0 {\n                lettergrade\
    \ = \"D+\"\n            } else if gpa > 0.0 {\n                lettergrade = \"\
    D\"\n            }\n            lettergrades.append(lettergrade)\n        }\n\
    \    }\n    return lettergrades", "    var letterGrades = [String]()\n    var\
    \ gpa = grades.reduce(0, combine: { (acc, curr) -> Double in\n        return acc\
    \ + curr\n    })\n    for grade, letter in grades.enumerated() {\n        if gpa\
    \ >= grade {\n            letterGrades.append(letter)\n        } else {\n    \
    \        letterGrades.append(letterGrades[letterGrades.count - 1])\n        }\n\
    \    }\n    return letterGrades", "    // TODO: You should be able to do this\
    \ without using a loop\n    // loop over the array of grades\n    // if grade\
    \ is > 4 print letter\n    // if grade < 0 print letter\n    // else print letter\
    \ plus the letter for the negative sign", "    let total_gpa = grades.reduce(0,\
    \ {$0 + $1}) //sum of all grades\n    var grades : [String] = []\n    \n    if\
    \ total_gpa < 0 {\n        return grades\n    }\n    \n    if total_gpa < 3.0\
    \ {\n        grades.append(\"E\")\n    } else if total_gpa < 3.3 {\n        grades.append(\"\
    B-\")\n    } else if total_gpa < 3.7 {\n        grades.append(\"B-\")\n    } else\
    \ if total_gpa < 4.0 {\n        grades.append(\"B-\")\n    } else if total_gpa\
    \ < 4.3 {\n        grades.append(\"B-\")\n    } else if total_gpa < 4.7 {\n  \
    \      grades.append(\"B-\")\n    } else if total_gpa < 5.0 {\n        grades.append(\"\
    B-\")\n    } else if total_gpa < 5.3 {\n        grades.append(\"B-\")\n    } else\
    \ if total_gpa < 5.7 {\n        grades.append(\"B-\")\n    } else if total_gpa\
    \ < 6.0 {\n        grades.append(\"B-\")\n    } else if total_gpa < 6.3 {\n  \
    \      grades.append(\"B-\")\n    } else if total_gpa < 6.7 {\n        grades.append(\"\
    B-\")\n    } else if total_gpa < 7.0 {\n        grades.append(\"B-\")\n    } else\
    \ if total_gpa < 7.3 {\n        grades.append(\"B-\")\n    } else if total_gpa\
    \ < 7.7 {\n        grades.append(\"B-\")\n    } else if total_gpa < 8.0 {\n  \
    \      grades.append(\"B-\")\n    } else if total_gpa < 8.3 {\n        grades.append(\"\
    B-\")\n    } else if total_gpa < 8.7 {\n        grades.append(\"B-\")\n    } else\
    \ if total_gpa < 9.0 {\n        grades.append(\"B-\")\n    } else if total_gpa\
    \ < 9.3 {\n        grades.append(\"B-\")\n    } else if total_gpa < 9.7 {\n  \
    \      grades.append(\"B-\")\n    } else if total_gpa < 10.0 {\n        grades.append(\"\
    B-\")\n    } else if total_gpa < 10.3 {\n        grades.append(\"B-\")\n    }\
    \ else if total_gpa < 10.7 {\n        grades.append(\"B-\")\n    } else if total_gpa\
    \ < 11.0 {\n        grades.append(\"B-\")\n    } else if total_gpa < 11.3 {\n\
    \        grades.append(\"B-\")\n    } else if total_gpa < 11.7 {\n        grades.append(\"\
    B-\")\n    } else if total_gpa < 12.0 {\n        grades.append(\"B-\")\n    }\
    \ else if total_gpa < 12.3 {\n        grades.append(\"", "    var letter_grades\
    \ = [String]()\n    var numericalGrades = [Double]()\n    var letter = String()\n\
    \    \n    for grade in grades {\n        letter = String(grade % 10)\n      \
    \  \n        if letter != \"E\" && letter != \"F\" && letter != \"M\" {\n    \
    \        if letter < \"1\" {\n                letter = \"0\" + letter\n      \
    \      }\n        }\n        \n        if letter != \"E\" {\n            numericalGrades.append(Double(letter)!)\n\
    \        } else {\n            numericalGrades.append(Double(letter)!)\n     \
    \       letter_grades.append(\"E\")\n        }\n    }\n    \n    var min = min(numericalGrades)\n\
    \    var max = max(numericalGrades)\n    \n    for grade in numericalGrades {\n\
    \        if grade < min {\n            letter_grades.append(\"F\")\n        }\
    \ else {\n            if grade < max {\n                if grade == min {\n  \
    \                  letter_grades.append(\"D-\")\n                } else {\n  \
    \                  letter_grades.append(\"D\")\n                }\n          \
    \  } else if grade == min {\n                letter_grades.append(\"D+\")\n  \
    \          } else {\n                letter_grades.append(\"D\")\n           \
    \ }\n        }\n    }\n    \n    return letter_grades", "    var array = [String]()\n\
    \    var firstLetter = String()\n    var secondLetter = String()\n    var thirdLetter\
    \ = String()\n    var fourthLetter = String()\n    var fifthLetter = String()\n\
    \    \n    array.append(\"E\")\n    \n    if grades.count < 5 { return array }\n\
    \    \n    for _ in 0..<grades.count {\n        if grades.last > 4.0 {\n     \
    \       array.append(firstLetter)\n            array.append(secondLetter)\n  \
    \          array.append(thirdLetter)\n            array.append(fourthLetter)\n\
    \            array.append(fifthLetter)\n            firstLetter = String()\n \
    \           secondLetter = String()\n            thirdLetter = String()\n    \
    \        fourthLetter = String()\n            fifthLetter = String()\n       \
    \     break\n        }\n        \n        let grade = grades.last\n        let\
    \ gpa = grade\n        \n        switch grade {\n        case 0...2.0:\n     \
    \       firstLetter.append(\"A\")\n        case 2.0...4.0:\n            firstLetter.append(\"\
    B\")\n        case 4.0...6.0:\n            firstLetter.append(\"C\")\n       \
    \ case 6.0...8.0:\n            firstLetter.append(\"D\")\n        case 8.0...10.0:\n\
    \            firstLetter.append(\"E\")\n        case 10.0...11.0:\n          \
    \  firstLetter.append(\"F\")\n        case 11.0...12.0:\n            firstLetter.append(\"\
    F\")\n        case 12...14.0:\n            secondLetter.append(\"A\")\n      \
    \  case 14...16.0:\n            secondLetter.append(\"B\")\n        case 16...18.0:\n\
    \            secondLetter.append(\"C\")\n        case 18...20.0:\n           \
    \ secondLetter.append(\"D\")\n        case 20...22.0:\n            secondLetter.append(\"\
    E\")\n        case 22.0...24.0:\n            secondLetter.append(\"F\")\n    \
    \    case 24...26.0:\n            thirdLetter.append(\"A\")\n        case 26...28.0:\n\
    \            thirdLetter.append(\"B\")\n        case 28...30.0:\n            thirdLetter.append(\"\
    C\")\n        case 30.0...32.0:\n            thirdLetter.append(\"D\")\n     \
    \   case 32...34.0:\n            thirdLetter.append(\"E\")\n        case 34.0...36.0:\n\
    \            thirdLetter.append(\"F\")\n        case 36...38.0:\n            fourthLetter.append(\"\
    A\")\n        case 38...40.0:\n            fourthLetter.append(\"B\")\n      \
    \  case 40.0...42.0:\n            fourthLetter.append(\"C\")\n", "    var letterGrades\
    \ = [String]()\n    var previousGPA = grades.last ?? 0.0\n    for grade in grades\
    \ {\n        let currentGPA = grade - previousGPA\n        let letterGrade = String.init(format:\
    \ \"%.1f\", currentGPA)\n        letterGrades.append(letterGrade)\n        previousGPA\
    \ = grade\n    }\n    return letterGrades", "    var gradeStrings = [String]()\n\
    \n    let maxGrade = grades.max()!\n    let minGrade = grades.min()!\n\n    if\
    \ grades.count > 0 {\n        let firstGrade = grades.first!\n        gradeStrings.append(String(format:\
    \ \"%+.1f\", firstGrade))\n    }\n\n    for grade in grades {\n        if grade\
    \ > maxGrade {\n            gradeStrings.append(String(format: \"%+.1f\", maxGrade))\n\
    \        } else if grade < minGrade {\n            gradeStrings.append(String(format:\
    \ \"%+.1f\", minGrade))\n        } else if grade == maxGrade {\n            gradeStrings.append(String(format:\
    \ \"%+.1f\", maxGrade))\n        } else if grade == minGrade {\n            gradeStrings.append(String(format:\
    \ \"%+.1f\", minGrade))\n        } else {\n            let gpa = grade / maxGrade\n\
    \            let letterGrade = findLetterGrade(gpa)\n            gradeStrings.append(letterGrade)\n\
    \        }\n    }\n\n    gradeStrings.append(String(format: \"%+.1f\", grades.last!))\n\
    \    return gradeStrings", "    var letterGrades = [String]()\n\n    // first\
    \ we calculate the number of points for each student\n    var pointsCount: [Double]\
    \ = [Double](repeating: 0.0, count: grades.count)\n    for grade in grades {\n\
    \        pointsCount[grade] += 1\n    }\n\n    // then we calculate for each student\
    \ what letter grade should be\n    // then we append it to the list of letters\n\
    \    for index, _ in pointsCount.enumerated() {\n        let points = pointsCount[index]\n\
    \        var gradeLetter: String\n\n        switch points {\n        case 0:\n\
    \            gradeLetter = \"E\"\n        case 1:\n            gradeLetter = \"\
    D+\"\n        case 2:\n            gradeLetter = \"D\"\n        case 3:\n    \
    \        gradeLetter = \"C+\"\n        case 4:\n            gradeLetter = \"C\"\
    \n        case 5:\n            gradeLetter = \"B-\"\n        case 6:\n       \
    \     gradeLetter = \"B\"\n        case 7:\n            gradeLetter = \"A+\"\n\
    \        case 8:\n            gradeLetter = \"A\"\n        case 9:\n         \
    \   gradeLetter = \"A+\"\n        default:\n            gradeLetter = \"?\"\n\
    \        }\n\n        letterGrades.append(gradeLetter)\n    }\n\n    return letterGrades",
  "    grades.sort {$0.0 < $1.0}\n    var letterGrades = [String]()\n\n    for grade\
    \ in grades {\n        if grade >= 3.0 {\n            letterGrades.append(\"A+\"\
    )\n        }\n        else if grade >= 2.7 {\n            letterGrades.append(\"\
    B\")\n        }\n        else if grade >= 2.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        else if grade >= 1.3 {\n            letterGrades.append(\"\
    C+\")\n        }\n        else if grade >= 1.1 {\n            letterGrades.append(\"\
    C\")\n        }\n        else if grade >= 0.7 {\n            letterGrades.append(\"\
    D\")\n        }\n        else if grade >= 0.3 {\n            letterGrades.append(\"\
    D-\")\n        }\n        else if grade >= 0.0 {\n            letterGrades.append(\"\
    E\")\n        }\n        else {\n            letterGrades.append(\"F\")\n    \
    \    }\n    }\n    return letterGrades", "    // code goes here\n    var gradeLetter:\
    \ [String] = []\n    \n    gradeLetter.append(grades.reduce((0.0, Double.max),\
    \ combine: {$0 > $1.0 ? $0 : $1}))\n    gradeLetter.append(grades.reduce((0.0,\
    \ Double.min), combine: {$0 > $1.0 ? $0 : $1}))\n    gradeLetter.append(grades.reduce((0.0,\
    \ Double.zero), combine: {$0 > $1.0 ? $0 : $1}))\n    gradeLetter.append(grades.reduce((0.0,\
    \ Double.zero), combine: {$0 > $1.0 ? $0 : $1}))\n\n    return gradeLetter", " \
    \   var result: [String] = []\n    for grade in grades {\n        if grade >=\
    \ 4.0 { // 4+ grades\n            let letterGrade = grade >= 3.70 ? \"A+\" :\n\
    \                grade >= 3.30 ? \"A-\" :\n                    grade >= 3.00 ?\
    \ \"B+\" :\n                        grade >= 2.70 ? \"B\" :\n                \
    \            grade >= 2.30 ? \"B-\" :\n                                grade >=\
    \ 2.00 ? \"C+\" :\n                                    grade >= 1.70? \"C\" :\n\
    \                                        grade >= 1.30 ? \"C-\" :\n          \
    \                                  grade >= 1.00 ? \"D+\" :\n                \
    \                                grade >= 0.70? \"D\" :\n                    \
    \                                grade >= 0.50? \"D-\" :\n                   \
    \                                     grade >= 0.00? \"E\" :\n               \
    \                                             \"\"\n            result.append(letterGrade)\n\
    \        } else { // 0-4 grades\n            result.append(\"\")\n        }\n\
    \    }\n    return result", "    var letterGrades = [String]()\n\n    for grade\
    \ in grades {\n        switch grade {\n        case 3.0: letterGrades.append(\"\
    A+\")\n        case 3.3: letterGrades.append(\"A-\")\n        case 3.5: letterGrades.append(\"\
    B+\")\n        case 3.7: letterGrades.append(\"B\")\n        case 3.0: letterGrades.append(\"\
    B-\")\n        case 3.3: letterGrades.append(\"C+\")\n        case 3.5: letterGrades.append(\"\
    C\")\n        case 3.7: letterGrades.append(\"C-\")\n        case 3.0: letterGrades.append(\"\
    D+\")\n        case 3.3: letterGrades.append(\"D\")\n        case 3.5: letterGrades.append(\"\
    D-\")\n        case 3.7: letterGrades.append(\"D+\")\n        case 3.0: letterGrades.append(\"\
    D-\")\n        case 3.0: letterGrades.append(\"E\")\n        default: letterGrades.append(\"\
    E\")\n        }\n    }\n\n    return letterGrades", "    let gpa = grades.sorted()\n\
    \    let grade = gpa.reduce((0.0, \"\") { $0.0 + $1.0 })\n    if grade == 0.0\
    \ {\n        return [\"E\"]\n    } else {\n        let numerical_grade = (grade\
    \ * 9.0) / 5.0\n        let gpa_min = grades.index(gpa.min()!)\n        let gpa_max\
    \ = grades.index(gpa.max()!)\n        let letters = [String]()\n        for i\
    \ in 0..<gpa_max - gpa_min + 1 {\n            letters.append(\"A-\")\n       \
    \ }\n        for i in 0..<gpa_max - gpa_min + 1 {\n            if i != gpa_max\
    \ - gpa_min {\n                letters.append(\"A-\")\n            } else {\n\
    \                letters.append(\"\" + String(numerical_grade - round(numerical_grade)))\n\
    \            }\n        }\n        for i in 0..<gpa_max - gpa_min + 1 {\n    \
    \        if i == gpa_max - gpa_min {\n                letters.append(\"\" + String(numerical_grade))\n\
    \            } else {\n                letters.append(\"\" + String(numerical_grade\
    \ - round(numerical_grade)))\n            }\n        }\n        for i in 0..<gpa_max\
    \ - gpa_min + 1 {\n            if i == gpa_max - gpa_min {\n                letters.append(\"\
    \" + String(numerical_grade))\n            } else {\n                letters.append(\"\
    A-\")\n            }\n        }\n        return letters\n    }", "    let gradesCopy\
    \ = grades\n    let maxGrade = grades.max()!\n    let minGrade = grades.min()!\n\
    \    \n    var letterGrades = [String]()\n    let gradesCount = grades.count\n\
    \    \n    guard gradesCount > 0 else {\n        return letterGrades\n    }\n\
    \    \n    let numberOfLetterGrades = (maxGrade - minGrade)/2.0\n    let average\
    \ = grades.reduce(0.0, +) / Double(gradesCount)\n    let halfOfAvg = (average\
    \ / 2.0).rounded(.towardZero)\n    \n    for i in 0..<numberOfLetterGrades {\n\
    \        let value = minGrade + Double(i) * Double(halfOfAvg)\n        let letter\
    \ = grade_table(value)\n        letterGrades.append(letter)\n    }\n    \n   \
    \ return letterGrades", "    \n    // Step 1: Calculate the sum of the grades\n\
    \    var gradesSum = grades.reduce(0, +)\n\n    // Step 2: Calculate the difference\
    \ between the sum of the grades and the average\n    var difference = gradesSum\
    \ / Double(grades.count)\n\n    // Step 3: Calculate the average of the grades\n\
    \    let average = grades.reduce(0, +) / Double(grades.count)\n\n    // Step 4:\
    \ Calculate the first letter grade based on the difference\n    // The letter\
    \ grades are A-\n    let firstLetterGrade = (Double(average) - Double(difference))\
    \ * 20\n\n    // Step 5: Calculate the second letter grade based on the difference\n\
    \    // The letter grades are B+\n    let secondLetterGrade = (Double(average)\
    \ + Double(difference)) * 20\n\n    // Step 6: Calculate the third letter grade\
    \ based on the difference\n    // The letter grades are B-\n    let thirdLetterGrade\
    \ = (Double(average) - Double(difference)) * 15\n\n    // Step 7: Calculate the\
    \ fourth letter grade based on the difference\n    // The letter grades are C-\n\
    \    let fourthLetterGrade = (Double(average) + Double(difference)) * 15\n\n \
    \   // Step 8: Calculate the fifth letter grade based on the difference\n    //\
    \ The letter grades are D+\n    let fifthLetterGrade = (Double(average) + Double(difference))\
    \ * 10\n\n    // Step 9: Calculate the sixth letter grade based on the difference\n\
    \    // The letter grades are D-\n    let sixthLetterGrade = (Double(average)\
    \ - Double(difference)) * 10\n\n    // Step 10: Calculate the seventh letter grade\
    \ based on the difference\n    // The letter grades are E\n    let seventhLetterGrade\
    \ = Double(average) * 0\n\n    // Step 11: Calculate the letter grades based on\
    \ the difference using the formula given in the question\n    let letterGrades\
    \ = [firstLetterGrade, secondLetterGrade, thirdLetterGrade, fourthLetterGrade,\
    \ fifthLetterGrade, sixthLetterGrade, seventhLetterGrade].map { String($0) }\n\
    \n    return letterGrades", "    var grade : String = \"\"\n    for grade in grades\
    \ {\n        if grade >= 3.0 {\n            if grade <= 3.7 {\n              \
    \  grade += \"A+\";\n            } else if grade <= 3.3 {\n                grade\
    \ += \"A\";\n            } else if grade <= 2.7 {\n                grade += \"\
    B+\";\n            } else if grade <= 2.3 {\n                grade += \"B\";\n\
    \            } else if grade <= 1.7 {\n                grade += \"C+\";\n    \
    \        } else {\n                grade += \"C\";\n            }\n        } else\
    \ if grade >= 2.0 {\n            if grade <= 2.7 {\n                grade += \"\
    B+\";\n            } else if grade <= 2.3 {\n                grade += \"B\";\n\
    \            } else if grade <= 1.7 {\n                grade += \"C+\";\n    \
    \        } else {\n                grade += \"C\";\n            }\n        } else\
    \ if grade >= 1.0 {\n            if grade <= 1.7 {\n                grade += \"\
    C\";\n            } else {\n                grade += \"C\";\n            }\n \
    \       } else if grade >= 0.0 && grade <= 0.7 {\n            grade += \"D\";\n\
    \        } else if grade == 0.0 {\n            grade += \"D\";\n        } else\
    \ {\n            grade += \"E\";\n        }\n    }\n    return grade", "    \n\
    \    var letter_grades = [String]()\n    \n    for grade in grades {\n       \
    \ let (min, max) = (grade, grade + 3)\n        let index = findIndex(max)\n  \
    \      if index == nil {\n            letter_grades.append(\"E\")\n        } else\
    \ {\n            let value = Int(index!)\n            if value < 2 {\n       \
    \         letter_grades.append(\"A+\")\n            } else if value < 4 {\n  \
    \              letter_grades.append(\"A\")\n            } else if value < 6 {\n\
    \                letter_grades.append(\"A-\")\n            } else if value < 9\
    \ {\n                letter_grades.append(\"B+\")\n            } else if value\
    \ < 12 {\n                letter_grades.append(\"B\")\n            } else if value\
    \ < 15 {\n                letter_grades.append(\"B-\")\n            } else if\
    \ value < 18 {\n                letter_grades.append(\"C+\")\n            } else\
    \ if value < 23 {\n                letter_grades.append(\"C\")\n            }\
    \ else if value < 26 {\n                letter_grades.append(\"C-\")\n       \
    \     } else if value < 29 {\n                letter_grades.append(\"D+\")\n \
    \           } else if value < 32 {\n                letter_grades.append(\"D\"\
    )\n            } else if value < 35 {\n                letter_grades.append(\"\
    D-\")\n            } else {\n                letter_grades.append(\"E\")\n   \
    \         }\n        }\n    }\n    return letter_grades", "    // TODO: fill this\
    \ in.\n    return []", "    let gradeSum = grades.reduce(0, +)\n    let gradeDiff\
    \ = grades.reduce(0, +)\n    let letterGrades = grades.map({ diff > 0 ? \"+\"\
    \ : \"-\" }).flatMap { diff > 0 ? \"A+\" : diff <= 0.7 ? \"B\" : diff <= 0.3 ?\
    \ \"B-\" : diff <= 0.1 ? \"C\" : diff <= 0.7 ? \"C\" : diff <= 0.3 ? \"C-\" :\
    \ diff <= 0.1 ? \"D+\" : diff <= 0.7 ? \"D\" : diff <= 0.3 ? \"D-\" : diff <=\
    \ 0.1 ? \"E\" : nil }\n    \n    return Array(letterGrades)", "    var letter_grades\
    \ = [String]()\n    for grade in grades {\n        if grade > 4 {\n          \
    \  letter_grades.append(\"A+\")\n        } else {\n            letter_grades.append(\"\
    A\")\n        }\n        if grade > 3 {\n            letter_grades.append(\"A-\"\
    )\n        } else {\n            letter_grades.append(\"B\")\n        }\n    \
    \    if grade > 2 {\n            letter_grades.append(\"B+\")\n        } else\
    \ {\n            letter_grades.append(\"B\")\n        }\n        if grade > 1\
    \ {\n            letter_grades.append(\"B-\")\n        } else {\n            letter_grades.append(\"\
    C\")\n        }\n        if grade > 0.7 {\n            letter_grades.append(\"\
    C+\")\n        } else {\n            letter_grades.append(\"C\")\n        }\n\
    \        if grade > 0.3 {\n            letter_grades.append(\"C-\")\n        }\
    \ else {\n            letter_grades.append(\"D\")\n        }\n        if grade\
    \ > 0.1 {\n            letter_grades.append(\"D+\")\n        } else {\n      \
    \      letter_grades.append(\"D\")\n        }\n        if grade < 0 {\n      \
    \      letter_grades.append(\"E\")\n        } else {\n            letter_grades.append(\"\
    F\")\n        }\n    }\n    return letter_grades", "    let alphabet = [\"A\"\
    , \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\"\
    , \"E\"]\n    var grades_letters: [String] = []\n    var gpas: Int = 0\n    for\
    \ grade in grades {\n        let gpa : Double = grade * 1.1\n        if gpa >\
    \ 7 {\n            grades_letters.append(alphabet[gpa])\n        }\n        else\
    \ {\n            grades_letters.append(alphabet[gpa]+\"-\"+alphabet[gpa])\n  \
    \      }\n    }\n    return grades_letters", "    var letterGrades = [String]()\n\
    \    \n    for grade in grades {\n        var letterGrade = \"\"\n        \n \
    \       if grade >= 3.0 { letterGrade += \"B+\" }\n        \n        if grade\
    \ > 2.7 { letterGrade += \"B\" }\n        \n        if grade > 2.3 { letterGrade\
    \ += \"B-\" }\n        \n        if grade > 2.0 { letterGrade += \"C+\" }\n  \
    \      \n        if grade > 1.7 { letterGrade += \"C\" }\n        \n        if\
    \ grade > 1.3 { letterGrade += \"C-\" }\n        \n        if grade > 1.0 { letterGrade\
    \ += \"D+\" }\n        \n        if grade > 0.7 { letterGrade += \"D\" }\n   \
    \     \n        if grade > 0.0 { letterGrade += \"D-\" }\n        \n        if\
    \ grade < 0.0 { letterGrade += \"E\" }\n        \n        if grade < 3.0 { letterGrade\
    \ += \"A+\" }\n        \n        if grade < 3.7 { letterGrade += \"A\" }\n   \
    \     \n        if grade < 3.3 { letterGrade += \"A-\" }\n        \n        if\
    \ grade < 3.0 { letterGrade += \"B+\" }\n        \n        if grade < 2.7 { letterGrade\
    \ += \"B\" }\n        \n        if grade < 2.3 { letterGrade += \"B-\" }\n   \
    \     \n        if grade < 2.0 { letterGrade += \"C+\" }\n        \n        if\
    \ grade < 1.7 { letterGrade += \"C\" }\n        \n        if grade < 1.3 { letterGrade\
    \ += \"C-\" }\n        \n        if grade < 1.0 { letterGrade += \"D+\" }\n  \
    \      \n        if grade < 0.7 { letterGrade += \"D\" }\n        \n        if\
    \ grade < 0.0 { letterGrade += \"D-\" }\n        \n        if grade >= 0.0 { letterGrade\
    \ += \"A+\" }\n        \n        letterGrades.append(letterGrade)\n    }\n   \
    \ \n    return letterGrades", "    var result = [String]()\n    let numberOfGrades\
    \ = grades.count\n    for grade in grades {\n        let letterGrade: String\n\
    \        if grade >= 3.0 {\n            letterGrade = \"A+\"\n        }\n    \
    \    else if grade > 2.0 && grade <= 3.7 {\n            letterGrade = \"A\"\n\
    \        }\n        else if grade > 2.3 && grade <= 3.0 {\n            letterGrade\
    \ = \"A-\"\n        }\n        else if grade > 2.7 && grade <= 3.3 {\n       \
    \     letterGrade = \"B+\"\n        }\n        else if grade > 2.0 && grade <=\
    \ 2.7 {\n            letterGrade = \"B\"\n        }\n        else if grade > 1.7\
    \ && grade <= 2.3 {\n            letterGrade = \"B-\"\n        }\n        else\
    \ if grade > 1.3 && grade <= 1.7 {\n            letterGrade = \"C+\"\n       \
    \ }\n        else if grade > 1.0 && grade <= 1.3 {\n            letterGrade =\
    \ \"C\"\n        }\n        else if grade > 0.7 && grade <= 1.0 {\n          \
    \  letterGrade = \"C-\"\n        }\n        else if grade > 0.0 && grade <= 0.7\
    \ {\n            letterGrade = \"D+\"\n        }\n        else {\n           \
    \ letterGrade = \"D\"\n        }\n        result.append(letterGrade)\n    }\n\
    \    return result", "    var gradeStrs = [String]()\n    for g in grades {\n\
    \        var gradeStr = \"\"\n        if g > 4.0 {\n            gradeStr += String(g)\n\
    \            gradeStrs.append(\"A+\")\n        }\n        else if g > 3.7 {\n\
    \            gradeStr += String(g)\n            gradeStrs.append(\"A\")\n    \
    \    }\n        else if g > 3.3 {\n            gradeStr += String(g)\n       \
    \     gradeStrs.append(\"A-\")\n        }\n        else if g > 3.0 {\n       \
    \     gradeStr += String(g)\n            gradeStrs.append(\"B+\")\n        }\n\
    \        else if g > 2.7 {\n            gradeStr += String(g)\n            gradeStrs.append(\"\
    B\")\n        }\n        else if g > 2.3 {\n            gradeStr += String(g)\n\
    \            gradeStrs.append(\"B-\")\n        }\n        else if g > 2.0 {\n\
    \            gradeStr += String(g)\n            gradeStrs.append(\"C+\")\n   \
    \     }\n        else if g > 1.7 {\n            gradeStr += String(g)\n      \
    \      gradeStrs.append(\"C\")\n        }\n        else if g > 1.3 {\n       \
    \     gradeStr += String(g)\n            gradeStrs.append(\"C-\")\n        }\n\
    \        else if g > 1.0 {\n            gradeStr += String(g)\n            gradeStrs.append(\"\
    D+\")\n        }\n        else if g > 0.7 {\n            gradeStr += String(g)\n\
    \            gradeStrs.append(\"D\")\n        }\n        else {\n            gradeStr\
    \ += String(g)\n            gradeStrs.append(\"D-\")\n        }\n        gradeStrs.append(gradeStr)\n\
    \    }\n    return gradeStrs", "    var letterGrades = [String]()\n    let n =\
    \ grades.count\n    var gpa = 0.0\n\n    if n < 1 {\n        return letterGrades\n\
    \    }\n\n    gpa = grades.reduce(0, combine: { (sum, item) -> Double in\n   \
    \     return sum + item\n    })\n\n    let grading = Double((gpa / n) * 4.0) /\
    \ 4.0\n    if grading < 1.0 {\n        letterGrades.append(\"D-\")\n    } else\
    \ {\n        if grading > 0.75 {\n            letterGrades.append(\"A-\")\n  \
    \      } else {\n            if grading > 0.6 {\n                letterGrades.append(\"\
    B-\")\n            } else {\n                if grading > 0.5 {\n            \
    \        letterGrades.append(\"C+\")\n                } else {\n             \
    \       if grading > 0.4 {\n                        letterGrades.append(\"C-\"\
    )\n                    } else {\n                        if grading > 0.3 {\n\
    \                            letterGrades.append(\"D+\")\n                   \
    \     } else {\n                            if grading > 0.2 {\n             \
    \                   letterGrades.append(\"D\")\n                            }\
    \ else {\n                                if grading > 0.1 {\n               \
    \                     letterGrades.append(\"E\")\n                           \
    \     }\n                            }\n                        }\n          \
    \          }\n                }\n            }\n        }\n    }\n    return letterGrades",
  "    let gradesLength: Int = grades.count\n    var letterGrades: [String] = []\n\
    \    var currentGPA: Double = 0.0\n\n    grades.reverse()\n\n    for index in\
    \ 0..<gradesLength {\n        // A + if 4.0 or greater or < 3.7\n        let letterGPA\
    \ = currentGPA + grades[index]\n\n        if letterGPA >= 4.0 {\n            letterGrades.append(\"\
    A+\")\n        }\n\n        // A- if 3.7 or greater or < 3.3\n        else if\
    \ letterGPA >= 3.7 {\n            letterGrades.append(\"A-\")\n        }\n\n \
    \       // B+ if 3.3 or greater or < 3.0\n        else if letterGPA >= 3.3 {\n\
    \            letterGrades.append(\"B+\")\n        }\n\n        // B- if 3.0 or\
    \ greater or < 2.7\n        else if letterGPA >= 3.0 {\n            letterGrades.append(\"\
    B\")\n        }\n\n        // B-  if 2.7 or greater or < 2.3\n        else if\
    \ letterGPA >= 2.7 {\n            letterGrades.append(\"B-\")\n        }\n\n \
    \       // C+ if 2.3 or greater or < 2.0\n        else if letterGPA >= 2.3 {\n\
    \            letterGrades.append(\"C+\")\n        }\n\n        // C  if 2.0 or\
    \ greater or < 1.7\n        else if letterGPA >= 2.0 {\n            letterGrades.append(\"\
    C\")\n        }\n\n        // C-  if 1.7 or greater or < 1.3\n        else if\
    \ letterGPA >= 1.7 {\n            letterGrades.append(\"C-\")\n        }\n\n \
    \       // D+ if 1.3 or greater or < 1.0\n        else if letterGPA >= 1.3 {\n\
    \            letterGrades.append(\"D+\")\n        }\n\n        // D  if 1.0 or\
    \ greater or < 0.7\n        else if letterGPA >= 1.0 {\n            letterGrades.append(\"\
    D\")\n        }\n\n        // D-  if 0.7 or greater\n        else if letterGPA\
    \ >= 0.7 {\n            letterGrades.append(\"D-\")\n        }\n\n        // E\
    \  if < 0.0\n        else if letterGPA < 0.0 {\n            letterGrades.append(\"\
    E\")\n        }\n\n        // Append letter grades\n        else if letterGPA\
    \ < 0.0 {\n            letterGrades.append(\"E\")\n        }\n\n        currentGPA\
    \ = letterGPA\n    }\n\n    return letterGrades.reverse()", "    // Write your\
    \ solution here\n    \n    let gradesSet = grades.sorted()\n    var letterGrades\
    \ = [String]()\n    var currentGPA = 0\n    let gpaIndex = 5\n    \n    while\
    \ currentGPA <= grades.last {\n        let index = grades.firstIndex(of: currentGPA)\n\
    \        let grade = grades[index]\n        letterGrades.append(grade == 0 ? \"\
    E\" : letterGrades[gradeIndex] + String(grade))\n        currentGPA = (currentGPA\
    \ * gpaIndex) + grades[grades.firstIndex(of: currentGPA)]\n    }\n    \n    return\
    \ letterGrades", "    var grades_copy = grades\n\n    for grade_index in 0..<grades.count\
    \ {\n        // find the minimum GPA from the array\n        var minimum_grade\
    \ = grades_copy[grade_index]\n        for index in grade_index..<grades_copy.count\
    \ {\n            if grades_copy[index] < minimum_grade {\n                minimum_grade\
    \ = grades_copy[index]\n            }\n        }\n        // if there is a tie\
    \ for a grade, choose the lowest possible grade\n        if minimum_grade == grades_copy[grade_index]\
    \ {\n            for index in grade_index..<grades_copy.count {\n            \
    \    grades_copy[index] = 0\n            }\n        } else {\n            for\
    \ index in grade_index..<grades_copy.count {\n                grades_copy[index]\
    \ -= minimum_grade\n            }\n        }\n    }\n    return grades_copy.map\
    \ { grade in\n        // convert the grade to the letter grade\n        let letterGrade\
    \ = grade\n        switch letter {\n        case \"A\" ... \"F\":\n          \
    \  return letter\n        case \"A+\", \"A\":\n            return letter\n   \
    \     case \"A-\", \"A\":\n            return letter + \"-\"\n        case \"\
    B\" ... \"F\":\n            return letter\n        case \"B+\", \"B\":\n     \
    \       return letter\n        case \"B-\", \"B\":\n            return letter\
    \ + \"+\"\n        case \"C\" ... \"F\":\n            return letter\n        case\
    \ \"C+\", \"C\":\n            return letter\n        case \"C-\", \"C\":\n   \
    \         return letter + \"-\"\n        case \"D\" ... \"F\":\n            return\
    \ letter\n        case \"D+\", \"D\":\n            return letter\n        case\
    \ \"D-\", \"D\":\n            return letter + \"+\"\n        case \"E\":\n   \
    \         return letter\n        default:\n            return \"\"\n        }\n\
    \    }.sorted()", "    if grades.isEmpty {\n        return []\n    }\n    var\
    \ letterGrades: [String] = []\n    letterGrades.append(\"\")\n    for grade in\
    \ grades {\n        let lowGrade: Double = Double(grade < 3.0 ? \"0.0\" : \"1.0\"\
    )\n        let highGrade: Double = Double(grade > 3.5 ? \"4.0\" : \"5.0\")\n \
    \       if grade < 3.0 {\n            letterGrades[0].append(lowGrade)\n     \
    \       letterGrades[0].append(highGrade)\n        } else {\n            letterGrades[0].append(lowGrade)\n\
    \            letterGrades[0].append(\"-\")\n            letterGrades[0].append(highGrade)\n\
    \            letterGrades[0].append(\"-\")\n        }\n    }\n    return letterGrades",
  "    let sorted = grades.sorted() \n    var result: [String] = []\n    for i in\
    \ sorted {\n        let value = CGFloat(Double(i))\n        if value < 4.0 {\n\
    \            result.append(String(a+i))\n        } else if value < 3.7 {\n   \
    \         result.append(String(a))\n        } else if value < 3.3 {\n        \
    \    result.append(String(a-i))\n        } else if value < 3.0 {\n           \
    \ result.append(String(b+i))\n        } else if value < 2.7 {\n            result.append(String(b))\n\
    \        } else if value < 2.3 {\n            result.append(String(b-i))\n   \
    \     } else if value < 2.0 {\n            result.append(String(c+i))\n      \
    \  } else if value < 1.7 {\n            result.append(String(c))\n        } else\
    \ if value < 1.3 {\n            result.append(String(c-i))\n        } else if\
    \ value < 1.0 {\n            result.append(String(d+i))\n        } else if value\
    \ < 0.7 {\n            result.append(String(d))\n        } else if value < 0.0\
    \ {\n            result.append(String(d-i))\n        } else {\n            result.append(String(e))\n\
    \        }\n    }\n    return result", "    \n    // The formula for finding the\
    \ letter grade is the average of the grades\n    var averageGrade = grades.reduce(0,\
    \ combine: +) / grades.count\n    \n    // The letter grade is calculated as follows:\n\
    \    switch averageGrade {\n    case 3.0 < averageGrade && averageGrade < 3.7:\n\
    \        return \"A+\"\n    case 3.7 < averageGrade && averageGrade < 3.3:\n \
    \       return \"A\"\n    case 3.3 < averageGrade && averageGrade < 2.7:\n   \
    \     return \"A-\"\n    case 2.7 < averageGrade && averageGrade < 2.3:\n    \
    \    return \"B+\"\n    case 2.3 < averageGrade && averageGrade < 1.7:\n     \
    \   return \"B\"\n    case 1.7 < averageGrade && averageGrade < 1.3:\n       \
    \ return \"B-\"\n    case 1.3 < averageGrade && averageGrade < 1.0:\n        return\
    \ \"C+\"\n    case 1.0 < averageGrade && averageGrade < 0.7:\n        return \"\
    C\"\n    case 0.7 < averageGrade && averageGrade < 0.0:\n        return \"C-\"\
    \n    default:\n        return \"E\"\n    }", "    var letter_grades: [String]\
    \ = []\n\n    if grades.count <= 0 {\n        return letter_grades\n    }\n\n\
    \    // sort the array into descending order from high to low\n    grades.sortInPlace()\n\
    \n    for index in grades.indices{\n        if index < grades.count-1 {\n    \
    \        // check if the value at index i and the value at index i+1 are\n   \
    \         // both above and below the midpoint of the grade\n            if grades[index]\
    \ <= grades[index + 1] {\n                // if the values are both above and\
    \ below the midpoint of the\n                // grade, we can just assign a letter\
    \ grade of A+\n                letter_grades.append(\"A+\")\n            } else\
    \ {\n                // otherwise, we can check the grade to see if the grade\
    \ is a\n                // higher than the midpoint of the grade or lower than\
    \ the\n                // midpoint of the grade\n                if grades[index]\
    \ > grades[index + 1] {\n                    letter_grades.append(\"A-\")\n  \
    \              } else {\n                    letter_grades.append(\"B+\")\n  \
    \              }\n            }\n        } else {\n            // if the final\
    \ grade is higher than the midpoint of the grade,\n            // we can just\
    \ assign a letter grade of D+\n            letter_grades.append(\"D+\")\n    \
    \    }\n    }\n    return letter_grades", "    \n    \n    let maxGrade = grades.max()!\n\
    \    let minGrade = grades.min()!\n    \n    let difference = grades.reduce(0.0,\
    \ combine: +)\n    \n    \n    let differencePercent = difference / maxGrade\n\
    \    \n    let gradePercent = differencePercent * 100\n    \n    \n    let grades\
    \ = [\"\", \"\", \"\", \"\", \"\"]\n    \n    \n    grades[0] = \"A+\" //1\n \
    \   \n    \n    if gradePercent > 90 {\n        grades[0] = \"B+\"\n    }\n  \
    \  \n    \n    if gradePercent > 80 {\n        grades[0] = \"B\"\n    }\n    \n\
    \    \n    if gradePercent > 70 {\n        grades[0] = \"B-\"\n    }\n    \n \
    \   \n    if gradePercent > 60 {\n        grades[0] = \"C+\"\n    }\n    \n  \
    \  \n    if gradePercent > 50 {\n        grades[0] = \"C\"\n    }\n    \n    \n\
    \    if gradePercent > 40 {\n        grades[0] = \"C-\"\n    }\n    \n    \n \
    \   if gradePercent > 30 {\n        grades[0] = \"D+\"\n    }\n    \n    \n  \
    \  if gradePercent > 20 {\n        grades[0] = \"D\"\n    }\n    \n    \n    if\
    \ gradePercent > 10 {\n        grades[0] = \"D-\"\n    }\n    \n    \n    if gradePercent\
    \ > 0 {\n        grades[0] = \"E\"\n    }\n    \n    \n    return grades", " \
    \   var letterGrades = [String]()\n    \n    switch grades.count {\n    case 0:\n\
    \        break\n    case 1:\n        let firstGrade = grades[0]\n        \n  \
    \      if firstGrade > 3.0 { letterGrades.append(\"A+\") }\n        else if firstGrade\
    \ > 2.7 { letterGrades.append(\"B\") }\n        else if firstGrade > 2.0 { letterGrades.append(\"\
    B-\") }\n        else if firstGrade > 1.7 { letterGrades.append(\"C\") }\n   \
    \     else if firstGrade > 1.3 { letterGrades.append(\"C-\") }\n        else if\
    \ firstGrade > 1.0 { letterGrades.append(\"D+\") }\n        else if firstGrade\
    \ > 0.7 { letterGrades.append(\"D\") }\n        else if firstGrade > 0.0 { letterGrades.append(\"\
    D-\") }\n        else { letterGrades.append(\"E\") }\n        \n    case 2:\n\
    \        let firstGrade = grades[0]\n        let secondGrade = grades[1]\n   \
    \     \n        if firstGrade > 3.0 { letterGrades.append(\"A+\") }\n        else\
    \ if firstGrade > 2.7 { letterGrades.append(\"B\") }\n        else if firstGrade\
    \ > 2.0 { letterGrades.append(\"B-\") }\n        else if firstGrade > 1.7 { letterGrades.append(\"\
    C\") }\n        else if firstGrade > 1.3 { letterGrades.append(\"C-\") }\n   \
    \     else if firstGrade > 1.0 { letterGrades.append(\"D+\") }\n        else if\
    \ firstGrade > 0.7 { letterGrades.append(\"D\") }\n        else if firstGrade\
    \ > 0.0 { letterGrades.append(\"D-\") }\n        else { letterGrades.append(\"\
    E\") }\n        \n        if secondGrade > 3.0 { letterGrades.append(\"A+\") }\n\
    \        else if secondGrade > 2.7 { letterGrades.append(\"B\") }\n        else\
    \ if secondGrade > 2.0 { letterGrades.append(\"B-\") }\n        else if secondGrade\
    \ > 1.7 { letterGrades.append(\"C\") }\n        else if secondGrade > 1.3 { letterGrades.append(\"\
    C-\") }\n        else if secondGrade > 1.0 { letterGrades.append(\"D+\") }\n \
    \       else if secondGrade > 0.7 { letterGrades.append(\"D\") }\n        else\
    \ if secondGrade > 0.0 { letterGrades.append(\"D-\") }\n        else { letterGrades.append(\"\
    E\") }\n        \n    case 3:\n        let firstGrade = grades[0]\n        let\
    \ secondGra", '    return grade_letters(grades, numerical_letters)', "    var\
    \ gradesArray: [String] = []\n    var grade_length = grades.count\n    var grade_numerator\
    \ = grades.reduce(0, *)\n    var letter_grade = \"\"\n    for i in 0..<grade_length\
    \ {\n        letter_grade = \"\"\n        var gpa = grades[i]\n        if gpa\
    \ < 4.0 {\n            letter_grade = \"A-\"\n        } else if gpa < 3.7 {\n\
    \            letter_grade = \"A+\"\n        } else if gpa < 3.3 {\n          \
    \  letter_grade = \"A\"\n        } else if gpa < 3.0 {\n            letter_grade\
    \ = \"B+\"\n        } else if gpa < 2.7 {\n            letter_grade = \"B\"\n\
    \        } else if gpa < 2.3 {\n            letter_grade = \"B-\"\n        } else\
    \ if gpa < 2.0 {\n            letter_grade = \"C+\"\n        } else if gpa < 1.7\
    \ {\n            letter_grade = \"C\"\n        } else if gpa < 1.3 {\n       \
    \     letter_grade = \"C-\"\n        } else if gpa < 1.0 {\n            letter_grade\
    \ = \"D+\"\n        } else if gpa < 0.7 {\n            letter_grade = \"D\"\n\
    \        } else {\n            letter_grade = \"D-\"\n        }\n        gradesArray.append(String(letter_grade))\n\
    \    }\n    return gradesArray", "    var gradesArr = grades\n    gradesArr.remove(at:\
    \ 0)\n    \n    var gradesCounter: Int = 1\n    var gradesMax = gradesArr.max()!\n\
    \    \n    for i in 1...gradesArr.count {\n        gradesCounter += 1\n      \
    \  if gradesArr[i] == gradesMax {\n            gradesCounter = 1\n           \
    \ gradesArr.remove(at: i)\n        }\n    }\n    \n    var gradesAvg = (gradesArr.reduce(0.0,\
    \ +)) / Double(gradesCounter.rounded())\n    \n    var gradesArrRev: [Double]\
    \ = []\n    for i in gradesArr.reversed() {\n        gradesArrRev.append(i)\n\
    \    }\n    \n    var gradesArrAvg: [Double] = []\n    for i in gradesArrRev {\n\
    \        gradesArrAvg.append(i)\n    }\n    \n    var gradesArrFinal: [Double]\
    \ = []\n    for i in gradesArrAvg {\n        let xy = gradesArrRev.index(of: i)!\n\
    \        let grade = gradesArrArr[xy - 1]\n        gradesArrFinal.append(grade)\n\
    \    }\n    \n    var gradesArrFinalRev: [Double] = []\n    for i in gradesArrArr.reversed()\
    \ {\n        gradesArrFinalRev.append(i)\n    }\n    \n    var letterGrades: [String]\
    \ = []\n    for i in gradesArrFinal {\n        let gradeLetter = gradesArrFinalRev.index(of:\
    \ i)!\n        let letter = letterGrades[gradeLetter - 1]\n        letterGrades.append(letter)\n\
    \    }\n    \n    return letterGrades", "    var gradeArray: [String] = []\n \
    \   if grades.count < 5 {\n        for grade in grades {\n            if grade\
    \ > 0.0 && grade <= 1.0 {\n                gradeArray.append(String(format: \"\
    %.2f\", grade))\n            } else {\n                gradeArray.append(String(format:\
    \ \"%.02f\", grade))\n            }\n        }\n    } else {\n        gradeArray\
    \ = Array(repeating: \"\", count: grades.count)\n        for grade in grades {\n\
    \            if grade > 0.0 && grade <= 1.0 {\n                gradeArray[gradeArray.index(grade)]\
    \ += String(format: \"%.2f\", grade)\n            } else {\n                gradeArray[gradeArray.index(grade)]\
    \ += String(format: \"%.02f\", grade)\n            }\n        }\n    }\n    return\
    \ gradeArray", "    let min = grades.min()!\n    let max = grades.max()!\n   \
    \ let grade_range: [(Double, Double)] = [ (min * 4.0, min * 3.0)\n           \
    \                             , ( min * 3.0, max )\n                         \
    \               , ( min * 3.3, min * 2.3)\n                                  \
    \      , ( min * 3.2, max )\n                                        , ( min *\
    \ 3.0, max )\n                                        , ( min * 2.7, min * 2.0)\n\
    \                                        , ( min * 2.3, min * 1.7)\n         \
    \                               , ( min * 2.0, max )\n                       \
    \                 , ( min * 1.7, min * 1.3)\n                                \
    \        , ( min * 1.3, min * 1.0)\n                                        ,\
    \ ( min * 1.0, max )\n                                        , ( min * 0.7, min\
    \ * 0.0)\n                                        , ( min * 0.0, max )]\n    return\
    \ grade_range.map { grade in\n        let letter_grade = String.localizedStringWithDefault(grade\
    \ * Double(9.0) + \"A\", comment: \"letter grade\")\n        return letter_grade\
    \ + \"+\"\n    }.joined()", "    var gradeLetters = [String]()\n    let gradesCount\
    \ = grades.count\n    if gradesCount == 0 {\n        gradeLetters.append(\"E\"\
    )\n        return gradeLetters\n    }\n    let maxGrade = grades.max()!\n    let\
    \ minGrade = grades.min()!\n    let gradeDifference = maxGrade - minGrade\n  \
    \  let totalGradeCount = gradesCount - 1\n    let increment = gradeDifference\
    \ / CGFloat(totalGradeCount)\n    for index in 0..<totalGradeCount {\n       \
    \ let curGrade = grades[index] + increment\n        let letter = gradeLetterIndex(curGrade)\n\
    \        if letter == nil {\n            letter = gradeLetters[gradeLetters.count-1]\n\
    \        }\n        gradeLetters.append(letter!)\n    }\n    return gradeLetters",
  "    var letterGrades: [String] = []\n    var totalGrade: Double = 0.0\n    for\
    \ grade in grades {\n        if grade > 0 {\n            totalGrade += grade\n\
    \        } else {\n            totalGrade += grade*-1\n        }\n    }\n    if\
    \ totalGrade == 0.0 {\n        letterGrades = [\"E\"]\n        return letterGrades\n\
    \    }\n    var letterGradeIndex = 0\n    var gp = 0\n    for grade in grades\
    \ {\n        if totalGrade > gp*1.1 && totalGrade < gp*1.3 { // + A+\n       \
    \     letterGrades.append(grades[letterGradeIndex].description)\n            letterGradeIndex\
    \ += 1\n        }\n        gp++\n    }\n    return letterGrades", "\tvar grades_string\
    \ = [String]()\n\tvar index = 0\n\tfor element in grades {\n\t\tgrades_string.append(String.init(\"\
    \\(element)\"))\n\t\tif element == 0.0 {\n\t\t\tgrades_string.append(\"E\")\n\t\
    \t\tbreak\n\t\t}\n\t}\n\tif grades.count > 7 {\n\t\treturn grades_string\n\t}\n\
    \tvar index = 0\n\tvar last_index = grades.count - 1\n\tfor element in grades\
    \ {\n\t\tif element == 0.0 {\n\t\t\tlast_index = index\n\t\t\tbreak\n\t\t}\n\t\
    \tindex += 1\n\t}\n\t\n\t\n\tfor element in grades {\n\t\tif element == 0.0 {\n\
    \t\t\tgrades_string.append(\"D-\")\n\t\t\tbreak\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\
    if element < 3.0 {\n\t\t\tif element > last_index {\n\t\t\t\tgrades_string.append(\"\
    B-\")\n\t\t\t} else {\n\t\t\t\tgrades_string.append(\"A-\")\n\t\t\t}\n\t\t} else\
    \ if element >= 3.0 && element <= 3.7 {\n\t\t\tgrades_string.append(\"B+\")\n\t\
    \t} else if element >= 3.8 && element < 4.0 {\n\t\t\tgrades_string.append(\"B\"\
    )\n\t\t} else if element >= 4.0 && element <= 4.7 {\n\t\t\tgrades_string.append(\"\
    B-\")\n\t\t} else if element >= 4.8 && element < 5.0 {\n\t\t\tgrades_string.append(\"\
    C+\")\n\t\t} else if element >= 5.0 && element <= 5.7 {\n\t\t\tgrades_string.append(\"\
    C\")\n\t\t} else if element >= 5.8 && element < 6.0 {\n\t\t\tgrades_string.append(\"\
    C-\")\n\t\t} else if element >= 6.0 && element <= 6.7 {\n\t\t\tgrades_string.append(\"\
    D+\")\n\t\t} else if element >= 6.8 && element < 7.0 {\n\t\t\tgrades_string.append(\"\
    D\")\n\t\t} else if element >= 7.0 && element <= 7.7 {\n\t\t\tgrades_string.append(\"\
    D-\")\n\t\t} else if element == 7.0 {\n\t\t\tgrades_string.append(\"E\")\n\t\t\
    }\n\t}\n\treturn grades_string", "    let gradesSet = Array(Set(grades))\n   \
    \ let sortedGrades = grades.sorted(by: <)\n    var lettersGrades = [String]()\n\
    \    for let grade in sortedGrades {\n        switch grade {\n        case 0...0.1:\n\
    \            lettersGrades.append(\"E-\")\n        case 0.1:\n            lettersGrades.append(\"\
    D-\")\n        case 0.2 ... 0.3:\n            lettersGrades.append(\"C+\")\n \
    \       case 0.3 ... 0.4:\n            lettersGrades.append(\"B-\")\n        case\
    \ 0.4:\n            lettersGrades.append(\"B+\")\n        case 0.5 ... 0.6:\n\
    \            lettersGrades.append(\"A+\")\n        case 0.6:\n            lettersGrades.append(\"\
    A\")\n        case 0.7 ... 0.8:\n            lettersGrades.append(\"A-\")\n  \
    \      case 0.8 ... 0.9:\n            lettersGrades.append(\"B\")\n        case\
    \ 0.9:\n            lettersGrades.append(\"B-\")\n        case 1.0 ... 1.1:\n\
    \            lettersGrades.append(\"C\")\n        case 1.1 ... 1.2:\n        \
    \    lettersGrades.append(\"C-\")\n        case 1.2 ... 1.3:\n            lettersGrades.append(\"\
    D+\")\n        case 1.3:\n            lettersGrades.append(\"D\")\n        case\
    \ 1.4 ... 1.5:\n            lettersGrades.append(\"D-\")\n        case 1.5 ...\
    \ 1.6:\n            lettersGrades.append(\"E\")\n        case 1.6:\n         \
    \   lettersGrades.append(\"E-\")\n        case 1.7 ... 1.8:\n            lettersGrades.append(\"\
    F\")\n        case 1.8 ... 1.9:\n            lettersGrades.append(\"F+\")\n  \
    \      case 1.9:\n            lettersGrades.append(\"F\")\n        case 2.0 ...\
    \ 2.1:\n            lettersGrades.append(\"G\")\n        case 2.1 ... 2.2:\n \
    \           lettersGrades.append(\"G+\")\n        case 2.2 ... 2.3:\n        \
    \    lettersGrades.append(\"G-\")\n        case 2.3 ... 2.4:\n            lettersGrades.append(\"\
    H\")\n        case 2.4:\n            lettersGrades.append(\"H-\")\n        case\
    \ 2.5 ... 2.6:\n            lettersGrades.append(\"I\")\n        case 2.6:\n \
    \           lettersGrades.append(\"I+\")\n        case 2.7 ... 2.8:\n        \
    \    lettersGrades.append(\"I\")\n        case 2.8 ... 2.9:\n            lettersGrades.append(\"\
    I+\")\n        case 2.9:\n            lettersGrades.append(\"I\")\n        case\
    \ 3.0:\n            lettersGrades.append(\"J\")\n        case 3.1 ... 3.2:\n \
    \           lettersGrades.append(\"J+\")\n        case 3.2:\n            lettersGrades.append(\"\
    J\")\n        case 3.3 ... 3.4:\n            letters", "    let maxGrade: Double\
    \ = grades.max()\n    let gradeRange = maxGrade - min(grades)\n\n    var result\
    \ = [String]()\n    let total = 0\n\n    for i in 0 ..< grades.count {\n     \
    \   let grade = grades[i]\n        let remainder = grade % 1.0\n\n        if remainder\
    \ <= 0.9 {\n            total += 1.0\n        }\n        \n        if total >\
    \ gradeRange {\n            result.append(letterGrade(grade))\n            total\
    \ = 0\n        } else {\n            result.append(letterGrade(remainder))\n \
    \       }\n    }\n    \n    return result", "    var letterGrades: [String] =\
    \ []\n    guard grades.count == 7 else {\n        return letterGrades\n    }\n\
    \    let gpa = grades[0]\n    if gpa.truncatingRemainder(dividingBy: 3.0) < 2.0\
    \ {\n        let gpa3 = gpa.truncatingRemainder(dividingBy: 3.0)\n        if gpa3\
    \ < 3.0 {\n            letterGrades.append(\"A+\")\n        } else if gpa3 > 3.0\
    \ && gpa3 <= 4.0 {\n            letterGrades.append(\"A\")\n        } else if\
    \ gpa3 > 4.0 {\n            letterGrades.append(\"B+\")\n        }\n    }\n  \
    \  if gpa.truncatingRemainder(dividingBy: 3.0) < 1.0 {\n        let gpa2 = gpa.truncatingRemainder(dividingBy:\
    \ 3.0)\n        if gpa2 < 3.0 {\n            letterGrades.append(\"A\")\n    \
    \    } else if gpa2 > 3.0 && gpa2 <= 4.0 {\n            letterGrades.append(\"\
    A-\")\n        } else if gpa2 > 4.0 {\n            letterGrades.append(\"B\")\n\
    \        }\n    }\n    if gpa.truncatingRemainder(dividingBy: 3.0) < 0.7 {\n \
    \       let gpa1 = gpa.truncatingRemainder(dividingBy: 3.0)\n        if gpa1 <\
    \ 3.0 {\n            letterGrades.append(\"B\")\n        } else if gpa1 > 3.0\
    \ && gpa1 <= 4.0 {\n            letterGrades.append(\"B-\")\n        } else if\
    \ gpa1 > 4.0 {\n            letterGrades.append(\"C\")\n        }\n    }\n   \
    \ if gpa.truncatingRemainder(dividingBy: 3.0) < 0.1 {\n        let gpa0 = gpa.truncatingRemainder(dividingBy:\
    \ 3.0)\n        if gpa0 < 3.0 {\n            letterGrades.append(\"C\")\n    \
    \    } else if gpa0 > 3.0 && gpa0 <= 4.0 {\n            letterGrades.append(\"\
    C-\")\n        } else if gpa0 > 4.0 {\n            letterGrades.append(\"D+\"\
    )\n        }\n    }\n    if gpa.truncatingRemainder(dividingBy: 3.0) < 0.0 {\n\
    \        let gpa7 = gpa.truncatingRemainder(dividingBy: 3.0)\n        if gpa7\
    \ < 3.0 {\n            letterGrades.append(\"D\")\n        } else if gpa7 > 3.0\
    \ && gpa7 <= 4.0 {\n            letterGrades.append(\"D-\")\n        }\n    }\n\
    \    if gpa.truncatingRemainder(dividingBy: 3.0) < -1.0 {", "    var gradeLetters\
    \ = [String]()\n\n    if grades.count <= 1 {\n        return gradeLetters\n  \
    \  }\n\n    if grades.count > 1 {\n        let gpa = grades.reduce(0, +)\n   \
    \     let numGrades = Int(gpa)\n        let gpaPoints = (grades[grades.count -\
    \ 1] * 4).rounded(.up)\n        let gpaPercent = Double(gpaPoints).truncatingRemainder(.allFinite)\n\
    \        let firstGrade = Double(grades[0]).truncatingRemainder(.allFinite)\n\
    \        let gpaPercentPer = Double(firstGrade).truncatingRemainder(.allFinite)\n\
    \        let lastGrade = Double(grades[grades.count - 1]).truncatingRemainder(.allFinite)\n\
    \        let lastPercent = Double(lastGrade).truncatingRemainder(.allFinite)\n\
    \        let numGrades2 = Int(numGrades)\n        let gpaPoints2 = (gpaPoints\
    \ / numGrades).rounded(.up)\n        let gpaPercent2 = Double(gpaPoints2).truncatingRemainder(.allFinite)\n\
    \        let firstGrade2 = Double(grades[grades.count - 1] / numGrades).rounded(.up)\n\
    \        let gpaPercentPer = Double(firstGrade2).truncatingRemainder(.allFinite)\n\
    \        let lastGrade2 = Double(grades[grades.count - 1] / numGrades) * lastPercent\n\
    \        let lastPercent2 = Double(lastGrade2).truncatingRemainder(.allFinite)\n\
    \        let gpaPercentSum = Double(gpaPoints2 + gpaPoints2 / numGrades2 + lastPercent2).truncatingRemainder(.allFinite)\n\
    \n        if gpaPercent == 0 {\n            gradeLetters.append(grades[0])\n \
    \           return gradeLetters\n        }\n\n        // First Letter Grade\n\
    \        if gpaPercent <= gpaPercentPer {\n            gradeLetters.append(\"\
    A+\")\n        } else {\n            gradeLetters.append(\"A-\")\n        }\n\n\
    \        // Second Letter Grade\n        if gpaPercent <= gpaPercentSum {\n  \
    \          gradeLetters.append(\"A\")\n        } else {\n            gradeLetters.append(\"\
    B+\")\n        }\n\n        // Third Letter Grade\n        if gpaPercent <= lastPercent\
    \ {\n            gradeLetters.append(\"B\")\n        } else {\n            gradeLetters.append(\"\
    B-\")\n        }\n\n        // Fourth Letter Grade\n        if gpaPercent <= gpaPercent2\
    \ {\n            gradeLetter", "    var letterGrades = [String]()\n\n    for grade\
    \ in grades {\n        switch grade {\n        case 3.5:\n            letterGrades.append(\"\
    D+\")\n        case 3.0:\n            letterGrades.append(\"D-\")\n        case\
    \ 2.7:\n            letterGrades.append(\"B\")\n        case 2.3:\n          \
    \  letterGrades.append(\"B-\")\n        case 1.7:\n            letterGrades.append(\"\
    C\")\n        case 1.3:\n            letterGrades.append(\"C-\")\n        case\
    \ 1:\n            letterGrades.append(\"C\")\n        case 0.7:\n            letterGrades.append(\"\
    D\")\n        case 0:\n            letterGrades.append(\"D\")\n        case 0.3:\n\
    \            letterGrades.append(\"D-\")\n        case 0:\n            letterGrades.append(\"\
    E\")\n        case -3.5:\n            letterGrades.append(\"D+\")\n        case\
    \ -3.0:\n            letterGrades.append(\"D-\")\n        case -2.7:\n       \
    \     letterGrades.append(\"B\")\n        case -2.3:\n            letterGrades.append(\"\
    B-\")\n        case -1.7:\n            letterGrades.append(\"C\")\n        case\
    \ -1.3:\n            letterGrades.append(\"C-\")\n        case -1:\n         \
    \   letterGrades.append(\"C\")\n        case -0.7:\n            letterGrades.append(\"\
    D\")\n        case -0:\n            letterGrades.append(\"D\")\n        case -0.3:\n\
    \            letterGrades.append(\"D-\")\n        case -1:\n            letterGrades.append(\"\
    E\")\n        default:\n            letterGrades.append(\"A\")\n        }\n  \
    \  }\n    return letterGrades", "    var letterGrades = [String]()\n\n    for\
    \ grade in grades {\n        var letterGrade = \"\"\n\n        switch grade {\n\
    \        case 0.0 <= grade && grade < 1.0:\n            letterGrade = \"D+\"\n\
    \        case 1.0 <= grade && grade < 2.0:\n            letterGrade = \"D\"\n\
    \        case 2.0 <= grade && grade < 3.0:\n            letterGrade = \"C+\"\n\
    \        case 3.0 <= grade && grade < 4.0:\n            letterGrade = \"C\"\n\
    \        case 4.0 <= grade && grade < 5.0:\n            letterGrade = \"B-\"\n\
    \        case 5.0 <= grade && grade < 6.0:\n            letterGrade = \"B\"\n\
    \        case 6.0 <= grade && grade < 7.0:\n            letterGrade = \"A-\"\n\
    \        case 7.0 <= grade && grade < 8.0:\n            letterGrade = \"A\"\n\
    \        case 8.0 <= grade && grade < 9.0:\n            letterGrade = \"A+\"\n\
    \        case 9.0 <= grade && grade < 10.0:\n            letterGrade = \"B+\"\n\
    \        case 10.0 <= grade && grade < 11.0:\n            letterGrade = \"B\"\n\
    \        case 11.0 <= grade && grade < 12.0:\n            letterGrade = \"C+\"\
    \n        case 12.0 <= grade && grade < 13.0:\n            letterGrade = \"C\"\
    \n        case 13.0 <= grade && grade < 14.0:\n            letterGrade = \"D-\"\
    \n        case 14.0 <= grade && grade < 15.0:\n            letterGrade = \"D\"\
    \n        case 15.0 <= grade && grade < 16.0:\n            letterGrade = \"D+\"\
    \n        default:\n            letterGrade = \"E\"\n        }\n\n        letterGrades.append(letterGrade)\n\
    \    }\n\n    return letterGrades", "    \n    var grade = \"\"\n    \n    for\
    \ grade in grades {\n        switch grade {\n            case 3.0:\n         \
    \       grade = \"A+\"\n            case 3.1:\n                grade = \"A\"\n\
    \            case 3.2:\n                grade = \"A-\"\n            case 3.3:\n\
    \                grade = \"B+\"\n            case 3.4:\n                grade\
    \ = \"B\"\n            case 3.5:\n                grade = \"B-\"\n           \
    \ case 3.6:\n                grade = \"C+\"\n            case 3.7:\n         \
    \       grade = \"C\"\n            case 3.8:\n                grade = \"C-\"\n\
    \            case 3.9:\n                grade = \"D+\"\n            case 4.0:\n\
    \                grade = \"D\"\n            case 4.1:\n                grade =\
    \ \"D-\"\n            case 4.2:\n                grade = \"E\"\n            default:\n\
    \                grade = \"Invalid input\"\n        }\n    }\n    return grade",
  "    let minGrade = grades.min()\n    let maxGrade = grades.max()\n    let range\
    \ = minGrade < 0 ? minGrade - maxGrade : maxGrade - minGrade\n    \n    var letterGrades\
    \ = [String]()\n    let letterGrade = \"E\"\n    var letterGradeIndex = -1\n \
    \   \n    for i in 0 ..< grades.count {\n        let grade = grades[i]\n     \
    \   let remainder = grade % range\n        letterGradeIndex = remainder < 0 ?\
    \ letterGradeIndex + 1 : letterGradeIndex\n        letterGrades[letterGradeIndex].append(grade\
    \ > 0 ? \"A+\" : string(grade % 1) + \"A\")\n    }\n    \n    return letterGrades",
  "    var output = [String]()\n    \n    // Write code here.\n    \n    return output",
  "    let grades_sum = grades.reduce(0, {$0 + $1})\n    let result = [String]()\n\
    \    if grades_sum > 1.0 {\n        \n        grades.reverse()\n        \n   \
    \     var index = grades.startIndex\n        for n in grades {\n            let\
    \ grade = grades[index]\n            if grade < 0.7 {\n                result.append(String(grade))\n\
    \            }\n            if grade >= 0.7 {\n                \n            \
    \    result.append(String(grade))\n                result.append(String(\"-\"\
    ))\n            }\n            \n            index += 1.0\n        }\n    }\n\
    \    return result", "    \n    var gradesStrings = [String]()\n    \n    let\
    \ totalGrades = grades.reduce(0, combine: { (accum, grade) -> Double in\n    \
    \    return accum + grade\n    })\n    \n    let averageGrade = totalGrades /\
    \ Double(grades.count)\n    \n    var letterGrade: String = grades.last! >= averageGrade\
    \ ? \"D-\" : \"D\"\n    \n    for gradeIndex in grades.indices {\n        let\
    \ grade = grades[gradeIndex]\n        let currentLetterGrade: String\n       \
    \ \n        if grade >= averageGrade {\n            currentLetterGrade = \"D+\"\
    \n        } else {\n            currentLetterGrade = \"D\"\n        }\n      \
    \  \n        for index = 0 to gradeIndex {\n            let previousGrade = grades[index-1]\n\
    \            let nextGrade = grades[index+1]\n            \n            if index\
    \ == gradeIndex - 1 && gradeIndex != grades.count - 1 && nextGrade != 0.0 {\n\
    \                let nextLetterGrade: String\n                \n             \
    \   if nextGrade >= averageGrade {\n                    nextLetterGrade = \"D-\"\
    \n                } else {\n                    nextLetterGrade = \"D\"\n    \
    \            }\n                \n                letterGrade = currentLetterGrade\
    \ + nextLetterGrade\n                break\n            }\n            \n    \
    \        letterGrade = currentLetterGrade + \"-\"\n        }\n        \n     \
    \   gradesStrings.append(letterGrade)\n    }\n    \n    return gradesStrings",
  "    var letter_grades: [String] = []\n    if grades.isEmpty {\n        return letter_grades\n\
    \    }\n\n    let gpas = grades.map { String($0) }\n    let lowest_gpa = grades.min()\
    \ ?? 0\n    let highest_gpa = grades.max() ?? 0\n\n    let gpa = gpas.max()\n\
    \    let index = (gpas - gpa).count\n\n    if index < 3 {\n        letter_grades.append(lowest_gpa)\n\
    \    }\n\n    for i in 0..<index {\n        letter_grades.append(gpas.first!)\n\
    \    }\n\n    for i in 0..<index {\n        letter_grades.append(gpas[index -\
    \ 1 - i] ?? highest_gpa)\n    }\n\n    return letter_grades", "    let average\
    \ = grades.reduce(0.0, +) / Double(grades.count)\n    let result: [String] = [\"\
    A+\", \"B\", \"C-\", \"C\", \"A-\"]\n\n    for index in stride(from: grades.count-1,\
    \ to: 0, by: -1) {\n        let gpa = grades[index]\n        let letterGrade =\
    \ result[index+1]\n\n        let finalGPA = gpa + average\n\n        if finalGPA\
    \ >= 3.0 {\n            if letterGrade == \"D+\" {\n                letterGrade\
    \ = \"D\"\n            } else if letterGrade == \"D\" {\n                letterGrade\
    \ = \"D-\"\n            } else if letterGrade == \"C+\" {\n                letterGrade\
    \ = \"C\"\n            } else if letterGrade == \"C\" {\n                letterGrade\
    \ = \"C-\"\n            } else if letterGrade == \"B-\" {\n                letterGrade\
    \ = \"B\"\n            } else if letterGrade == \"B\" {\n                letterGrade\
    \ = \"B+\"\n            } else if letterGrade == \"A-\" {\n                letterGrade\
    \ = \"A\"\n            } else if letterGrade == \"A\" {\n                letterGrade\
    \ = \"A+\"\n            }\n        }\n\n        result[index] = letterGrade\n\
    \    }\n\n    return result", "    var letter_grades = [String]()\n    for grade\
    \ in grades {\n        var letter_grade = \"\"\n        if grade < 3 {\n     \
    \       letter_grade = \"A+\"\n        } else if grade < 4 {\n            letter_grade\
    \ = \"A\"\n        } else if grade < 5 {\n            letter_grade = \"A-\"\n\
    \        } else if grade < 6 {\n            letter_grade = \"B+\"\n        } else\
    \ if grade < 7 {\n            letter_grade = \"B\"\n        } else if grade <\
    \ 8 {\n            letter_grade = \"B-\"\n        } else if grade < 9 {\n    \
    \        letter_grade = \"C+\"\n        } else if grade < 10 {\n            letter_grade\
    \ = \"C\"\n        } else if grade < 11 {\n            letter_grade = \"C-\"\n\
    \        } else if grade < 12 {\n            letter_grade = \"D+\"\n        }\
    \ else if grade < 13 {\n            letter_grade = \"D\"\n        } else if grade\
    \ < 14 {\n            letter_grade = \"D-\"\n        } else if grade < 15 {\n\
    \            letter_grade = \"E\"\n        }\n        letter_grades.append(letter_grade)\n\
    \    }\n    return letter_grades", "    var letterGrades: [String] = []\n    for\
    \ grade in grades {\n        if grade >= 3.0 {\n            letterGrades.append(\"\
    A+\")\n        }\n        else if grade >= 2.7 {\n            letterGrades.append(\"\
    B\")\n        }\n        else if grade >= 2.3 {\n            letterGrades.append(\"\
    B-\")\n        }\n        else if grade >= 2.0 {\n            letterGrades.append(\"\
    C+\")\n        }\n        else if grade >= 1.7 {\n            letterGrades.append(\"\
    C\")\n        }\n        else if grade >= 1.3 {\n            letterGrades.append(\"\
    C-\")\n        }\n        else if grade >= 1.0 {\n            letterGrades.append(\"\
    D+\")\n        }\n        else if grade >= 0.7 {\n            letterGrades.append(\"\
    D\")\n        }\n        else if grade >= 0.0 {\n            letterGrades.append(\"\
    D-\")\n        }\n        else {\n            letterGrades.append(\"E\")\n   \
    \     }\n    }\n    return letterGrades", "    // Your code goes here\n    let\
    \ gradesCount = grades.count\n    var letterGrades = [String]()\n    if gradesCount\
    \ == 0 {\n        letterGrades.append(\"\")\n        return letterGrades\n   \
    \ }\n    var index = 0\n    if grades[0] < 3.0 {\n        letterGrades.append(\"\
    E\")\n    } else {\n        letterGrades.append(\"A\")\n        index++\n    }\n\
    \    let sortedGrades = grades.sorted()\n    for grade in sortedGrades {\n   \
    \     if grade > 3.0 {\n            letterGrades.append(String(sortedGrades[index].uppercased()))\n\
    \            index = index + 1\n        }\n    }\n    return letterGrades", " \
    \   var output = [String]()\n    for i in 0 ..< grades.count {\n        if grades[i]\
    \ >= 3.0 {\n            if grades[i] > 3.0 {\n                if grades[i] > 2.0\
    \ {\n                    if grades[i] > 1.0 {\n                        if grades[i]\
    \ > 0.4 {\n                            if grades[i] > 0.0 {\n                \
    \                output.append(\"A+\")\n                            } else {\n\
    \                                output.append(\"E\")\n                      \
    \      }\n                        } else {\n                            if grades[i]\
    \ > 0.2 {\n                                if grades[i] > 0.0 {\n            \
    \                        output.append(\"A-\")\n                             \
    \   } else {\n                                    output.append(\"D-\")\n    \
    \                            }\n                            } else {\n       \
    \                         if grades[i] > 0.1 {\n                             \
    \       if grades[i] > 0.0 {\n                                        output.append(\"\
    B+\")\n                                    } else {\n                        \
    \                output.append(\"C+\")\n                                    }\n\
    \                                } else {\n                                  \
    \  if grades[i] > 0.0 {\n                                        output.append(\"\
    B\")\n                                    } else {\n                         \
    \               output.append(\"C\")\n                                    }\n\
    \                                }\n                            }\n          \
    \              }\n                    } else {\n                        if grades[i]\
    \ > 0.2 {\n                            if grades[i] > 0.0 {\n                \
    \                output.append(\"B-\")\n                            } else {\n\
    \                                output.append(\"C\")\n                      \
    \      }\n                        } else {\n                            if grades[i]\
    \ > 0.3 {\n                                if grades[i] > 0.0 {\n            \
    \                        output.append(\"C-\")\n                             \
    \   } else {\n                                    output.append(\"D\")\n     \
    \                           }\n                            } else {\n        \
    \                        if grades[i] > 0.0 {\n                              \
    \      output.append(\"D\")\n                                } else {\n      \
    \                              output.append(\"E\")\n                        \
    \        }\n                            }\n                        }\n       \
    \             }\n                } else {\n                    if grades[i] >\
    \ 2.0 {\n                        if grades[i] > 1.1 {\n                      \
    \      if grades[i] > 0.4 {\n                                if grades[i] > 0.0\
    \ {\n                                    output.append(\"A+\")\n             \
    \                   } else {\n                                    output.append(\"\
    E\")\n                                }\n                            } else {\n\
    \                                if grades[i] > 0.3 {\n                      \
    \              if grades[i] > 0.0 {\n                                        output.append(\"\
    A-\")\n                                    } else {\n                        \
    \                output.append(\"D-\")\n                                    }\n\
    \                                } else {\n                                  \
    \  if grades[i] > 0.2 {\n                                        if grades[i]\
    \ > 0.0 {\n                                            output.append(\"B+\")\n\
    \                                        } else {\n                          \
    \                  output.append(\"C+\")\n                                   \
    \     }\n                                    } else {\n                      \
    \                  if grades[i] > 0.0 {\n                                    \
    \        output.append(\"B\")\n                                        } else\
    \ {\n                                            output.append(\"C\")\n      \
    \                                  }\n                                    }\n\
    \                                }\n                            }\n          \
    \              } else {\n                            if grades[i] > 1.1 {\n  \
    \                              if grades[i] > 0.4 {\n                        \
    \            if grades[i] > 0.0 {\n                                        output.append(\"\
    A-\")\n                                    } else {\n                        \
    \                output.append(\"D+\")\n                                    }\n\
    \                                } else {\n                                  \
    \  if grades[i] > 0.3 {\n                                        if grades[i]\
    \ > 0.0 {\n                                            output.append(\"B-\")\n\
    \                                        ", "    var gradesArr: [String] = Array(repeating:\
    \ \"\", count: grades.count)\n    var gpa: Double = 0.0\n    var grade: Character\
    \ = \"E\"\n    \n    gradesArr[0] = grade\n    for gpa in grades {\n        if\
    \ (gpa > 3.7) {\n            grade = \"A+\"\n        } else if ((gpa > 3.3) &&\
    \ (gpa < 3.7)) {\n            grade = \"A\"\n        } else if ((gpa > 3.0) &&\
    \ (gpa < 3.3)) {\n            grade = \"A-\"\n        } else if ((gpa > 2.7) &&\
    \ (gpa < 3.0)) {\n            grade = \"B+\"\n        } else if ((gpa > 2.3) &&\
    \ (gpa < 2.7)) {\n            grade = \"B\"\n        } else if ((gpa > 2.0) &&\
    \ (gpa < 2.3)) {\n            grade = \"B-\"\n        } else if ((gpa > 1.7) &&\
    \ (gpa < 2.0)) {\n            grade = \"C+\"\n        } else if ((gpa > 1.3) &&\
    \ (gpa < 1.7)) {\n            grade = \"C\"\n        } else if ((gpa > 1.0) &&\
    \ (gpa < 1.3)) {\n            grade = \"C-\"\n        } else if ((gpa > 0.7) &&\
    \ (gpa < 1.0)) {\n            grade = \"D+\"\n        } else if ((gpa > 0.0) &&\
    \ (gpa < 0.7)) {\n            grade = \"D\"\n        } else {\n            grade\
    \ = \"D-\"\n        }\n        gradesArr[grades.count - 1] = grade\n    }\n  \
    \  return gradesArr", "    // Your code here\n    return letterGrades(grades:\
    \ grades)", "    var letter_grades = [String]()\n    \n    let gpa = grades.filter{$0\
    \ > 0}\n    \n    var current_letter = String()\n    var current_gpa: Double =\
    \ 0.0\n    \n    for i in 0..<gpa.count{\n        let a = gpa[i]\n        current_gpa\
    \ += a\n        if current_gpa > 5.0 {\n            current_letter = \"D-\"\n\
    \            break\n        } else if current_gpa > 3.0 {\n            current_letter\
    \ = \"C+\"\n            break\n        } else if current_gpa > 2.0 {\n       \
    \     current_letter = \"B+\"\n            break\n        } else if current_gpa\
    \ > 1.0 {\n            current_letter = \"A-\"\n            break\n        } else\
    \ if current_gpa > 0.0 {\n            current_letter = \"A+\"\n            break\n\
    \        }\n        \n        letter_grades.append(current_letter)\n    }\n  \
    \  \n    return letter_grades", "    let sortedGrades = grades.sorted(by: <)\n\
    \    let numericalGrades = Array(sortedGrades).map({ String(format: \"%1.2f\"\
    , $0) })\n    var letterGrades = [String]()\n    let min = sortedGrades.min()!\n\
    \    let max = sortedGrades.max()!\n    let range = max - min\n    let gpa = Array(sortedGrades).map({\
    \ String(format: \"%1.2f\", $0) })\n    for index in 0..<gpa.count {\n       \
    \ let grade = Int(gpa[index]) * range / 4\n        let letterGrade = letter grade\
    \ (grade: grade, min: min, max: max)\n        letterGrades.append(letterGrade)\n\
    \    }\n    return letterGrades", "    if grades.isEmpty() {\n        return []\n\
    \    }\n    var letterGrades: [String] = []\n    var grade: Double = 0\n    \n\
    \    for i in 1...grades.count {\n        grade = grades[i-1]\n        if grade\
    \ < 4.0 {\n            letterGrades.append(\"D+\")\n        } else if grade <\
    \ 3.7 {\n            letterGrades.append(\"D\")\n        } else if grade < 3.3\
    \ {\n            letterGrades.append(\"C-\")\n        } else if grade < 3.0 {\n\
    \            letterGrades.append(\"C\")\n        } else if grade < 2.7 {\n   \
    \         letterGrades.append(\"B-\")\n        } else if grade < 2.3 {\n     \
    \       letterGrades.append(\"B\")\n        } else if grade < 2.0 {\n        \
    \    letterGrades.append(\"B-\")\n        } else if grade < 1.7 {\n          \
    \  letterGrades.append(\"B\")\n        } else if grade < 1.3 {\n            letterGrades.append(\"\
    B-\")\n        } else if grade < 1.0 {\n            letterGrades.append(\"B\"\
    )\n        } else if grade < 0.7 {\n            letterGrades.append(\"B-\")\n\
    \        } else if grade < 0.3 {\n            letterGrades.append(\"B\")\n   \
    \     } else if grade < 0.0 {\n            letterGrades.append(\"D-\")\n     \
    \   } else if grade < -0.3 {\n            letterGrades.append(\"D\")\n       \
    \ } else if grade < -0.7 {\n            letterGrades.append(\"D+\")\n        }\
    \ else if grade < -1.7 {\n            letterGrades.append(\"D\")\n        } else\
    \ if grade < -2.3 {\n            letterGrades.append(\"D\")\n        } else if\
    \ grade < -3.0 {\n            letterGrades.append(\"D-\")\n        } else if grade\
    \ < -3.3 {\n            letterGrades.append(\"D-\")\n        } else if grade <\
    \ -3.7 {\n            letterGrades.append(\"D+\")\n        } else {\n        \
    \    letterGrades.append(\"E\")\n        }\n    }\n    return letterGrades", " \
    \   var letterGrades = [String]()\n    guard let gradeArray = grades.compactMap\
    \ { $0 }\n    else {\n        return letterGrades\n    }\n    let averageGrade\
    \ = gradeArray.mean() ?? 0.0\n    gradeArray.forEach { \n        let normalizedGrade\
    \ = ($0 - averageGrade)/gradeArray.count\n        let gradeLetter = gradeToLetter(normalizedGrade)\n\
    \        letterGrades.append(gradeLetter)\n    }\n    return letterGrades"]
stop_tokens:
- "\n}"

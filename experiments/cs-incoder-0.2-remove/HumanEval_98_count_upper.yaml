name: HumanEval_98_count_upper
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string s, count the number of uppercase vowels in even\
  \ indices.\n    // For example:\n    public static long CountUpper(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountUpper((\"\
  aBCdEf\")) == (1L));\n    Debug.Assert(CountUpper((\"abcdefg\")) == (0L));\n   \
  \ Debug.Assert(CountUpper((\"dBBE\")) == (0L));\n    Debug.Assert(CountUpper((\"\
  B\")) == (0L));\n    Debug.Assert(CountUpper((\"U\")) == (1L));\n    Debug.Assert(CountUpper((\"\
  \")) == (0L));\n    Debug.Assert(CountUpper((\"EEEE\")) == (2L));\n    }\n\n}\n"
completions: ["        long vowels = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        long vowelCount = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                vowels += (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U');\n            }\n        }\n \
    \       return vowels;", "        long vowels = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                vowels++;\n      \
    \      }\n            if (c % 2 == 0) {\n                vowels += s.Count(c =>\
    \ char.IsUpper(c));\n            }\n        }\n        return vowels;", "    \
    \    int evenIndex = 0;\n        long upperCount = 0;\n        foreach (char c\
    \ in s) {\n            if (char.IsUpper(c)) {\n                upperCount++;\n\
    \                if (evenIndex % 2 == 0) {\n                    upperCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return upperCount;", "        long vowels = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n   \
    \         if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n       \
    \             upperCount++;\n            }\n        }\n        return upperCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     int evenIndex = 0;\n        long vowelCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                vowelCount++;\n\
    \                if (evenIndex % 2 == 0) {\n                    vowelCount +=\
    \ (int)Char.GetNumericValue(c);\n                }\n                evenIndex++;\n\
    \            }\n        }\n        return vowelCount;", "        int count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long vowelCount = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n                    vowelCount++;\n                }\n  \
    \          }\n        }\n        return vowelCount;", "        int evenIndex =\
    \ 0;\n        int upperCount = 0;\n        foreach (char c in s) {\n         \
    \   if (char.IsUpper(c)) {\n                upperCount++;\n                if\
    \ (evenIndex % 2 == 0) {\n                    upperCount++;\n                }\n\
    \            }\n            evenIndex++;\n        }\n        return upperCount;",
  "        int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n   \
    \         if (Char.IsUpper(s[i]))\n                upperCount++;\n           \
    \ if (i % 2 == 0)\n                upperCount += s.Count(c => Char.IsUpper(c));\n\
    \        }\n        return upperCount;", "        int upperCount = 0;\n      \
    \  for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n     \
    \           if (char.IsUpper(s[i]))\n                    upperCount++;\n     \
    \       }\n        }\n        return upperCount;", "        int upperCount = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    upperCount++;\n\
    \            }\n        }\n        return upperCount;", "        long vowels =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                vowels += (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U');\n            }\n        }\n        return vowels;",
  "        long vowelCount = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n            }\n            if (char.IsUpper",
  "        int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n   \
    \         if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n       \
    \             upperCount++;\n            }\n        }\n        return upperCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n             \
    \       count++;\n            }\n        }\n        return count;", "        int\
    \ evenIndex = 0;\n        int vowelCount = 0;\n        foreach (char c in s) {\n\
    \            if (char.IsUpper(c)) {\n                if (evenIndex % 2 == 0) {\n\
    \                    vowelCount++;\n                }\n                evenIndex++;\n\
    \            }\n        }\n        return vowelCount;", "        long vowels =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        long vowelCount =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] ==\
    \ 'O' || s[i] == 'U') {\n                    vowelCount++;\n                }\n\
    \            }\n        }\n        return vowelCount;", "        long vowels =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        int count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        int count = 0;\n      \
    \  for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n     \
    \           if (char.IsUpper(s[i]))\n                    count++;\n          \
    \  }\n        }\n        return count;", "        long vowels = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n          \
    \      vowels += (s.ToCharArray()[i] == 'A' || s.ToCharArray()[i] == 'E' || s.ToCharArray()[i]\
    \ == 'I' || s.ToCharArray()[i] == 'O' || s.ToCharArray()[i] == 'U');\n       \
    \     }\n        }\n        return vowels;", "        long vowels = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n    \
    \            if (Char.IsUpper(s[i]))\n                    vowels++;\n        \
    \    }\n        }\n        return vowels;", "        int upperCount = 0;\n   \
    \     for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n  \
    \              if (Char.IsUpper(s[i]))\n                    upperCount++;\n  \
    \          }\n        }\n        return upperCount;", "        long vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                vowels += s.ToUpper().Contains(s[i]) ? 1 : 0;\n            }\n\
    \        }\n        return vowels;", "        int evenIndex = 0;\n        long\
    \ vowelCount = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n                if (evenIndex % 2 == 0) {\n\
    \                    vowelCount++;\n                }\n            }\n       \
    \     evenIndex++;\n        }\n        return vowelCount;", "        long vowels\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                vowels += (s.ToCharArray()[i] == 'A' || s.ToCharArray()[i]\
    \ == 'E' || s.ToCharArray()[i] == 'I' || s.ToCharArray()[i] == 'O' || s.ToCharArray()[i]\
    \ == 'U');\n            }\n        }\n        return vowels;", "        long vowels\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                vowels += s.ToUpper().IndexOfAny(new char[] { 'A', 'E',\
    \ 'I', 'O', 'U' });\n            }\n        }\n        return vowels;", "    \
    \    int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U') {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        long vowels\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U') {\n                    vowels++;\n                }\n\
    \            }\n        }\n        return vowels;", "        int count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long vowels = 0;\n    \
    \    for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n   \
    \             if (char.IsUpper(s[i]))\n                    vowels++;\n       \
    \     }\n        }\n        return vowels;", "        int vowelCount = 0;\n  \
    \      for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n \
    \               if (char.IsUpper(s[i]))\n                    vowelCount++;\n \
    \           }\n        }\n        return vowelCount;", "        long vowels =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                vowels += (s.ToCharArray()[i] == 'A' || s.ToCharArray()[i]\
    \ == 'E' || s.ToCharArray()[i] == 'I' || s.ToCharArray()[i] == 'O' || s.ToCharArray()[i]\
    \ == 'U');\n            }\n        }\n        return vowels;", "        long vowels\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        int upperCount =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (char.IsUpper(s[i]))\n                    upperCount++;\n\
    \            }\n        }\n        return upperCount;", "        long count =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (Char.IsUpper(s[i]))\n                    count++;\n \
    \           }\n        }\n        return count;", "        long vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                char c = s[i];\n                if (char.IsUpper(c)) {\n    \
    \                vowels++;\n                }\n            }\n        }\n    \
    \    return vowels;", "        long vowels = 0;\n        foreach (char c in s)\
    \ {\n            if (char.IsUpper(c)) {\n                vowels++;\n         \
    \   }\n            if (char.IsUpper(c)) {\n                vowels++;\n       \
    \     }\n            if (char.IsUpper(c)) {\n                vowels++;\n     \
    \       }\n            if (char.IsUpper(c)) {\n                vowels++;\n   \
    \         }\n            if (char.IsUpper(c)) {\n                vowels++;\n \
    \           }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c", "        int evenIndex = 0;\n\
    \        int upperCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                upperCount++;\n                if (evenIndex\
    \ % 2 == 0) {\n                    upperCount++;\n                }\n        \
    \    }\n            evenIndex++;\n        }\n        return upperCount;", "  \
    \      long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n                    vowels++;\n   \
    \             }\n            }\n        }\n        return vowels;", "        int\
    \ evenIndex = 0;\n        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n            else\n             \
    \   evenIndex++;\n        }\n        return count;", "        int evenIndex =\
    \ 0;\n        long vowelCount = 0;\n        foreach (char c in s) {\n        \
    \    if (char.IsUpper(c)) {\n                if (evenIndex % 2 == 0) {\n     \
    \               vowelCount++;\n                }\n            }\n            evenIndex++;\n\
    \        }\n        return vowelCount;", "        long vowels = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n          \
    \      if (Char.IsUpper(s[i]))\n                    vowels++;\n            }\n\
    \        }\n        return vowels;", "        int upperCount = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n          \
    \      if (char.IsUpper(s[i]))\n                    upperCount++;\n          \
    \  }\n        }\n        return upperCount;", "        int upperCount = 0;\n \
    \       for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (char.IsUpper(s[i]))\n                    upperCount++;\n\
    \            }\n        }\n        return upperCount;", "        int count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        int count = 0;\n      \
    \  for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n     \
    \           if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U') {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", "        int vowels = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i]))\n         \
    \       vowels++;\n            if (i % 2 == 0)\n                vowels += (s[i]\
    \ - 'A') % 26; // even indices\n        }\n        return vowels;", "        long\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        int evenIndex = 0;\n\
    \        int vowelCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                vowelCount++;\n            }\n        \
    \    if (char.IsUpper(c) && evenIndex % 2 == 0) {\n                vowelCount++;\n\
    \            }\n            evenIndex++;\n        }\n        return vowelCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                vowels += (s[i] - 'A') % 26;\n     \
    \       }\n        }\n        return vowels;", "        int evenIndex = 0;\n \
    \       int vowelCount = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (evenIndex % 2 == 0) {\n                    vowelCount++;\n\
    \                }\n                evenIndex++;\n            }\n        }\n \
    \       return vowelCount;", "        int count = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     int evenIndex = 0;\n        long vowelCount = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    vowelCount++;\n            }\n            else\n        \
    \        evenIndex++;\n        }\n        return vowelCount;", "        int evenIndex\
    \ = 0;\n        long upperCount = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    upperCount++;\n            }\n            evenIndex++;\n\
    \        }\n        return upperCount;", "        long vowelCount = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n    \
    \            char c = s[i];\n                if (c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U') {\n                    vowelCount++;\n        \
    \        }\n            }\n        }\n        return vowelCount;", "        long\
    \ vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U') {\n                    vowelCount++;\n      \
    \          }\n            }\n        }\n        return vowelCount;", "       \
    \ int evenIndex = 0;\n        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n            evenIndex++;\n     \
    \   }\n        return count;", "        int count = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  int evenIndex = 0;\n        int upperCount = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                upperCount++;\n  \
    \              if (evenIndex % 2 == 0) {\n                    upperCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return upperCount;", "        long vowels = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         upperCount++;\n            }\n        }\n        return upperCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                vowels += s.ToUpper().Contains(s[i])\
    \ ? 1 : 0;\n            }\n        }\n        return vowels;", "        int vowelCount\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (char.IsUpper(s[i]))\n                    vowelCount++;\n\
    \            }\n        }\n        return vowelCount;", "        int count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long vowels = 0;\n    \
    \    for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n   \
    \             if (Char.IsUpper(s[i]))\n                    vowels++;\n       \
    \     }\n        }\n        return vowels;", "        long vowelCount = 0;\n \
    \       for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n                    vowelCount++;\n                }\n  \
    \          }\n        }\n        return vowelCount;", "        int evenIndex =\
    \ 0;\n        int upperCount = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    upperCount++;\n            }\n            if (i % 2 == 0\
    \ && Char.IsUpper(s[i]))\n                evenIndex++;\n        }\n        return\
    \ upperCount;", "        long vowels = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n      \
    \              vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n      \
    \              vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n               \
    \     vowels++;\n            }\n        }\n        return vowels;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        long vowelCount =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (char.IsUpper(s[i]))\n                    vowelCount++;\n\
    \            }\n        }\n        return vowelCount;", "        long count =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (char.IsUpper(s[i]))\n                    count++;\n \
    \           }\n        }\n        return count;", "        long vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n                    vowels++;\n                }\n      \
    \      }\n        }\n        return vowels;", "        int evenIndex = 0;\n  \
    \      int vowelCount = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n                if (evenIndex % 2 == 0) {\n\
    \                    if (vowelCount == 2) {\n                        return evenIndex;\n\
    \                    }\n                }\n                evenIndex++;\n    \
    \        }\n        }\n        return -1;", "        int vowels = 0;\n       \
    \ for (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i]))\n\
    \                vowels++;\n            if (i % 2 == 0)\n                vowels\
    \ += (s[i] - 'A') % 26; // even indices\n        }\n        return vowels;", " \
    \       int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n      \
    \              upperCount++;\n            }\n        }\n        return upperCount;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n      \
    \              vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n                    vowels++;\n   \
    \             }\n            }\n        }\n        return vowels;", "        int\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    vowels++;\n    \
    \        }\n        }\n        return vowels;", "        long vowels = 0;\n  \
    \      for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n \
    \               if (Char.IsUpper(s[i]))\n                    vowels++;\n     \
    \       }\n        }\n        return vowels;", "        long vowelCount = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                char c = s[i];\n                if (char.IsUpper(c)) {\n    \
    \                vowelCount++;\n                }\n            }\n        }\n\
    \        return vowelCount;", "        int vowelCount = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\
    \                    vowelCount++;\n                }\n            }\n       \
    \ }\n        return vowelCount;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (Char.IsUpper(s[i]))\n                    count++;\n            }\n        }\n\
    \        return count;", "        int count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n       \
    \             count++;\n                }\n            }\n        }\n        return\
    \ count;", "        int evenIndex = 0;\n        long vowelCount = 0;\n       \
    \ foreach (char c in s) {\n            if (char.IsUpper(c)) {\n              \
    \  if (evenIndex % 2 == 0) {\n                    vowelCount++;\n            \
    \    }\n            }\n            evenIndex++;\n        }\n        return vowelCount;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n              \
    \      vowels++;\n            }\n        }\n        return vowels;", "       \
    \ int evenIndex = 0;\n        long vowelCount = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                vowelCount++;\n  \
    \              if (evenIndex % 2 == 0) {\n                    vowelCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return vowelCount;", "        long vowels = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n      \
    \              vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                vowels += s.ToUpper().IndexOfAny(new char[]\
    \ { 'A', 'E', 'I', 'O', 'U' });\n            }\n        }\n        return vowels;",
  "        int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ int vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                  \
    \  vowels++;\n            }\n        }\n        return vowels;", "        long\
    \ vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c % 2 == 0) {\n                    vowels++;\n      \
    \          }\n            }\n        }\n        return vowels;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        int vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n                    vowels++;\n                }\n      \
    \      }\n        }\n        return vowels;", "        int evenIndex = 0;\n  \
    \      long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (evenIndex % 2 == 0) {\n                    count++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return count;", "        int count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        int vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n   \
    \         if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n       \
    \             vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        int evenIndex = 0;\n        int vowelCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                if (evenIndex\
    \ % 2 == 0) {\n                    vowelCount++;\n                }\n        \
    \    }\n            evenIndex++;\n        }\n        return vowelCount;", "  \
    \      int evenIndex = 0;\n        int upperCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                upperCount++;\n\
    \                if (evenIndex % 2 == 0) {\n                    upperCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return upperCount;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                vowels += (s.ToCharArray()[i] == 'A' || s.ToCharArray()[i]\
    \ == 'E' || s.ToCharArray()[i] == 'I' || s.ToCharArray()[i] == 'O' || s.ToCharArray()[i]\
    \ == 'U');\n            }\n        }\n        return vowels;", "        int upperCount\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (char.IsUpper(s[i]))\n                    upperCount++;\n\
    \            }\n        }\n        return upperCount;", "        int evenIndex\
    \ = 0;\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n    \
    \                count++;\n            }\n            if (i % 2 == 1 && char.IsUpper(s[i]))\n\
    \                evenIndex++;\n        }\n        return count;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        int evenIndex = 0;\n\
    \        long vowelCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                vowelCount++;\n                if (evenIndex\
    \ % 2 == 0) {\n                    vowelCount++;\n                }\n        \
    \    }\n            evenIndex++;\n        }\n        return vowelCount;", "  \
    \      int evenIndex = 0;\n        long vowelCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                vowelCount++;\n\
    \                if (evenIndex % 2 == 0) {\n                    vowelCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return vowelCount;", "        int count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     int evenIndex = 0;\n        long vowelCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                if (evenIndex\
    \ % 2 == 0) {\n                    vowelCount++;\n                }\n        \
    \        evenIndex++;\n            }\n        }\n        return vowelCount;",
  "        int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n   \
    \         if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n       \
    \             upperCount++;\n            }\n        }\n        return upperCount;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                char c = s[i];\n               \
    \ if (char.IsUpper(c)) {\n                    vowelCount++;\n                }\n\
    \            }\n        }\n        return vowelCount;", "        int vowelCount\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U') {\n                    vowelCount++;\n              \
    \  }\n            }\n        }\n        return vowelCount;", "        long vowels\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c", " \
    \       long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n         \
    \           vowels++;\n            }\n        }\n        return vowels;", "  \
    \      long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         vowels++;\n            }\n        }\n        return vowels;", "    \
    \    int evenIndex = 0;\n        int vowelCount = 0;\n        foreach (char c\
    \ in s) {\n            if (char.IsUpper(c)) {\n                vowelCount++;\n\
    \                if (evenIndex % 2 == 0) {\n                    vowelCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return vowelCount;", "        long vowels = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        int vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         vowels++;\n            }\n        }\n        return vowels;", "    \
    \    int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n              \
    \      count++;\n            }\n        }\n        return count;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        int evenIndex = 0;\n\
    \        long upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n    \
    \                upperCount++;\n            }\n            else\n            \
    \    evenIndex++;\n        }\n        return upperCount;", "        long count\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U') {\n                    count++;\n                }\n\
    \            }\n        }\n        return count;", "        long vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    vowels++;\n    \
    \        }\n        }\n        return vowels;", "        int evenIndex = 0;\n\
    \        int upperCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                upperCount++;\n            }\n        \
    \    if (char.IsUpper(c) && evenIndex % 2 == 0) {\n                upperCount++;\n\
    \            }\n            evenIndex++;\n        }\n        return upperCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     int evenIndex = 0;\n        long vowelCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                if (evenIndex\
    \ % 2 == 0) {\n                    vowelCount++;\n                }\n        \
    \    }\n            evenIndex++;\n        }\n        return vowelCount;", "  \
    \      long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  int evenIndex = 0;\n        int upperCount = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    upperCount++;\n            }\n            if (i % 2 == 0\
    \ && Char.IsUpper(s[i]))\n                evenIndex++;\n        }\n        return\
    \ evenIndex * upperCount;", "        int evenIndex = 0;\n        int vowelCount\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U') {\n                    vowelCount++;\n              \
    \  }\n            }\n            if (i % 2 == 1) {\n                if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \             vowelCount++;\n                }\n            }\n        }\n   \
    \     return vowelCount;", "        long vowels = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n               \
    \     vowels++;\n            }\n        }\n        return vowels;", "        int\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        int evenIndex = 0;\n\
    \        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n         \
    \           count++;\n            }\n            else\n                evenIndex++;\n\
    \        }\n        return count;", "        long vowels = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n               \
    \ if (char.IsUpper(s[i]))\n                    vowels++;\n            }\n    \
    \    }\n        return vowels;", "        int count = 0;\n        for (int i =\
    \ 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                char c = s[i];\n               \
    \ if (char.IsUpper(c)) {\n                    vowelCount++;\n                }\n\
    \            }\n        }\n        return vowelCount;", "        int vowels =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        long vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (char.IsUpper(s[i]))\n                    vowels++;\n    \
    \        }\n        }\n        return vowels;", "        long vowelCount = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    vowelCount++;\n\
    \            }\n        }\n        return vowelCount;", "        int evenIndex\
    \ = 0;\n        int vowelCount = 0;\n        foreach (char c in s) {\n       \
    \     if (char.IsUpper(c)) {\n                vowelCount++;\n                if\
    \ (evenIndex % 2 == 0) {\n                    vowelCount++;\n                }\n\
    \            }\n            evenIndex++;\n        }\n        return vowelCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n   \
    \         if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n       \
    \             vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n              \
    \      vowels++;\n            }\n        }\n        return vowels;", "       \
    \ long vowelCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n                    vowels++;\n   \
    \             }\n            }\n        }\n        return vowels;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        int evenIndex = 0;\n\
    \        long vowelCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                vowelCount++;\n                if (evenIndex\
    \ % 2 == 0) {\n                    vowelCount++;\n                }\n        \
    \    }\n            evenIndex++;\n        }\n        return vowelCount;", "  \
    \      int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n   \
    \         if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n       \
    \             upperCount++;\n            }\n        }\n        return upperCount;",
  "        int evenIndex = 0;\n        long vowelCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                vowelCount++;\n\
    \                if (evenIndex % 2 == 0) {\n                    vowelCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return vowelCount;", "        int evenIndex = 0;\n        long vowelCount\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (Char.IsUpper(s[i]))\n                    vowelCount++;\n\
    \            }\n            if (i % 2 == 1 && Char.IsUpper(s[i]))\n          \
    \      evenIndex++;\n        }\n        return vowelCount * evenIndex;", "   \
    \     long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         vowels++;\n            }\n        }\n        return vowels;", "    \
    \    long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n            \
    \        vowels++;\n            }\n        }\n        return vowels;", "     \
    \   long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n             \
    \       vowels++;\n            }\n        }\n        return vowels;", "      \
    \  long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                vowels += (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U');\n            }\n        }\n    \
    \    return vowels;", "        int vowelCount = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                char c =\
    \ s[i];\n                if (char.IsUpper(c)) {\n                    vowelCount++;\n\
    \                }\n            }\n        }\n        return vowelCount;", " \
    \       long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n         \
    \           vowels++;\n            }\n        }\n        return vowels;", "  \
    \      long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                vowels += (s.Substring(i, 1).ToUpper()\
    \ == \"A\");\n            }\n        }\n        return vowels;", "        int\
    \ evenIndex = 0;\n        int upperCount = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    upperCount++;\n            }\n            evenIndex++;\n\
    \        }\n        return upperCount;", "        int count = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n          \
    \      if (char.IsUpper(s[i]))\n                    count++;\n            }\n\
    \        }\n        return count;", "        long vowels = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n               \
    \ if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ {\n                    vowels++;\n                }\n            }\n       \
    \ }\n        return vowels;", "        long count = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        int evenIndex = 0;\n        long vowelCount = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                vowelCount++;\n\
    \                if (evenIndex % 2 == 0) {\n                    vowelCount++;\n\
    \                }\n            }\n            evenIndex++;\n        }\n     \
    \   return vowelCount;", "        long vowels = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    vowels++;\n            }\n        }\n        return vowels;",
  "        int vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n                    vowels++;\n   \
    \             }\n            }\n        }\n        return vowels;", "        int\
    \ upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                  \
    \  upperCount++;\n            }\n        }\n        return upperCount;", "   \
    \     int upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n    \
    \        if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n        \
    \            upperCount++;\n            }\n        }\n        return upperCount;",
  "        int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n               \
    \     vowels++;\n            }\n        }\n        return vowels;", "        int\
    \ evenIndex = 0;\n        int vowelCount = 0;\n        foreach (char c in s) {\n\
    \            if (char.IsUpper(c)) {\n                vowelCount++;\n         \
    \   }\n            if (char.IsUpper(c) && evenIndex % 2 == 0) {\n            \
    \    vowelCount++;\n            }\n            evenIndex++;\n        }\n     \
    \   return vowelCount;", "        int evenIndex = 0;\n        long vowelCount\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                vowelCount += s.ToCharArray()[i].ToString().ToUpper().Equals(\"\
    A\") ||\n                    s.ToCharArray()[i].ToString().ToUpper().Equals(\"\
    E\") ||\n                    s.ToCharArray()[i].ToString().ToUpper().Equals(\"\
    I\") ||\n                    s.ToCharArray()[i].ToString().ToUpper().Equals(\"\
    O\") ||\n                    s.ToCharArray()[i].ToString().ToUpper().Equals(\"\
    U\");\n            }\n            if (i % 2 == 1) {\n                evenIndex++;\n\
    \            }\n        }\n        return vowelCount;", "        int evenIndex\
    \ = 0;\n        int upperCount = 0;\n        foreach (char c in s) {\n       \
    \     if (char.IsUpper(c)) {\n                upperCount++;\n                if\
    \ (evenIndex % 2 == 0) {\n                    upperCount++;\n                }\n\
    \            }\n            evenIndex++;\n        }\n        return upperCount;",
  "        int count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n                    count++;\n    \
    \            }\n            }\n        }\n        return count;", "        int\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        int evenIndex = 0;\n\
    \        int vowelCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                if (evenIndex % 2 == 0) {\n           \
    \         vowelCount++;\n                }\n            }\n            evenIndex++;\n\
    \        }\n        return vowelCount;", "        int count = 0;\n        for\
    \ (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n          \
    \      if (Char.IsUpper(s[i]))\n                    count++;\n            }\n\
    \        }\n        return count;", "        int evenIndex = 0;\n        long\
    \ vowelCount = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowelCount++;\n                if (evenIndex % 2 == 0) {\n\
    \                    vowelCount++;\n                }\n            }\n       \
    \     evenIndex++;\n        }\n        return vowelCount;"]
stop_tokens:
- "\n    }\n"

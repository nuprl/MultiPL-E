name: HumanEval_72_will_it_fly
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that returns True if the object q will fly,\
  \ and False otherwise.\n    // The object q will fly if it's balanced (it is a palindromic\
  \ list) and the sum of its elements is less than or equal the maximum possible weight\
  \ w.\n    // Example:\n    // # 1+2 is less than the maximum possible weight, but\
  \ it's unbalanced.\n    // # it's balanced, but 3+2+3 is more than the maximum possible\
  \ weight.\n    // # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
  \    // # 3 is less than the maximum possible weight, and it's balanced.\n    public\
  \ static bool WillItFly(List<long> q, long w) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
  \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n   \
  \ Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
  \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
  \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
  \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
  \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_63_fibfib
results:
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib1 = Fibfib(n-1);\n
    \       long fibfib2 = Fibfib(n-2);\n        long fibfib3 = Fibfib(n-3);\n        return
    fibfib1 + fibfib2 + fibfib3;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    < 0) throw new ArgumentOutOfRangeException(\"n\");\n        if (n == 0) return
    0;\n        if (n == 1) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) +
    Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: n\n  at Problem.Fibfib
    (System.Int64 n) [0x0000a] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Fibfib
    (System.Int64 n) [0x00043] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <d89e7de648b5455281a560b9d05611b3>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: n\n  at Problem.Fibfib
    (System.Int64 n) [0x0000a] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Fibfib
    (System.Int64 n) [0x00043] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <d89e7de648b5455281a560b9d05611b3>:0 \n"
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long a = Fibfib(n
    - 1);\n        long b = Fibfib(n - 2);\n        long c = Fibfib(n - 3);\n        return
    a + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = 0;\n
    \       long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n - 2);\n
    \       long fibfib3 = Fibfib(n - 3);\n        fibfib = fibfib1 + fibfib2 + fibfib3;\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 1;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5bc6f2f2b27450eb954a39e531fd1ee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5bc6f2f2b27450eb954a39e531fd1ee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 1;\n        }\n        else if (n == 2) {\n
    \           fibfib = 2;\n        }\n        else {\n            fibfib = (Fibfib(n
    - 1) + Fibfib(n - 2)) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2edd940dfdc143168fa2dba2a07db35f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2edd940dfdc143168fa2dba2a07db35f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1 + fibfib2;\n        long fibfib5
    = fibfib3 + fibfib4;\n        long fibfib6 = fibfib5 + fibfib4;\n        long
    fibfib7 = fibfib6 + fibfib5;\n        long fibfib8 = fibfib7 + fibfib6;\n        long
    fibfib9 = fibfib8 + fibfib7;\n        long fibfib10 = fibfib9 + fibfib8;\n        long
    fibfib11 = fibfib10 + fibfib9;\n        long fibfib12 = fibfib11 + fibfib10;\n
    \       long fibfib13 = fibfib12 + fibfib11;\n        long fibfib14 = fibfib13
    + fibfib12;\n        long fibfib15 = fibfib14 + fibfib13;\n        long fibfib16
    = fibfib15 + fibfib14;\n        long fibfib17 = fibfib16 + fibfib15;\n        long
    fibfib18 = fibfib17 + fibfib16;\n        long fibfib19 = fibfib18 + fibfib17;\n
    \       long fibfib20 = fibfib19 + fibfib18;\n        long fibfib21 = fibfib20
    + fibfib19;\n        long fibfib22 = fibfib21 + fibfib20;\n        long fibfib23
    = fibfib22 + fibfib21;\n        long fibfib24 = fibfib23 + fibfib22;\n        long
    fibfib25 = fibfib24 + fibfib23;\n        long fibfib26 = fibfib25 + fibfib24;\n
    \       long fibfib27 = fibfib26 + fibfib25;\n        long fibfib28 = fibfib27
    + fibfib26;\n        long fibfib29 = fibfib28 + fibfib27;\n        long fibfib30
    = fibfib29 + fibfib28;\n        long fibfib31 = fibfib30 + fibfib29;\n        long
    fibfib32 = fibfib31 + fibfib30;\n        long fibfib33 = fibfib32 + fibfib31;\n
    \       long fibfib34 = fibfib33 + fibfib32;\n        long fibfib35 = fibfib34
    + fibfib33;\n        long fibfib36 = fibfib35 + fibfib34;\n        long fibfib37
    = fibfib36 + fibfib35;\n        long fibfib38\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp24ueiwl3.cs(54,22): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0)\n            fibfib = 0;\n        else if (n
    == 1)\n            fibfib = 0;\n        else if (n == 2)\n            fibfib =
    1;\n        else\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n
    - 3);\n        return fibfib;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3 = 0;\n        if
    (n == 0) {\n            fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib
    = 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n        if
    (n >= 3) {\n            fibfib2 = Fibfib(n - 1);\n            fibfib3 = Fibfib(n
    - 2);\n            fibfib = fibfib2 + fibfib3;\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6957dae78ae422aa5a12434f971c3fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6957dae78ae422aa5a12434f971c3fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 3) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f558fb663a25448fb1314f28b81cc8f5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f558fb663a25448fb1314f28b81cc8f5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = (Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3));\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0)\n            return 0;\n        if (n == 1)\n
    \           return 1;\n        if (n == 2)\n            return 1;\n        if
    (n <= 3)\n            return fibfib;\n        fibfib = (fibfib + Fibfib(n - 1)
    + Fibfib(n - 2) + Fibfib(n - 3));\n        return fibfib;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba81bd6311b2457b8d839d8333769211>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba81bd6311b2457b8d839d8333769211>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = 0;\n
    \       long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n - 2);\n
    \       long fibfib3 = Fibfib(n - 3);\n        fibfib = (fibfib1 + fibfib2 + fibfib3)
    % 10;\n        return fibfib;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return 0;\n        if (n == 2)\n            return
    1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 0;\n        }\n        if (n == 2) {\n            fibfib
    = 1;\n        }\n        if (n >= 3) {\n            fibfib = fibfib + Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        else\n            return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        long fibfib1 = Fibfib(n-1);\n
    \       long fibfib2 = Fibfib(n-2);\n        long fibfib3 = Fibfib(n-3);\n        return
    fibfib1 + fibfib2 + fibfib3;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo219sexd.cs(19,1514): error CS1026: ) expected

    /tmp/tmpo219sexd.cs(19,1514): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976803
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return 0;\n        else\n            return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1 + fibfib2;\n        long fibfib5
    = fibfib3 + fibfib4;\n        long fibfib6 = fibfib5 + fibfib4;\n        long
    fibfib7 = fibfib6 + fibfib5;\n        long fibfib8 = fibfib7 + fibfib6;\n        long
    fibfib9 = fibfib8 + fibfib7;\n        long fibfib10 = fibfib9 + fibfib8;\n        long
    fibfib11 = fibfib10 + fibfib9;\n        long fibfib12 = fibfib11 + fibfib10;\n
    \       long fibfib13 = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13
    + fibfib13;\n        long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16
    = fibfib15 + fibfib15;\n        long fibfib17 = fibfib16 + fibfib16;\n        long
    fibfib18 = fibfib17 + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n
    \       long fibfib20 = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20
    + fibfib20;\n        long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23
    = fibfib22 + fibfib22;\n        long fibfib24 = fibfib23 + fibfib23;\n        long
    fibfib25 = fibfib24 + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n
    \       long fibfib27 = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27
    + fibfib27;\n        long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30
    = fibfib29 + fibfib29;\n        long fibfib31 = fibfib30 + fibfib30;\n        long
    fibfib32 = fibfib31 + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n
    \       long fibfib34 = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34
    + fibfib34;\n        long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37
    = fibfib36 + fibfib36;\n        long fibfib\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaq6xl76u.cs(54,20): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3 = 0;\n        long
    fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6 = 0;\n        long
    fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9 = 0;\n        long
    fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12 = 0;\n        long
    fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15 = 0;\n        long
    fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18 = 0;\n        long
    fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21 = 0;\n        long
    fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24 = 0;\n        long
    fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27 = 0;\n        long
    fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30 = 0;\n        long
    fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33 = 0;\n        long
    fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36 = 0;\n        long
    fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39 = 0;\n        long
    fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42 = 0;\n        long
    fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45 = 0;\n        long
    fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48 = 0;\n        long
    fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51 = 0;\n        long
    fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54 = 0;\n        long
    fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57 = 0;\n        long
    fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60 = 0;\n        long
    fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63 = 0;\n        long
    fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66 = 0;\n        long
    fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69 = 0;\n        long
    fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72 = 0;\n        long
    fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpovaf9les.cs(16,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(17,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(18,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(19,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(20,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(21,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(22,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(23,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(24,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(25,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(26,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(27,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(28,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(29,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(30,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(31,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(32,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpovaf9les.cs(33,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long a = Fibfib(n
    - 1);\n        long b = Fibfib(n - 2);\n        long c = Fibfib(n - 3);\n        return
    a + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        long fibfib = (long)
    Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprvmfusse.cs(19,1514): error CS1026: ) expected

    /tmp/tmprvmfusse.cs(19,1514): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo219sexd.cs(19,1514): error CS1026: ) expected

    /tmp/tmpo219sexd.cs(19,1514): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = (long)
    Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnobe_mg8.cs(19,1514): error CS1026: ) expected

    /tmp/tmpnobe_mg8.cs(19,1514): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = 0;\n
    \       long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n - 2);\n
    \       long fibfib3 = Fibfib(n - 3);\n        fibfib = fibfib1 + fibfib2 + fibfib3;\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 0;\n        }\n        if (n == 2) {\n            fibfib
    = 1;\n        }\n        if (n >= 3) {\n            fibfib = fibfib + Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 0;\n        }\n        if (n == 2) {\n            fibfib
    = 1;\n        }\n        if (n >= 3) {\n            fibfib = fibfib + Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1 + fibfib2;\n        long fibfib5
    = fibfib3 + fibfib4;\n        long fibfib6 = fibfib5 + fibfib4;\n        long
    fibfib7 = fibfib6 + fibfib5;\n        long fibfib8 = fibfib7 + fibfib6;\n        long
    fibfib9 = fibfib8 + fibfib7;\n        long fibfib10 = fibfib9 + fibfib8;\n        long
    fibfib11 = fibfib10 + fibfib9;\n        long fibfib12 = fibfib11 + fibfib10;\n
    \       long fibfib13 = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13
    + fibfib13;\n        long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16
    = fibfib15 + fibfib15;\n        long fibfib17 = fibfib16 + fibfib16;\n        long
    fibfib18 = fibfib17 + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n
    \       long fibfib20 = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20
    + fibfib20;\n        long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23
    = fibfib22 + fibfib22;\n        long fibfib24 = fibfib23 + fibfib23;\n        long
    fibfib25 = fibfib24 + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n
    \       long fibfib27 = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27
    + fibfib27;\n        long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30
    = fibfib29 + fibfib29;\n        long fibfib31 = fibfib30 + fibfib30;\n        long
    fibfib32 = fibfib31 + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n
    \       long fibfib34 = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34
    + fibfib34;\n        long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37
    = fibfib36 + fibfib36;\n        long fibfib\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaq6xl76u.cs(54,20): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 1;\n        }\n        if (n == 2) {\n            fibfib
    = 2;\n        }\n        if (n >= 3) {\n            fibfib3 = Fibfib(n - 3);\n
    \           fibfib2 = Fibfib(n - 2);\n            fibfib1 = Fibfib(n - 1);\n            fibfib
    = fibfib1 + fibfib2 + fibfib3;\n        }\n        return fibfib;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3e9484e1be4949d28ef12b53995d4165>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3e9484e1be4949d28ef12b53995d4165>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 1)\n            return 0;\n        else\n            return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0214e906ce774fc8880921f18a2e805d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0214e906ce774fc8880921f18a2e805d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo219sexd.cs(19,1514): error CS1026: ) expected

    /tmp/tmpo219sexd.cs(19,1514): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 0;\n        }\n        if (n == 2) {\n            fibfib
    = 1;\n        }\n        if (n >= 3) {\n            fibfib = (fibfib * (n - 1))
    + fibfib * (n - 2) + fibfib * (n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09bcadf3e6da489fb8d49de38be520d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09bcadf3e6da489fb8d49de38be520d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long a = Fibfib(n-1);\n
    \       long b = Fibfib(n-2);\n        long c = Fibfib(n-3);\n        return a
    + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        long fibfib = 0;\n
    \       long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n
    \       long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n
    \       long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10 =
    1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13
    = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16
    = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19
    = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22
    = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25
    = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28
    = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31
    = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34
    = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37
    = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40
    = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43
    = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46
    = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49
    = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52
    = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55
    = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58
    = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61
    = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64
    = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67
    = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70
    = 1;\n        long fibfib71 = 1;\n        \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppy2ij1u3.cs(19,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(20,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(21,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(22,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(23,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(24,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(25,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(26,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(27,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(28,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(29,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(30,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(31,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(32,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(33,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(34,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(35,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmppy2ij1u3.cs(36,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    < 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7e3f13df6ab47319280e42886010d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7e3f13df6ab47319280e42886010d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = (long)
    Math.Pow(Fibfib(n-1), 2) + Fibfib(n-2);\n        return fibfib;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <994be466760149109440324fb2ed043f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <994be466760149109440324fb2ed043f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976803
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 1;\n        }\n        else if (n == 2) {\n
    \           fibfib = 2;\n        }\n        else {\n            fibfib = Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n        }\n        return fibfib;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8dd584d66e947569a838ae1f0884994>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8dd584d66e947569a838ae1f0884994>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = 0;\n
    \       fibfib += Fibfib(n - 1);\n        fibfib += Fibfib(n - 2);\n        fibfib
    += Fibfib(n - 3);\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long a = Fibfib(n-1);\n
    \       long b = Fibfib(n-2);\n        long c = Fibfib(n-3);\n        return a
    + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = 0;\n
    \       long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n - 2);\n
    \       long fibfib3 = Fibfib(n - 3);\n        fibfib = fibfib1 + fibfib2 + fibfib3;\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        long fibfib = 0;\n
    \       long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n - 2);\n
    \       long fibfib3 = Fibfib(n - 3);\n        fibfib = (fibfib1 + fibfib2 + fibfib3);\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo219sexd.cs(19,1514): error CS1026: ) expected

    /tmp/tmpo219sexd.cs(19,1514): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        long a = Fibfib(n-1);\n
    \       long b = Fibfib(n-2);\n        long c = Fibfib(n-3);\n        return a
    + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return 0;\n        if (n == 2)\n            return
    1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long
    fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6 = 0;\n        long
    fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9 = 0;\n        long
    fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12 = 0;\n        long
    fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15 = 0;\n        long
    fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18 = 0;\n        long
    fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21 = 0;\n        long
    fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24 = 0;\n        long
    fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27 = 0;\n        long
    fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30 = 0;\n        long
    fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33 = 0;\n        long
    fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36 = 0;\n        long
    fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39 = 0;\n        long
    fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42 = 0;\n        long
    fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45 = 0;\n        long
    fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48 = 0;\n        long
    fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51 = 0;\n        long
    fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54 = 0;\n        long
    fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57 = 0;\n        long
    fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60 = 0;\n        long
    fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63 = 0;\n        long
    fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66 = 0;\n        long
    fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69 = 0;\n        long
    fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72 = 0;\n        long
    fibfib73 = 0;\n        long fibfib74\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfbym9faw.cs(89,22): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    < 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7e3f13df6ab47319280e42886010d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7e3f13df6ab47319280e42886010d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80ba12e7701645bebf5eb123e9517036>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80ba12e7701645bebf5eb123e9517036>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return n;\n        }\n        long a = Fibfib(n-1);\n
    \       long b = Fibfib(n-2);\n        long c = Fibfib(n-3);\n        return a
    + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    < 3) return 1;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8049777d1afb474a9b32509fdc8dccc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8049777d1afb474a9b32509fdc8dccc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976799
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    < 0) throw new ArgumentOutOfRangeException(\"n\");\n        if (n == 0) return
    0;\n        if (n == 1) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) +
    Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: n\n  at Problem.Fibfib
    (System.Int64 n) [0x0000a] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Fibfib
    (System.Int64 n) [0x00043] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <d89e7de648b5455281a560b9d05611b3>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: n\n  at Problem.Fibfib
    (System.Int64 n) [0x0000a] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Fibfib
    (System.Int64 n) [0x00043] in <d89e7de648b5455281a560b9d05611b3>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <d89e7de648b5455281a560b9d05611b3>:0 \n"
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo219sexd.cs(19,1514): error CS1026: ) expected

    /tmp/tmpo219sexd.cs(19,1514): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 1) return 0;\n        if (n <= 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976799
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        else\n            return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 2) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf824732abb649f18cd85a2f7111504a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf824732abb649f18cd85a2f7111504a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976799
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 1;\n        }\n        if (n == 2) {\n            fibfib
    = 1;\n        }\n        if (n >= 3) {\n            fibfib1 = fibfib2;\n            fibfib2
    = fibfib3;\n            fibfib3 = fibfib3 + fibfib2;\n            fibfib = fibfibfib1
    + fibfib2 + fibfib3;\n        }\n        return fibfib;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkul9ekml.cs(33,22): error CS0103: The name ''fibfibfib1'' does not exist
    in the current context

    '
  timestamp: 1659976799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 1;\n        }\n        if (n == 2) {\n            fibfib
    = 1;\n        }\n        if (n >= 3) {\n            fibfib1 = Fibfib(n - 1);\n
    \           fibfib2 = Fibfib(n - 2);\n            fibfib3 = Fibfib(n - 3);\n            fibfib
    = fibfibfib1 + fibfib2 + fibfib3;\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg3bxu_0v.cs(33,22): error CS0103: The name ''fibfibfib1'' does not exist
    in the current context

    '
  timestamp: 1659976799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0)\n            fibfib = 0;\n        else if (n
    == 1)\n            fibfib = 0;\n        else if (n == 2)\n            fibfib =
    1;\n        else\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n
    - 3);\n        return fibfib;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 1) return 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0)\n            return 0;\n        if (n == 1)\n
    \           return 1;\n        if (n == 2)\n            return 1;\n        if
    (n <= 3)\n            return fibfib;\n        fibfib = Fibfib(n - 1) + Fibfib(n
    - 2) + Fibfib(n - 3);\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d51aea9f98b34f18b5782fd94c3ad2bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d51aea9f98b34f18b5782fd94c3ad2bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        if
    (n == 1) {\n            fibfib = 0;\n        }\n        if (n == 2) {\n            fibfib
    = 1;\n        }\n        if (n >= 3) {\n            fibfib = (fibfib + Fibfib(n
    - 1)) + Fibfib(n - 2);\n        }\n        return fibfib;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <abcfc255a0c34bfb84edfe9f2c544727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <abcfc255a0c34bfb84edfe9f2c544727>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976799
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long a = Fibfib(n-1);\n
    \       long b = Fibfib(n-2);\n        long c = Fibfib(n-3);\n        return a
    + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1f542b2e41f426fa3b8bd3cd6777b6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    < 3) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7e3f13df6ab47319280e42886010d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7e3f13df6ab47319280e42886010d37>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        else\n            return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1 + fibfib2;\n        long fibfib5
    = fibfib3 + fibfib4;\n        long fibfib6 = fibfib5 + fibfib4;\n        long
    fibfib7 = fibfib6 + fibfib5;\n        long fibfib8 = fibfib7 + fibfib6;\n        long
    fibfib9 = fibfib8 + fibfib7;\n        long fibfib10 = fibfib9 + fibfib8;\n        long
    fibfib11 = fibfib10 + fibfib9;\n        long fibfib12 = fibfib11 + fibfib10;\n
    \       long fibfib13 = fibfib12 + fibfib11;\n        long fibfib14 = fibfib13
    + fibfib12;\n        long fibfib15 = fibfib14 + fibfib13;\n        long fibfib16
    = fibfib15 + fibfib14;\n        long fibfib17 = fibfib16 + fibfib15;\n        long
    fibfib18 = fibfib17 + fibfib16;\n        long fibfib19 = fibfib18 + fibfib17;\n
    \       long fibfib20 = fibfib19 + fibfib18;\n        long fibfib21 = fibfib20
    + fibfib19;\n        long fibfib22 = fibfib21 + fibfib20;\n        long fibfib23
    = fibfib22 + fibfib21;\n        long fibfib24 = fibfib23 + fibfib22;\n        long
    fibfib25 = fibfib24 + fibfib23;\n        long fibfib26 = fibfib25 + fibfib24;\n
    \       long fibfib27 = fibfib26 + fibfib25;\n        long fibfib28 = fibfib27
    + fibfib26;\n        long fibfib29 = fibfib28 + fibfib27;\n        long fibfib30
    = fibfib29 + fibfib28;\n        long fibfib31 = fibfib30 + fibfib29;\n        long
    fibfib32 = fibfib31 + fibfib30;\n        long fibfib33 = fibfib32 + fibfib31;\n
    \       long fibfib34 = fibfib33 + fibfib32;\n        long fibfib35 = fibfib34
    + fibfib33;\n        long fibfib36 = fibfib35 + fibfib34;\n        long fibfib37
    = fibfib36 + fibfib35;\n        long fibfib38\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp24ueiwl3.cs(54,22): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long a = Fibfib(n
    - 1);\n        long b = Fibfib(n - 2);\n        long c = Fibfib(n - 3);\n        return
    a + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long
    fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long
    fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long
    fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long
    fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long
    fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long
    fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long
    fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long
    fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long
    fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long
    fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long
    fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long
    fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long
    fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long
    fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long
    fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long
    fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long
    fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long
    fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long
    fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long
    fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long
    fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long
    fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long
    fibfib72 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdrx7q5vs.cs(88,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpdrx7q5vs.cs(88,24): error CS1002: ; expected

    '
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n        }\n        else
    if (n == 1) {\n            fibfib = 0;\n        }\n        else if (n == 2) {\n
    \           fibfib = 1;\n        }\n        else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0)\n            return 0;\n        if (n == 1)\n            return 1;\n        if
    (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96a09f15acb2454aa73f29a6f128ac68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7937b20eb45a46c89e8275c04064b4c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    < 3) return 1;\n        if (n == 0) return 0;\n        if (n == 1) return 0;\n
    \       return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cf25bb9fc9f4b6eb7e37323d2a6c5c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cf25bb9fc9f4b6eb7e37323d2a6c5c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        if (n == 0)\n            fibfib = 0;\n        else if (n
    == 1)\n            fibfib = 0;\n        else if (n == 2)\n            fibfib =
    1;\n        else\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n
    - 3);\n        return fibfib;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66d6cad1116e42109fb4d473bc42beb0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return
    1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1 + fibfib2;\n        long fibfib5
    = fibfib3 + fibfib4;\n        long fibfib6 = fibfib5 + fibfib4;\n        long
    fibfib7 = fibfib6 + fibfib5;\n        long fibfib8 = fibfib7 + fibfib6;\n        long
    fibfib9 = fibfib8 + fibfib7;\n        long fibfib10 = fibfib9 + fibfib8;\n        long
    fibfib11 = fibfib10 + fibfib9;\n        long fibfib12 = fibfib11 + fibfib10;\n
    \       long fibfib13 = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13
    + fibfib13;\n        long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16
    = fibfib15 + fibfib15;\n        long fibfib17 = fibfib16 + fibfib16;\n        long
    fibfib18 = fibfib17 + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n
    \       long fibfib20 = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20
    + fibfib20;\n        long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23
    = fibfib22 + fibfib22;\n        long fibfib24 = fibfib23 + fibfib23;\n        long
    fibfib25 = fibfib24 + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n
    \       long fibfib27 = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27
    + fibfib27;\n        long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30
    = fibfib29 + fibfib29;\n        long fibfib31 = fibfib30 + fibfib30;\n        long
    fibfib32 = fibfib31 + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n
    \       long fibfib34 = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34
    + fibfib34;\n        long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37
    = fibfib36 + fibfib36;\n        long fibfib\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaq6xl76u.cs(54,20): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = 0;\n
    \       long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n - 2);\n
    \       long fibfib3 = Fibfib(n - 3);\n        fibfib = (fibfib1 + fibfib2 + fibfib3);\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long a = Fibfib(n-1);\n
    \       long b = Fibfib(n-2);\n        long c = Fibfib(n-3);\n        return a
    + b + c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976805
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2 = 1;\n        long
    fibfib3 = 1;\n        long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n
    \       long fibfib6 = fibfib3;\n        long fibfib7 = fibfib4;\n        long
    fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n
    \       long fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long
    fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15
    = fibfib12;\n        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n
    \       long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long
    fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22
    = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n
    \       long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long
    fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29
    = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n
    \       long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n        long
    fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long fibfib36
    = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38 = fibfib35;\n
    \       long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n        long
    fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n        long fibfib43
    = fibfib40;\n        long fibfib44 = fibfib41;\n        long fibfib45 = fibfib42;\n
    \       long fibfib46 = fibfib43;\n        long fibfib47 = fibfib44;\n        long
    fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n        long fibfib50
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprd2w91ai.cs(66,32): error CS1002: ; expected

    '
  timestamp: 1659976798
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1)\n            return n;\n        else\n            return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    <= 1) {\n            return 0;\n        }\n        long fibfib = 0;\n        long
    fibfib1 = Fibfib(n-1);\n        long fibfib2 = Fibfib(n-2);\n        long fibfib3
    = Fibfib(n-3);\n        fibfib = fibfib1 + fibfib2 + fibfib3;\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19b32af4d65b415a84708dadc72f40c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19b32af4d65b415a84708dadc72f40c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976800
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0 || n == 1) {\n            return 0;\n        }\n        long fibfib = 0;\n
    \       long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n - 2);\n
    \       long fibfib3 = Fibfib(n - 3);\n        fibfib = fibfib1 + fibfib2 + fibfib3;\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976804
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        long
    fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3 = 0;\n        if
    (n == 0) {\n            fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib
    = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n        }\n
    \       else {\n            fibfib2 = Fibfib(n - 1);\n            fibfib3 = Fibfib(n
    - 2);\n            fibfib = fibfib2 + fibfib3;\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4b8efd527e647d28f6c4834eca43582>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d4b8efd527e647d28f6c4834eca43582>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976800
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    public static long Fibfib(long n) {\n        if (n
    == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return
    1;\n        }\n        if (n == 2) {\n            return 1;\n        }\n        long
    a = Fibfib(n-1);\n        long b = Fibfib(n-2);\n        long c = Fibfib(n-3);\n
    \       return a + b + c;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f87fc4b8fa84c4b9365d99772149540>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f87fc4b8fa84c4b9365d99772149540>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976800

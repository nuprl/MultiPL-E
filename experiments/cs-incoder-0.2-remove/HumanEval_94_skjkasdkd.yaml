name: HumanEval_94_skjkasdkd
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a list of integers.\n    // You need to find the\
  \ largest prime value and return the sum of its digits.\n    // Examples:\n    public\
  \ static long Skjkasdkd(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)0L, (long)3L, (long)2L, (long)1L, (long)3L, (long)5L,\
  \ (long)7L, (long)4L, (long)5L, (long)5L, (long)5L, (long)2L, (long)181L, (long)32L,\
  \ (long)4L, (long)32L, (long)3L, (long)2L, (long)32L, (long)324L, (long)4L, (long)3L})))\
  \ == (10L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)1L, (long)0L,\
  \ (long)1L, (long)8L, (long)2L, (long)4597L, (long)2L, (long)1L, (long)3L, (long)40L,\
  \ (long)1L, (long)2L, (long)1L, (long)2L, (long)4L, (long)2L, (long)5L, (long)1L})))\
  \ == (25L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)1L, (long)3L,\
  \ (long)1L, (long)32L, (long)5107L, (long)34L, (long)83278L, (long)109L, (long)163L,\
  \ (long)23L, (long)2323L, (long)32L, (long)30L, (long)1L, (long)9L, (long)3L})))\
  \ == (13L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)0L, (long)724L,\
  \ (long)32L, (long)71L, (long)99L, (long)32L, (long)6L, (long)0L, (long)5L, (long)91L,\
  \ (long)83L, (long)0L, (long)5L, (long)6L}))) == (11L));\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)0L, (long)81L, (long)12L, (long)3L, (long)1L, (long)21L})))\
  \ == (3L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)0L, (long)8L,\
  \ (long)1L, (long)2L, (long)1L, (long)7L}))) == (7L));\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)8191L}))) == (19L));\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)8191L, (long)123456L, (long)127L, (long)7L}))) ==\
  \ (19L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)127L, (long)97L,\
  \ (long)8192L}))) == (10L));\n    }\n\n}\n"
completions: ["        long largestPrime = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            long prime = IsPrime(i);\n            if (prime\
    \ > largestPrime) {\n                largestPrime = prime;\n            }\n  \
    \          sum += i;\n        }\n        return sum;", "        long max = 0;\n\
    \        long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n     \
    \   long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long\
    \ sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10\
    \ = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 =\
    \ 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n\
    \        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n \
    \       long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n  \
    \      long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n   \
    \     long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n    \
    \    long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n     \
    \   long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n      \
    \  long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n       \
    \ long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long\
    \ sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44\
    \ = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 =\
    \ 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n\
    \        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n \
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n  \
    \      long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n   \
    \     long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n    \
    \    long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n     \
    \   long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n      \
    \  long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n       \
    \ long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long\
    \ sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78\
    \ = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 =\
    \ 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n\
    \        long sum85 = 0;\n        long ", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                sum += i;\n                if (max < sum) {\n               \
    \     max = sum;\n                }\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long sum = 0;\n        foreach (long\
    \ i in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n    \
    \            if (sum > max)\n                    max = sum;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long sum = 0;\n        foreach (long\
    \ i in lst) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n            }\n        }\n        return max;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                sum += i;\n                if\
    \ (sum > largestPrime)\n                    largestPrime = sum;\n            }\n\
    \        }\n        return largestPrime;", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                sum += i;\n                if (sum > max)\n                 \
    \   max = sum;\n            }\n        }\n        return max;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (var item in lst)\
    \ {\n            bool isPrime = true;\n            long currentPrime = 1;\n  \
    \          while (currentPrime < item) {\n                if (item % currentPrime\
    \ == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                currentPrime++;\n            }\n         \
    \   if (isPrime) {\n                sum += item;\n            }\n        }\n \
    \       largestPrime = sum;\n        return largestPrime;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long primeFactor = 2;\n            while (isPrime)\
    \ {\n                if (i % primeFactor == 0) {\n                    isPrime\
    \ = false;\n                }\n                primeFactor++;\n            }\n\
    \            if (isPrime) {\n                sum += i;\n                largestPrime\
    \ = i;\n            }\n        }\n        return sum;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long primeFactor = 2;\n            while (isPrime)\
    \ {\n                if (i % primeFactor == 0) {\n                    isPrime\
    \ = false;\n                }\n                primeFactor++;\n            }\n\
    \            if (isPrime) {\n                sum += i;\n                largestPrime\
    \ = i;\n            }\n        }\n        return sum;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long n = i;\n            while (n > 1) {\n\
    \                if (n % 2 == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                n = n / 2;\n    \
    \        }\n            if (isPrime) {\n                largestPrime = i;\n  \
    \              sum += i;\n            }\n        }\n        return sum;", "  \
    \      long max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (i % 2 == 0) {\n                max = i;\n            }\n    \
    \        else if (i % 3 == 0) {\n                max = i;\n            }\n   \
    \         else if (i % 5 == 0) {\n                max = i;\n            }\n  \
    \          else if (i % 7 == 0) {\n                max = i;\n            }\n \
    \           else if (i % 11 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 13 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 17 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 19 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 23 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 29 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 31 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 37 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 41 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 43 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 47 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 53 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 59 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 61 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 67 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 71 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 73 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 79 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 83 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 89 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 97 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 101 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 107 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 113 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 121 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 127 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 131 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 137 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 143 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 149 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 151 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 157 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 163 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 169 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 171 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 177 == 0) {\n                max = i;\n            }\n\
    \            else if (i % 183 == 0) {\n                max = ", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                sum += i;\n                if\
    \ (sum > largestPrime) {\n                    largestPrime = sum;\n          \
    \      }\n            }\n        }\n        return largestPrime;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            bool isPrime = true;\n            long j = 2;\n            while\
    \ (j < i) {\n                if (i % j == 0) {\n                    isPrime =\
    \ false;\n                    break;\n                }\n                j++;\n\
    \            }\n            if (isPrime) {\n                sum += i;\n      \
    \          largestPrime = i;\n            }\n        }\n        return sum;",
  "        long largestPrime = 0;\n        long sum = 0;\n        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (i % 2 == 0) {\n          \
    \      largestPrime = i;\n            }\n            else if (i % 3 == 0) {\n\
    \                largestPrime = i;\n            }\n            else if (i % 5\
    \ == 0) {\n                largestPrime = i;\n            }\n            else\
    \ if (i % 7 == 0) {\n                largestPrime = i;\n            }\n      \
    \      else if (i % 11 == 0) {\n                largestPrime = i;\n          \
    \  }\n            else if (i % 13 == 0) {\n                largestPrime = i;\n\
    \            }\n            else if (i % 17 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 19 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 23 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 29 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 31 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 37 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 41 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 43 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 47 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 53 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 59 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 61 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 67 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 71 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 73 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 79 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 83 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 89 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 97 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 101 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 107 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 113 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 121 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 127 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 131 == 0) {", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long n in lst) {\n           \
    \ if (IsPrime(n)) {\n                sum += n;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long largestPrime = 0;\n \
    \       long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                sum += i;\n                if (sum > largestPrime) {\n  \
    \                  largestPrime = sum;\n                }\n            }\n   \
    \     }\n        return largestPrime;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n   \
    \             max = i;\n            }\n        }\n        foreach (long i in lst)\
    \ {\n            if (i % 2 == 0) {\n                sum += i;\n            }\n\
    \        }\n        return sum;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        return\
    \ max;", "        long largestPrime = 0;\n        long sum = 0;\n        long\
    \ max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                sum += i;\n                if (sum > largestPrime) {\n      \
    \              largestPrime = sum;\n                }\n            }\n       \
    \ }\n        return largestPrime;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                sum += i;\n                if (sum > largestPrime) {\n      \
    \              largestPrime = sum;\n                }\n            }\n       \
    \ }\n        return largestPrime;", "        long max = 0;\n        long sum =\
    \ 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n     \
    \           sum += i;\n                if (max < sum) {\n                    max\
    \ = sum;\n                }\n            }\n        }\n        return max;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime) {\n                    largestPrime = sum;\n\
    \                }\n            }\n        }\n        return largestPrime;", " \
    \       long max = 0;\n        long sum = 0;\n        long maxPrime = 0;\n   \
    \     long maxPrimeSum = 0;\n        foreach (long i in lst) {\n            if\
    \ (i % 2 == 0) {\n                max = Math.Max(max, i);\n                sum\
    \ += i;\n            }\n            else if (i % 2 == 1) {\n                long\
    \ prime = IsPrime(i);\n                if (prime > maxPrime) {\n             \
    \       max = prime;\n                    maxPrime = prime;\n                \
    \    maxPrimeSum = i;\n                }\n            }\n        }\n        return\
    \ sum;", "        long max = 0;\n        long sum = 0;\n        long maxPrime\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             sum += i;\n                if (sum > max) {\n                  \
    \  max = sum;\n                    maxPrime = i;\n                }\n        \
    \    }\n        }\n        return maxPrime;", "        long max = 0;\n       \
    \ long sum = 0;\n        long maxPrime = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                sum += i;\n                if\
    \ (sum > max) {\n                    max = sum;\n                    maxPrime\
    \ = i;\n                }\n            }\n        }\n        return maxPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        long prime = 0;\n\
    \        long temp = 0;\n        bool isPrime = true;\n        foreach (long i\
    \ in lst) {\n            temp = i;\n            while (temp > 0) {\n         \
    \       prime = temp;\n                isPrime = true;\n                for (int\
    \ j = 2; j < prime; j++) {\n                    if (prime % j == 0) {\n      \
    \                  isPrime = false;\n                        break;\n        \
    \            }\n                }\n                if (isPrime) {\n          \
    \          largestPrime = prime;\n                    break;\n               \
    \ }\n                temp = temp / 10;\n            }\n            sum += (prime\
    \ % 10);\n        }\n        return sum;", "        long largestPrime = 0;\n \
    \       long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                sum += i;\n                if (sum > largestPrime) {\n  \
    \                  largestPrime = sum;\n                }\n            }\n   \
    \     }\n        return largestPrime;", "        long largestPrime = 0;\n    \
    \    long sum = 0;\n        foreach (long i in lst) {\n            sum += i;\n\
    \            if (sum > largestPrime) {\n                largestPrime = sum;\n\
    \            }\n        }\n        return largestPrime;", "        long max =\
    \ 0;\n        long sum = 0;\n        foreach (long i in lst) {\n            if\
    \ (IsPrime(i)) {\n                sum += i;\n                if (sum > max)\n\
    \                    max = sum;\n            }\n        }\n        return max;",
  "        long largestPrime = 0;\n        long sum = 0;\n        long primeSum =\
    \ 0;\n        bool isPrime = true;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n        long\
    \ primeSum = 0;\n        long primeCount = 0;\n        long primeSum = 0;\n  \
    \      long primeCount = 0;\n        long primeSum = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        long primeCount = 0;\n", "       \
    \ long largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst)\
    \ {\n            if (IsPrime(i)) {\n                sum += i;\n              \
    \  if (sum > largestPrime) {\n                    largestPrime = sum;\n      \
    \          }\n            }\n        }\n        return largestPrime;", "     \
    \   long largestPrime = 0;\n        long sum = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                sum += i;\n         \
    \       if (sum > largestPrime) {\n                    largestPrime = sum;\n \
    \               }\n            }\n        }\n        return largestPrime;", " \
    \       long max = 0;\n        long sum = 0;\n        foreach (long i in lst)\
    \ {\n            if (IsPrime(i)) {\n                sum += i;\n              \
    \  if (sum > max) {\n                    max = sum;\n                }\n     \
    \       }\n        }\n        return max;", "        long largestPrime = 0;\n\
    \        long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                sum += i;\n                if (sum > largestPrime)\n    \
    \                largestPrime = sum;\n            }\n        }\n        return\
    \ largestPrime;", "        long largestPrime = 0;\n        long sum = 0;\n   \
    \     foreach (long i in lst) {\n            if (IsPrime(i)) {\n             \
    \   sum += i;\n                if (sum > largestPrime) {\n                   \
    \ largestPrime = sum;\n                }\n            }\n        }\n        return\
    \ largestPrime;", "        long largestPrime = 0;\n        long sum = 0;\n   \
    \     foreach (long i in lst) {\n            if (IsPrime(i)) {\n             \
    \   sum += i;\n                if (sum > largestPrime) {\n                   \
    \ largestPrime = sum;\n                }\n            }\n        }\n        return\
    \ largestPrime;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            if (i % 2 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 3 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 5 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 7 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 11 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 13 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 17 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 19 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 23 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 29 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 31 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 37 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 41 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 43 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 47 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 53 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 59 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 61 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 67 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 71 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 73 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 79 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 83 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 89 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 97 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 103 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 109 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 113 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 121 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 127 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 131 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 137 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 141 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 147 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 151 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 157 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 163 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 169 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 173 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 179 == 0) {\n                max = i;\n\
    \            }\n            else if (i % 183 == 0) {\n                ", "   \
    \     long largestPrime = 0;\n        long sum = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                sum += i;\n         \
    \       if (sum > largestPrime)\n                    largestPrime = sum;\n   \
    \         }\n        }\n        return largestPrime;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long j = 2;\n            while (j < i) {\n\
    \                if (i % j == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                j++;\n          \
    \  }\n            if (isPrime) {\n                largestPrime = i;\n        \
    \        sum += i;\n            }\n        }\n        return sum;", "        long\
    \ maxPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n  \
    \          long prime = IsPrime(i);\n            if (prime > maxPrime) {\n   \
    \             maxPrime = prime;\n                sum = i;\n            }\n   \
    \     }\n        return sum;", "        long max = 0;\n        long sum = 0;\n\
    \        long maxPrime = 0;\n        long sumPrime = 0;\n        foreach (long\
    \ i in lst) {\n            if (i == 0) continue;\n            if (i % 2 == 0)\
    \ {\n                max = i;\n                sum += i;\n            }\n    \
    \        else {\n                max = i;\n                sum += i;\n       \
    \     }\n            if (max % 2 == 0) {\n                maxPrime = max;\n  \
    \              sumPrime += max;\n            }\n            else {\n         \
    \       maxPrime = max;\n                sumPrime += max;\n            }\n   \
    \     }\n        Console.WriteLine(\"Max prime is \" + maxPrime + \" with sum\
    \ \" + sumPrime);\n        return sum;", "        long largestPrime = 0;\n   \
    \     long sum = 0;\n        foreach (long i in lst) {\n            bool isPrime\
    \ = true;\n            long prime = 2;\n            while (prime <= i) {\n   \
    \             if (i % prime == 0) {\n                    isPrime = false;\n  \
    \                  break;\n                }\n                prime++;\n     \
    \       }\n            if (isPrime) {\n                sum += i;\n           \
    \     largestPrime = i;\n            }\n        }\n        return sum;", "   \
    \     long largestPrime = 0;\n        long sum = 0;\n        foreach (long i in\
    \ lst) {\n            sum += i;\n            if (sum > largestPrime) {\n     \
    \           largestPrime = sum;\n            }\n        }\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            for (int j = 2; j <\
    \ i; j++) {\n                if (i % j == 0) {\n                    isPrime =\
    \ false;\n                    break;\n                }\n            }\n     \
    \       if (isPrime) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long largestPrime = 0;\n \
    \       long sum = 0;\n        long prime = 0;\n        long temp = 0;\n     \
    \   foreach (long i in lst) {\n            if (i % 2 == 0) {\n               \
    \ temp = i;\n                while (temp % 2 == 0) {\n                    temp\
    \ = temp / 2;\n                }\n                if (temp > largestPrime) {\n\
    \                    largestPrime = temp;\n                }\n            }\n\
    \            else if (i % 3 == 0) {\n                temp = i;\n             \
    \   while (temp % 3 == 0) {\n                    temp = temp / 3;\n          \
    \      }\n                if (temp > largestPrime) {\n                    largestPrime\
    \ = temp;\n                }\n            }\n            else if (i % 5 == 0)\
    \ {\n                temp = i;\n                while (temp % 5 == 0) {\n    \
    \                temp = temp / 5;\n                }\n                if (temp\
    \ > largestPrime) {\n                    largestPrime = temp;\n              \
    \  }\n            }\n            else if (i % 7 == 0) {\n                temp\
    \ = i;\n                while (temp % 7 == 0) {\n                    temp = temp\
    \ / 7;\n                }\n                if (temp > largestPrime) {\n      \
    \              largestPrime = temp;\n                }\n            }\n      \
    \      else if (i % 11 == 0) {\n                temp = i;\n                while\
    \ (temp % 11 == 0) {\n                    temp = temp / 11;\n                }\n\
    \                if (temp > largestPrime) {\n                    largestPrime\
    \ = temp;\n                }\n            }\n            else if (i % 13 == 0)\
    \ {\n                temp = i;\n                while (temp % 13 == 0) {\n   \
    \                 temp = temp / 13;\n                }\n                if (temp\
    \ > largestPrime) {\n                    largestPrime = temp;\n              \
    \  }\n            }\n            else if (i % 17 == 0) {\n                temp\
    \ = i;\n                while (temp % 17 == 0) {\n                    temp = temp\
    \ / 17;\n                }\n                if (temp > largestPrime) {\n     \
    \               largestPrime = temp;\n                }\n            }\n     \
    \       else if (i % 19 == 0) {\n                temp = i;\n                while\
    \ (temp % 19 == 0) {\n                    temp = temp / 19;\n                }\n\
    \                if (temp > largestPrime) {\n                    largestPrime\
    \ = temp;\n                }\n            }\n            else if (i % 23 == 0)\
    \ {\n                temp = i;\n                while (temp % 23 == 0) {\n   \
    \                 temp = temp / 23;\n                }\n                if (temp\
    \ > largestPrime) {\n                    largestPrime = temp;\n              \
    \  }\n            }\n            else if (i % 29 == 0) {\n                temp\
    \ = i;\n                while (temp % 29 == 0) {\n                    temp = temp\
    \ / 29;\n                }\n                if (temp > largestPrime) {\n     \
    \               largestPrime = temp;\n                }\n            }\n     \
    \       else if (i % 31 == 0) {\n                temp = i;\n", "        long max\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ if (IsPrime(i)) {\n                sum += i;\n                if (sum > max)\n\
    \                    max = sum;\n            }\n        }\n        return max;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long prime = 2;\n \
    \           while (prime <= i) {\n                if (i % prime == 0) {\n    \
    \                isPrime = false;\n                    break;\n              \
    \  }\n                prime++;\n            }\n            if (isPrime) {\n  \
    \              sum += i;\n            }\n        }\n        largestPrime = sum;\n\
    \        return largestPrime;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                sum += i;\n                if (sum > largestPrime) {\n      \
    \              largestPrime = sum;\n                }\n            }\n       \
    \ }\n        return largestPrime;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            long prime = IsPrime(i);\n\
    \            if (prime > largestPrime) {\n                largestPrime = prime;\n\
    \            }\n            sum += i;\n        }\n        return sum;", "    \
    \    long largestPrime = 0;\n        long sum = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                sum += i;\n         \
    \       if (sum > largestPrime)\n                    largestPrime = sum;\n   \
    \         }\n        }\n        return largestPrime;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        long prime = 0;\n        long primeCount\
    \ = 0;\n        long primeSum = 0;\n        bool isPrime = true;\n        foreach\
    \ (long i in lst) {\n            primeSum = 0;\n            primeCount = 0;\n\
    \            prime = i;\n            while (prime > 1) {\n                primeCount++;\n\
    \                prime = prime / 10;\n            }\n            if (primeCount\
    \ > 1) {\n                isPrime = true;\n                primeSum = prime;\n\
    \            }\n            else {\n                isPrime = false;\n       \
    \     }\n            if (isPrime) {\n                sum += i;\n             \
    \   primeCount--;\n            }\n            else {\n                sum += primeSum;\n\
    \            }\n        }\n        largestPrime = sum;\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            sum += i;\n            if (sum > largestPrime) {\n  \
    \              largestPrime = sum;\n            }\n        }\n        return largestPrime;",
  "        long max = 0;\n        long sum = 0;\n        foreach (var item in lst)\
    \ {\n            if (item > max) {\n                max = item;\n            }\n\
    \        }\n        foreach (var item in lst) {\n            if (item == max)\
    \ {\n                sum += item;\n            }\n        }\n        return sum;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime) {\n                    largestPrime = sum;\n\
    \                }\n            }\n        }\n        return largestPrime;", " \
    \       long max = 0;\n        long sum = 0;\n        foreach (long i in lst)\
    \ {\n            if (i % 2 == 0) {\n                max = i;\n            }\n\
    \            else {\n                long temp = i;\n                while (temp\
    \ > 0) {\n                    if (temp % 2 == 0) {\n                        temp\
    \ = temp / 2;\n                    }\n                    else {\n           \
    \             temp = temp / 2;\n                        sum += temp % 10;\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ sum;", "        long max = 0;\n        long sum = 0;\n        foreach (long\
    \ i in lst) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n            }\n        }\n        return max;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            bool isPrime = true;\n            long j = 2;\n            while\
    \ (j < i) {\n                if (i % j == 0) {\n                    isPrime =\
    \ false;\n                    break;\n                }\n                j++;\n\
    \            }\n            if (isPrime) {\n                largestPrime = i;\n\
    \                sum += i;\n            }\n        }\n        return sum;", " \
    \       long max = 0;\n        long sum = 0;\n        foreach (long i in lst)\
    \ {\n            if (IsPrime(i)) {\n                sum += i;\n              \
    \  if (sum > max)\n                    max = sum;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long sum = 0;\n       \
    \ foreach (long i in lst) {\n            if (IsPrime(i)) {\n                sum\
    \ += i;\n                if (sum > max)\n                    max = sum;\n    \
    \        }\n        }\n        return max;", "        long largestPrime = 0;\n\
    \        long sum = 0;\n        long prime = 1;\n        foreach (long i in lst)\
    \ {\n            sum += i;\n            if (sum > largestPrime) {\n          \
    \      largestPrime = sum;\n            }\n            if (sum == prime) {\n \
    \               prime++;\n            }\n        }\n        return largestPrime;",
  "        long max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                sum += i;\n                if\
    \ (sum > max)\n                    max = sum;\n            }\n        }\n    \
    \    return max;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n\
    \                if (sum > max) {\n                    max = sum;\n          \
    \      }\n            }\n        }\n        return max;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ if (IsPrime(i)) {\n                sum += i;\n                if (sum > largestPrime)\n\
    \                    largestPrime = sum;\n            }\n        }\n        return\
    \ largestPrime;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n\
    \                if (max < sum) {\n                    max = sum;\n          \
    \      }\n            }\n        }\n        return max;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        long prime = 0;\n        foreach (long\
    \ i in lst) {\n            if (i % 2 == 0) {\n                prime = 2;\n   \
    \             while (prime * prime <= i) {\n                    if (i % prime\
    \ == 0) {\n                        break;\n                    }\n           \
    \         prime++;\n                }\n                if (prime > largestPrime)\
    \ {\n                    largestPrime = prime;\n                }\n          \
    \  }\n            sum += i;\n        }\n        return sum;", "        long max\
    \ = 0;\n        long sum = 0;\n        foreach (var item in lst) {\n         \
    \   if (item > max) {\n                max = item;\n            }\n          \
    \  sum += item;\n        }\n        return sum;", "        long max = 0;\n   \
    \     long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = i;\n                sum += i;\n            }\n    \
    \    }\n        return sum;", "        long largestPrime = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            bool isPrime = true;\n\
    \            long n = i;\n            while (n > 1) {\n                if (n %\
    \ 2 == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                n = n / 2;\n            }\n            if\
    \ (isPrime) {\n                largestPrime = i;\n                sum += i;\n\
    \            }\n        }\n        return sum;", "        long max = 0;\n    \
    \    long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                sum += i;\n                if (max < sum)\n             \
    \       max = sum;\n            }\n        }\n        return max;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            bool isPrime = true;\n            long n = i;\n            while\
    \ (n > 1) {\n                if (n % 2 == 0) {\n                    isPrime =\
    \ false;\n                    break;\n                }\n                n = n\
    \ / 2;\n            }\n            if (isPrime) {\n                sum += i;\n\
    \                largestPrime = i;\n            }\n        }\n        return sum;",
  "        long max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                sum += i;\n                if\
    \ (sum > max) {\n                    max = sum;\n                }\n         \
    \   }\n        }\n        return max;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             max = Math.Max(max, i);\n                sum += i;\n           \
    \ }\n        }\n        return sum;", "        long largestPrime = 0;\n      \
    \  long sum = 0;\n        foreach (long i in lst) {\n            sum += i;\n \
    \           if (sum > largestPrime) {\n                largestPrime = sum;\n \
    \           }\n        }\n        return largestPrime;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long n = i;\n            while (n > 1) {\n\
    \                if (n % 2 == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                n = n / 2;\n    \
    \        }\n            if (isPrime) {\n                largestPrime = i;\n  \
    \              sum += i;\n            }\n        }\n        return sum;", "  \
    \      long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime) {\n                    largestPrime = sum;\n\
    \                }\n            }\n        }\n        return largestPrime;", " \
    \       long max = 0;\n        long sum = 0;\n        foreach (long i in lst)\
    \ {\n            if (i % 2 == 0) {\n                max = i;\n            }\n\
    \        }\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n\
    \                sum += i;\n            }\n        }\n        return sum;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (i % 2 == 0) {\n          \
    \      largestPrime = i;\n            }\n            else if (i % 3 == 0) {\n\
    \                largestPrime = i;\n            }\n            else if (i % 5\
    \ == 0) {\n                largestPrime = i;\n            }\n            else\
    \ if (i % 7 == 0) {\n                largestPrime = i;\n            }\n      \
    \      else if (i % 11 == 0) {\n                largestPrime = i;\n          \
    \  }\n            else if (i % 13 == 0) {\n                largestPrime = i;\n\
    \            }\n            else if (i % 17 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 19 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 23 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 29 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 31 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 37 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 41 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 43 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 47 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 53 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 59 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 61 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 67 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 71 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 73 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 79 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 83 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 89 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 97 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 103 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 107 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 111 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 117 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 121 == 0) {\n                largestPrime\
    \ = i;\n            }\n            else if (i % 127 == 0) {", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ sum += i;\n            if (sum > largestPrime) {\n                largestPrime\
    \ = sum;\n            }\n        }\n        return largestPrime;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            sum += i;\n            if (sum > largestPrime) {\n              \
    \  largestPrime = sum;\n            }\n        }\n        return largestPrime;",
  "        long max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                sum += i;\n                if\
    \ (sum > max) {\n                    max = sum;\n                }\n         \
    \   }\n        }\n        return max;", "        long largestPrime = 0;\n    \
    \    long sum = 0;\n        foreach (long i in lst) {\n            bool isPrime\
    \ = true;\n            long prime = 2;\n            while (prime < i) {\n    \
    \            if (i % prime == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                prime++;\n      \
    \      }\n            if (isPrime) {\n                sum += i;\n            \
    \    largestPrime = i;\n            }\n        }\n        return sum;", "    \
    \    long maxPrime = 0;\n        long sum = 0;\n        foreach (long i in lst)\
    \ {\n            if (IsPrime(i)) {\n                sum += i;\n              \
    \  if (sum > maxPrime) {\n                    maxPrime = sum;\n              \
    \  }\n            }\n        }\n        return maxPrime;", "        long max =\
    \ 0;\n        long sum = 0;\n        foreach (long i in lst) {\n            if\
    \ (IsPrime(i)) {\n                sum += i;\n                if (sum > max) {\n\
    \                    max = sum;\n                }\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long sum = 0;\n       \
    \ long maxPrime = 0;\n        long sumOfDigits = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                sum += i;\n         \
    \       sumOfDigits += i;\n                if (sum > max) {\n                \
    \    max = sum;\n                    maxPrime = i;\n                }\n      \
    \      }\n        }\n        return sumOfDigits;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ if (IsPrime(i)) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (var item in lst) {\n            if (item > max) {\n\
    \                max = item;\n            }\n        }\n        foreach (var item\
    \ in lst) {\n            if (item == max) {\n                sum += item;\n  \
    \          }\n        }\n        return sum;", "        long max = 0;\n      \
    \  long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = i;\n                sum += i;\n            }\n    \
    \    }\n        return sum;", "        long largestPrime = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             sum += i;\n                if (sum > largestPrime)\n           \
    \         largestPrime = sum;\n            }\n        }\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            sum += i;\n        }\n        largestPrime = sum;\n \
    \       return largestPrime;", "        long max = 0;\n        long sum = 0;\n\
    \        long maxPrime = 0;\n        long sumPrime = 0;\n        long maxPrimeDigit\
    \ = 0;\n        long sumPrimeDigit = 0;\n        long maxPrimeDigitDigit = 0;\n\
    \        foreach (long i in lst) {\n            max = Math.Max(max, i);\n    \
    \        sum += i;\n            long prime = IsPrime(i);\n            if (prime\
    \ > maxPrime) {\n                maxPrime = prime;\n                maxPrimeDigit\
    \ = i;\n            }\n            sumPrime += prime;\n            long primeDigit\
    \ = IsPrimeDigit(i);\n            if (primeDigit > maxPrimeDigit) {\n        \
    \        maxPrimeDigit = primeDigit;\n                maxPrimeDigitDigit = i;\n\
    \            }\n            sumPrimeDigit += primeDigit;\n        }\n        Console.WriteLine(\"\
    Max Prime: {0}\", maxPrime);\n        Console.WriteLine(\"Sum of Prime: {0}\"\
    , sumPrime);\n        Console.WriteLine(\"Max Prime Digit: {0}\", maxPrimeDigit);\n\
    \        Console.WriteLine(\"Sum of Prime Digit: {0}\", sumPrimeDigit);\n    \
    \    Console.WriteLine(\"Max Prime Digit Digit: {0}\", maxPrimeDigitDigit);\n\
    \        Console.WriteLine(\"Sum of Prime Digit Digit: {0}\", sumPrimeDigitDigit);\n\
    \        Console.WriteLine(\"Sum of Digits: {0}\", sum);\n        return sum;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long j = 2;\n     \
    \       while (j < i) {\n                if (i % j == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        j++;\n            }\n            if (isPrime) {\n                sum\
    \ += i;\n                largestPrime = i;\n            }\n        }\n       \
    \ return sum;", "        long largestPrime = 0;\n        long sum = 0;\n     \
    \   foreach (long i in lst) {\n            sum += i;\n            if (sum > largestPrime)\
    \ {\n                largestPrime = sum;\n            }\n        }\n        return\
    \ largestPrime;", "        long largestPrime = 0;\n        long sum = 0;\n   \
    \     foreach (var item in lst) {\n            bool isPrime = true;\n        \
    \    long test = 2;\n            while (test <= item) {\n                if (item\
    \ % test == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                test += 2;\n            }\n            if\
    \ (isPrime) {\n                sum += item;\n                largestPrime = item;\n\
    \            }\n        }\n        return sum;", "        long max = 0;\n    \
    \    long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                sum += i;\n                if (sum > max) {\n           \
    \         max = sum;\n                }\n            }\n        }\n        return\
    \ max;", "        long largestPrime = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n\
    \                if (sum > largestPrime) {\n                    largestPrime =\
    \ sum;\n                }\n            }\n        }\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long n = i;\n     \
    \       while (n > 1) {\n                if (n % 2 == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        n = n / 2;\n            }\n            if (isPrime) {\n             \
    \   largestPrime = i;\n                sum += i;\n            }\n        }\n \
    \       return sum;", "        long largestPrime = 0;\n        long sum = 0;\n\
    \        foreach (long n in lst) {\n            bool isPrime = true;\n       \
    \     long i = 2;\n            while (i <= n / 2) {\n                if (n % i\
    \ == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                i++;\n            }\n            if (isPrime)\
    \ {\n                largestPrime = n;\n                sum += n % 10;\n     \
    \       }\n        }\n        return sum;", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (var item in lst) {\n            if (item > max) {\n\
    \                max = item;\n            }\n        }\n        foreach (var item\
    \ in lst) {\n            if (item == max) {\n                sum += item;\n  \
    \          }\n        }\n        return sum;", "        long largestPrime = 0;\n\
    \        long sum = 0;\n        foreach (long i in lst) {\n            bool isPrime\
    \ = true;\n            long j = 2;\n            while (j < i) {\n            \
    \    if (i % j == 0) {\n                    isPrime = false;\n               \
    \     break;\n                }\n                j++;\n            }\n       \
    \     if (isPrime) {\n                sum += i;\n                largestPrime\
    \ = i;\n            }\n        }\n        return sum;", "        long max = 0;\n\
    \        long sum = 0;\n        foreach (long i in lst) {\n            sum +=\
    \ i;\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        return max;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            long prime = IsPrime(i);\n\
    \            if (prime > largestPrime) {\n                largestPrime = prime;\n\
    \            }\n            sum += i;\n        }\n        return sum;", "    \
    \    long largestPrime = 0;\n        long sum = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                sum += i;\n         \
    \       if (sum > largestPrime) {\n                    largestPrime = sum;\n \
    \               }\n            }\n        }\n        return largestPrime;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long prime = 2;\n \
    \           while (prime <= i) {\n                if (i % prime == 0) {\n    \
    \                isPrime = false;\n                    break;\n              \
    \  }\n                prime++;\n            }\n            if (isPrime) {\n  \
    \              sum += i;\n                largestPrime = i;\n            }\n \
    \       }\n        return sum;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (max < sum) {\n                    max =\
    \ sum;\n                }\n            }\n        }\n        return max;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long prime = 2;\n \
    \           while (prime <= i) {\n                if (i % prime == 0) {\n    \
    \                isPrime = false;\n                    break;\n              \
    \  }\n                prime++;\n            }\n            if (isPrime) {\n  \
    \              sum += i;\n            }\n            if (sum > largestPrime) {\n\
    \                largestPrime = sum;\n            }\n        }\n        return\
    \ largestPrime;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (var item in lst) {\n            if (item > max) {\n                max = item;\n\
    \            }\n        }\n        foreach (var item in lst) {\n            if\
    \ (item == max) {\n                sum += item;\n            }\n        }\n  \
    \      return sum;", "        long largestPrime = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > largestPrime)\n                  \
    \  largestPrime = sum;\n            }\n        }\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long j = 2;\n     \
    \       while (j < i) {\n                if (i % j == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        j++;\n            }\n            if (isPrime) {\n                sum\
    \ += i;\n                largestPrime = i;\n            }\n        }\n       \
    \ return sum;", "        long largestPrime = 0;\n        long sum = 0;\n     \
    \   foreach (long i in lst) {\n            bool isPrime = true;\n            long\
    \ prime = 2;\n            while (prime < i) {\n                if (i % prime ==\
    \ 0) {\n                    isPrime = false;\n                    break;\n   \
    \             }\n                prime++;\n            }\n            if (isPrime)\
    \ {\n                sum += i;\n                largestPrime = i;\n          \
    \  }\n        }\n        return sum;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n   \
    \             max = i;\n            }\n            else if (i % 3 == 0) {\n  \
    \              max = i;\n            }\n            else if (i % 5 == 0) {\n \
    \               max = i;\n            }\n            else if (i % 7 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 11 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 13 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 17 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 19 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 23 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 29 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 31 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 37 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 41 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 43 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 47 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 53 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 59 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 61 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 67 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 71 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 73 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 79 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 83 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 89 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 97 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 101 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 107 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 113 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 121 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 127 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 131 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 137 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 143 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 149 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 153 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 159 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 163 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 167 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 171 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 177 == 0) {\n\
    \                max = i;\n            }\n            else if (i % 183 == 0) {\n",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long n = i;\n     \
    \       while (n > 1) {\n                if (n % 2 == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        n = n / 2;\n            }\n            if (isPrime) {\n             \
    \   largestPrime = i;\n                sum += i;\n            }\n        }\n \
    \       return sum;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (long n in lst) {\n            if (n != 0) {\n                bool isPrime =\
    \ true;\n                for (long i = 2; i <= n / 2; i++) {\n               \
    \     if (n % i == 0) {\n                        isPrime = false;\n          \
    \              break;\n                    }\n                }\n            \
    \    if (isPrime) {\n                    max = Math.Max(max, n);\n           \
    \         sum += n % 10;\n                }\n            }\n        }\n      \
    \  return sum;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n\
    \                if (sum > max)\n                    max = sum;\n            }\n\
    \        }\n        return max;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            bool isPrime = true;\n\
    \            long n = i;\n            while (n > 1) {\n                if (n %\
    \ 2 == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                n = n / 2;\n            }\n            if\
    \ (isPrime) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            sum += i;\n       \
    \     if (sum > max) {\n                max = sum;\n            }\n        }\n\
    \        return max;", "        long largestPrime = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            sum += i;\n            if (sum\
    \ > largestPrime) {\n                largestPrime = sum;\n            }\n    \
    \    }\n        return largestPrime;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            sum += i;\n           \
    \ if (sum > max) {\n                max = sum;\n            }\n        }\n   \
    \     return max;", "        long largestPrime = 0;\n        long sum = 0;\n \
    \       foreach (long i in lst) {\n            bool isPrime = true;\n        \
    \    for (int j = 2; j < i; j++) {\n                if (i % j == 0) {\n      \
    \              isPrime = false;\n                    break;\n                }\n\
    \            }\n            if (isPrime) {\n                sum += i;\n      \
    \          largestPrime = i;\n            }\n        }\n        return sum;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long j = 2;\n     \
    \       while (j < i) {\n                if (i % j == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        j++;\n            }\n            if (isPrime) {\n                sum\
    \ += i;\n                largestPrime = i;\n            }\n        }\n       \
    \ return sum;", "        long largestPrime = 0;\n        long sum = 0;\n     \
    \   foreach (long i in lst) {\n            bool isPrime = true;\n            long\
    \ j = 2;\n            while (j < i) {\n                if (i % j == 0) {\n   \
    \                 isPrime = false;\n                    break;\n             \
    \   }\n                j++;\n            }\n            if (isPrime) {\n     \
    \           sum += i;\n                if (sum > largestPrime) {\n           \
    \         largestPrime = sum;\n                }\n            }\n        }\n \
    \       return largestPrime;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > max) {\n                    max =\
    \ sum;\n                }\n            }\n        }\n        return max;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime) {\n                    largestPrime = sum;\n\
    \                }\n            }\n        }\n        return largestPrime;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        long prime = 1;\n\
    \        foreach (long i in lst) {\n            sum += i;\n            if (sum\
    \ > largestPrime) {\n                largestPrime = sum;\n            }\n    \
    \        while (sum > 0) {\n                prime++;\n                sum -= prime\
    \ % 10;\n            }\n        }\n        return largestPrime;", "        long\
    \ max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n       \
    \     if (IsPrime(i)) {\n                sum += i;\n                if (sum >\
    \ max) {\n                    max = sum;\n                }\n            }\n \
    \       }\n        return max;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                sum += i;\n                if (sum > largestPrime) {\n      \
    \              largestPrime = sum;\n                }\n            }\n       \
    \ }\n        return largestPrime;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            sum += i;\n       \
    \     if (sum > largestPrime) {\n                largestPrime = sum;\n       \
    \     }\n        }\n        return largestPrime;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long n = i;\n            while (n != 1) {\n\
    \                if (n % 2 == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                n = n / 2;\n    \
    \        }\n            if (isPrime) {\n                sum += i;\n          \
    \      largestPrime = i;\n            }\n        }\n        return sum;", "  \
    \      long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime)\n                    largestPrime = sum;\n\
    \            }\n        }\n        return largestPrime;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            for (int j = 2; j < i; j++) {\n          \
    \      if (i % j == 0) {\n                    isPrime = false;\n             \
    \       break;\n                }\n            }\n            if (isPrime) {\n\
    \                sum += i;\n                largestPrime = i;\n            }\n\
    \        }\n        return sum;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > max) {\n                    max =\
    \ sum;\n                }\n            }\n        }\n        return max;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long n = i;\n     \
    \       while (n > 1) {\n                if (n % 2 == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        n = n / 2;\n            }\n            if (isPrime) {\n             \
    \   sum += i;\n                if (sum > largestPrime) {\n                   \
    \ largestPrime = sum;\n                }\n            }\n        }\n        return\
    \ largestPrime;", "        long largestPrime = 0;\n        long sum = 0;\n   \
    \     foreach (long i in lst) {\n            sum += i;\n            if (sum >\
    \ largestPrime) {\n                largestPrime = sum;\n            }\n      \
    \  }\n        return largestPrime;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (var item in lst) {\n            if (item > max) {\n \
    \               max = item;\n            }\n        }\n        foreach (var item\
    \ in lst) {\n            if (item == max) {\n                sum += item;\n  \
    \          }\n        }\n        return sum;", "        long largestPrime = 0;\n\
    \        long sum = 0;\n        long max = 0;\n        foreach (long i in lst)\
    \ {\n            max = i;\n            foreach (long j in lst) {\n           \
    \     if (j > max) {\n                    max = j;\n                }\n      \
    \      }\n            if (max > largestPrime) {\n                largestPrime\
    \ = max;\n            }\n            sum += i;\n        }\n        return sum;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (var item\
    \ in lst) {\n            if (item > largestPrime) {\n                largestPrime\
    \ = item;\n            }\n            sum += item;\n        }\n        return\
    \ sum;", "        long largestPrime = 0;\n        long sum = 0;\n        foreach\
    \ (var item in lst) {\n            bool isPrime = true;\n            int counter\
    \ = 2;\n            while (counter <= Math.Sqrt(item)) {\n                if (item\
    \ % counter == 0) {\n                    isPrime = false;\n                  \
    \  break;\n                }\n                counter++;\n            }\n    \
    \        if (isPrime) {\n                sum += item;\n                largestPrime\
    \ = item;\n            }\n        }\n        return sum;", "        long max =\
    \ 0;\n        long sum = 0;\n        foreach (long i in lst) {\n            if\
    \ (IsPrime(i)) {\n                sum += i;\n                if (sum > max) {\n\
    \                    max = sum;\n                }\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long sum = 0;\n       \
    \ foreach (long i in lst) {\n            sum += i;\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return max;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long n = i;\n     \
    \       while (n > 1) {\n                if (n % 2 == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        n = n / 2;\n            }\n            if (isPrime) {\n             \
    \   largestPrime = i;\n                sum += i;\n            }\n        }\n \
    \       return sum;", "        long largestPrime = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > largestPrime) {\n                \
    \    largestPrime = sum;\n                }\n            }\n        }\n      \
    \  return largestPrime;", "        long largestPrime = 0;\n        long sum =\
    \ 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n     \
    \           sum += i;\n                if (sum > largestPrime) {\n           \
    \         largestPrime = sum;\n                }\n            }\n        }\n \
    \       return largestPrime;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > max)\n                    max = sum;\n\
    \            }\n        }\n        return max;", "        long largestPrime =\
    \ 0;\n        long sum = 0;\n        foreach (long i in lst) {\n            if\
    \ (IsPrime(i)) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            sum += i;\n       \
    \     if (sum > max) {\n                max = sum;\n            }\n        }\n\
    \        return max;", "        long largestPrime = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > largestPrime) {\n                \
    \    largestPrime = sum;\n                }\n            }\n        }\n      \
    \  return largestPrime;", "        long max = 0;\n        long sum = 0;\n    \
    \    foreach (long i in lst) {\n            if (IsPrime(i)) {\n              \
    \  sum += i;\n                if (sum > max) {\n                    max = sum;\n\
    \                }\n            }\n        }\n        return max;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            long prime = IsPrime(i);\n            if (prime > largestPrime) {\n\
    \                largestPrime = prime;\n            }\n            sum += i;\n\
    \        }\n        return sum;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            bool isPrime = true;\n\
    \            long n = i;\n            while (n > 1) {\n                if (n %\
    \ 2 == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                n = n / 2;\n            }\n            if\
    \ (isPrime) {\n                largestPrime = i;\n                sum += i;\n\
    \            }\n        }\n        return sum;", "        long maxPrime = 0;\n\
    \        long sum = 0;\n        foreach (long i in lst) {\n            if (isPrime(i))\
    \ {\n                sum += i;\n                if (sum > maxPrime) {\n      \
    \              maxPrime = sum;\n                }\n            }\n        }\n\
    \        return maxPrime;", "        long largestPrime = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            bool isPrime = true;\n\
    \            long j = 2;\n            while (j < i) {\n                if (i %\
    \ j == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                j++;\n            }\n            if (isPrime)\
    \ {\n                sum += i;\n                largestPrime = i;\n          \
    \  }\n        }\n        return sum;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             sum += i;\n                if (sum > max)\n                    max\
    \ = sum;\n            }\n        }\n        return max;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long j = 2;\n            while (j < i) {\n\
    \                if (i % j == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                j++;\n          \
    \  }\n            if (isPrime) {\n                sum += i;\n                if\
    \ (sum > largestPrime) {\n                    largestPrime = sum;\n          \
    \      }\n            }\n        }\n        return largestPrime;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                sum += i;\n                if\
    \ (sum > largestPrime)\n                    largestPrime = sum;\n            }\n\
    \        }\n        return largestPrime;", "        long largestPrime = 0;\n \
    \       long sum = 0;\n        long temp = 0;\n        foreach (long i in lst)\
    \ {\n            if (i % 2 == 0) {\n                temp = i;\n              \
    \  while (temp % 2 == 0) {\n                    temp = temp / 2;\n           \
    \     }\n                if (temp > largestPrime) {\n                    largestPrime\
    \ = temp;\n                }\n            }\n        }\n        foreach (long\
    \ i in lst) {\n            if (i % 2 == 0) {\n                temp = i;\n    \
    \            while (temp % 2 == 0) {\n                    temp = temp / 2;\n \
    \               }\n                if (temp > largestPrime) {\n              \
    \      largestPrime = temp;\n                }\n            }\n        }\n   \
    \     foreach (long i in lst) {\n            if (i % 2 == 0) {\n             \
    \   temp = i;\n                while (temp % 2 == 0) {\n                    temp\
    \ = temp / 2;\n                }\n                if (temp > largestPrime) {\n\
    \                    largestPrime = temp;\n                }\n            }\n\
    \        }\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n\
    \                temp = i;\n                while (temp % 2 == 0) {\n        \
    \            temp = temp / 2;\n                }\n                if (temp > largestPrime)\
    \ {\n                    largestPrime = temp;\n                }\n           \
    \ }\n        }\n        foreach (long i in lst) {\n            if (i % 2 == 0)\
    \ {\n                temp = i;\n                while (temp % 2 == 0) {\n    \
    \                temp = temp / 2;\n                }\n                if (temp\
    \ > largestPrime) {\n                    largestPrime = temp;\n              \
    \  }\n            }\n        }\n        foreach (long i in lst) {\n          \
    \  if (i % 2 == 0) {\n                temp = i;\n                while (temp %\
    \ 2 == 0) {\n                    temp = temp / 2;\n                }\n       \
    \         if (temp > largestPrime) {\n                    largestPrime = temp;\n\
    \                }\n            }\n        }\n        foreach (long i in lst)\
    \ {\n            if (i % 2 == 0) {\n                temp = i;\n              \
    \  while (temp % 2 == 0) {\n                    temp = temp / 2;\n           \
    \     }\n                if (temp > largestPrime) {\n                    largestPrime\
    \ = temp;\n                }\n            }\n        }\n        foreach (long\
    \ i in lst) {\n            if (i % 2 == 0) {\n                temp = i;\n    \
    \            while (temp % 2 == 0) {\n                    temp = temp / 2;\n \
    \               }\n                if (temp > largestPrime) {\n              \
    \      largestPrime = temp;\n                }\n            }\n        }\n   \
    \     foreach (long i in lst) {\n            if (i % 2 == 0) {\n             \
    \   temp = i;\n                while (temp % 2 == 0) {\n                    temp\
    \ = temp / 2;\n                }\n                if (temp > largestPrime) {\n\
    \                    largestPrime = temp;\n                }\n            }\n\
    \        }", "        long largestPrime = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            sum += i;\n            if (sum > largestPrime)\
    \ {\n                largestPrime = sum;\n            }\n        }\n        return\
    \ largestPrime;", "        long largestPrime = 0;\n        long sum = 0;\n   \
    \     foreach (long n in lst) {\n            if (isPrime(n)) {\n             \
    \   sum += n;\n                if (sum > largestPrime) {\n                   \
    \ largestPrime = sum;\n                }\n            }\n        }\n        return\
    \ largestPrime;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n\
    \                if (sum > max)\n                    max = sum;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > max) {\n                    max =\
    \ sum;\n                }\n            }\n        }\n        return max;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime) {\n                    largestPrime = sum;\n\
    \                }\n            }\n        }\n        return largestPrime;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime) {\n                    largestPrime = sum;\n\
    \                }\n            }\n        }\n        return largestPrime;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                sum += i;\n      \
    \          if (sum > largestPrime)\n                    largestPrime = sum;\n\
    \            }\n        }\n        return largestPrime;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        long prime = 0;\n        long temp = 0;\n\
    \        foreach (long i in lst) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                prime = temp;\n                temp = temp / 10;\n \
    \           }\n            if (prime > largestPrime) {\n                largestPrime\
    \ = prime;\n            }\n            sum += i;\n        }\n        return sum;",
  "        long max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                max = i;\n                sum\
    \ += i;\n            }\n        }\n        return sum;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ if (IsPrime(i)) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long largestPrime = 0;\n \
    \       long sum = 0;\n        long sumOfDigits = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long n = i;\n     \
    \       while (n > 1) {\n                if (n % 2 == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        n = n / 2;\n            }\n            if (isPrime) {\n             \
    \   largestPrime = i;\n                sum += i;\n                sumOfDigits\
    \ += i;\n            }\n        }\n        return sumOfDigits;", "        long\
    \ max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n       \
    \     if (i % 2 == 0) {\n                max = i;\n            }\n        }\n\
    \        foreach (long i in lst) {\n            if (i % 2 == 0) {\n          \
    \      sum += i;\n            }\n        }\n        return sum;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        long primeSum = 0;\n     \
    \   foreach (long i in lst) {\n            bool isPrime = true;\n            long\
    \ prime = 2;\n            while (prime <= i) {\n                if (i % prime\
    \ == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                prime++;\n            }\n            if (isPrime)\
    \ {\n                primeSum += i;\n            }\n        }\n        largestPrime\
    \ = primeSum;\n        foreach (long i in lst) {\n            sum += i;\n    \
    \    }\n        return sum;", "        long max = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (i % 2 == 0) {\n          \
    \      max = i;\n            }\n        }\n        foreach (long i in lst) {\n\
    \            if (i % 2 == 0) {\n                sum += i;\n            }\n   \
    \     }\n        return sum;", "        long largestPrime = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            bool isPrime = true;\n\
    \            long j = 2;\n            while (j < i) {\n                if (i %\
    \ j == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                j++;\n            }\n            if (isPrime)\
    \ {\n                sum += i;\n                largestPrime = i;\n          \
    \  }\n        }\n        return sum;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             max = i;\n                sum += i;\n            }\n        }\n\
    \        return sum;", "        long largestPrime = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      sum += i;\n                if (sum > largestPrime) {\n                \
    \    largestPrime = sum;\n                }\n            }\n        }\n      \
    \  return largestPrime;", "        long largestPrime = 0;\n        long sum =\
    \ 0;\n        long prime = 0;\n        bool isPrime = true;\n        long max\
    \ = 0;\n        foreach (long i in lst) {\n            isPrime = true;\n     \
    \       prime = 2;\n            max = i;\n            while (prime < max) {\n\
    \                if (i % prime == 0) {\n                    isPrime = false;\n\
    \                    break;\n                }\n                prime++;\n   \
    \         }\n            if (isPrime) {\n                sum += i;\n         \
    \   }\n        }\n        largestPrime = sum;\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long n = i;\n     \
    \       while (n > 1) {\n                if (n % 2 == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        n = n / 2;\n            }\n            if (isPrime) {\n             \
    \   largestPrime = i;\n                sum += i;\n            }\n        }\n \
    \       return sum;", "        long max = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                max = i;\n\
    \                sum += i;\n            }\n        }\n        return sum;", " \
    \       long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long prime = 2;\n \
    \           while (prime < i) {\n                if (i % prime == 0) {\n     \
    \               isPrime = false;\n                    break;\n               \
    \ }\n                prime++;\n            }\n            if (isPrime) {\n   \
    \             sum += i;\n                if (sum > largestPrime) {\n         \
    \           largestPrime = sum;\n                }\n            }\n        }\n\
    \        return largestPrime;", "        long largestPrime = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            bool isPrime = true;\n\
    \            long n = i;\n            while (n > 1) {\n                if (n %\
    \ 2 == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                n = n / 2;\n            }\n            if\
    \ (isPrime) {\n                largestPrime = i;\n                sum += i;\n\
    \            }\n        }\n        return sum;", "        long largestPrime =\
    \ 0;\n        long sum = 0;\n        foreach (long i in lst) {\n            if\
    \ (IsPrime(i)) {\n                sum += i;\n                if (sum > largestPrime)\n\
    \                    largestPrime = sum;\n            }\n        }\n        return\
    \ largestPrime;", "        long largestPrime = 0;\n        long sum = 0;\n   \
    \     foreach (long i in lst) {\n            long prime = IsPrime(i);\n      \
    \      if (prime > largestPrime) {\n                largestPrime = prime;\n  \
    \              sum = i;\n            }\n        }\n        return sum;", "   \
    \     long largestPrime = 0;\n        long sum = 0;\n        foreach (var item\
    \ in lst) {\n            if (item > largestPrime) {\n                largestPrime\
    \ = item;\n            }\n            sum += item;\n        }\n        return\
    \ sum;", "        long max = 0;\n        long sum = 0;\n        foreach (long\
    \ i in lst) {\n            bool isPrime = true;\n            long n = i;\n   \
    \         while (n > 1) {\n                if (n % 2 == 0) {\n               \
    \     isPrime = false;\n                    break;\n                }\n      \
    \          n = n / 2;\n            }\n            if (isPrime) {\n           \
    \     sum += i;\n                if (max < i) max = i;\n            }\n      \
    \  }\n        return sum;", "        long largestPrime = 0;\n        long sum\
    \ = 0;\n        foreach (long i in lst) {\n            bool isPrime = true;\n\
    \            long n = i;\n            while (n > 1) {\n                if (n %\
    \ 2 == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                n = n / 2;\n            }\n            if\
    \ (isPrime) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (long n in lst) {\n            if (IsPrime(n)) {\n\
    \                sum += n;\n                if (sum > max) {\n               \
    \     max = sum;\n                }\n            }\n        }\n        return\
    \ max;", "        long largestPrime = 0;\n        long sum = 0;\n        foreach\
    \ (long i in lst) {\n            bool isPrime = true;\n            long prime\
    \ = 2;\n            while (prime <= i) {\n                if (i % prime == 0)\
    \ {\n                    isPrime = false;\n                    break;\n      \
    \          }\n                prime++;\n            }\n            if (isPrime)\
    \ {\n                sum += i;\n                if (sum > largestPrime) {\n  \
    \                  largestPrime = sum;\n                }\n            }\n   \
    \     }\n        return largestPrime;", "        long largestPrime = 0;\n    \
    \    long sum = 0;\n        long prime = 1;\n        foreach (long i in lst) {\n\
    \            sum += i;\n            if (sum > largestPrime) {\n              \
    \  largestPrime = sum;\n            }\n            while (prime < i) {\n     \
    \           prime++;\n                if (prime % i == 0) {\n                \
    \    sum -= i;\n                    break;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long max = 0;\n        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            sum += i;\n       \
    \     if (sum > max) {\n                max = sum;\n            }\n        }\n\
    \        return max;", "        long largestPrime = 0;\n        long sum = 0;\n\
    \        foreach (long i in lst) {\n            bool isPrime = true;\n       \
    \     long prime = 2;\n            while (prime < i) {\n                if (i\
    \ % prime == 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n                prime++;\n            }\n            if (isPrime)\
    \ {\n                sum += i;\n                largestPrime = i;\n          \
    \  }\n        }\n        return sum;", "        long max = 0;\n        long sum\
    \ = 0;\n        foreach (long n in lst) {\n            if (IsPrime(n)) {\n   \
    \             sum += n;\n                if (sum > max)\n                    max\
    \ = sum;\n            }\n        }\n        return max;", "        long largestPrime\
    \ = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n           \
    \ bool isPrime = true;\n            long j = 2;\n            while (j < i) {\n\
    \                if (i % j == 0) {\n                    isPrime = false;\n   \
    \                 break;\n                }\n                j++;\n          \
    \  }\n            if (isPrime) {\n                largestPrime = i;\n        \
    \        sum += i;\n            }\n        }\n        return sum;", "        long\
    \ max = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n       \
    \     sum += i;\n            if (sum > max) {\n                max = sum;\n  \
    \          }\n        }\n        return max;", "        long largestPrime = 0;\n\
    \        long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                sum += i;\n                if (sum > largestPrime) {\n  \
    \                  largestPrime = sum;\n                }\n            }\n   \
    \     }\n        return largestPrime;", "        long largestPrime = 0;\n    \
    \    long sum = 0;\n        foreach (long i in lst) {\n            bool isPrime\
    \ = true;\n            long j = 2;\n            while (j < i) {\n            \
    \    if (i % j == 0) {\n                    isPrime = false;\n               \
    \     break;\n                }\n                j++;\n            }\n       \
    \     if (isPrime) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                }\n            }\n\
    \        }\n        return largestPrime;", "        long largestPrime = 0;\n \
    \       long sum = 0;\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     bool isPrime = true;\n        foreach (long i in lst) {\n            if\
    \ (isPrime) {\n                sum += i;\n                if (sum > largestPrime)\
    \ {\n                    largestPrime = sum;\n                    maxIndex = i;\n\
    \                }\n            }\n            isPrime = false;\n            max\
    \ = Math.Max(max, i);\n        }\n        return largestPrime;", "        long\
    \ largestPrime = 0;\n        long sum = 0;\n        foreach (long i in lst) {\n\
    \            bool isPrime = true;\n            int j = 2;\n            while (j\
    \ < i) {\n                if (i % j == 0) {\n                    isPrime = false;\n\
    \                    break;\n                }\n                j++;\n       \
    \     }\n            if (isPrime) {\n                sum += i;\n             \
    \   if (sum > largestPrime) {\n                    largestPrime = sum;\n     \
    \           }\n            }\n        }\n        return largestPrime;", "    \
    \    long largestPrime = 0;\n        long sum = 0;\n        foreach (long i in\
    \ lst) {\n            sum += i;\n            if (sum > largestPrime) {\n     \
    \           largestPrime = sum;\n            }\n        }\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        foreach (long i\
    \ in lst) {\n            bool isPrime = true;\n            long j = 2;\n     \
    \       while (j < i) {\n                if (i % j == 0) {\n                 \
    \   isPrime = false;\n                    break;\n                }\n        \
    \        j++;\n            }\n            if (isPrime) {\n                sum\
    \ += i;\n                largestPrime = i;\n            }\n        }\n       \
    \ return sum;", "        long largestPrime = 0;\n        long sum = 0;\n     \
    \   foreach (long i in lst) {\n            if (IsPrime(i)) {\n               \
    \ sum += i;\n                if (sum > largestPrime) {\n                    largestPrime\
    \ = sum;\n                }\n            }\n        }\n        return largestPrime;",
  "        long largestPrime = 0;\n        long sum = 0;\n        long primeSum =\
    \ 0;\n        long primeSum2 = 0;\n        long primeSum3 = 0;\n        long primeSum4\
    \ = 0;\n        long primeSum5 = 0;\n        long primeSum6 = 0;\n        long\
    \ primeSum7 = 0;\n        long primeSum8 = 0;\n        long primeSum9 = 0;\n \
    \       long primeSum10 = 0;\n        long primeSum11 = 0;\n        long primeSum12\
    \ = 0;\n        long primeSum13 = 0;\n        long primeSum14 = 0;\n        long\
    \ primeSum15 = 0;\n        long primeSum16 = 0;\n        long primeSum17 = 0;\n\
    \        long primeSum18 = 0;\n        long primeSum19 = 0;\n        long primeSum20\
    \ = 0;\n        long primeSum21 = 0;\n        long primeSum22 = 0;\n        long\
    \ primeSum23 = 0;\n        long primeSum24 = 0;\n        long primeSum25 = 0;\n\
    \        long primeSum26 = 0;\n        long primeSum27 = 0;\n        long primeSum28\
    \ = 0;\n        long primeSum29 = 0;\n        long primeSum30 = 0;\n        long\
    \ primeSum31 = 0;\n        long primeSum32 = 0;\n        long primeSum33 = 0;\n\
    \        long primeSum34 = 0;\n        long primeSum35 = 0;\n        long primeSum36\
    \ = 0;\n        long primeSum37 = 0;\n        long primeSum38 = 0;\n        long\
    \ primeSum39 = 0;\n        long primeSum40 = 0;\n        long primeSum41 = 0;\n\
    \        long primeSum42 = 0;\n        long primeSum43 = 0;\n        long primeSum44\
    \ = 0;\n        long primeSum45 = 0;\n        long primeSum46 = 0;\n        long\
    \ primeSum47 = 0;\n        long primeSum48 = 0;\n        long primeSum49 = 0;\n\
    \        long primeSum50 = 0;\n        long primeSum51 = 0;\n        long primeSum52\
    \ = 0;\n        long primeSum53 = 0;\n        long primeSum54 = 0;\n        long\
    \ primeSum55 = 0;\n        long primeSum56 = 0;\n        long primeSum57 = 0;\n\
    \        long primeSum58 = 0;\n        long primeSum59 = 0;\n        long primeSum60\
    \ = 0;\n        long primeSum61 = 0;\n        long primeSum62 = 0;\n        long\
    \ primeSum63 = 0;\n        long primeSum64 = 0;\n        long primeSum65 = 0;\n\
    \        long primeSum66 = 0;\n        long primeSum67 = 0;\n        long primeSum68\
    \ = 0;\n        long primeSum69 = 0;\n        long primeSum70 = 0;\n        long\
    \ primeSum71 = 0;\n        long primeSum72 = 0;\n", "        long max = 0;\n \
    \       long sum = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                sum += i;\n                if (sum > max) {\n           \
    \         max = sum;\n                }\n            }\n        }\n        return\
    \ max;"]
stop_tokens:
- "\n    }\n"

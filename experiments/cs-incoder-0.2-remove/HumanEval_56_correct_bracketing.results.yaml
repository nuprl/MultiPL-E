language: cs
name: HumanEval_56_correct_bracketing
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsRegex
    = string.Format(\"({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw4heiec8.cs(14,53): error CS1010: Newline in constant

    /tmp/tmpw4heiec8.cs(14,1012): error CS1026: ) expected

    /tmp/tmpw4heiec8.cs(14,1012): error CS1002: ; expected

    '
  timestamp: 1659976862
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<char> openingBrackets
    = new List<char>();\n        List<char> closingBrackets = new List<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           } else {\n                return false;\n            }\n        }\n
    \       if (openingBrackets.Count != closingBrackets.Count) {\n            return
    false;\n        }\n        bool allOpen = true;\n        bool allClosed = true;\n
    \       for (int i = 0; i < openingBrackets.Count; i++) {\n            if (openingBrackets[i]
    != closingBrackets[i]) {\n                allOpen = false;\n                allClosed
    = false;\n                break;\n            }\n        }\n        return allOpen
    && allClosed;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aed45bf89e204eaba6a2bc4e3d3f7610>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aed45bf89e204eaba6a2bc4e3d3f7610>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<') result = false;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<int> openingBrackets =
    new List<int>();\n        List<int> closingBrackets = new List<int>();\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               openingBrackets.Add(i);\n            } else if (brackets[i] ==
    '>') {\n                closingBrackets.Add(i);\n            }\n        }\n        if
    (openingBrackets.Count != closingBrackets.Count) {\n            return false;\n
    \       }\n        for (int i = 0; i < openingBrackets.Count; i++) {\n            if
    (openingBrackets[i] != closingBrackets[i]) {\n                return false;\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <be34481413b249b8ae9e612d9a5952c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <be34481413b249b8ae9e612d9a5952c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<') result = false;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"[\",
    \"\").Replace(\"]\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        return openingBrackets.Count() == closingBrackets.Count();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b097948d2fa40dba3c233e4a3ea41f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b097948d2fa40dba3c233e4a3ea41f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl9p3fxia.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpl9p3fxia.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{<\";\n
    \       string closingBrackets = \")]}>\";\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (openingBrackets.IndexOf(c) == -1) {\n
    \               correct = false;\n                break;\n            }\n        }\n
    \       foreach (char c in brackets) {\n            if (closingBrackets.IndexOf(c)
    == -1) {\n                correct = false;\n                break;\n            }\n
    \       }\n        return correct;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f2b51d4f0584193bdd107a6ea7cadf5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f2b51d4f0584193bdd107a6ea7cadf5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result =
    result && CorrectBracketing(brackets.Replace(c, '>'));\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a41b3adde8454e669ab32ed09d5de070>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a41b3adde8454e669ab32ed09d5de070>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        result = false;\n                        break;\n                    }\n
    \               }\n            }\n            if (c == '>') {\n                for
    (int i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] ==
    '>') {\n                        result = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4179b30096b44dd18bf3dec86053c6b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4179b30096b44dd18bf3dec86053c6b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    (brackets.IndexOf('>', brackets.IndexOf(c) + 1) != -1);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099a791789ee4549bcc124b2cde161b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099a791789ee4549bcc124b2cde161b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsRegex
    = string.Format(\"{0}\", openingBrackets);\n        string closingBracketsRegex
    = string.Format(\"{0}\", closingBrackets);\n        string openingBracketsRegexReplace
    = string.Format(\"\\\\{0}\", openingBrackets);\n        string closingBracketsRegexReplace
    = string.Format(\"\\\\{0}\", closingBrackets);\n        string openingBracketsRegexReplaceWithSpace
    = string.Format(\"\\\\s{0}\", openingBrackets);\n        string closingBracketsRegexReplaceWithSpace
    = string.Format(\"\\\\s{0}\", closingBrackets);\n        string openingBracketsRegexReplaceWithSpaceWithBrackets
    = string.Format(\"\\\\s{0}\\\\{0}\", openingBrackets);\n        string closingBracketsRegexReplaceWithSpaceWithBrackets
    = string.Format(\"\\\\s{0}\\\\{0}\", closingBrackets);\n        string openingBracketsRegexReplaceWithSpaceWithBracketsWithSpace
    = string.Format(\"\\\\s{0}\\\\s{0}\", openingBrackets);\n        string closingBracketsRegexReplaceWithSpaceWithBracketsWithSpace
    = string.Format(\"\\\\s{0}\\\\s{0}\", closingBrackets);\n        string openingBracketsRegexReplaceWithSpaceWithBracketsWithSpaceWithBrackets
    = string.Format(\"\\\\s{0}\\\\s{0}\\\\s{0}\", openingBrackets);\n        string
    closingBracketsRegexReplaceWithSpaceWithBracketsWithSpaceWithBrackets = string.Format(\"\\\\s{0}\\\\s{0}\\\\s{0}\",
    closingBrackets);\n        string openingBracketsRegexReplaceWithSpaceWithBracketsWithSpaceWithBracketsWithSpace
    = string.Format(\"\\\\s{0}\\\\s{0}\\\\s{0}\\\\s{0}\", openingBrackets);\n        string
    closingBracketsRegexReplaceWithSpaceWithBracketsWithSpaceWithBracketsWithSpace
    = string.Format(\"\\\\s{0}\\\\s{0}\\\\s{0}\\\\s{0}\", closingBrackets);\n        string
    openingBracketsRegexReplaceWithSpaceWithBracketsWithSpaceWithBracketsWithSpaceWithBrackets
    = string.Format(\"\\\\s{0}\\\\s{0}\\\\s{0}\\\\s{0}\\\\s{0}\", openingBrackets);\n
    \       string closingBracketsRegexReplaceWithSpaceWithBracketsWithSpaceWithBracketsWithSpaceWithBrackets
    = string.Format(\"\\\\s{0}\\\\s{0}\\\\s{0}\\\\s{0}\\\\s{0}\", closingBrackets);\n
    \       string openingBracketsRegexReplaceWithSpaceWithBra\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8lr25lyi.cs(30,59): error CS1002: ; expected

    '
  timestamp: 1659976862
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<string> openingBrackets
    = new List<string>();\n        List<string> closingBrackets = new List<string>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        foreach (string openingBracket
    in openingBrackets) {\n            bool found = false;\n            foreach (string
    closingBracket in closingBrackets) {\n                if (closingBracket == openingBracket)
    {\n                    found = true;\n                    break;\n                }\n
    \           }\n            if (!found) {\n                return false;\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwhy1s7um.cs(16,37): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpwhy1s7um.cs(18,37): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsClosingBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsOpeningBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl8ei6bhf.cs(15,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    /tmp/tmpl8ei6bhf.cs(18,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2a7645626ca42a5b7b129f76d4c1957>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2a7645626ca42a5b7b129f76d4c1957>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        var stack = new Stack<char>();\n
    \       foreach (var c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count == 0) {\n
    \                   return false;\n                }\n                var opening
    = stack.Pop();\n                if (opening != c) {\n                    return
    false;\n                }\n            } else {\n                if (stack.Count
    == 0) {\n                    return false;\n                }\n                var
    opening = stack.Pop();\n                if (opening != c) {\n                    return
    false;\n                }\n                stack.Push(c);\n            }\n        }\n
    \       return stack.Count == 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ad7fb5e93e6549c3bdf5071c50ec1a19>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ad7fb5e93e6549c3bdf5071c50ec1a19>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        if (brackets == null) return
    false;\n        Stack<char> stack = new Stack<char>();\n        foreach (char
    c in brackets) {\n            if (c == '<') stack.Push(c);\n            else if
    (c == '>') stack.Pop();\n            else return false;\n        }\n        return
    stack.Count == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Stack empty.\n
    \ at System.Collections.Generic.Stack`1[T].Pop () [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.CorrectBracketing (System.String brackets) [0x00049] in <3201b20010384fd595c2550b84c96c35>:0
    \n  at Problem.Main (System.String[] args) [0x00041] in <3201b20010384fd595c2550b84c96c35>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Stack empty.\n
    \ at System.Collections.Generic.Stack`1[T].Pop () [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.CorrectBracketing (System.String brackets) [0x00049] in <3201b20010384fd595c2550b84c96c35>:0
    \n  at Problem.Main (System.String[] args) [0x00041] in <3201b20010384fd595c2550b84c96c35>:0
    \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsClosingBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsOpeningBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl8ei6bhf.cs(15,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    /tmp/tmpl8ei6bhf.cs(18,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsCount
    = openingBrackets.Length;\n        string closingBracketsCount = closingBrackets.Length;\n
    \       string openingBracketsArray = openingBrackets.ToCharArray();\n        string
    closingBracketsArray = closingBrackets.ToCharArray();\n        string bracketsArray
    = brackets.ToCharArray();\n        bool result = true;\n        for (int i = 0;
    i < bracketsArray.Length; i++) {\n            if (bracketsArray[i] != openingBracketsArray[i])
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcddzgb_z.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpcddzgb_z.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpcddzgb_z.cs(16,39): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpcddzgb_z.cs(17,39): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpcddzgb_z.cs(18,32): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')
    {\n                        result = true;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95c21bd03c9744888df64a3040a3e5b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95c21bd03c9744888df64a3040a3e5b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n            if (c ==
    '>') {\n                for (int i = 0; i < brackets.Length; i++) {\n                    if
    (brackets[i] == '>') {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <222c52450a704ab6b67d0665714de9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <222c52450a704ab6b67d0665714de9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            else if (c == '>')
    {\n                result &= !IsClosingBracket(brackets, c);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe7g791w6.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpe7g791w6.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        continue;\n                    }\n                    if
    (brackets[i] == '>') {\n                        break;\n                    }\n
    \                   result = false;\n                    break;\n                }\n
    \           }\n            if (c == '>') {\n                for (int i = 0; i
    < brackets.Length; i++) {\n                    if (brackets[i] == '>') {\n                        continue;\n
    \                   }\n                    if (brackets[i] == '<') {\n                        break;\n
    \                   }\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265e080b5a4d43d4b63c08b02a9a6105>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <265e080b5a4d43d4b63c08b02a9a6105>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] != '<') {\n
    \               result = false;\n                break;\n            }\n        }\n
    \       for (int i = brackets.Length - 1; i >= 0; i--) {\n            if (brackets[i]
    != '>') {\n                result = false;\n                break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2181f8b3cb614e80ac2adb599a36f942>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2181f8b3cb614e80ac2adb599a36f942>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i + 1] == '>') {\n                    result = true;\n
    \               } else {\n                    result = false;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f679f3668a214ae49179c36879d38b91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f679f3668a214ae49179c36879d38b91>:0
    \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the
    bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x00018] in <f679f3668a214ae49179c36879d38b91>:0 \n  at Problem.Main (System.String[]
    args) [0x00067] in <f679f3668a214ae49179c36879d38b91>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.Index"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    correct = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0) {\n                    correct
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return correct;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56832e772b394041b5748b8c574e2288>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56832e772b394041b5748b8c574e2288>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        var openingBrackets = new HashSet<char>();\n
    \       var closingBrackets = new HashSet<char>();\n        foreach (var c in
    brackets) {\n            if (c == '<') {\n                openingBrackets.Add('>');\n
    \           }\n            else if (c == '>') {\n                closingBrackets.Add('<');\n
    \           }\n        }\n        return openingBrackets.Count == closingBrackets.Count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09fa0f4ab9e14d078173f6c71afc986c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09fa0f4ab9e14d078173f6c71afc986c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result =
    result && CorrectBracketing(brackets.Substring(0, brackets.IndexOf(c)));\n            }\n
    \           if (c == '>') {\n                result = result && CorrectBracketing(brackets.Substring(brackets.IndexOf(c)
    + 1));\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976868
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsClosingBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsOpeningBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl8ei6bhf.cs(15,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    /tmp/tmpl8ei6bhf.cs(18,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                bool found
    = false;\n                for (int i = 0; i < brackets.Length; i++) {\n                    if
    (brackets[i] == '>') {\n                        found = true;\n                        break;\n
    \                   }\n                }\n                if (!found) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5307304571484f96bd7ab861f2740f3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5307304571484f96bd7ab861f2740f3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl9p3fxia.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpl9p3fxia.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        var stack = new Stack<string>();\n
    \       foreach (var c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count == 0) {\n
    \                   return false;\n                }\n                var open
    = stack.Pop();\n                if (open != '<') {\n                    return
    false;\n                }\n            }\n        }\n        return stack.Count
    == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsm2vofew.cs(15,28): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpsm2vofew.cs(21,21): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''string'' and ''char''

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int i =
    0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i,
    1) != closingBrackets.Substring(i + 1, 1)) {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6dd1b688f234f96a4ec5b202325cf56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6dd1b688f234f96a4ec5b202325cf56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count > 0) {\n                    char
    top = stack.Pop();\n                    if (top != '<')\n                        return
    false;\n                }\n            }\n        }\n        return stack.Count
    == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa1630fab1914912bf994af7115428ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa1630fab1914912bf994af7115428ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c != '<' && c != '>') {\n                correct
    = false;\n                break;\n            }\n        }\n        return correct;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc72c9f6e26b4667b683f0ba9d74b4e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc72c9f6e26b4667b683f0ba9d74b4e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result =
    result && CorrectBracketing(brackets.Substring(0, brackets.IndexOf(c)));\n            }\n
    \           if (c == '>') {\n                result = result && CorrectBracketing(brackets.Substring(brackets.IndexOf(c)
    + 1));\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976868
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool correct = false;\n        foreach
    (char c in brackets) {\n            if (openingBrackets.Contains(c)) {\n                correct
    = true;\n            }\n            if (closingBrackets.Contains(c)) {\n                correct
    = true;\n            }\n        }\n        return correct;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eac4b27fd842d19a770ba202b0031e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eac4b27fd842d19a770ba202b0031e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i + 1] == '>') {\n                    result = true;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0
    \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the
    bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x00018] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0 \n  at Problem.Main (System.String[]
    args) [0x00067] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.Index"
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"[\",
    \"\").Replace(\"]\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        bool correct = true;\n        for (int i
    = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i] ==
    '(') {\n                if (closingBrackets[i] == ')') {\n                    correct
    = false;\n                }\n            }\n            if (openingBrackets[i]
    == '[') {\n                if (closingBrackets[i] == ']') {\n                    correct
    = false;\n                }\n            }\n            if (openingBrackets[i]
    == '{') {\n                if (closingBrackets[i] == '}') {\n                    correct
    = false;\n                }\n            }\n        }\n        return correct;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9789060a4b76412f8eacc1817e5b8de6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9789060a4b76412f8eacc1817e5b8de6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n
    \       var closingBrackets = new List<char>();\n        foreach (var c in brackets)
    {\n            if (c == '<') {\n                openingBrackets.Add(c);\n            }
    else if (c == '>') {\n                closingBrackets.Add(c);\n            }\n
    \       }\n        if (openingBrackets.Count != closingBrackets.Count) {\n            return
    false;\n        }\n        foreach (var c in openingBrackets) {\n            if
    (closingBrackets.Contains(c)) {\n                return false;\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69384ee494494492ac8923d6b4acc055>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69384ee494494492ac8923d6b4acc055>:0
    \n"
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        result = true;\n                        break;\n                    }\n
    \               }\n            }\n            if (c == '>') {\n                for
    (int i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] ==
    '>') {\n                        result = true;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8889ebee99ca48afb0492d963094eea1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8889ebee99ca48afb0492d963094eea1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<') result = false;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result =
    result && CorrectBracketing(brackets.Replace(c, \"<\"));\n            } else if
    (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,
    \">\"));\n            } else {\n                result = result && CorrectBracketing(brackets.Replace(c,
    \"<>\"));\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp56p9fvbe.cs(15,74): error CS1503: Argument 2: cannot convert from ''string''
    to ''char''

    /tmp/tmp56p9fvbe.cs(17,74): error CS1503: Argument 2: cannot convert from ''string''
    to ''char''

    /tmp/tmp56p9fvbe.cs(19,74): error CS1503: Argument 2: cannot convert from ''string''
    to ''char''

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl9p3fxia.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpl9p3fxia.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<') {\n                result =
    false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4b9bae8e4164ea6add672cc9e2cf82d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4b9bae8e4164ea6add672cc9e2cf82d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"\";\n
    \       string closingBrackets = \"\";\n        foreach (char c in brackets) {\n
    \           if (c == '<') {\n                openingBrackets += c;\n            }
    else if (c == '>') {\n                closingBrackets += c;\n            }\n        }\n
    \       if (openingBrackets.Length != closingBrackets.Length) {\n            return
    false;\n        }\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;
    i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n                result
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7b453ab6bfb424ca6ef5d77f08366c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7b453ab6bfb424ca6ef5d77f08366c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i - 1] == '>') {\n                    correct = false;\n
    \                   break;\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x00018] in <50d9feeb9b19498bb4586e28d633cdcc>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <50d9feeb9b19498bb4586e28d633cdcc>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.CorrectBracketing (System.String brackets) [0x00018] in <50d9feeb9b19498bb4586e28d633cdcc>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <50d9feeb9b19498bb4586e28d633cdcc>:0
    \n"
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')
    {\n                        result = true;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95c21bd03c9744888df64a3040a3e5b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95c21bd03c9744888df64a3040a3e5b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int i =
    0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i] != closingBrackets[i])
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ac440267cfe496cbb377479bcfc200c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ac440267cfe496cbb377479bcfc200c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               for (int j = i + 1; j < brackets.Length; j++) {\n                    if
    (brackets[j] == '>') {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d6c27600a0441ff94a90b1d87ca8eaa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d6c27600a0441ff94a90b1d87ca8eaa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')
    {\n                        result = false;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b67aabf7f8548f890d8594dac84ba4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b67aabf7f8548f890d8594dac84ba4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl9p3fxia.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpl9p3fxia.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               for (int j = i + 1; j < brackets.Length; j++) {\n                    if
    (brackets[j] == '>') {\n                        result = true;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7be81c71e48947ea9d825e5867500f92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7be81c71e48947ea9d825e5867500f92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"[\",
    \"\").Replace(\"]\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        return openingBrackets.Count() == closingBrackets.Count();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b097948d2fa40dba3c233e4a3ea41f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b097948d2fa40dba3c233e4a3ea41f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool result = false;\n        foreach
    (char c in brackets) {\n            if (openingBrackets.Contains(c)) {\n                if
    (closingBrackets.Contains(brackets[brackets.IndexOf(c) + 1])) {\n                    result
    = true;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf9deb102d62412f98c0b26fdfc850ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf9deb102d62412f98c0b26fdfc850ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool correct = true;\n        for (int i
    = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i] !=
    \"<\") {\n                correct = false;\n            }\n        }\n        for
    (int i = 0; i < closingBrackets.Length; i++) {\n            if (closingBrackets[i]
    != \">\") {\n                correct = false;\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6lpy7if1.cs(16,17): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''char'' and ''string''

    /tmp/tmp6lpy7if1.cs(21,17): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''char'' and ''string''

    '
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"\";\n
    \       string closingBrackets = \"\";\n        foreach (char c in brackets) {\n
    \           if (c == '<') {\n                openingBrackets += c;\n            }
    else if (c == '>') {\n                closingBrackets += c;\n            }\n        }\n
    \       if (openingBrackets.Length != closingBrackets.Length) {\n            return
    false;\n        }\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;
    i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n                result
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7b453ab6bfb424ca6ef5d77f08366c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7b453ab6bfb424ca6ef5d77f08366c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<char> openingBrackets
    = new List<char>();\n        List<char> closingBrackets = new List<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        foreach (char c in openingBrackets)
    {\n            if (closingBrackets.Contains(c)) {\n                return false;\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46ef71b44083412faba595ba1e37fafc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46ef71b44083412faba595ba1e37fafc>:0
    \n"
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool correct = true;\n        for (int i
    = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i,
    1) != closingBrackets.Substring(0, i)) {\n                correct = false;\n                break;\n
    \           }\n        }\n        return correct;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87f00406e51d4661b5197b2c608852de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87f00406e51d4661b5197b2c608852de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"[\",
    \"\").Replace(\"]\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        return openingBrackets.Count() == closingBrackets.Count();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b097948d2fa40dba3c233e4a3ea41f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b097948d2fa40dba3c233e4a3ea41f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (openingBrackets.IndexOf(c) == -1) {\n
    \               result = false;\n                break;\n            }\n        }\n
    \       foreach (char c in brackets) {\n            if (closingBrackets.IndexOf(c)
    == -1) {\n                result = false;\n                break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd57d650e44641f58742514c91459624>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd57d650e44641f58742514c91459624>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"\";\n
    \       string closingBrackets = \"\";\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                openingBrackets
    += c;\n            } else if (c == '>') {\n                closingBrackets +=
    c;\n            } else {\n                result &= (openingBrackets.Length ==
    closingBrackets.Length);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0b7d694b7654a4cbb81c51b421d5550>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0b7d694b7654a4cbb81c51b421d5550>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n            if (c ==
    '>') {\n                for (int i = 0; i < brackets.Length; i++) {\n                    if
    (brackets[i] == '>') {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <222c52450a704ab6b67d0665714de9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <222c52450a704ab6b67d0665714de9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        result = false;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bba6188755d47dfa7dfe6d575496173>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bba6188755d47dfa7dfe6d575496173>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<' && c != '>') {\n                result
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b43166b808fe45a09d223b3d31457ae6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b43166b808fe45a09d223b3d31457ae6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl9p3fxia.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpl9p3fxia.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{<\";\n
    \       string closingBrackets = \")]}>\";\n        string openingBracketsRegex
    = string.Format(\"({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj0uhim1s.cs(14,53): error CS1010: Newline in constant

    /tmp/tmpj0uhim1s.cs(14,1010): error CS1026: ) expected

    /tmp/tmpj0uhim1s.cs(14,1010): error CS1002: ; expected

    '
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i - 1] == '>') {\n                    correct = false;\n
    \                   break;\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x00018] in <50d9feeb9b19498bb4586e28d633cdcc>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <50d9feeb9b19498bb4586e28d633cdcc>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.CorrectBracketing (System.String brackets) [0x00018] in <50d9feeb9b19498bb4586e28d633cdcc>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <50d9feeb9b19498bb4586e28d633cdcc>:0
    \n"
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<char> openingBrackets
    = new List<char>();\n        List<char> closingBrackets = new List<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    return false;\n        foreach (char c in openingBrackets) {\n            if (closingBrackets.Contains(c))
    return false;\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c64cc22451874de0822862ded9a71100>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c64cc22451874de0822862ded9a71100>:0
    \n"
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count > 0) {\n                    char
    top = stack.Pop();\n                    if (top != '<') {\n                        return
    false;\n                    }\n                }\n            } else {\n                if
    (stack.Count > 0) {\n                    char top = stack.Pop();\n                    if
    (top != '<') {\n                        return false;\n                    }\n
    \               }\n                stack.Push(c);\n            }\n        }\n
    \       return stack.Count == 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774f22c324af432597486716cc2e6bab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774f22c324af432597486716cc2e6bab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"{\",
    \"\").Replace(\"}\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        return openingBrackets.Replace(closingBrackets,
    \"\") == \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <223f1ec1af78483e9599127d8a8b9d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <223f1ec1af78483e9599127d8a8b9d32>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               for (int j = i + 1; j < brackets.Length; j++) {\n                    if
    (brackets[j] == '>') {\n                        result = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7070129a8e394fa78c1588834b38ff14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7070129a8e394fa78c1588834b38ff14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<char> openingBrackets
    = new List<char>();\n        List<char> closingBrackets = new List<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        bool result = true;\n        for
    (int i = 0; i < openingBrackets.Count; i++) {\n            if (openingBrackets[i]
    != closingBrackets[i]) {\n                result = false;\n                break;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <770b3dd419524eee97523df0e4c7c4a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <770b3dd419524eee97523df0e4c7c4a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i - 1] == '>') {\n                    result = true;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x00018] in <4ea62c444c894ed19634fc7dafa196a9>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <4ea62c444c894ed19634fc7dafa196a9>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.CorrectBracketing (System.String brackets) [0x00018] in <4ea62c444c894ed19634fc7dafa196a9>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <4ea62c444c894ed19634fc7dafa196a9>:0
    \n"
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsCount
    = openingBrackets.Length;\n        string closingBracketsCount = closingBrackets.Length;\n
    \       string openingBracketsCount2 = openingBrackets.Replace(\"[\", \"\").Replace(\"]\",
    \"\").Length;\n        string closingBracketsCount2 = closingBrackets.Replace(\"]\",
    \"\").Replace(\"[\", \"\").Length;\n        string openingBracketsCount3 = openingBrackets.Replace(\"{\",
    \"\").Replace(\"}\", \"\").Length;\n        string closingBracketsCount3 = closingBrackets.Replace(\"}\",
    \"\").Replace(\"{\", \"\").Length;\n        string openingBracketsCount4 = openingBrackets.Replace(\"(\",
    \"\").Replace(\")\", \"\").Length;\n        string closingBracketsCount4 = closingBrackets.Replace(\")\",
    \"\").Replace(\"(\", \"\").Length;\n        string openingBracketsCount5 = openingBrackets.Replace(\"{\",
    \"\").Replace(\"}\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"[\",
    \"\").Replace(\"]\", \"\").Replace(\"{\", \"\").Replace(\"}\", \"\").Replace(\"(\",
    \"\").Replace(\")\", \"\").Replace(\"[\", \"\").Replace(\"]\", \"\").Replace(\"{\",
    \"\").Replace(\"}\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"[\",
    \"\").Replace(\"]\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"{\",
    \"\").Replace(\"}\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"[\",
    \"\").Replace(\"]\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"{\",
    \"\").Replace(\"}\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"[\",
    \"\").Replace(\"]\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"{\",
    \"\").Replace(\"}\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"[\",
    \"\").Replace(\"]\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"{\",
    \"\").Replace(\"}\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"[\",
    \"\").Replace(\"]\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"{\",
    \"\").Replace(\"}\", \"\").Replace(\"(\", \"\").Replace\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpucgff8yx.cs(22,998): error CS1002: ; expected

    '
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i + 1] == '>') {\n                    result = true;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0
    \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the
    bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x00018] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0 \n  at Problem.Main (System.String[]
    args) [0x00067] in <a9ee9138af8941e8a6c1cafc9c8ce0b5>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.Index"
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c != '<') correct = false;\n        }\n
    \       return correct;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da73aa9aaa5e4ffca4933dd240518e88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da73aa9aaa5e4ffca4933dd240518e88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"[\",
    \"\").Replace(\"]\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        bool result = true;\n        for (int i =
    0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i] != '<')
    result = false;\n            if (closingBrackets[i] != '>') result = false;\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657ac98f10f94459a9de1090e0d3fe1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <657ac98f10f94459a9de1090e0d3fe1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c != '<' && c != '>') {\n                correct
    = false;\n                break;\n            }\n        }\n        return correct;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc72c9f6e26b4667b683f0ba9d74b4e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc72c9f6e26b4667b683f0ba9d74b4e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"[\",
    \"\").Replace(\"]\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        bool result = true;\n        foreach (char
    openingBracket in openingBrackets) {\n            if (!closingBrackets.Contains(openingBracket))
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b0fa2b42b12464eaed64f5d767b56e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b0fa2b42b12464eaed64f5d767b56e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<' && c != '>') {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92b54fe9305f454ab2fea6357b10d84a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92b54fe9305f454ab2fea6357b10d84a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool result = false;\n        foreach
    (char c in brackets) {\n            if (openingBrackets.Contains(c)) {\n                result
    |= openingBrackets.IndexOf(c) != closingBrackets.IndexOf(c);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <326c58800eeb4982b3dacca2f0116163>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <326c58800eeb4982b3dacca2f0116163>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count > 0) {\n                    char
    top = stack.Pop();\n                    if (top != '<') {\n                        return
    false;\n                    }\n                }\n            } else {\n                if
    (stack.Count > 0) {\n                    char top = stack.Pop();\n                    if
    (top != '<') {\n                        return false;\n                    }\n
    \               }\n                stack.Push(c);\n            }\n        }\n
    \       return stack.Count == 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774f22c324af432597486716cc2e6bab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <774f22c324af432597486716cc2e6bab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool allOpeningBracketsAreClosed = openingBrackets.All(x
    => closingBrackets.Contains(x));\n        return allOpeningBracketsAreClosed;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b3301689dbb461c9fa6e2693615a77d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b3301689dbb461c9fa6e2693615a77d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"\";\n
    \       string closingBrackets = \"\";\n        foreach (char c in brackets) {\n
    \           if (c == '<') {\n                openingBrackets += c;\n            }
    else if (c == '>') {\n                closingBrackets += c;\n            } else
    {\n                throw new Exception(\"Invalid bracket: \" + c);\n            }\n
    \       }\n        if (openingBrackets.Length != closingBrackets.Length) {\n            return
    false;\n        }\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;
    i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n                result
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49db4fd62dc5429aa0166776290af37e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49db4fd62dc5429aa0166776290af37e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<char> openingBrackets
    = new List<char>();\n        List<char> closingBrackets = new List<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           }\n            else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        foreach (char c in openingBrackets)
    {\n            if (closingBrackets.Contains(c)) {\n                return false;\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ebc61f1210b4af49066c79c58c8ed84>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ebc61f1210b4af49066c79c58c8ed84>:0
    \n"
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               for (int j = i + 1; j < brackets.Length; j++) {\n                    if
    (brackets[j] == '>') {\n                        result = result && j > i;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bffd91b3c9f54805a60a43193ec209d9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bffd91b3c9f54805a60a43193ec209d9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int i =
    0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i,
    1) != closingBrackets.Substring(i + 1, 1)) {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6dd1b688f234f96a4ec5b202325cf56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6dd1b688f234f96a4ec5b202325cf56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int i =
    0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i] != closingBrackets[i])
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ac440267cfe496cbb377479bcfc200c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ac440267cfe496cbb377479bcfc200c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    correct = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    correct = false;\n                    break;\n
    \               }\n            }\n        }\n        return correct;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <3a497a1364764c27a7f2bb8a7616376b>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <3a497a1364764c27a7f2bb8a7616376b>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <3a497a1364764c27a7f2bb8a7616376b>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <3a497a1364764c27a7f2bb8a7616376b>:0 \n"
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"\";\n
    \       string closingBrackets = \"\";\n        foreach (char c in brackets) {\n
    \           if (c == '<') {\n                openingBrackets += c;\n            }
    else if (c == '>') {\n                closingBrackets += c;\n            }\n        }\n
    \       if (openingBrackets.Length != closingBrackets.Length) {\n            return
    false;\n        }\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;
    i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b353176fdb684091891d3c8ae786c36c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b353176fdb684091891d3c8ae786c36c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsClosingBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsOpeningBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl8ei6bhf.cs(15,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    /tmp/tmpl8ei6bhf.cs(18,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl9p3fxia.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpl9p3fxia.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"<\";\n
    \       string closingBrackets = \">\";\n        string openingBracketsCount =
    openingBrackets.Length;\n        string closingBracketsCount = closingBrackets.Length;\n
    \       string openingBracketsArray = openingBrackets.ToCharArray();\n        string
    closingBracketsArray = closingBrackets.ToCharArray();\n        string bracketsArray
    = brackets.ToCharArray();\n        bool correctBracketing = false;\n        for
    (int i = 0; i < bracketsArray.Length; i++) {\n            if (bracketsArray[i]
    == openingBracketsArray[i]) {\n                openingBracketsCount--;\n                if
    (openingBracketsCount == 0) {\n                    correctBracketing = true;\n
    \                   break;\n                }\n            }\n            if (bracketsArray[i]
    == closingBracketsArray[i]) {\n                closingBracketsCount--;\n                if
    (closingBracketsCount == 0) {\n                    correctBracketing = true;\n
    \                   break;\n                }\n            }\n        }\n        return
    correctBracketing;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvrwjkqm2.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpvrwjkqm2.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpvrwjkqm2.cs(16,39): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpvrwjkqm2.cs(17,39): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpvrwjkqm2.cs(18,32): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpvrwjkqm2.cs(22,17): error CS0023: Operator ''--'' cannot be applied to
    operand of type ''string''

    /tmp/tmpvrwjkqm2.cs(23,21): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''string'' and ''int''

    /tmp/tmpvrwjkqm2.cs(29,17): error CS0023: Operator ''--'' cannot be applied to
    operand of type ''string''

    /tmp/tmpvrwjkqm2.cs(30,21): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''string'' and ''int''

    '
  timestamp: 1659976865
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            char c = brackets[i];\n            if
    (c == '<') {\n                if (brackets[i - 1] == '>') {\n                    result
    = true;\n                } else {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x0001a] in <e68423e302364a11ae1b06cbef17efbc>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <e68423e302364a11ae1b06cbef17efbc>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.CorrectBracketing (System.String brackets) [0x0001a] in <e68423e302364a11ae1b06cbef17efbc>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <e68423e302364a11ae1b06cbef17efbc>:0
    \n"
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"\";\n
    \       string closingBrackets = \"\";\n        foreach (char c in brackets) {\n
    \           if (c == '<') {\n                openingBrackets += c;\n            }
    else if (c == '>') {\n                closingBrackets += c;\n            }\n        }\n
    \       if (openingBrackets.Length != closingBrackets.Length) {\n            return
    false;\n        }\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;
    i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n                result
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7b453ab6bfb424ca6ef5d77f08366c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7b453ab6bfb424ca6ef5d77f08366c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"<\";\n
    \       string closingBrackets = \">\";\n        string openingBracketsCount =
    openingBrackets.Count(c => brackets.Contains(c));\n        string closingBracketsCount
    = closingBrackets.Count(c => brackets.Contains(c));\n        return openingBracketsCount
    == closingBracketsCount;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7op9omd0.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmp7op9omd0.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    '
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')
    {\n                        result = true;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95c21bd03c9744888df64a3040a3e5b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95c21bd03c9744888df64a3040a3e5b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsRegex
    = string.Format(@\"{0}\", openingBrackets);\n        string closingBracketsRegex
    = string.Format(@\"{0}\", closingBrackets);\n        Regex openingBracketsRegex
    = new Regex(openingBracketsRegex);\n        Regex closingBracketsRegex = new Regex(closingBracketsRegex);\n
    \       bool result = false;\n        foreach (char c in brackets) {\n            if
    (openingBracketsRegex.IsMatch(c)) {\n                string openingBracket = openingBracketsRegex.Replace(c,
    \"\");\n                string closingBracket = closingBracketsRegex.Replace(c,
    \"\");\n                if (brackets.IndexOf(openingBracket) < brackets.IndexOf(closingBracket))
    {\n                    result = true;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb8t5tdry.cs(16,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpb8t5tdry.cs(16,15): error CS0128: A local variable or function named ''openingBracketsRegex''
    is already defined in this scope

    /tmp/tmpb8t5tdry.cs(16,42): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpb8t5tdry.cs(17,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpb8t5tdry.cs(17,15): error CS0128: A local variable or function named ''closingBracketsRegex''
    is already defined in this scope

    /tmp/tmpb8t5tdry.cs(17,42): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpb8t5tdry.cs(20,38): error CS1061: ''string'' does not contain a definition
    for ''IsMatch'' and no accessible extension method ''IsMatch'' accepting a first
    argument of type ''string'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpb8t5tdry.cs(21,73): error CS1503: Argument 2: cannot convert from ''string''
    to ''char''

    /tmp/tmpb8t5tdry.cs(22,73): error CS1503: Argument 2: cannot convert from ''string''
    to ''char''

    '
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        result = false;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bba6188755d47dfa7dfe6d575496173>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bba6188755d47dfa7dfe6d575496173>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<int> openingBrackets =
    new List<int>();\n        List<int> closingBrackets = new List<int>();\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(openingBrackets.Count
    + 1);\n            } else if (c == '>') {\n                closingBrackets.Add(closingBrackets.Count
    + 1);\n            }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    return false;\n        for (int i = 0; i < openingBrackets.Count; i++) {\n            if
    (openingBrackets[i] != closingBrackets[i]) return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977d708201ce47618694348f79ee241e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <977d708201ce47618694348f79ee241e>:0
    \n"
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool allOpeningBracketsAreClosed
    = true;\n        bool allClosingBracketsAreOpened = true;\n        foreach (char
    c in brackets) {\n            if (openingBrackets.IndexOf(c) == -1) {\n                allOpeningBracketsAreClosed
    = false;\n            }\n            if (closingBrackets.IndexOf(c) == -1) {\n
    \               allClosingBracketsAreOpened = false;\n            }\n        }\n
    \       return allOpeningBracketsAreClosed && allClosingBracketsAreOpened;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <479e6a59c44e4abf981de31e6214cdc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <479e6a59c44e4abf981de31e6214cdc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i + 1] != '<') {\n                    result = false;\n
    \                   break;\n                }\n            } else if (brackets[i]
    == '>') {\n                if (brackets[i + 1] != '>') {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50a93664cdfc4bf0a9dc19402cddb949>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50a93664cdfc4bf0a9dc19402cddb949>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        if (brackets == null) return
    false;\n        Stack<char> stack = new Stack<char>();\n        foreach (char
    c in brackets) {\n            if (c == '<') stack.Push(c);\n            else if
    (c == '>') {\n                if (stack.Count != 0) return false;\n                stack.Pop();\n
    \           }\n        }\n        return stack.Count == 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19d569d2827149079b0ae717e1ad619f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19d569d2827149079b0ae717e1ad619f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    (brackets.IndexOf('>', brackets.IndexOf(c) + 1) != -1);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099a791789ee4549bcc124b2cde161b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099a791789ee4549bcc124b2cde161b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsRegex
    = string.Format(\"({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({({\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw4heiec8.cs(14,53): error CS1010: Newline in constant

    /tmp/tmpw4heiec8.cs(14,1012): error CS1026: ) expected

    /tmp/tmpw4heiec8.cs(14,1012): error CS1002: ; expected

    '
  timestamp: 1659976862
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"<(>\";\n
    \       string closingBrackets = \")>\";\n        string openingBracketsCount
    = openingBrackets.Count(x => brackets.Contains(x));\n        string closingBracketsCount
    = closingBrackets.Count(x => brackets.Contains(x));\n        if (openingBracketsCount
    != closingBracketsCount) return false;\n        string openingBracketsCounts =
    openingBrackets.Replace(\"<\", \"\").Replace(\">\", \"\").Split(',').Select(x
    => x.Trim()).ToArray();\n        string closingBracketsCounts = closingBrackets.Replace(\"(\",
    \"\").Replace(\")\", \"\").Split(',').Select(x => x.Trim()).ToArray();\n        foreach
    (string openingBracket in openingBracketsCounts) {\n            bool found = false;\n
    \           foreach (string closingBracket in closingBracketsCounts) {\n                if
    (openingBracket == closingBracket) {\n                    found = true;\n                    break;\n
    \               }\n            }\n            if (!found) return false;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaqjactja.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpaqjactja.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpaqjactja.cs(17,40): error CS0029: Cannot implicitly convert type ''string[]''
    to ''string''

    /tmp/tmpaqjactja.cs(18,40): error CS0029: Cannot implicitly convert type ''string[]''
    to ''string''

    /tmp/tmpaqjactja.cs(21,13): error CS0030: Cannot convert type ''char'' to ''string''

    /tmp/tmpaqjactja.cs(19,9): error CS0030: Cannot convert type ''char'' to ''string''

    '
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<char> openingBrackets
    = new List<char>();\n        List<char> closingBrackets = new List<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        bool allOpen = true;\n        bool
    allClosed = true;\n        foreach (char c in openingBrackets) {\n            if
    (c != '<') {\n                allOpen = false;\n            }\n        }\n        foreach
    (char c in closingBrackets) {\n            if (c != '>') {\n                allClosed
    = false;\n            }\n        }\n        return allOpen && allClosed;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49220fddca004c54b67f266ec0d5903f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49220fddca004c54b67f266ec0d5903f>:0
    \n"
  stdout: ''
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count == 0) {\n
    \                   return false;\n                }\n                char opening
    = stack.Pop();\n                if (opening != '<') {\n                    return
    false;\n                }\n            }\n        }\n        return stack.Count
    == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976865
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsRegex
    = string.Format(@\"{0}\", openingBrackets);\n        string closingBracketsRegex
    = string.Format(@\"{0}\", closingBrackets);\n        Regex openingBracketsRegex
    = new Regex(openingBracketsRegex);\n        Regex closingBracketsRegex = new Regex(closingBracketsRegex);\n
    \       bool result = false;\n        foreach (char c in brackets) {\n            if
    (openingBracketsRegex.IsMatch(c)) {\n                string openingBracket = openingBracketsRegex.Match(c).Value;\n
    \               string closingBracket = closingBracketsRegex.Match(c).Value;\n
    \               if (brackets.IndexOf(openingBracket) != brackets.IndexOf(closingBracket))
    {\n                    result = false;\n                    break;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpavg6spju.cs(16,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpavg6spju.cs(16,15): error CS0128: A local variable or function named ''openingBracketsRegex''
    is already defined in this scope

    /tmp/tmpavg6spju.cs(16,42): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpavg6spju.cs(17,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpavg6spju.cs(17,15): error CS0128: A local variable or function named ''closingBracketsRegex''
    is already defined in this scope

    /tmp/tmpavg6spju.cs(17,42): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpavg6spju.cs(20,38): error CS1061: ''string'' does not contain a definition
    for ''IsMatch'' and no accessible extension method ''IsMatch'' accepting a first
    argument of type ''string'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpavg6spju.cs(21,62): error CS1061: ''string'' does not contain a definition
    for ''Match'' and no accessible extension method ''Match'' accepting a first argument
    of type ''string'' could be found (are you missing a using directive or an assembly
    reference?)

    /tmp/tmpavg6spju.cs(22,62): error CS1061: ''string'' does not contain a definition
    for ''Match'' and no accessible extension method ''Match'' accepting a first argument
    of type ''string'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 1; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')
    {\n                        result = false;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f67170540797468da7d619fa3854b068>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f67170540797468da7d619fa3854b068>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976865
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                correct =
    correct && CorrectBracketing(brackets.Substring(0, brackets.IndexOf(c)));\n            }\n
    \           if (c == '>') {\n                correct = correct && CorrectBracketing(brackets.Substring(brackets.IndexOf(c)
    + 1));\n            }\n        }\n        return correct;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976870
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        if (brackets == null || brackets.Length
    < 2)\n            return false;\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<')\n                stack.push('>');\n
    \           else if (c == '>')\n                stack.pop();\n            else\n
    \               stack.push(c);\n        }\n        return stack.Count == 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpte2s2_0v.cs(17,23): error CS1061: ''Stack<char>'' does not contain a definition
    for ''push'' and no accessible extension method ''push'' accepting a first argument
    of type ''Stack<char>'' could be found (are you missing a using directive or an
    assembly reference?)

    /tmp/tmpte2s2_0v.cs(19,23): error CS1061: ''Stack<char>'' does not contain a definition
    for ''pop'' and no accessible extension method ''pop'' accepting a first argument
    of type ''Stack<char>'' could be found (are you missing a using directive or an
    assembly reference?)

    /tmp/tmpte2s2_0v.cs(21,23): error CS1061: ''Stack<char>'' does not contain a definition
    for ''push'' and no accessible extension method ''push'' accepting a first argument
    of type ''Stack<char>'' could be found (are you missing a using directive or an
    assembly reference?)

    '
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !(brackets.IndexOf('>', brackets.IndexOf(c) + 1) < 0);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfb37c96218c427b99e14a2dbcd40e3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfb37c96218c427b99e14a2dbcd40e3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n
    \       var closingBrackets = new List<char>();\n        foreach (var c in brackets)
    {\n            if (c == '<') {\n                openingBrackets.Add(c);\n            }
    else if (c == '>') {\n                closingBrackets.Add(c);\n            }\n
    \       }\n        if (openingBrackets.Count != closingBrackets.Count) {\n            return
    false;\n        }\n        foreach (var openingBracket in openingBrackets) {\n
    \           var closingBracket = closingBrackets[openingBrackets.IndexOf(openingBracket)];\n
    \           if (openingBracket != closingBracket) {\n                return false;\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6547dbceac9542948216c2d78eec05aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6547dbceac9542948216c2d78eec05aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsCount
    = openingBrackets.Count(c => brackets.Contains(c));\n        string closingBracketsCount
    = closingBrackets.Count(c => brackets.Contains(c));\n        return openingBracketsCount
    == closingBracketsCount;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm_x524k2.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpm_x524k2.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    '
  timestamp: 1659976865
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsCount
    = openingBrackets.Count(x => brackets.Contains(x));\n        string closingBracketsCount
    = closingBrackets.Count(x => brackets.Contains(x));\n        return openingBracketsCount
    == closingBracketsCount;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpludnmuji.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpludnmuji.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    '
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool correct = true;\n        for (int i
    = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i] !=
    \"[\") {\n                correct = false;\n            }\n        }\n        for
    (int i = 0; i < closingBrackets.Length; i++) {\n            if (closingBrackets[i]
    != \"]\") {\n                correct = false;\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenffjr0z.cs(16,17): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''char'' and ''string''

    /tmp/tmpenffjr0z.cs(21,17): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''char'' and ''string''

    '
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c, 1) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f22d7e46f6b4550a5ae0ddd90f6bba0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f22d7e46f6b4550a5ae0ddd90f6bba0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<' && c != '>') {\n                result
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b43166b808fe45a09d223b3d31457ae6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b43166b808fe45a09d223b3d31457ae6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count == 0) {\n
    \                   return false;\n                }\n                char opening
    = stack.Pop();\n                if (opening != '<') {\n                    return
    false;\n                }\n                char closing = c;\n                while
    (stack.Count > 0) {\n                    char top = stack.Pop();\n                    if
    (top == closing) {\n                        break;\n                    }\n                }\n
    \               if (stack.Count == 0) {\n                    return false;\n                }\n
    \               stack.Push(closing);\n            }\n        }\n        return
    stack.Count == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5692bbb011764c908f354772ad83ad20>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5692bbb011764c908f354772ad83ad20>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>') {\n
    \               result &= !IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl9p3fxia.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpl9p3fxia.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<int> openingBrackets =
    new List<int>();\n        List<int> closingBrackets = new List<int>();\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(brackets.IndexOf(c));\n
    \           } else if (c == '>') {\n                closingBrackets.Add(brackets.IndexOf(c));\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        for (int i = 0; i < openingBrackets.Count;
    i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f5d86b7dfb64cd68de7a2409b9882fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f5d86b7dfb64cd68de7a2409b9882fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        continue;\n                    }\n                    if
    (brackets[i] == '>') {\n                        break;\n                    }\n
    \                   result = false;\n                    break;\n                }\n
    \           }\n            if (c == '>') {\n                for (int i = 0; i
    < brackets.Length; i++) {\n                    if (brackets[i] == '<') {\n                        continue;\n
    \                   }\n                    if (brackets[i] == '>') {\n                        break;\n
    \                   }\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ed29a7893e84547b6256d5bafd71222>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ed29a7893e84547b6256d5bafd71222>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool result = false;\n        foreach
    (char c in brackets) {\n            if (openingBrackets.Contains(c)) {\n                result
    |= closingBrackets.Contains(brackets.Substring(brackets.IndexOf(c) + 1, 1));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e86008dab45f4bbd8f11a1e2c0c82324>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e86008dab45f4bbd8f11a1e2c0c82324>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (openingBrackets.IndexOf(brackets[i])
    < 0) {\n                result = false;\n                break;\n            }\n
    \       }\n        for (int i = 0; i < brackets.Length; i++) {\n            if
    (closingBrackets.IndexOf(brackets[i]) < 0) {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <500912f644554c89b5759d0bb90be78e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <500912f644554c89b5759d0bb90be78e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int i =
    0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i] != closingBrackets[i])
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ac440267cfe496cbb377479bcfc200c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ac440267cfe496cbb377479bcfc200c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count > 0) {\n                    char
    open = stack.Pop();\n                    if (open != '<') {\n                        return
    false;\n                    }\n                }\n            } else {\n                if
    (stack.Count > 0) {\n                    char open = stack.Pop();\n                    if
    (open != c) {\n                        return false;\n                    }\n
    \               }\n                stack.Push(c);\n            }\n        }\n
    \       return stack.Count == 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba5ff8aafdb74674a5140df614da9489>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba5ff8aafdb74674a5140df614da9489>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')
    {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n            if (c ==
    '>') {\n                for (int i = 0; i < brackets.Length; i++) {\n                    if
    (brackets[i] == '>') {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <222c52450a704ab6b67d0665714de9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <222c52450a704ab6b67d0665714de9e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool correct = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                for (int
    i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')
    {\n                        correct = false;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    correct;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3dd8da174ff74fc895243667cf4bd8c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3dd8da174ff74fc895243667cf4bd8c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{<\";\n
    \       string closingBrackets = \")]}>\";\n        string openingBracketsCount
    = openingBrackets.Count(c => brackets.Contains(c));\n        string closingBracketsCount
    = closingBrackets.Count(c => brackets.Contains(c));\n        return openingBracketsCount
    == closingBracketsCount;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt2hw9c24.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpt2hw9c24.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    '
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        string openingBracketsCount
    = openingBrackets.Count(c => brackets.Contains(c));\n        string closingBracketsCount
    = closingBrackets.Count(c => brackets.Contains(c));\n        return openingBracketsCount
    == closingBracketsCount;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm_x524k2.cs(14,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpm_x524k2.cs(15,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    '
  timestamp: 1659976865
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<char> openingBrackets
    = new List<char>();\n        List<char> closingBrackets = new List<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        bool result = true;\n        for
    (int i = 0; i < openingBrackets.Count; i++) {\n            if (openingBrackets[i]
    != closingBrackets[i]) {\n                result = false;\n                break;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <770b3dd419524eee97523df0e4c7c4a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <770b3dd419524eee97523df0e4c7c4a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976864
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"\";\n
    \       string closingBrackets = \"\";\n        foreach (char c in brackets) {\n
    \           if (c == '<') {\n                openingBrackets += c;\n            }\n
    \           else if (c == '>') {\n                closingBrackets += c;\n            }\n
    \       }\n        if (openingBrackets.Length != closingBrackets.Length) {\n            return
    false;\n        }\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;
    i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n                result
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <534348e8fea84fb2bd42f83e34bef302>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <534348e8fea84fb2bd42f83e34bef302>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               if (brackets[i - 1] != '<') {\n                    result = false;\n
    \                   break;\n                }\n            }\n            else
    if (brackets[i] == '>') {\n                if (brackets[i - 1] != '>') {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x00018] in <cf7dfa1e452b443e901a7a76e094e660>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <cf7dfa1e452b443e901a7a76e094e660>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.CorrectBracketing (System.String brackets) [0x00018] in <cf7dfa1e452b443e901a7a76e094e660>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <cf7dfa1e452b443e901a7a76e094e660>:0
    \n"
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{\";\n
    \       string closingBrackets = \")]}\";\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (openingBrackets.IndexOf(c) == -1) {\n
    \               result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6df7ddb5b25d47908c50097e1035eaca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6df7ddb5b25d47908c50097e1035eaca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n
    \               for (int j = i; j < brackets.Length; j++) {\n                    if
    (brackets[j] == '>') {\n                        result = result && j > i;\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34c96a7ecb3c4661966b9070c874d565>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34c96a7ecb3c4661966b9070c874d565>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8d22035032c4da3becc09b8587728c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e050c76d339e43498e2a8c98de62ac36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in brackets)
    {\n            if (c == '<') {\n                stack.Push(c);\n            }
    else if (c == '>') {\n                if (stack.Count > 0) {\n                    char
    top = stack.Pop();\n                    if (top != '<') {\n                        sb.Append(c);\n
    \                   }\n                } else {\n                    return false;\n
    \               }\n            } else {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString().ToLower() == brackets.ToLower();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d24b10f10254e34a0312aa46f38edaf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d24b10f10254e34a0312aa46f38edaf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                stack.Push(c);\n
    \           } else if (c == '>') {\n                if (stack.Count == 0) {\n
    \                   return false;\n                }\n                char opening
    = stack.Pop();\n                if (opening != '<') {\n                    return
    false;\n                }\n                stack.Push(c);\n            } else
    {\n                if (stack.Count != 0) {\n                    return false;\n
    \               }\n                stack.Push(c);\n            }\n        }\n
    \       if (stack.Count != 0) {\n            return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e51622f8987473aaeba218dbaf994d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e51622f8987473aaeba218dbaf994d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{<\";\n
    \       string closingBrackets = \")]}>\";\n        string openingBracketsRegex
    = string.Format(@\"{0}\", openingBrackets);\n        string closingBracketsRegex
    = string.Format(@\"{0}\", closingBrackets);\n        string openingBracketsRegexWithBrackets
    = string.Format(@\"{0}{1}\", openingBracketsRegex, brackets);\n        string
    closingBracketsRegexWithBrackets = string.Format(@\"{0}{1}\", closingBracketsRegex,
    brackets);\n        Regex openingBracketsRegex = new Regex(openingBracketsRegexWithBrackets);\n
    \       Regex closingBracketsRegex = new Regex(closingBracketsRegexWithBrackets);\n
    \       bool result = openingBracketsRegex.IsMatch(brackets);\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi5zggzat.cs(18,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpi5zggzat.cs(18,15): error CS0128: A local variable or function named ''openingBracketsRegex''
    is already defined in this scope

    /tmp/tmpi5zggzat.cs(18,42): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpi5zggzat.cs(19,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpi5zggzat.cs(19,15): error CS0128: A local variable or function named ''closingBracketsRegex''
    is already defined in this scope

    /tmp/tmpi5zggzat.cs(19,42): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpi5zggzat.cs(20,44): error CS1061: ''string'' does not contain a definition
    for ''IsMatch'' and no accessible extension method ''IsMatch'' accepting a first
    argument of type ''string'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<') {\n                result =
    false;\n                break;\n            }\n        }\n        foreach (char
    c in brackets) {\n            if (c != '>') {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53edb3f9be8f4264b6b0f8a88cf1e9b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53edb3f9be8f4264b6b0f8a88cf1e9b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43519cda70424fae8095ec3e9d6cc0fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                result &=
    !IsOpeningBracket(brackets, c);\n            }\n            else if (c == '>')
    {\n                result &= !IsClosingBracket(brackets, c);\n            }\n
    \           else {\n                result &= IsOpeningBracket(brackets, c);\n
    \               result &= IsClosingBracket(brackets, c);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0yuwfr39.cs(15,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmp0yuwfr39.cs(18,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    /tmp/tmp0yuwfr39.cs(21,27): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmp0yuwfr39.cs(22,27): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        List<string> openingBrackets
    = new List<string>();\n        List<string> closingBrackets = new List<string>();\n
    \       foreach (char c in brackets) {\n            if (c == '<') {\n                openingBrackets.Add(c);\n
    \           } else if (c == '>') {\n                closingBrackets.Add(c);\n
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)
    {\n            return false;\n        }\n        bool allOpen = true;\n        bool
    allClosed = true;\n        foreach (string openingBracket in openingBrackets)
    {\n            bool found = false;\n            foreach (string closingBracket
    in closingBrackets) {\n                if (openingBracket == closingBracket) {\n
    \                   found = true;\n                    break;\n                }\n
    \           }\n            if (!found) {\n                allOpen = false;\n            }\n
    \       }\n        foreach (string closingBracket in closingBrackets) {\n            bool
    found = false;\n            foreach (string openingBracket in openingBrackets)
    {\n                if (openingBracket == closingBracket) {\n                    found
    = true;\n                    break;\n                }\n            }\n            if
    (!found) {\n                allClosed = false;\n            }\n        }\n        return
    allOpen && allClosed;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgbfpmu7q.cs(16,37): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpgbfpmu7q.cs(18,37): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c != '<') result = false;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55c0d8feb7584768a02ae7034808d042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"{\",
    \"<\").Replace(\"}\", \">\");\n        string closingBrackets = brackets.Replace(\"<\",
    \"{\").Replace(\">\", \"}\");\n        bool correct = openingBrackets.Count()
    == closingBrackets.Count();\n        return correct;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d4fb5b332a642f191e6db5796b95f07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d4fb5b332a642f191e6db5796b95f07>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <4c111b453559467eb5fa9e992156046e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4c111b453559467eb5fa9e992156046e>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n
    \       var closingBrackets = new List<char>();\n        foreach (var bracket
    in brackets) {\n            if (bracket == '<') {\n                openingBrackets.Add('<');\n
    \           } else if (bracket == '>') {\n                closingBrackets.Add('>');\n
    \           } else {\n                throw new ArgumentException(\"Invalid bracket:
    \" + bracket);\n            }\n        }\n        if (openingBrackets.Count !=
    closingBrackets.Count) {\n            return false;\n        }\n        foreach
    (var openingBracket in openingBrackets) {\n            var closingBracket = closingBrackets[openingBrackets.IndexOf(openingBracket)];\n
    \           if (closingBracket != '>') {\n                return false;\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3664bf577e64fdb9df788387efe177e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3664bf577e64fdb9df788387efe177e>:0
    \n"
  stdout: ''
  timestamp: 1659976866
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', brackets.IndexOf(c) - 1) < 0) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <841d88a0c0754f8fa078e5ed0093392a>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x00055] in <841d88a0c0754f8fa078e5ed0093392a>:0 \n  at Problem.Main
    (System.String[] args) [0x00054] in <841d88a0c0754f8fa078e5ed0093392a>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x00055] in <841d88a0c0754f8fa078e5ed0093392a>:0 \n "
  stdout: ''
  timestamp: 1659976867
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"[\",
    \"\").Replace(\"]\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        return openingBrackets.Replace(closingBrackets,
    \"\") == \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <abf8f8d7429947589ac3ac64ce66a346>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <abf8f8d7429947589ac3ac64ce66a346>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976867
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            char c = brackets[i];\n            if
    (c == '<') {\n                if (brackets[i - 1] != '<') {\n                    result
    = false;\n                    break;\n                }\n            } else if
    (c == '>') {\n                if (brackets[i + 1] != '>') {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.CorrectBracketing (System.String brackets)
    [0x0001a] in <e47223696c99442ca5248c776c9c7f01>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <e47223696c99442ca5248c776c9c7f01>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.CorrectBracketing (System.String brackets) [0x0001a] in <e47223696c99442ca5248c776c9c7f01>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <e47223696c99442ca5248c776c9c7f01>:0
    \n"
  stdout: ''
  timestamp: 1659976867
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach
    (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',
    c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (c == '>') {\n                if
    (brackets.IndexOf('<', c) == -1) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String
    brackets) [0x0001f] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <05e3e4ca80e044d485b659b1780f9d53>:0 \n"
  stdout: ''
  timestamp: 1659976863
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        if (brackets == null) return
    false;\n        Stack<char> stack = new Stack<char>();\n        foreach (char
    c in brackets) {\n            if (c == '<') stack.push('>');\n            else
    if (c == '>') stack.pop();\n            else return false;\n        }\n        return
    stack.Count == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp09i99ecm.cs(15,33): error CS1061: ''Stack<char>'' does not contain a definition
    for ''push'' and no accessible extension method ''push'' accepting a first argument
    of type ''Stack<char>'' could be found (are you missing a using directive or an
    assembly reference?)

    /tmp/tmp09i99ecm.cs(16,38): error CS1061: ''Stack<char>'' does not contain a definition
    for ''pop'' and no accessible extension method ''pop'' accepting a first argument
    of type ''Stack<char>'' could be found (are you missing a using directive or an
    assembly reference?)

    '
  timestamp: 1659976866
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = \"([{<\";\n
    \       string closingBrackets = \")]}>\";\n        bool result = true;\n        for
    (int i = 0; i < brackets.Length; i++) {\n            if (openingBrackets.IndexOf(brackets[i])
    < 0) {\n                result = false;\n                break;\n            }\n
    \       }\n        for (int i = 0; i < brackets.Length; i++) {\n            if
    (closingBrackets.IndexOf(brackets[i]) < 0) {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55da998c852544aabbc22b66fbf98aea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55da998c852544aabbc22b66fbf98aea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976867
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return True
    if every opening bracket has a corresponding closing bracket.\n    public static
    bool CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"{\",
    \"\").Replace(\"}\", \"\");\n        string closingBrackets = brackets.Replace(\"(\",
    \"\").Replace(\")\", \"\");\n        bool result = true;\n        for (int i =
    0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i,
    1) != closingBrackets.Substring(0, i)) {\n                result = false;\n                break;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n
    \   Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"))
    == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n
    \   Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"))
    == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e785090efd0459cad52bf5c36092885>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e785090efd0459cad52bf5c36092885>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976867

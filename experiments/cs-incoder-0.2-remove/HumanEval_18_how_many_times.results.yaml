language: cs
name: HumanEval_18_how_many_times
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string lowerCaseSubstring
    = substring.ToLower();\n        string lowerCaseStr = str.ToLower();\n        foreach
    (char c in lowerCaseSubstring) {\n            if (lowerCaseStr.Contains(c)) {\n
    \               count++;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        long start2 = 0;\n        long end2
    = 0;\n        long length2 = 0;\n        long start3 = 0;\n        long end3 =
    0;\n        long length3 = 0;\n        long start4 = 0;\n        long end4 = 0;\n
    \       long length4 = 0;\n        long start5 = 0;\n        long end5 = 0;\n
    \       long length5 = 0;\n        long start6 = 0;\n        long end6 = 0;\n
    \       long length6 = 0;\n        long start7 = 0;\n        long end7 = 0;\n
    \       long length7 = 0;\n        long start8 = 0;\n        long end8 = 0;\n
    \       long length8 = 0;\n        long start9 = 0;\n        long end9 = 0;\n
    \       long length9 = 0;\n        long start10 = 0;\n        long end10 = 0;\n
    \       long length10 = 0;\n        long start11 = 0;\n        long end11 = 0;\n
    \       long length11 = 0;\n        long start12 = 0;\n        long end12 = 0;\n
    \       long length12 = 0;\n        long start13 = 0;\n        long end13 = 0;\n
    \       long length13 = 0;\n        long start14 = 0;\n        long end14 = 0;\n
    \       long length14 = 0;\n        long start15 = 0;\n        long end15 = 0;\n
    \       long length15 = 0;\n        long start16 = 0;\n        long end16 = 0;\n
    \       long length16 = 0;\n        long start17 = 0;\n        long end17 = 0;\n
    \       long length17 = 0;\n        long start18 = 0;\n        long end18 = 0;\n
    \       long length18 = 0;\n        long start19 = 0;\n        long end19 = 0;\n
    \       long length19 = 0;\n        long start20 = 0;\n        long end20 = 0;\n
    \       long length20 = 0;\n        long start21 = 0;\n        long end21 = 0;\n
    \       long length21 = 0;\n        long start22 = 0;\n        long end22 = 0;\n
    \       long length22 = 0;\n        long start23 = 0;\n        long end23 = 0;\n
    \       long length23 = 0;\n        long start24 = 0;\n        long end24 = 0;\n
    \       long length24 = 0;\n        long start25 = 0;\n        long end25 = 0;\n
    \       long length25 = 0;\n        long start26 = 0;\n        long end26 = 0;\n
    \       long length26 = 0;\n        long start27 = 0;\n        long end27 = 0;\n
    \       long length27 = 0;\n        long start28 = 0;\n        long end28 = 0;\n
    \       long length28 = 0;\n        long start29 = 0;\n        long end29 = 0;\n
    \       long length29 = 0;\n        \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbl5pkyko.cs(11,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(12,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(13,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpbl5pkyko.cs(14,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(15,14): warning CS0219: The variable ''start2'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(16,14): warning CS0219: The variable ''end2'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(17,14): warning CS0219: The variable ''length2'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(18,14): warning CS0219: The variable ''start3'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(19,14): warning CS0219: The variable ''end3'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(20,14): warning CS0219: The variable ''length3'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(21,14): warning CS0219: The variable ''start4'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(22,14): warning CS0219: The variable ''end4'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(23,14): warning CS0219: The variable ''length4'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(24,14): warning CS0219: The variable ''start5'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(25,14): warning CS0219: The variable ''end5'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(26,14): warning CS0219: The variable ''length5'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(27,14): warning CS0219: The variable ''start6'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(28,14): warning CS0219: The variable ''end6'' is assigned
    but its value is never used

    /tmp/tmpbl5pkyko.cs(29,1'
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long len = 0;\n        bool found = false;\n        bool first
    = true;\n        foreach (char c in str) {\n            if (first) {\n                start
    = str.IndexOf(c, 0);\n                end = str.IndexOf(substring, start + 1);\n
    \               len = end - start + 1;\n                first = false;\n            }
    else {\n                end = str.IndexOf(substring, start + 1);\n                if
    (end == -1) {\n                    end = str.Length;\n                }\n                len
    = end - start + 1;\n            }\n            if (len > 0) {\n                found
    = true;\n                count += 1;\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpniyybevf.cs(20,35): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpniyybevf.cs(20,46): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpniyybevf.cs(24,35): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpniyybevf.cs(24,46): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpniyybevf.cs(15,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                for (int i = 0;
    i < substring.Length; i++) {\n                    if (c == substring[i]) {\n                        count
    += HowManyTimes(str.Substring(i + 1), substring);\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex cannot
    be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c6"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq26q1qp3.cs(13,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long len = 0;\n        bool found = false;\n        bool found2
    = false;\n        bool found3 = false;\n        bool found4 = false;\n        bool
    found5 = false;\n        bool found6 = false;\n        bool found7 = false;\n
    \       bool found8 = false;\n        bool found9 = false;\n        bool found10
    = false;\n        bool found11 = false;\n        bool found12 = false;\n        bool
    found13 = false;\n        bool found14 = false;\n        bool found15 = false;\n
    \       bool found16 = false;\n        bool found17 = false;\n        bool found18
    = false;\n        bool found19 = false;\n        bool found20 = false;\n        bool
    found21 = false;\n        bool found22 = false;\n        bool found23 = false;\n
    \       bool found24 = false;\n        bool found25 = false;\n        bool found26
    = false;\n        bool found27 = false;\n        bool found28 = false;\n        bool
    found29 = false;\n        bool found30 = false;\n        bool found31 = false;\n
    \       bool found32 = false;\n        bool found33 = false;\n        bool found34
    = false;\n        bool found35 = false;\n        bool found36 = false;\n        bool
    found37 = false;\n        bool found38 = false;\n        bool found39 = false;\n
    \       bool found40 = false;\n        bool found41 = false;\n        bool found42
    = false;\n        bool found43 = false;\n        bool found44 = false;\n        bool
    found45 = false;\n        bool found46 = false;\n        bool found47 = false;\n
    \       bool found48 = false;\n        bool found49 = false;\n        bool found50
    = false;\n        bool found51 = false;\n        bool found52 = false;\n        bool
    found53 = false;\n        bool found54 = false;\n        bool found55 = false;\n
    \       bool found56 = false;\n        bool found57 = false;\n        bool found58
    = false;\n        bool found59 = false;\n        bool found60 = false;\n        bool
    found61 = false;\n        bool found62 = false;\n        bool found63 = false;\n
    \       bool found64 = false;\n        bool found65 = false;\n        bool found66
    = false;\n        bool found67 = false;\n        bool found68 = false;\n        bool
    found69 = false;\n        bool found70 = false;\n        bool found71 = false;\n
    \       bool found72 = false;\n        bool found73 = false;\n        bool found74
    = false;\n        bool found75 = false;\n        bool found76 = false;\n        bool
    found77 = false;\n        bool found78 = false;\n        bool found79 = false;\n
    \       bool found\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmple0ry_nn.cs(94,19): error CS1002: ; expected

    '
  timestamp: 1659976205
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                for (int i = 0;
    i < substring.Length; i++) {\n                    if (c == substring[i]) {\n                        count
    += HowManyTimes(str.Substring(i + 1, str.Length - i - 1), substring);\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13421cf624d84406ad44c6467887712f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13421cf624d84406ad44c6467887712f>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex cannot
    be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x0009e] "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            found = false;\n
    \           end = str.IndexOf(substring, start);\n            if (end == -1) {\n
    \               break;\n            }\n            start = end + 1;\n            found
    = true;\n        } while (found);\n        if (end == -1) {\n            return
    0;\n        }\n        do {\n            found = false;\n            start = str.IndexOf(substring,
    end);\n            if (start == -1) {\n                break;\n            }\n
    \           end = str.IndexOf(substring, start);\n            if (end == -1) {\n
    \               break;\n            }\n            count++;\n            found
    = true;\n        } while (found);\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==
    (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6dpnxwdv.cs(17,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp6dpnxwdv.cs(17,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp6dpnxwdv.cs(29,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp6dpnxwdv.cs(29,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp6dpnxwdv.cs(33,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp6dpnxwdv.cs(33,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            found = false;\n
    \           start = str.IndexOf(substring, start);\n            end = str.IndexOf(substring,
    start + 1);\n            if (start != -1 && end != -1) {\n                found
    = true;\n                count++;\n            }\n            start++;\n        }
    while (start != -1 && end != -1 && !found);\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppx84u8rs.cs(17,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppx84u8rs.cs(17,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmppx84u8rs.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppx84u8rs.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long start2 = 0;\n        long end2 = 0;\n        bool found
    = false;\n        do {\n            found = false;\n            start2 = str.IndexOf(substring,
    start);\n            end2 = str.IndexOf(substring, start2 + 1);\n            if
    (start2 >= 0 && end2 >= 0) {\n                found = true;\n                start
    = start2;\n                end = end2;\n            }\n        } while (found
    == false);\n        do {\n            found = false;\n            start2 = str.IndexOf(substring,
    end);\n            end2 = str.IndexOf(substring, end2 + 1);\n            if (start2
    >= 0 && end2 >= 0) {\n                found = true;\n                start = start2;\n
    \               end = end2;\n            }\n        } while (found == false);\n
    \       do {\n            found = false;\n            start2 = str.IndexOf(substring,
    start);\n            end2 = str.IndexOf(substring, end2 + 1);\n            if
    (start2 >= 0 && end2 >= 0) {\n                found = true;\n                start
    = start2;\n                end = end2;\n            }\n        } while (found
    == false);\n        do {\n            found = false;\n            start2 = str.IndexOf(substring,
    end);\n            end2 = str.IndexOf(substring, start2 + 1);\n            if
    (start2 >= 0 && end2 >= 0) {\n                found = true;\n                start
    = start2;\n                end = end2;\n            }\n        } while (found
    == false);\n        do {\n            found = false;\n            start2 = str.IndexOf(substring,
    start);\n            end2 = str.IndexOf(substring, end2 + 1);\n            if
    (start2 >= 0 && end2 >= 0) {\n                found = true;\n                start
    = start2;\n                end = end2;\n            }\n        } while (found
    == false);\n        do {\n            found = false;\n            start2 = str.IndexOf(substring,
    end);\n            end2 = str.IndexOf(substring, start2 + 1);\n            if
    (start2 >= 0 && end2 >= 0) {\n                found = true;\n                start
    = start2;\n                end = end2;\n            }\n        } while (found
    == false);\n        do {\n            found = false;\n            start2 = str.IndexOf(substring,
    start);\n            end2 = str.IndexOf(substring, end2 + 1);\n            if
    (start2 >= 0 && end2 >= 0) {\n                found = true;\n                start
    = start2;\n                end = end2;\n            }\n        } while (found
    == false);\n        do {\n            found = false;\n            start2 = str.IndexOf(substring,
    end);\n            end2 = str.IndexOf(substring, start2 + 1);\n            if
    (start2 >= 0 && end2 >= 0) {\n                found = true;\n                start
    = start2;\n                end = end2;\n            }\n        } \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw5l5x1q1.cs(96,10): error CS1003: Syntax error, ''while'' expected

    /tmp/tmpw5l5x1q1.cs(96,10): error CS1003: Syntax error, ''('' expected

    /tmp/tmpw5l5x1q1.cs(96,10): error CS1525: Invalid expression term ''}''

    /tmp/tmpw5l5x1q1.cs(96,10): error CS1026: ) expected

    /tmp/tmpw5l5x1q1.cs(96,10): error CS1002: ; expected

    '
  timestamp: 1659976205
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) - str.IndexOf(substring, 0);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|[{0}]){1}(?=$|[{0}])\",
    Regex.Escape(substring), Regex.Escape(substring));\n        Regex regex = new
    Regex(pattern);\n        MatchCollection matches = regex.Matches(str);\n        foreach
    (Match match in matches) {\n            count++;\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfiz04d48.cs(12,70): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmpfiz04d48.cs(12,95): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmpfiz04d48.cs(13,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpfiz04d48.cs(13,27): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpfiz04d48.cs(14,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpfiz04d48.cs(15,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = str.Length - substring.Length;\n        long startIndex = str.IndexOf(substring,
    start);\n        long endIndex = str.IndexOf(substring, end);\n        while (startIndex
    != -1 && endIndex != -1) {\n            count++;\n            start = startIndex
    + substring.Length;\n            end = endIndex + substring.Length;\n            startIndex
    = str.IndexOf(substring, start);\n            endIndex = str.IndexOf(substring,
    end);\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgd6m1zvy.cs(14,39): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpgd6m1zvy.cs(14,50): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpgd6m1zvy.cs(15,37): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpgd6m1zvy.cs(15,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpgd6m1zvy.cs(20,38): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpgd6m1zvy.cs(20,49): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpgd6m1zvy.cs(21,36): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpgd6m1zvy.cs(21,47): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string lowerCase = substring.ToLower();\n
    \       string upperCase = substring.ToUpper();\n        foreach (char c in str)
    {\n            if (c == lowerCase[0]) {\n                if (str.IndexOf(c, lowerCase.Length
    + 1) != -1) {\n                    count += 1;\n                }\n            }
    else if (c == upperCase[0]) {\n                if (str.IndexOf(c, upperCase.Length
    + 1) != -1) {\n                    count += 1;\n                }\n            }
    else {\n                if (str.IndexOf(c, 1) != -1) {\n                    count
    += 1;\n                }\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <353e9d68df74416cbb74013085add1af>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <353e9d68df74416cbb74013085add1af>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq26q1qp3.cs(13,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    found2 = false;\n        bool found3 = false;\n        bool found4 = false;\n
    \       bool found5 = false;\n        bool found6 = false;\n        bool found7
    = false;\n        bool found8 = false;\n        bool found9 = false;\n        bool
    found10 = false;\n        bool found11 = false;\n        bool found12 = false;\n
    \       bool found13 = false;\n        bool found14 = false;\n        bool found15
    = false;\n        bool found16 = false;\n        bool found17 = false;\n        bool
    found18 = false;\n        bool found19 = false;\n        bool found20 = false;\n
    \       bool found21 = false;\n        bool found22 = false;\n        bool found23
    = false;\n        bool found24 = false;\n        bool found25 = false;\n        bool
    found26 = false;\n        bool found27 = false;\n        bool found28 = false;\n
    \       bool found29 = false;\n        bool found30 = false;\n        bool found31
    = false;\n        bool found32 = false;\n        bool found33 = false;\n        bool
    found34 = false;\n        bool found35 = false;\n        bool found36 = false;\n
    \       bool found37 = false;\n        bool found38 = false;\n        bool found39
    = false;\n        bool found40 = false;\n        bool found41 = false;\n        bool
    found42 = false;\n        bool found43 = false;\n        bool found44 = false;\n
    \       bool found45 = false;\n        bool found46 = false;\n        bool found47
    = false;\n        bool found48 = false;\n        bool found49 = false;\n        bool
    found50 = false;\n        bool found51 = false;\n        bool found52 = false;\n
    \       bool found53 = false;\n        bool found54 = false;\n        bool found55
    = false;\n        bool found56 = false;\n        bool found57 = false;\n        bool
    found58 = false;\n        bool found59 = false;\n        bool found60 = false;\n
    \       bool found61 = false;\n        bool found62 = false;\n        bool found63
    = false;\n        bool found64 = false;\n        bool found65 = false;\n        bool
    found66 = false;\n        bool found67 = false;\n        bool found68 = false;\n
    \       bool found69 = false;\n        bool found70 = false;\n        bool found71
    = false;\n        bool found72 = false;\n        bool found73 = false;\n        bool
    found74 = false;\n        bool found75 = false;\n        bool found76 = false;\n
    \       bool found77 = false;\n        bool found78 = false;\n        bool found79
    = false;\n        bool found\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprh1v25yb.cs(94,19): error CS1002: ; expected

    '
  timestamp: 1659976205
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                for (int i = 0;
    i < substring.Length; i++) {\n                    if (c == substring[i]) {\n                        count
    += HowManyTimes(str.Substring(i + 1), substring);\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex cannot
    be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c6"
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            start = str.IndexOf(substring,
    start);\n            if (start == -1) break;\n            end = str.IndexOf(substring,
    start + 1);\n            if (end == -1) break;\n            found = true;\n            count++;\n
    \           start++;\n        } while (end != -1);\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpswc6728y.cs(16,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpswc6728y.cs(16,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpswc6728y.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpswc6728y.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpswc6728y.cs(14,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <454cade26f1b4c959f2a751e2c644e61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <454cade26f1b4c959f2a751e2c644e61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|\\\\s){0}(?=\\\\s|$)\",
    substring);\n        Regex regex = new Regex(pattern);\n        MatchCollection
    matches = regex.Matches(str);\n        foreach (Match match in matches) {\n            count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqv_8na3z.cs(13,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpqv_8na3z.cs(13,27): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpqv_8na3z.cs(14,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpqv_8na3z.cs(15,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string lowerCaseSubstring
    = substring.ToLower();\n        string lowerCaseStr = str.ToLower();\n        foreach
    (char c in lowerCaseSubstring) {\n            if (lowerCaseStr.Contains(c)) {\n
    \               count++;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|[{0}]){1}(?=$|[{0}])\",
    Regex.Escape(substring), Regex.Escape(substring));\n        MatchCollection matches
    = Regex.Matches(str, pattern);\n        foreach (Match match in matches) {\n            count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1vg4zoe3.cs(12,70): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(12,95): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(13,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp1vg4zoe3.cs(13,35): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(14,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long startIndex = 0;\n        long
    endIndex = 0;\n        long currentIndex = 0;\n        bool found = false;\n        do
    {\n            found = false;\n            startIndex = currentIndex;\n            endIndex
    = currentIndex + substring.Length;\n            while (currentIndex < str.Length)
    {\n                if (str.Substring(currentIndex, substring.Length) == substring)
    {\n                    found = true;\n                    break;\n                }\n
    \               currentIndex++;\n            }\n            if (found) {\n                count++;\n
    \           }\n            currentIndex = endIndex;\n        } while (currentIndex
    < str.Length);\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcva4rkfb.cs(21,35): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            start = str.IndexOf(substring,
    start);\n            if (start == -1) break;\n            end = str.IndexOf(substring,
    start + 1);\n            if (end == -1) break;\n            found = true;\n            count
    += end - start + 1;\n        } while (end != -1);\n        if (!found) return
    0;\n        return count;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppg7ud39k.cs(16,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppg7ud39k.cs(16,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmppg7ud39k.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppg7ud39k.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long startIndex = 0;\n        long
    endIndex = 0;\n        long currentIndex = 0;\n        long currentStartIndex
    = 0;\n        long currentEndIndex = 0;\n        bool found = false;\n        bool
    first = true;\n        bool last = false;\n        bool firstLast = false;\n        bool
    lastFirst = false;\n        bool firstLastFirst = false;\n        bool lastFirstFirst
    = false;\n        bool firstLastLast = false;\n        bool lastFirstLast = false;\n
    \       bool firstLastLastFirst = false;\n        bool lastFirstLastFirst = false;\n
    \       bool firstLastLastLast = false;\n        bool lastFirstLastLast = false;\n
    \       bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastFirst
    = false;\n        bool firstLastLastLastLast = false;\n        bool lastFirstLastLastLast
    = false;\n        bool firstLastLastLastLastFirst = false;\n        bool lastFirstLastLastLastFirst
    = false;\n        bool firstLastLastLastLastLast = false;\n        bool lastFirstLastLastLastLast
    = false;\n        bool firstLastLastLastLastLastFirst = false;\n        bool lastFirstLastLastLastLastFirst
    = false;\n        bool firstLastLastLastLastLastLast = false;\n        bool lastFirstLastLastLastLastLast
    = false;\n        bool firstLastLastLastLastLastLastFirst = false;\n        bool
    lastFirstLastLastLastLastLastFirst = false;\n        bool firstLastLastLastLastLastLastLast
    = false;\n        bool lastFirstLastLastLastLastLastLast = false;\n        bool
    firstLastLastLastLastLastLastLastFirst = false;\n        bool lastFirstLastLastLastLastLastLastFirst
    = false;\n        bool firstLastLastLastLastLastLastLastLast = false;\n        bool
    lastFirstLastLastLastLastLastLastLast = false;\n        bool firstLastLastLastLastLastLastLastLastFirst
    = false;\n        bool lastFirstLastLastLastLastLastLastLastFirst = false;\n        bool
    firstLastLastLastLastLastLastLastLastLast = false;\n        bool lastFirstLastLastLastLastLastLastLastLast
    = false;\n        bool firstLastLastLastLastLastLastLastLastLastFirst = false;\n
    \       bool lastFirstLastLastLastLastLastLastLastLastFirst = false;\n        bool
    firstLastLastLastLastLastLastLastLastLastLast = false;\n        bool lastFirstLastLastLastLastLastLastLastLastLast
    = false;\n        bool firstLastLastLastLastLastLastLastLastLastLastFirst = false;\n
    \       bool lastFirstLastLastLastLastLastLastLastLastLastFirst = false;\n        bool
    firstLastLastLastLastLastLastLastLastLastLastLastFirst = false;\n        bool
    lastFirst\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_71spxz.cs(61,23): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) - str.IndexOf(substring, 0);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        long
    startIndex = 0;\n        long endIndex = 0;\n        long lengthIndex = 0;\n        long
    index = 0;\n        bool foundIndex = false;\n        bool foundSubstring = false;\n
    \       bool foundSubstringIndex = false;\n        bool foundSubstringIndex2 =
    false;\n        bool foundSubstringIndex3 = false;\n        bool foundSubstringIndex4
    = false;\n        bool foundSubstringIndex5 = false;\n        bool foundSubstringIndex6
    = false;\n        bool foundSubstringIndex7 = false;\n        bool foundSubstringIndex8
    = false;\n        bool foundSubstringIndex9 = false;\n        bool foundSubstringIndex10
    = false;\n        bool foundSubstringIndex11 = false;\n        bool foundSubstringIndex12
    = false;\n        bool foundSubstringIndex13 = false;\n        bool foundSubstringIndex14
    = false;\n        bool foundSubstringIndex15 = false;\n        bool foundSubstringIndex16
    = false;\n        bool foundSubstringIndex17 = false;\n        bool foundSubstringIndex18
    = false;\n        bool foundSubstringIndex19 = false;\n        bool foundSubstringIndex20
    = false;\n        bool foundSubstringIndex21 = false;\n        bool foundSubstringIndex22
    = false;\n        bool foundSubstringIndex23 = false;\n        bool foundSubstringIndex24
    = false;\n        bool foundSubstringIndex25 = false;\n        bool foundSubstringIndex26
    = false;\n        bool foundSubstringIndex27 = false;\n        bool foundSubstringIndex28
    = false;\n        bool foundSubstringIndex29 = false;\n        bool foundSubstringIndex30
    = false;\n        bool foundSubstringIndex31 = false;\n        bool foundSubstringIndex32
    = false;\n        bool foundSubstringIndex33 = false;\n        bool foundSubstringIndex34
    = false;\n        bool foundSubstringIndex35 = false;\n        bool foundSubstringIndex36
    = false;\n        bool foundSubstringIndex37 = false;\n        bool foundSubstringIndex38
    = false;\n        bool foundSubstringIndex39 = false;\n        bool foundSubstringIndex40
    = false;\n        bool foundSubstringIndex41 = false;\n        bool foundSubstringIndex42
    = false;\n        bool foundSubstringIndex43 = false;\n        bool foundSubstringIndex44
    = false;\n        bool foundSubstringIndex45 = false;\n        bool foundSubstringIndex46
    = false;\n        bool foundSubstringIndex47 = false;\n        bool foundSubstringIndex48
    = false;\n        bool foundSubstringIndex49 = false;\n        bool foundSubstringIndex\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnf048wii.cs(71,33): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) - str.IndexOf(substring, 0);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long len = str.Length;\n        long sublen = substring.Length;\n
    \       while (start < len) {\n            end = str.IndexOf(substring, start);\n
    \           if (end == -1) break;\n            count += end - start;\n            start
    = end + sublen;\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr0cs_lqu.cs(17,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpr0cs_lqu.cs(17,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = str.Length - substring.Length;\n        long current = 0;\n        long
    last = 0;\n        bool found = false;\n        do {\n            current = str.IndexOf(substring,
    start + 1);\n            if (current == -1) {\n                current = str.Length;\n
    \               found = true;\n            }\n            if (current > last)
    {\n                last = current;\n            }\n            count += 1;\n            start
    += 1;\n        } while (current != -1 && !found);\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz7iroxbu.cs(18,35): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpz7iroxbu.cs(18,46): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        long index = 0;\n        bool found
    = false;\n        do {\n            index = str.IndexOf(substring, start);\n            if
    (index == -1) {\n                break;\n            }\n            end = index
    + 1;\n            length = end - start;\n            found = true;\n            while
    (end < str.Length) {\n                index = str.IndexOf(substring, end);\n                if
    (index == -1) {\n                    break;\n                }\n                count
    += 1;\n                end += index;\n            }\n            start = end +
    1;\n        } while (found);\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==
    (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmyubx4j8.cs(18,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpmyubx4j8.cs(18,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpmyubx4j8.cs(26,37): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpmyubx4j8.cs(26,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        long index = 0;\n        bool found
    = false;\n        do {\n            index = str.IndexOf(substring, start);\n            if
    (index == -1) break;\n            end = index + 1;\n            length = end -
    start;\n            if (length >= substring.length) found = true;\n            count++;\n
    \           start = end + 1;\n        } while (index != -1);\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6ry9zz5z.cs(18,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp6ry9zz5z.cs(18,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp6ry9zz5z.cs(22,37): error CS1061: ''string'' does not contain a definition
    for ''length'' and no accessible extension method ''length'' accepting a first
    argument of type ''string'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmp6ry9zz5z.cs(16,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                for (int i = 0;
    i < substring.Length; i++) {\n                    if (c == substring[i]) {\n                        count
    += HowManyTimes(str.Substring(i + 1, str.Length - i - 1), substring);\n                        break;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13421cf624d84406ad44c6467887712f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13421cf624d84406ad44c6467887712f>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex cannot
    be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x0009e] "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<={0})\",
    substring);\n        Regex r = new Regex(pattern);\n        MatchCollection mc
    = r.Matches(str);\n        foreach (Match m in mc) {\n            count++;\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprg4_goab.cs(13,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmprg4_goab.cs(13,23): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmprg4_goab.cs(14,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmprg4_goab.cs(15,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        long start2 = 0;\n        long
    end2 = 0;\n        bool found2 = false;\n        long start3 = 0;\n        long
    end3 = 0;\n        bool found3 = false;\n        long start4 = 0;\n        long
    end4 = 0;\n        bool found4 = false;\n        long start5 = 0;\n        long
    end5 = 0;\n        bool found5 = false;\n        long start6 = 0;\n        long
    end6 = 0;\n        bool found6 = false;\n        long start7 = 0;\n        long
    end7 = 0;\n        bool found7 = false;\n        long start8 = 0;\n        long
    end8 = 0;\n        bool found8 = false;\n        long start9 = 0;\n        long
    end9 = 0;\n        bool found9 = false;\n        long start10 = 0;\n        long
    end10 = 0;\n        bool found10 = false;\n        long start11 = 0;\n        long
    end11 = 0;\n        bool found11 = false;\n        long start12 = 0;\n        long
    end12 = 0;\n        bool found12 = false;\n        long start13 = 0;\n        long
    end13 = 0;\n        bool found13 = false;\n        long start14 = 0;\n        long
    end14 = 0;\n        bool found14 = false;\n        long start15 = 0;\n        long
    end15 = 0;\n        bool found15 = false;\n        long start16 = 0;\n        long
    end16 = 0;\n        bool found16 = false;\n        long start17 = 0;\n        long
    end17 = 0;\n        bool found17 = false;\n        long start18 = 0;\n        long
    end18 = 0;\n        bool found18 = false;\n        long start19 = 0;\n        long
    end19 = 0;\n        bool found19 = false;\n        long start20 = 0;\n        long
    end20 = 0;\n        bool found20 = false;\n        long start21 = 0;\n        long
    end21 = 0;\n        bool found21 = false;\n        long start22 = 0;\n        long
    end22 = 0;\n        bool found22 = false;\n        long start23 = 0;\n        long
    end23 = 0;\n        bool found23 = false;\n        long start24 = 0;\n        long
    end24 = 0;\n        bool found24 = false;\n        long start25 = 0;\n        long
    end25 = 0;\n        bool found25 = false;\n        long start26 = 0;\n        long
    end26 = 0;\n        bool found26 = false;\n        long start27 = 0;\n        long
    end27 = 0;\n        bool found27 = false;\n        long start28 = 0;\n        long
    end28 = 0;\n        bool found28 = false;\n        long start29 = 0;\n        long
    end29 = 0;\n        bool \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcy0kszzt.cs(98,13): error CS1001: Identifier expected

    /tmp/tmpcy0kszzt.cs(98,13): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|\\\\s){0}(?=\\\\s|$)\",
    substring);\n        Regex regex = new Regex(pattern);\n        MatchCollection
    matches = regex.Matches(str);\n        foreach (Match match in matches) {\n            count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqv_8na3z.cs(13,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpqv_8na3z.cs(13,27): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpqv_8na3z.cs(14,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpqv_8na3z.cs(15,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    isInside = false;\n        bool isOverlap = false;\n        bool isInsideOverlap
    = false;\n        bool isOverlapInside = false;\n        bool isOverlapOverlap
    = false;\n        bool isInsideOverlapInside = false;\n        bool isOverlapOverlapInside
    = false;\n        bool isInsideOverlapOverlap = false;\n        bool isOverlapInsideOverlap
    = false;\n        bool isInsideOverlapInsideOverlap = false;\n        bool isOverlapOverlapInsideOverlap
    = false;\n        bool isInsideOverlapOverlapInsideOverlap = false;\n        bool
    isOverlapInsideOverlapInsideOverlap = false;\n        bool isInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isOverlapOverlapInsideOverlapInsideOverlap = false;\n        bool
    isInsideOverlapInsideOverlapInsideOverlapInsideOverlap = false;\n        bool
    isOverlapOverlapInsideOverlapInsideOverlapInsideOverlap = false;\n        bool
    isInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap = false;\n
    \       bool isOverlapOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isOverlapOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlapInsideOverlap
    = false;\n        bool isInsideOverlapInsideOverlapInsideOverlapInsideOverlap\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpts4wvt7u.cs(41,68): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    startFound = false;\n        bool endFound = false;\n        bool lengthFound
    = false;\n        bool foundStartFound = false;\n        bool foundEndFound =
    false;\n        bool foundLengthFound = false;\n        bool foundStartEndFound
    = false;\n        bool foundStartLengthFound = false;\n        bool foundEndLengthFound
    = false;\n        bool foundStartEndLengthFound = false;\n        bool foundStartLengthEndFound
    = false;\n        bool foundEndLengthStartFound = false;\n        bool foundStartEndLengthEndFound
    = false;\n        bool foundStartLengthStartEndFound = false;\n        bool foundEndLengthStartStartFound
    = false;\n        bool foundStartEndLengthStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStartStartEndFound
    = false;\n        bool foundStartEndLengthStartStartEndFound = false;\n        bool
    foundStartLengthStartStartEndFound = false;\n        bool foundEndLengthStart\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmpgpgc9g.cs(63,33): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = str.Length - substring.Length;\n        while (start < end) {\n            long
    mid = (start + end) / 2;\n            bool found = true;\n            for (int
    i = 0; i < substring.Length; i++) {\n                if (str[mid+i] != substring[i])
    {\n                    found = false;\n                    break;\n                }\n
    \           }\n            if (found) {\n                count++;\n                start
    = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6755enjp.cs(18,25): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = str.Length - substring.Length;\n        while (start < end) {\n            long
    mid = (start + end) / 2;\n            if (str.Substring(mid, substring.Length)
    == substring) {\n                count++;\n                start = mid + 1;\n
    \           } else {\n                end = mid - 1;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaeb32v7l.cs(16,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    overlap = false;\n        bool foundOverlap = false;\n        bool foundOverlap2
    = false;\n        bool foundOverlap3 = false;\n        bool foundOverlap4 = false;\n
    \       bool foundOverlap5 = false;\n        bool foundOverlap6 = false;\n        bool
    foundOverlap7 = false;\n        bool foundOverlap8 = false;\n        bool foundOverlap9
    = false;\n        bool foundOverlap10 = false;\n        bool foundOverlap11 =
    false;\n        bool foundOverlap12 = false;\n        bool foundOverlap13 = false;\n
    \       bool foundOverlap14 = false;\n        bool foundOverlap15 = false;\n        bool
    foundOverlap16 = false;\n        bool foundOverlap17 = false;\n        bool foundOverlap18
    = false;\n        bool foundOverlap19 = false;\n        bool foundOverlap20 =
    false;\n        bool foundOverlap21 = false;\n        bool foundOverlap22 = false;\n
    \       bool foundOverlap23 = false;\n        bool foundOverlap24 = false;\n        bool
    foundOverlap25 = false;\n        bool foundOverlap26 = false;\n        bool foundOverlap27
    = false;\n        bool foundOverlap28 = false;\n        bool foundOverlap29 =
    false;\n        bool foundOverlap30 = false;\n        bool foundOverlap31 = false;\n
    \       bool foundOverlap32 = false;\n        bool foundOverlap33 = false;\n        bool
    foundOverlap34 = false;\n        bool foundOverlap35 = false;\n        bool foundOverlap36
    = false;\n        bool foundOverlap37 = false;\n        bool foundOverlap38 =
    false;\n        bool foundOverlap39 = false;\n        bool foundOverlap40 = false;\n
    \       bool foundOverlap41 = false;\n        bool foundOverlap42 = false;\n        bool
    foundOverlap43 = false;\n        bool foundOverlap44 = false;\n        bool foundOverlap45
    = false;\n        bool foundOverlap46 = false;\n        bool foundOverlap47 =
    false;\n        bool foundOverlap48 = false;\n        bool foundOverlap49 = false;\n
    \       bool foundOverlap50 = false;\n        bool foundOverlap51 = false;\n        bool
    foundOverlap52 = false;\n        bool foundOverlap53 = false;\n        bool foundOverlap54
    = false;\n        bool foundOverlap55 = false;\n        bool foundOverlap56 =
    false;\n        bool foundOverlap57 = false;\n        bool foundOverlap58 = false;\n
    \       bool foundOverlap59 = false;\n        bool \n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==
    (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpha399xr_.cs(76,13): error CS1001: Identifier expected

    /tmp/tmpha399xr_.cs(76,13): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long len = 0;\n        bool found = false;\n        do {\n            found
    = false;\n            end = str.IndexOf(substring, start);\n            if (end
    == -1) {\n                end = str.Length;\n            }\n            len =
    end - start + 1;\n            count += 1;\n            start = end + 1;\n            found
    = true;\n        } while (found && end != -1);\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp82seqee.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpp82seqee.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|\\\\s){0}(?=\\\\s|$)\",
    substring);\n        Regex r = new Regex(pattern);\n        MatchCollection mc
    = r.Matches(str);\n        foreach (Match m in mc) {\n            count++;\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdips6cav.cs(13,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpdips6cav.cs(13,23): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpdips6cav.cs(14,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpdips6cav.cs(15,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|[{0}]){1}(?=$|[{0}])\",
    Regex.Escape(substring), Regex.Escape(substring));\n        MatchCollection matches
    = Regex.Matches(str, pattern);\n        foreach (Match match in matches) {\n            count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1vg4zoe3.cs(12,70): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(12,95): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(13,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp1vg4zoe3.cs(13,35): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(14,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    startFound = false;\n        bool endFound = false;\n        bool lengthFound
    = false;\n        bool foundStartFound = false;\n        bool foundEndFound =
    false;\n        bool foundLengthFound = false;\n        bool foundStartEndFound
    = false;\n        bool foundStartLengthFound = false;\n        bool foundEndLengthFound
    = false;\n        bool foundStartEndLengthFound = false;\n        bool foundStartLengthEndFound
    = false;\n        bool foundEndLengthStartFound = false;\n        bool foundLengthStartEndFound
    = false;\n        bool foundLengthEndStartFound = false;\n        bool foundStartEndLengthEndFound
    = false;\n        bool foundStartLengthEndStartFound = false;\n        bool foundEndLengthStartStartFound
    = false;\n        bool foundLengthStartEndStartFound = false;\n        bool foundStartEndLengthEndStartFound
    = false;\n        bool foundStartLengthEndEndStartFound = false;\n        bool
    foundEndLengthStartStartFound = false;\n        bool foundLengthStartEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndStartFound = false;\n        bool
    foundStartLengthEndEndEndStartFound = false;\n        bool foundEndLengthStartStartFound
    = false;\n        bool foundLengthStartEndEndStartFound = false;\n        bool
    foundStartEndLengthEndEndStartFound = false;\n        bool foundStartLengthEndEndEndStartFound
    = false;\n        bool foundEndLengthStartStartFound = false;\n        bool foundLengthStartEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndStartFound = false;\n        bool
    foundStartLengthEndEndEndStartFound = false;\n        bool foundEndLengthStartStartFound
    = false;\n        bool foundLengthStartEndEndStartFound = false;\n        bool
    foundStartEndLengthEndEndStartFound = false;\n        bool foundStartLengthEndEndEndStartFound
    = false;\n        bool foundEndLengthStartStartFound = false;\n        bool foundLengthStartEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndStartFound = false;\n        bool
    foundStartLengthEndEndEndStartFound = false;\n        bool foundEndLengthStartStartFound
    = false;\n        bool foundLengthStartEndEndStartFound = false;\n        bool
    foundStartEndLengthEndEndStartFound = false;\n        bool foundStartLengthEndEndEndStartFound
    = false;\n        bool foundEndLengthStartStartFound = false;\n        bool foundLengthStartEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndStartFound = false;\n        bool
    foundStartLengthEndEndStartFound = false;\n        bool foundEnd\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdzngp_z3.cs(64,22): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string lowerStr = str.ToLower();\n
    \       string lowerSub = substring.ToLower();\n        foreach (char c in lowerStr)
    {\n            if (lowerSub.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a8e3481a5144b34b3bf513285702a4c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a8e3481a5144b34b3bf513285702a4c>:0
    \n"
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) - str.IndexOf(substring, 0);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <454cade26f1b4c959f2a751e2c644e61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <454cade26f1b4c959f2a751e2c644e61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        long start2 = 0;\n        long end2
    = 0;\n        bool found = false;\n        bool found2 = false;\n        bool
    found3 = false;\n        bool found4 = false;\n        bool found5 = false;\n
    \       bool found6 = false;\n        bool found7 = false;\n        bool found8
    = false;\n        bool found9 = false;\n        bool found10 = false;\n        bool
    found11 = false;\n        bool found12 = false;\n        bool found13 = false;\n
    \       bool found14 = false;\n        bool found15 = false;\n        bool found16
    = false;\n        bool found17 = false;\n        bool found18 = false;\n        bool
    found19 = false;\n        bool found20 = false;\n        bool found21 = false;\n
    \       bool found22 = false;\n        bool found23 = false;\n        bool found24
    = false;\n        bool found25 = false;\n        bool found26 = false;\n        bool
    found27 = false;\n        bool found28 = false;\n        bool found29 = false;\n
    \       bool found30 = false;\n        bool found31 = false;\n        bool found32
    = false;\n        bool found33 = false;\n        bool found34 = false;\n        bool
    found35 = false;\n        bool found36 = false;\n        bool found37 = false;\n
    \       bool found38 = false;\n        bool found39 = false;\n        bool found40
    = false;\n        bool found41 = false;\n        bool found42 = false;\n        bool
    found43 = false;\n        bool found44 = false;\n        bool found45 = false;\n
    \       bool found46 = false;\n        bool found47 = false;\n        bool found48
    = false;\n        bool found49 = false;\n        bool found50 = false;\n        bool
    found51 = false;\n        bool found52 = false;\n        bool found53 = false;\n
    \       bool found54 = false;\n        bool found55 = false;\n        bool found56
    = false;\n        bool found57 = false;\n        bool found58 = false;\n        bool
    found59 = false;\n        bool found60 = false;\n        bool found61 = false;\n
    \       bool found62 = false;\n        bool found63 = false;\n        bool found64
    = false;\n        bool found65 = false;\n        bool found66 = false;\n        bool
    found67 = false;\n        bool found68 = false;\n        bool found69 = false;\n
    \       bool found70 = false;\n        bool found71 = false;\n        bool found72
    = false;\n        bool found73 = false;\n        bool found74 = false;\n        bool
    found75 = false;\n        bool found76 = false;\n        bool found77 = false;\n
    \       bool found78 = false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgtoko288.cs(11,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(12,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(13,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpgtoko288.cs(14,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(15,14): warning CS0219: The variable ''start2'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(16,14): warning CS0219: The variable ''end2'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(17,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(18,14): warning CS0219: The variable ''found2'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(19,14): warning CS0219: The variable ''found3'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(20,14): warning CS0219: The variable ''found4'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(21,14): warning CS0219: The variable ''found5'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(22,14): warning CS0219: The variable ''found6'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(23,14): warning CS0219: The variable ''found7'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(24,14): warning CS0219: The variable ''found8'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(25,14): warning CS0219: The variable ''found9'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(26,14): warning CS0219: The variable ''found10'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(27,14): warning CS0219: The variable ''found11'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.cs(28,14): warning CS0219: The variable ''found12'' is assigned
    but its value is never used

    /tmp/tmpgtoko288.c'
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            start = str.IndexOf(substring,
    start);\n            if (start == -1) break;\n            end = str.IndexOf(substring,
    start + 1);\n            if (end == -1) break;\n            found = true;\n            count
    += end - start + 1;\n            start = end + 1;\n        } while (found);\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7vlzetld.cs(16,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp7vlzetld.cs(16,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp7vlzetld.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp7vlzetld.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    found2 = false;\n        bool found3 = false;\n        bool found4 = false;\n
    \       bool found5 = false;\n        bool found6 = false;\n        bool found7
    = false;\n        bool found8 = false;\n        bool found9 = false;\n        bool
    found10 = false;\n        bool found11 = false;\n        bool found12 = false;\n
    \       bool found13 = false;\n        bool found14 = false;\n        bool found15
    = false;\n        bool found16 = false;\n        bool found17 = false;\n        bool
    found18 = false;\n        bool found19 = false;\n        bool found20 = false;\n
    \       bool found21 = false;\n        bool found22 = false;\n        bool found23
    = false;\n        bool found24 = false;\n        bool found25 = false;\n        bool
    found26 = false;\n        bool found27 = false;\n        bool found28 = false;\n
    \       bool found29 = false;\n        bool found30 = false;\n        bool found31
    = false;\n        bool found32 = false;\n        bool found33 = false;\n        bool
    found34 = false;\n        bool found35 = false;\n        bool found36 = false;\n
    \       bool found37 = false;\n        bool found38 = false;\n        bool found39
    = false;\n        bool found40 = false;\n        bool found41 = false;\n        bool
    found42 = false;\n        bool found43 = false;\n        bool found44 = false;\n
    \       bool found45 = false;\n        bool found46 = false;\n        bool found47
    = false;\n        bool found48 = false;\n        bool found49 = false;\n        bool
    found50 = false;\n        bool found51 = false;\n        bool found52 = false;\n
    \       bool found53 = false;\n        bool found54 = false;\n        bool found55
    = false;\n        bool found56 = false;\n        bool found57 = false;\n        bool
    found58 = false;\n        bool found59 = false;\n        bool found60 = false;\n
    \       bool found61 = false;\n        bool found62 = false;\n        bool found63
    = false;\n        bool found64 = false;\n        bool found65 = false;\n        bool
    found66 = false;\n        bool found67 = false;\n        bool found68 = false;\n
    \       bool found69 = false;\n        bool found70 = false;\n        bool found71
    = false;\n        bool found72 = false;\n        bool found73 = false;\n        bool
    found74 = false;\n        bool found75 = false;\n        bool found76 = false;\n
    \       bool found77 = false;\n        bool found78 = false;\n        bool found79
    = false;\n        bool found\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprh1v25yb.cs(94,19): error CS1002: ; expected

    '
  timestamp: 1659976205
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<={0})\",
    substring);\n        Regex regex = new Regex(pattern);\n        MatchCollection
    matches = regex.Matches(str);\n        foreach (Match match in matches) {\n            count
    += 1;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9tno74mo.cs(13,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp9tno74mo.cs(13,27): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp9tno74mo.cs(14,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp9tno74mo.cs(15,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    startFound = false;\n        bool endFound = false;\n        bool lengthFound
    = false;\n        bool foundStartFound = false;\n        bool foundEndFound =
    false;\n        bool foundLengthFound = false;\n        bool foundStartEndFound
    = false;\n        bool foundStartLengthFound = false;\n        bool foundEndLengthFound
    = false;\n        bool foundStartEndLengthFound = false;\n        bool foundStartLengthEndFound
    = false;\n        bool foundEndLengthStartFound = false;\n        bool foundStartEndLengthEndFound
    = false;\n        bool foundStartLengthEndStartFound = false;\n        bool foundEndLengthStartStartFound
    = false;\n        bool foundStartEndLengthEndStartFound = false;\n        bool
    foundStartLengthEndEndEndFound = false;\n        bool foundStartEndLengthEndEndFound
    = false;\n        bool foundStartEndLengthEndEndStartFound = false;\n        bool
    foundStartEndLengthEndEndEndFound = false;\n        bool foundStartEndLengthEndEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndEndEndFound = false;\n        bool
    foundStartEndLengthEndEndEndEndStartFound = false;\n        bool foundStartEndLengthEndEndEndEndEndFound
    = false;\n        bool foundStartEndLengthEndEndEndEndEndFound = false;\n        bool
    foundStartEndLengthEndEndEndEndEndEndFound = false;\n        bool foundStartEndLengthEndEndEndEndEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndEndEndEndEndEndFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndStartFound = false;\n        bool
    foundStartEndLengthEndEndEndEndEndEndEndEndFound = false;\n        bool foundStartEndLengthEndEndEndEndEndEndEndEndFound
    = false;\n        bool foundStartEndLengthEndEndEndEndEndEndEndEndEndFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndEndEndFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndEndEndFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndEndEndEndFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndEndEndEndStartFound =
    false;\n        bool foundStartEndLengthEndEndEnd\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq9qjbo3.cs(54,42): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87cb66bbba5b4b2f9d97fe48586481e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87cb66bbba5b4b2f9d97fe48586481e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    foundOverlap = false;\n        bool foundOverlap2 = false;\n        bool foundOverlap3
    = false;\n        bool foundOverlap4 = false;\n        bool foundOverlap5 = false;\n
    \       bool foundOverlap6 = false;\n        bool foundOverlap7 = false;\n        bool
    foundOverlap8 = false;\n        bool foundOverlap9 = false;\n        bool foundOverlap10
    = false;\n        bool foundOverlap11 = false;\n        bool foundOverlap12 =
    false;\n        bool foundOverlap13 = false;\n        bool foundOverlap14 = false;\n
    \       bool foundOverlap15 = false;\n        bool foundOverlap16 = false;\n        bool
    foundOverlap17 = false;\n        bool foundOverlap18 = false;\n        bool foundOverlap19
    = false;\n        bool foundOverlap20 = false;\n        bool foundOverlap21 =
    false;\n        bool foundOverlap22 = false;\n        bool foundOverlap23 = false;\n
    \       bool foundOverlap24 = false;\n        bool foundOverlap25 = false;\n        bool
    foundOverlap26 = false;\n        bool foundOverlap27 = false;\n        bool foundOverlap28
    = false;\n        bool foundOverlap29 = false;\n        bool foundOverlap30 =
    false;\n        bool foundOverlap31 = false;\n        bool foundOverlap32 = false;\n
    \       bool foundOverlap33 = false;\n        bool foundOverlap34 = false;\n        bool
    foundOverlap35 = false;\n        bool foundOverlap36 = false;\n        bool foundOverlap37
    = false;\n        bool foundOverlap38 = false;\n        bool foundOverlap39 =
    false;\n        bool foundOverlap40 = false;\n        bool foundOverlap41 = false;\n
    \       bool foundOverlap42 = false;\n        bool foundOverlap43 = false;\n        bool
    foundOverlap44 = false;\n        bool foundOverlap45 = false;\n        bool foundOverlap46
    = false;\n        bool foundOverlap47 = false;\n        bool foundOverlap48 =
    false;\n        bool foundOverlap49 = false;\n        bool foundOverlap50 = false;\n
    \       bool foundOverlap51 = false;\n        bool foundOverlap52 = false;\n        bool
    foundOverlap53 = false;\n        bool foundOverlap54 = false;\n        bool foundOverlap55
    = false;\n        bool foundOverlap56 = false;\n        bool foundOverlap57 =
    false;\n        bool foundOverlap58 = false;\n        bool foundOverlap59 = false;\n
    \       bool foundOverlap60 = false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1sng9n9j.cs(11,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmp1sng9n9j.cs(12,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmp1sng9n9j.cs(13,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmp1sng9n9j.cs(14,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmp1sng9n9j.cs(15,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmp1sng9n9j.cs(16,14): warning CS0219: The variable ''foundOverlap'' is assigned
    but its value is never used

    /tmp/tmp1sng9n9j.cs(17,14): warning CS0219: The variable ''foundOverlap2'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(18,14): warning CS0219: The variable ''foundOverlap3'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(19,14): warning CS0219: The variable ''foundOverlap4'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(20,14): warning CS0219: The variable ''foundOverlap5'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(21,14): warning CS0219: The variable ''foundOverlap6'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(22,14): warning CS0219: The variable ''foundOverlap7'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(23,14): warning CS0219: The variable ''foundOverlap8'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(24,14): warning CS0219: The variable ''foundOverlap9'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(25,14): warning CS0219: The variable ''foundOverlap10'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(26,14): warning CS0219: The variable ''foundOverlap11'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(27,14): warning CS0219: The variable ''foundOverlap12'' is
    assigned but its value is never used

    /tmp/tmp1sng9n9j.cs(28,14): warning CS0'
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    foundStart = false;\n        bool foundEnd = false;\n        bool foundLength
    = false;\n        bool foundSubstring = false;\n        bool foundSubstringStart
    = false;\n        bool foundSubstringEnd = false;\n        bool foundSubstringLength
    = false;\n        bool foundSubstringSubstring = false;\n        bool foundSubstringSubstringStart
    = false;\n        bool foundSubstringSubstringEnd = false;\n        bool foundSubstringSubstringLength
    = false;\n        bool foundSubstringSubstringSubstring = false;\n        bool
    foundSubstringSubstringSubstringStart = false;\n        bool foundSubstringSubstringSubstringEnd
    = false;\n        bool foundSubstringSubstringSubstringLength = false;\n        bool
    foundSubstringSubstringSubstringSubstring = false;\n        bool foundSubstringSubstringSubstringSubstringStart
    = false;\n        bool foundSubstringSubstringSubstringSubstringEnd = false;\n
    \       bool foundSubstringSubstringSubstringSubstringLength = false;\n        bool
    foundSubstringSubstringSubstringSubstringSubstring = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringStart
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringEnd =
    false;\n        bool foundSubstringSubstringSubstringSubstringSubstringLength
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstring
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringStart
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringEnd
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringLength
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringSubstring
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringStart
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringEnd
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringLength
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringSubstring
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringStart
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringEnd
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringLength
    = false;\n        bool foundSubstringSubstringSubstringSubstringSubstringSubstringSubstring
    = false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfqslto24.cs(44,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringStart''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(45,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringEnd''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(46,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringLength''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(47,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringSubstring''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(48,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringStart''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(49,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringEnd''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(50,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringLength''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(51,14): error CS0128: A local variable or function named ''foundSubstringSubstringSubstringSubstringSubstringSubstringSubstring''
    is already defined in this scope

    /tmp/tmpfqslto24.cs(11,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpfqslto24.cs(12,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpfqslto24.cs(13,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpfqslto24.cs(14,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpfqslto24.cs(15,14): warning CS0219: The variable ''found'' is assigned
    but'
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|[{0}]){1}(?=$|[{0}])\",
    Regex.Escape(substring), Regex.Escape(substring));\n        MatchCollection matches
    = Regex.Matches(str, pattern);\n        foreach (Match match in matches) {\n            count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1vg4zoe3.cs(12,70): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(12,95): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(13,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp1vg4zoe3.cs(13,35): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(14,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long len = 0;\n        bool found = false;\n        bool startFound
    = false;\n        bool endFound = false;\n        bool lenFound = false;\n        bool
    foundLen = false;\n        bool foundStart = false;\n        bool foundEnd = false;\n
    \       bool foundLenStart = false;\n        bool foundLenEnd = false;\n        bool
    foundStartEnd = false;\n        bool foundStartLen = false;\n        bool foundEndLen
    = false;\n        bool foundStartLenEnd = false;\n        bool foundEndLenStart
    = false;\n        bool foundLenStart = false;\n        bool foundLenEnd = false;\n
    \       bool foundStartLenEnd = false;\n        bool foundEndLenStart = false;\n
    \       bool foundLenStart = false;\n        bool foundLenEnd = false;\n        bool
    foundStartLenEnd = false;\n        bool foundEndLenStart = false;\n        bool
    foundLenStart = false;\n        bool foundLenEnd = false;\n        bool foundStartLenEnd
    = false;\n        bool foundEndLenStart = false;\n        bool foundLenStart =
    false;\n        bool foundLenEnd = false;\n        bool foundStartLenEnd = false;\n
    \       bool foundEndLenStart = false;\n        bool foundLenStart = false;\n
    \       bool foundLenEnd = false;\n        bool foundStartLenEnd = false;\n        bool
    foundEndLenStart = false;\n        bool foundLenStart = false;\n        bool foundLenEnd
    = false;\n        bool foundStartLenEnd = false;\n        bool foundEndLenStart
    = false;\n        bool foundLenStart = false;\n        bool foundLenEnd = false;\n
    \       bool foundStartLenEnd = false;\n        bool foundEndLenStart = false;\n
    \       bool foundLenStart = false;\n        bool foundLenEnd = false;\n        bool
    foundStartLenEnd = false;\n        bool foundEndLenStart = false;\n        bool
    foundLenStart = false;\n        bool foundLenEnd = false;\n        bool foundStartLenEnd
    = false;\n        bool foundEndLenStart = false;\n        bool foundLenStart =
    false;\n        bool foundLenEnd = false;\n        bool foundStartLenEnd = false;\n
    \       bool foundEndLenStart = false;\n        bool foundLenStart = false;\n
    \       bool foundLenEnd = false;\n        bool foundStartLenEnd = false;\n        bool
    foundEndLenStart = false;\n        bool foundLenStart = false;\n        bool foundLenEnd
    = false;\n        bool foundStartLenEnd = false;\n        bool foundEndLenStart
    = false;\n        bool foundLenStart = false;\n        bool foundLenEnd = false;\n
    \       bool foundStartLenEnd = false;\n        bool foundEndLenStart = false;\n
    \       bool foundLenStart = false;\n        bool foundLen\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_6nny6sr.cs(82,22): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            start = str.IndexOf(substring,
    start);\n            if (start == -1) break;\n            end = str.IndexOf(substring,
    start + 1);\n            if (end == -1) break;\n            found = true;\n            count++;\n
    \           start++;\n        } while (start != -1 && end != -1);\n        if
    (!found) return 0;\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb029fb75.cs(16,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpb029fb75.cs(16,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpb029fb75.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpb029fb75.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) - str.IndexOf(substring, 0);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|[{0}]){1}(?=$|[{0}])\",
    Regex.Escape(substring), Regex.Escape(substring));\n        MatchCollection matches
    = Regex.Matches(str, pattern);\n        foreach (Match match in matches) {\n            count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1vg4zoe3.cs(12,70): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(12,95): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(13,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp1vg4zoe3.cs(13,35): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp1vg4zoe3.cs(14,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        long startFound = 0;\n        long
    endFound = 0;\n        bool startFoundOverlap = false;\n        bool endFoundOverlap
    = false;\n        bool foundOverlap = false;\n        bool foundOverlapStart =
    false;\n        bool foundOverlapEnd = false;\n        bool foundOverlapStartEnd
    = false;\n        bool foundOverlapStartEndOverlap = false;\n        bool foundOverlapEndStartOverlap
    = false;\n        bool foundOverlapEndEndOverlap = false;\n        bool foundOverlapStartEndOverlapOverlap
    = false;\n        bool foundOverlapEndStartOverlapOverlap = false;\n        bool
    foundOverlapEndEndOverlapOverlap = false;\n        bool foundOverlapStartEndOverlapOverlapOverlap
    = false;\n        bool foundOverlapEndStartOverlapOverlapOverlap = false;\n        bool
    foundOverlapEndEndOverlapOverlapOverlap = false;\n        bool foundOverlapStartEndOverlapOverlapOverlapOverlap
    = false;\n        bool foundOverlapEndStartOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapEndEndOverlapOverlapOverlapOverlap = false;\n        bool
    foundOverlapStartEndOverlapOverlapOverlapOverlap = false;\n        bool foundOverlapEndStartOverlapOverlapOverlapOverlap
    = false;\n        bool foundOverlapEndEndOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapStartEndOverlapOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapEndStartOverlapOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapEndEndOverlapOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapStartEndOverlapOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapEndStartOverlapOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapEndEndOverlapOverlapOverlapOverlapOverlap = false;\n
    \       bool foundOverlapStartEndOverlapOverlapOverlapOverlapOverlapOverlap =
    false;\n        bool foundOverlapEndStartOverlapOverlapOverlapOverlapOverlapOverlap
    = false;\n        bool foundOverlapEndEndOverlapOverlapOverlapOverlapOverlapOverlap
    = false;\n        bool foundOverlapStartEndOverlapOverlapOverlapOverlapOverlapOverlap
    = false;\n        bool foundOverlapEndStartOverlapOverlapOverlapOverlapOver\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwy5vk_jr.cs(48,66): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        long index = 0;\n        bool found
    = false;\n        do {\n            index = str.IndexOf(substring, start);\n            if
    (index == -1) {\n                end = str.Length;\n            } else {\n                end
    = index;\n                found = true;\n            }\n            count++;\n
    \           start = end + 1;\n        } while (found && end < str.Length);\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfe7qfrre.cs(18,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpfe7qfrre.cs(18,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpfe7qfrre.cs(14,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1), substring);\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        long index = 0;\n        bool found
    = false;\n        bool first = true;\n        bool last = true;\n        bool
    firstLast = true;\n        bool lastFirst = true;\n        bool firstLastLast
    = true;\n        bool lastFirstLast = true;\n        bool firstLastFirst = true;\n
    \       bool lastFirstFirst = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n
    \       bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n
    \       bool lastFirstFirstLast = true;\n        \n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5f5172dh.cs(31,14): error CS0128: A local variable or function named ''firstLastLastFirst''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(32,14): error CS0128: A local variable or function named ''lastFirstLastFirst''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(33,14): error CS0128: A local variable or function named ''firstLastLastLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(34,14): error CS0128: A local variable or function named ''lastFirstLastLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(35,14): error CS0128: A local variable or function named ''firstLastFirstLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(36,14): error CS0128: A local variable or function named ''lastFirstFirstLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(37,14): error CS0128: A local variable or function named ''firstLastLastFirst''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(38,14): error CS0128: A local variable or function named ''lastFirstLastFirst''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(39,14): error CS0128: A local variable or function named ''firstLastLastLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(40,14): error CS0128: A local variable or function named ''lastFirstLastLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(41,14): error CS0128: A local variable or function named ''firstLastFirstLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(42,14): error CS0128: A local variable or function named ''lastFirstFirstLast''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(43,14): error CS0128: A local variable or function named ''firstLastLastFirst''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(44,14): error CS0128: A local variable or function named ''lastFirstLastFirst''
    is already defined in this scope

    /tmp/tmp5f5172dh.cs(45,14): error CS0128: A local variable or function named ''firstLastLast'
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <454cade26f1b4c959f2a751e2c644e61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <454cade26f1b4c959f2a751e2c644e61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1), substring);\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87cb66bbba5b4b2f9d97fe48586481e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87cb66bbba5b4b2f9d97fe48586481e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) - str.IndexOf(substring, 0);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6caddf8258b84578ace719adb2d696a6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        long length2 = 0;\n        long length3
    = 0;\n        long length4 = 0;\n        long length5 = 0;\n        long length6
    = 0;\n        long length7 = 0;\n        long length8 = 0;\n        long length9
    = 0;\n        long length10 = 0;\n        long length11 = 0;\n        long length12
    = 0;\n        long length13 = 0;\n        long length14 = 0;\n        long length15
    = 0;\n        long length16 = 0;\n        long length17 = 0;\n        long length18
    = 0;\n        long length19 = 0;\n        long length20 = 0;\n        long length21
    = 0;\n        long length22 = 0;\n        long length23 = 0;\n        long length24
    = 0;\n        long length25 = 0;\n        long length26 = 0;\n        long length27
    = 0;\n        long length28 = 0;\n        long length29 = 0;\n        long length30
    = 0;\n        long length31 = 0;\n        long length32 = 0;\n        long length33
    = 0;\n        long length34 = 0;\n        long length35 = 0;\n        long length36
    = 0;\n        long length37 = 0;\n        long length38 = 0;\n        long length39
    = 0;\n        long length40 = 0;\n        long length41 = 0;\n        long length42
    = 0;\n        long length43 = 0;\n        long length44 = 0;\n        long length45
    = 0;\n        long length46 = 0;\n        long length47 = 0;\n        long length48
    = 0;\n        long length49 = 0;\n        long length50 = 0;\n        long length51
    = 0;\n        long length52 = 0;\n        long length53 = 0;\n        long length54
    = 0;\n        long length55 = 0;\n        long length56 = 0;\n        long length57
    = 0;\n        long length58 = 0;\n        long length59 = 0;\n        long length60
    = 0;\n        long length61 = 0;\n        long length62 = 0;\n        long length63
    = 0;\n        long length64 = 0;\n        long length65 = 0;\n        long length66
    = 0;\n        long length67 = 0;\n        long length68 = 0;\n        long length69
    = 0;\n        long length70 = 0;\n        long length71 = 0;\n        long length72
    = 0;\n        long length73 = 0;\n        long length74 = 0;\n        long length75
    = 0;\n        long length76 = 0;\n        long length77 = 0;\n        long length78
    = 0;\n        long length79 = 0;\n        long length80 = 0;\n        long length81
    = 0;\n        long length82 = 0;\n        long length83 = 0;\n        long length84
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe_9w0ozd.cs(11,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(12,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(13,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpe_9w0ozd.cs(14,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(15,14): warning CS0219: The variable ''length2'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(16,14): warning CS0219: The variable ''length3'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(17,14): warning CS0219: The variable ''length4'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(18,14): warning CS0219: The variable ''length5'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(19,14): warning CS0219: The variable ''length6'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(20,14): warning CS0219: The variable ''length7'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(21,14): warning CS0219: The variable ''length8'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(22,14): warning CS0219: The variable ''length9'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(23,14): warning CS0219: The variable ''length10'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(24,14): warning CS0219: The variable ''length11'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(25,14): warning CS0219: The variable ''length12'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(26,14): warning CS0219: The variable ''length13'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(27,14): warning CS0219: The variable ''length14'' is assigned
    but its value is never used

    /tmp/tmpe_9w0ozd.cs(28,14): warning CS0219: The variable ''length15'' is assigned
    but its value is never use'
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long len = 0;\n        bool found = false;\n        bool found2
    = false;\n        bool found3 = false;\n        bool found4 = false;\n        bool
    found5 = false;\n        bool found6 = false;\n        bool found7 = false;\n
    \       bool found8 = false;\n        bool found9 = false;\n        bool found10
    = false;\n        bool found11 = false;\n        bool found12 = false;\n        bool
    found13 = false;\n        bool found14 = false;\n        bool found15 = false;\n
    \       bool found16 = false;\n        bool found17 = false;\n        bool found18
    = false;\n        bool found19 = false;\n        bool found20 = false;\n        bool
    found21 = false;\n        bool found22 = false;\n        bool found23 = false;\n
    \       bool found24 = false;\n        bool found25 = false;\n        bool found26
    = false;\n        bool found27 = false;\n        bool found28 = false;\n        bool
    found29 = false;\n        bool found30 = false;\n        bool found31 = false;\n
    \       bool found32 = false;\n        bool found33 = false;\n        bool found34
    = false;\n        bool found35 = false;\n        bool found36 = false;\n        bool
    found37 = false;\n        bool found38 = false;\n        bool found39 = false;\n
    \       bool found40 = false;\n        bool found41 = false;\n        bool found42
    = false;\n        bool found43 = false;\n        bool found44 = false;\n        bool
    found45 = false;\n        bool found46 = false;\n        bool found47 = false;\n
    \       bool found48 = false;\n        bool found49 = false;\n        bool found50
    = false;\n        bool found51 = false;\n        bool found52 = false;\n        bool
    found53 = false;\n        bool found54 = false;\n        bool found55 = false;\n
    \       bool found56 = false;\n        bool found57 = false;\n        bool found58
    = false;\n        bool found59 = false;\n        bool found60 = false;\n        bool
    found61 = false;\n        bool found62 = false;\n        bool found63 = false;\n
    \       bool found64 = false;\n        bool found65 = false;\n        bool found66
    = false;\n        bool found67 = false;\n        bool found68 = false;\n        bool
    found69 = false;\n        bool found70 = false;\n        bool found71 = false;\n
    \       bool found72 = false;\n        bool found73 = false;\n        bool found74
    = false;\n        bool found75 = false;\n        bool found76 = false;\n        bool
    found77 = false;\n        bool found78 = false;\n        bool found79 = false;\n
    \       bool found\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmple0ry_nn.cs(94,19): error CS1002: ; expected

    '
  timestamp: 1659976205
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = str.Length - substring.Length;\n        long startIndex = str.IndexOf(substring,
    start);\n        while (startIndex != -1) {\n            count += 1;\n            start
    += startIndex + substring.Length;\n            startIndex = str.IndexOf(substring,
    start);\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8k_890vz.cs(14,39): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp8k_890vz.cs(14,50): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp8k_890vz.cs(18,38): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp8k_890vz.cs(18,49): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string lowerStr = str.ToLower();\n
    \       string lowerSub = substring.ToLower();\n        foreach (char c in lowerStr)
    {\n            if (lowerSub.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a8e3481a5144b34b3bf513285702a4c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a8e3481a5144b34b3bf513285702a4c>:0
    \n"
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = str.Length - substring.Length;\n        long start2 = str.IndexOf(substring,
    start);\n        while (start2 != -1) {\n            count += 1;\n            start
    = start2 + substring.Length;\n            start2 = str.IndexOf(substring, start);\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1f47wim1.cs(14,35): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp1f47wim1.cs(14,46): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp1f47wim1.cs(18,34): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp1f47wim1.cs(18,45): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                for (int i = 0;
    i < substring.Length; i++) {\n                    if (c == substring[i]) {\n                        count
    += HowManyTimes(str.Substring(i + 1), substring);\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex cannot
    be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c6"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        do {\n
    \           found = false;\n            start = str.IndexOf(substring, start);\n
    \           if (start == -1) break;\n            end = str.IndexOf(substring,
    start + 1);\n            if (end == -1) break;\n            length = end - start
    + 1;\n            count += length;\n            found = true;\n            start++;\n
    \       } while (found && start < str.Length);\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr04f7qlk.cs(18,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpr04f7qlk.cs(18,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpr04f7qlk.cs(20,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpr04f7qlk.cs(20,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long startIndex = 0;\n        long
    endIndex = 0;\n        long index = 0;\n        bool found = false;\n        do
    {\n            index = str.IndexOf(substring, startIndex);\n            if (index
    == -1) {\n                found = true;\n                break;\n            }\n
    \           startIndex = index + 1;\n            endIndex = str.IndexOf(substring,
    startIndex);\n            if (endIndex == -1) {\n                found = true;\n
    \               break;\n            }\n            count++;\n        } while (found);\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpowl54k9s.cs(17,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpowl54k9s.cs(17,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpowl54k9s.cs(23,36): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpowl54k9s.cs(23,47): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    foundStart = false;\n        bool foundEnd = false;\n        bool foundLength
    = false;\n        bool foundSub = false;\n        bool foundSubStart = false;\n
    \       bool foundSubEnd = false;\n        bool foundSubLength = false;\n        bool
    foundSubSub = false;\n        bool foundSubSubStart = false;\n        bool foundSubSubEnd
    = false;\n        bool foundSubSubLength = false;\n        bool foundSubSubSub
    = false;\n        bool foundSubSubSubStart = false;\n        bool foundSubSubSubEnd
    = false;\n        bool foundSubSubSubLength = false;\n        bool foundSubSubSubSub
    = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubSubLength = false;\n        bool foundSubSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubSubLength = false;\n        bool foundSubSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubSubLength = false;\n        bool foundSubSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubSubLength = false;\n        bool foundSubSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubSubLength = false;\n        bool foundSubSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubSubLength = false;\n        bool foundSubSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEnd
    = false;\n        bool foundSubSubSubSubSubLength = false;\n        bool foundSubSubSubSubSubSub
    = false;\n        bool foundSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubEn\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiibkhy2o.cs(65,36): error CS1002: ; expected

    '
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        do {\n
    \           start = str.IndexOf(substring, start + 1);\n            end = str.IndexOf(substring,
    end + 1);\n            if (start != -1 && end != -1) {\n                found
    = true;\n                length = end - start + 1;\n                count += length;\n
    \           }\n        } while (found == false);\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp_o2jwr2.cs(17,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpp_o2jwr2.cs(17,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpp_o2jwr2.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpp_o2jwr2.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            start = str.IndexOf(substring,
    start);\n            if (start == -1) {\n                break;\n            }\n
    \           end = str.IndexOf(substring, start + 1);\n            if (end == -1)
    {\n                end = str.Length;\n            }\n            found = true;\n
    \           count++;\n        } while (end != -1 && !found);\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp97ihsy7s.cs(16,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp97ihsy7s.cs(16,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp97ihsy7s.cs(20,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp97ihsy7s.cs(20,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq26q1qp3.cs(13,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = str.Length - substring.Length;\n        long startPos = 0;\n        long
    endPos = str.Length;\n        bool found = false;\n        do {\n            startPos
    = str.IndexOf(substring, start);\n            endPos = str.IndexOf(substring,
    end);\n            if (startPos < endPos) {\n                found = true;\n                count
    += endPos - startPos + 1;\n                start = startPos + substring.Length;\n
    \           } else {\n                found = false;\n                count +=
    endPos - start;\n                end = endPos;\n            }\n        } while
    (found && start < endPos);\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcqdi3kxi.cs(18,36): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpcqdi3kxi.cs(18,47): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpcqdi3kxi.cs(19,34): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpcqdi3kxi.cs(19,45): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Join(\"\",
    Enumerable.Repeat(substring, str.Length));\n        Regex r = new Regex(pattern);\n
    \       MatchCollection mc = r.Matches(str);\n        foreach (Match m in mc)
    {\n            count++;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==
    (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpywbnzbfe.cs(13,9): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpywbnzbfe.cs(13,23): error CS0246: The type or namespace name ''Regex''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpywbnzbfe.cs(14,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpywbnzbfe.cs(15,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                for (int i = 0;
    i < substring.Length; i++) {\n                    if (c == substring[i]) {\n                        count
    += HowManyTimes(str.Substring(i + 1), substring);\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex cannot
    be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c6"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, 0) > -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50f0c1e529ff43bebfcc925fa9c9a337>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1), substring);\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    startFound = false;\n        bool endFound = false;\n        bool lengthFound
    = false;\n        bool foundStartFound = false;\n        bool foundEndFound =
    false;\n        bool foundLengthFound = false;\n        bool foundStartEndFound
    = false;\n        bool foundStartLengthFound = false;\n        bool foundEndLengthFound
    = false;\n        bool foundStartEndLengthFound = false;\n        bool foundStartLengthEndFound
    = false;\n        bool foundEndLengthStartFound = false;\n        bool foundStartEndLengthEndFound
    = false;\n        bool foundStartLengthEndStartFound = false;\n        bool foundEndLengthStartStartFound
    = false;\n        bool foundStartEndLengthEndStartFound = false;\n        bool
    foundStartLengthEndEndStartFound = false;\n        bool foundEndLengthStartEndStartFound
    = false;\n        bool foundStartEndLengthEndEndStartFound = false;\n        bool
    foundStartLengthEndEndEndStartFound = false;\n        bool foundEndLengthStartEndEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndEndStartFound = false;\n        bool
    foundStartLengthEndEndEndEndEndStartFound = false;\n        bool foundEndLengthStartEndEndEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndEndEndStartFound = false;\n        bool
    foundStartLengthEndEndEndEndEndEndStartFound = false;\n        bool foundEndLengthStartEndEndEndEndEndEndStartFound
    = false;\n        bool foundStartEndLengthEndEndEndEndEndEndStartFound = false;\n
    \       bool foundStartLengthEndEndEndEndEndEndEndEndStartFound = false;\n        bool
    foundEndLengthStartEndEndEndEndEndEndEndStartFound = false;\n        bool foundStartEndLengthEndEndEndEndEndEndEndStartFound
    = false;\n        bool foundStartLengthEndEndEndEndEndEndEndEndEndStartFound =
    false;\n        bool foundEndLengthStartEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundStartLengthEndEndEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundEndLengthStartEndEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundStartEndLengthEndEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundStartLengthEndEndEndEndEndEndEndEndEndEndEndStartFound = false;\n
    \       bool foundEndLengthStartEndEndEndEndEndEndEndEnd\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==
    (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3qnvvsbt.cs(54,57): error CS1002: ; expected

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1), substring);\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1), substring);\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a442e138b0a84045bc5a7fad9159c175>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long len = str.Length;\n        long sublen = substring.Length;\n
    \       while (start < len) {\n            end = str.IndexOf(substring, start);\n
    \           if (end == -1) {\n                break;\n            }\n            count
    += end - start;\n            start = end + sublen;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqtlqk5p7.cs(17,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpqtlqk5p7.cs(17,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    found2 = false;\n        bool found3 = false;\n        bool found4 = false;\n
    \       bool found5 = false;\n        bool found6 = false;\n        bool found7
    = false;\n        bool found8 = false;\n        bool found9 = false;\n        bool
    found10 = false;\n        bool found11 = false;\n        bool found12 = false;\n
    \       bool found13 = false;\n        bool found14 = false;\n        bool found15
    = false;\n        bool found16 = false;\n        bool found17 = false;\n        bool
    found18 = false;\n        bool found19 = false;\n        bool found20 = false;\n
    \       bool found21 = false;\n        bool found22 = false;\n        bool found23
    = false;\n        bool found24 = false;\n        bool found25 = false;\n        bool
    found26 = false;\n        bool found27 = false;\n        bool found28 = false;\n
    \       bool found29 = false;\n        bool found30 = false;\n        bool found31
    = false;\n        bool found32 = false;\n        bool found33 = false;\n        bool
    found34 = false;\n        bool found35 = false;\n        bool found36 = false;\n
    \       bool found37 = false;\n        bool found38 = false;\n        bool found39
    = false;\n        bool found40 = false;\n        bool found41 = false;\n        bool
    found42 = false;\n        bool found43 = false;\n        bool found44 = false;\n
    \       bool found45 = false;\n        bool found46 = false;\n        bool found47
    = false;\n        bool found48 = false;\n        bool found49 = false;\n        bool
    found50 = false;\n        bool found51 = false;\n        bool found52 = false;\n
    \       bool found53 = false;\n        bool found54 = false;\n        bool found55
    = false;\n        bool found56 = false;\n        bool found57 = false;\n        bool
    found58 = false;\n        bool found59 = false;\n        bool found60 = false;\n
    \       bool found61 = false;\n        bool found62 = false;\n        bool found63
    = false;\n        bool found64 = false;\n        bool found65 = false;\n        bool
    found66 = false;\n        bool found67 = false;\n        bool found68 = false;\n
    \       bool found69 = false;\n        bool found70 = false;\n        bool found71
    = false;\n        bool found72 = false;\n        bool found73 = false;\n        bool
    found74 = false;\n        bool found75 = false;\n        bool found76 = false;\n
    \       bool found77 = false;\n        bool found78 = false;\n        bool found79
    = false;\n        bool found\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprh1v25yb.cs(94,19): error CS1002: ; expected

    '
  timestamp: 1659976205
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long start2 = 0;\n        long end2 = 0;\n        bool found
    = false;\n        bool found2 = false;\n        bool found3 = false;\n        bool
    found4 = false;\n        bool found5 = false;\n        bool found6 = false;\n
    \       bool found7 = false;\n        bool found8 = false;\n        bool found9
    = false;\n        bool found10 = false;\n        bool found11 = false;\n        bool
    found12 = false;\n        bool found13 = false;\n        bool found14 = false;\n
    \       bool found15 = false;\n        bool found16 = false;\n        bool found17
    = false;\n        bool found18 = false;\n        bool found19 = false;\n        bool
    found20 = false;\n        bool found21 = false;\n        bool found22 = false;\n
    \       bool found23 = false;\n        bool found24 = false;\n        bool found25
    = false;\n        bool found26 = false;\n        bool found27 = false;\n        bool
    found28 = false;\n        bool found29 = false;\n        bool found30 = false;\n
    \       bool found31 = false;\n        bool found32 = false;\n        bool found33
    = false;\n        bool found34 = false;\n        bool found35 = false;\n        bool
    found36 = false;\n        bool found37 = false;\n        bool found38 = false;\n
    \       bool found39 = false;\n        bool found40 = false;\n        bool found41
    = false;\n        bool found42 = false;\n        bool found43 = false;\n        bool
    found44 = false;\n        bool found45 = false;\n        bool found46 = false;\n
    \       bool found47 = false;\n        bool found48 = false;\n        bool found49
    = false;\n        bool found50 = false;\n        bool found51 = false;\n        bool
    found52 = false;\n        bool found53 = false;\n        bool found54 = false;\n
    \       bool found55 = false;\n        bool found56 = false;\n        bool found57
    = false;\n        bool found58 = false;\n        bool found59 = false;\n        bool
    found60 = false;\n        bool found61 = false;\n        bool found62 = false;\n
    \       bool found63 = false;\n        bool found64 = false;\n        bool found65
    = false;\n        bool found66 = false;\n        bool found67 = false;\n        bool
    found68 = false;\n        bool found69 = false;\n        bool found70 = false;\n
    \       bool found71 = false;\n        bool found72 = false;\n        bool found73
    = false;\n        bool found74 = false;\n        bool found75 = false;\n        bool
    found76 = false;\n        bool found77 = false;\n        bool found78 = false;\n
    \       bool found79\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0c8c1r2j.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            if (str.Contains(c)) {\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d9254a58a93483f84c5146d459f03e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                for (int i = 0;
    i < substring.Length; i++) {\n                    if (c == substring[i]) {\n                        count
    += HowManyTimes(str.Substring(i + 1), substring);\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6fd4936fb2b42d0bec8f6779bf1b359>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex cannot
    be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c6"
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string lowerCaseSubstring
    = substring.ToLower();\n        string lowerCaseStr = str.ToLower();\n        foreach
    (char c in lowerCaseSubstring) {\n            if (lowerCaseStr.Contains(c)) {\n
    \               count++;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            found = false;\n
    \           start = str.IndexOf(substring, start);\n            if (start != -1)
    {\n                end = str.IndexOf(substring, start + 1);\n                if
    (end != -1) {\n                    found = true;\n                    count++;\n
    \               }\n            }\n            start++;\n        } while (found
    == false);\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpko_1bj66.cs(17,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpko_1bj66.cs(17,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpko_1bj66.cs(19,35): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpko_1bj66.cs(19,46): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string lowerCaseSubstring
    = substring.ToLower();\n        string lowerCaseStr = str.ToLower();\n        foreach
    (char c in lowerCaseSubstring) {\n            if (lowerCaseStr.Contains(c)) {\n
    \               count++;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <15b55125b922493f8be4000d842afa70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    first = true;\n        bool last = true;\n        bool firstLast = true;\n        bool
    lastFirst = true;\n        bool firstLastLast = true;\n        bool lastFirstFirst
    = true;\n        bool firstLastLastFirst = true;\n        bool lastFirstFirstLast
    = true;\n        bool lastFirstLastFirst = true;\n        bool lastFirstLastFirstLast
    = true;\n        bool lastFirstLastFirstLastLast = true;\n        bool lastFirstLastFirstLastLastLast
    = true;\n        bool lastFirstLastFirstLastLastLastLast = true;\n        bool
    lastFirstLastFirstLastLastLastLastLast = true;\n        bool lastFirstLastFirstLastLastLastLastLastLast
    = true;\n        bool lastFirstLastFirstLastLastLastLastLastLast = true;\n        bool
    lastFirstLastFirstLastLastLastLastLastLastLast = true;\n        bool lastFirstLastFirstLastLastLastLastLastLastLast
    = true;\n        bool lastFirstLastFirstLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLast = true;\n        bool
    lastFirstLastFirstLastLastLastLastLastLastLastLast = true;\n        bool lastFirstLastFirstLastLastLastLastLastLastLastLast
    = true;\n        bool lastFirstLastFirstLastLastLastLastLastLastLastLastLast =
    true;\n        bool lastFirstLastFirstLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLast = true;\n
    \       bool lastFirstLastFirstLastLastLastLastLastLastLastLastLastLastLast =
    true;\n        bool lastFirst\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgmbjx15t.cs(52,23): error CS1002: ; expected

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c) != -1 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <260e66f4b03f40b985cb72ec7b4d6a5d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            else if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n            else {\n                count += HowManyTimes(str.Substring(0,
    str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1), substring);\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n
    \   Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f5d5c04e689434f840bf3a2579767f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            found = false;\n
    \           start = str.IndexOf(substring, start);\n            if (start == -1)
    break;\n            end = str.IndexOf(substring, start + 1);\n            if (end
    == -1) break;\n            count++;\n            found = true;\n        } while
    (end != -1);\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy_z03t59.cs(17,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpy_z03t59.cs(17,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpy_z03t59.cs(19,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpy_z03t59.cs(19,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpy_z03t59.cs(14,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        long start2 = 0;\n        long
    end2 = 0;\n        bool found2 = false;\n        long start3 = 0;\n        long
    end3 = 0;\n        bool found3 = false;\n        long start4 = 0;\n        long
    end4 = 0;\n        bool found4 = false;\n        long start5 = 0;\n        long
    end5 = 0;\n        bool found5 = false;\n        long start6 = 0;\n        long
    end6 = 0;\n        bool found6 = false;\n        long start7 = 0;\n        long
    end7 = 0;\n        bool found7 = false;\n        long start8 = 0;\n        long
    end8 = 0;\n        bool found8 = false;\n        long start9 = 0;\n        long
    end9 = 0;\n        bool found9 = false;\n        long start10 = 0;\n        long
    end10 = 0;\n        bool found10 = false;\n        long start11 = 0;\n        long
    end11 = 0;\n        bool found11 = false;\n        long start12 = 0;\n        long
    end12 = 0;\n        bool found12 = false;\n        long start13 = 0;\n        long
    end13 = 0;\n        bool found13 = false;\n        long start14 = 0;\n        long
    end14 = 0;\n        bool found14 = false;\n        long start15 = 0;\n        long
    end15 = 0;\n        bool found15 = false;\n        long start16 = 0;\n        long
    end16 = 0;\n        bool found16 = false;\n        long start17 = 0;\n        long
    end17 = 0;\n        bool found17 = false;\n        long start18 = 0;\n        long
    end18 = 0;\n        bool found18 = false;\n        long start19 = 0;\n        long
    end19 = 0;\n        bool found19 = false;\n        long start20 = 0;\n        long
    end20 = 0;\n        bool found20 = false;\n        long start21 = 0;\n        long
    end21 = 0;\n        bool found21 = false;\n        long start22 = 0;\n        long
    end22 = 0;\n        bool found22 = false;\n        long start23 = 0;\n        long
    end23 = 0;\n        bool found23 = false;\n        long start24 = 0;\n        long
    end24 = 0;\n        bool found24 = false;\n        long start25 = 0;\n        long
    end25 = 0;\n        bool found25 = false;\n        long start26 = 0;\n        long
    end26 = 0;\n        bool found26 = false;\n        long start27 = 0;\n        long
    end27 = 0;\n        bool found27 = false;\n        long start28 = 0;\n        long
    end28 = 0;\n        bool found28 = false;\n        long start29 = 0;\n        long
    end29 = 0;\n        bool \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcy0kszzt.cs(98,13): error CS1001: Identifier expected

    /tmp/tmpcy0kszzt.cs(98,13): error CS1002: ; expected

    '
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, str.Length - substring.Length);\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32
    startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String
    str, System.String substring) [0x00023] in <ada7bf659c1b44009858f925d629683b>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ada7bf659c1b44009858f925d629683b>:0
    \n"
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    isOverlap = false;\n        bool isOverlap2 = false;\n        bool isOverlap3
    = false;\n        bool isOverlap4 = false;\n        bool isOverlap5 = false;\n
    \       bool isOverlap6 = false;\n        bool isOverlap7 = false;\n        bool
    isOverlap8 = false;\n        bool isOverlap9 = false;\n        bool isOverlap10
    = false;\n        bool isOverlap11 = false;\n        bool isOverlap12 = false;\n
    \       bool isOverlap13 = false;\n        bool isOverlap14 = false;\n        bool
    isOverlap15 = false;\n        bool isOverlap16 = false;\n        bool isOverlap17
    = false;\n        bool isOverlap18 = false;\n        bool isOverlap19 = false;\n
    \       bool isOverlap20 = false;\n        bool isOverlap21 = false;\n        bool
    isOverlap22 = false;\n        bool isOverlap23 = false;\n        bool isOverlap24
    = false;\n        bool isOverlap25 = false;\n        bool isOverlap26 = false;\n
    \       bool isOverlap27 = false;\n        bool isOverlap28 = false;\n        bool
    isOverlap29 = false;\n        bool isOverlap30 = false;\n        bool isOverlap31
    = false;\n        bool isOverlap32 = false;\n        bool isOverlap33 = false;\n
    \       bool isOverlap34 = false;\n        bool isOverlap35 = false;\n        bool
    isOverlap36 = false;\n        bool isOverlap37 = false;\n        bool isOverlap38
    = false;\n        bool isOverlap39 = false;\n        bool isOverlap40 = false;\n
    \       bool isOverlap41 = false;\n        bool isOverlap42 = false;\n        bool
    isOverlap43 = false;\n        bool isOverlap44 = false;\n        bool isOverlap45
    = false;\n        bool isOverlap46 = false;\n        bool isOverlap47 = false;\n
    \       bool isOverlap48 = false;\n        bool isOverlap49 = false;\n        bool
    isOverlap50 = false;\n        bool isOverlap51 = false;\n        bool isOverlap52
    = false;\n        bool isOverlap53 = false;\n        bool isOverlap54 = false;\n
    \       bool isOverlap55 = false;\n        bool isOverlap56 = false;\n        bool
    isOverlap57 = false;\n        bool isOverlap58 = false;\n        bool isOverlap59
    = false;\n        bool isOverlap60 = false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxzyfcf4e.cs(11,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(12,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(13,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpxzyfcf4e.cs(14,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(15,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(16,14): warning CS0219: The variable ''isOverlap'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(17,14): warning CS0219: The variable ''isOverlap2'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(18,14): warning CS0219: The variable ''isOverlap3'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(19,14): warning CS0219: The variable ''isOverlap4'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(20,14): warning CS0219: The variable ''isOverlap5'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(21,14): warning CS0219: The variable ''isOverlap6'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(22,14): warning CS0219: The variable ''isOverlap7'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(23,14): warning CS0219: The variable ''isOverlap8'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(24,14): warning CS0219: The variable ''isOverlap9'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(25,14): warning CS0219: The variable ''isOverlap10'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(26,14): warning CS0219: The variable ''isOverlap11'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(27,14): warning CS0219: The variable ''isOverlap12'' is assigned
    but its value is never used

    /tmp/tmpxzyfcf4e.cs(28,14): warning CS0219: The variable ''isOverlap13'' is a'
  timestamp: 1659976207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        string pattern = string.Format(\"(?<=^|[{0}]){1}(?=$|[{0}])\",
    Regex.Escape(substring), Regex.Escape(substring));\n        MatchCollection matches
    = Regex.Matches(str, pattern);\n        foreach (Match match in matches) {\n            count
    += match.Groups[1].Length;\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4yu2417h.cs(12,70): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp4yu2417h.cs(12,95): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp4yu2417h.cs(13,9): error CS0246: The type or namespace name ''MatchCollection''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp4yu2417h.cs(13,35): error CS0103: The name ''Regex'' does not exist in
    the current context

    /tmp/tmp4yu2417h.cs(14,18): error CS0246: The type or namespace name ''Match''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in substring)
    {\n            count += str.IndexOf(c, StringComparison.OrdinalIgnoreCase) >=
    0 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"),
    (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\"))
    == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <664ab4b072784d5db791b5dd7eeb4a2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        long length = 0;\n        bool found = false;\n        bool
    startFound = false;\n        bool endFound = false;\n        bool lengthFound
    = false;\n        bool foundAll = false;\n        bool foundAllStart = false;\n
    \       bool foundAllEnd = false;\n        bool foundAllLength = false;\n        bool
    foundAllAll = false;\n        bool foundAllAllStart = false;\n        bool foundAllAllEnd
    = false;\n        bool foundAllAllLength = false;\n        bool foundAllAllAll
    = false;\n        bool foundAllAllAllStart = false;\n        bool foundAllAllAllEnd
    = false;\n        bool foundAllAllAllLength = false;\n        bool foundAllAllAllAll
    = false;\n        bool foundAllAllAllAllStart = false;\n        bool foundAllAllAllAllEnd
    = false;\n        bool foundAllAllAllAllLength = false;\n        bool foundAllAllAllAllAll
    = false;\n        bool foundAllAllAllAllAllStart = false;\n        bool foundAllAllAllAllAllEnd
    = false;\n        bool foundAllAllAllAllAllLength = false;\n        bool foundAllAllAllAllAllAll
    = false;\n        bool foundAllAllAllAllAllAllStart = false;\n        bool foundAllAllAllAllAllAllEnd
    = false;\n        bool foundAllAllAllAllAllAllLength = false;\n        bool foundAllAllAllAllAllAllAll
    = false;\n        bool foundAllAllAllAllAllAllAllStart = false;\n        bool
    foundAllAllAllAllAllAllAllEnd = false;\n        bool foundAllAllAllAllAllAllAllLength
    = false;\n        bool foundAllAllAllAllAllAllAllAll = false;\n        bool foundAllAllAllAllAllAllAllAllStart
    = false;\n        bool foundAllAllAllAllAllAllAllAllEnd = false;\n        bool
    foundAllAllAllAllAllAllAllAllLength = false;\n        bool foundAllAllAllAllAllAllAllAllAll
    = false;\n        bool foundAllAllAllAllAllAllAllAllAllStart = false;\n        bool
    foundAllAllAllAllAllAllAllAllAllEnd = false;\n        bool foundAllAllAllAllAllAllAllAllAllLength
    = false;\n        bool foundAllAllAllAllAllAllAllAllAllAll = false;\n        bool
    foundAllAllAllAllAllAllAllAllAllAllStart = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllEnd
    = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllLength = false;\n        bool
    foundAllAllAllAllAllAllAllAllAllAllAll = false;\n        bool foundAll\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpogstfj05.cs(60,22): error CS1002: ; expected

    '
  timestamp: 1659976207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        foreach (char c in str)
    {\n            if (c == substring[0]) {\n                count += HowManyTimes(str.Substring(1,
    str.Length - 1), substring);\n            }\n            if (c == substring[substring.Length
    - 1]) {\n                count += HowManyTimes(str.Substring(0, str.Length - 1),
    substring);\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\"))
    == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),
    (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"))
    == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7208b63ab2b044f9a8d0f2bfe7aa6719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976206
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Find how many times a given substring can be found in the original
    string. Count overlaping cases.\n    public static long HowManyTimes(string str,
    string substring) {\n        long count = 0;\n        long start = 0;\n        long
    end = 0;\n        bool found = false;\n        do {\n            start = str.IndexOf(substring,
    start);\n            if (start == -1) break;\n            end = str.IndexOf(substring,
    start + 1);\n            if (end == -1) break;\n            found = true;\n            count
    += end - start + 1;\n            start = end + 1;\n        } while (found);\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"),
    (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n
    \   Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john
    doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7vlzetld.cs(16,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp7vlzetld.cs(16,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp7vlzetld.cs(18,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp7vlzetld.cs(18,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976206

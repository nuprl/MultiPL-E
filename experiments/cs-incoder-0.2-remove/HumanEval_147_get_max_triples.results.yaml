language: cs
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long triples = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                        a[i]
    = a[j];\n                        a[j] = a[k];\n                        a[k] =
    a[i];\n                        a[i] = a[j];\n                        a[j] = a[k];\n
    \                       a[k] = a[i];\n                        a[i] = a[j];\n                        a[j]
    = a[k];\n                        a[k] = a[i];\n                        a[i] =
    a[j];\n                        a[j] = a[k];\n                        a[k] = a[i];\n
    \                       a[i] = a[j];\n                        a[j] = a[k];\n                        a[k]
    = a[i];\n                        a[i] = a[j];\n                        a[j] =
    a[k];\n                        a[k] = a[i];\n                        a[i] = a[j];\n
    \                       a[j] = a[k];\n                        a[k] = a[i];\n                        a[i]
    = a[j];\n                        a[j] = a[k];\n                        a[k] =
    a[i];\n                        a[i] = a[j];\n                        a[j] = a[k];\n
    \                       a[k] = a[i];\n                        a[i] = a[j];\n                        a[j]
    = a[k];\n                        a[k] = a[i];\n                        a[i] =
    a[j];\n                        a[j] = a[k];\n                        a[k] = a[i];\n
    \                       a[i] = a[j];\n                        a[j] = a[k];\n                        a[k]
    = a[i];\n                        a[i] = a[j];\n                        a[j] =
    a[k];\n                        a[k] = a[i];\n                        a[i] = a[j];\n
    \                       a[j] = a[k];\n                        a[k] = a[i];\n                        a[i]
    = a[j];\n                        a[j] = a[k];\n                        a[k] =
    a[i];\n                        a[i] = a[j];\n                        a[j] = a[k];\n
    \                       a[k] = a[i];\n                        a[i] = a[j];\n                        a[j]
    = a[k];\n                        a[k] = a[i];\n                        a[i] =
    a[j];\n                        a[j] = a[k];\n                        a[k] = a[i];\n
    \                       a[i] = a[j];\n                        a[j] = a[k];\n                        a[k]
    = a[i];\n                        a[i] = a[j];\n                        a[j] =
    a[k];\n                        a[k] = a[i];\n                        a[i] = a[j];\n
    \                       \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaca9pz4d.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpaca9pz4d.cs(96,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpaca9pz4d.cs(103,2): error CS1513: } expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd1zraoj2.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpd1zraoj2.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpd1zraoj2.cs(20,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(21,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(22,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(23,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(24,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(25,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(26,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(27,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(28,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(29,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(30,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(31,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(32,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(33,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(34,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(35,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(36,14): warning CS0219: The variab'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long min2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long min3 = 0;\n        long count3 = 0;\n        long sum4
    = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long count4 = 0;\n
    \       long sum5 = 0;\n        long max5 = 0;\n        long min5 = 0;\n        long
    count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long min6
    = 0;\n        long count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n
    \       long min7 = 0;\n        long count7 = 0;\n        long sum8 = 0;\n        long
    max8 = 0;\n        long min8 = 0;\n        long count8 = 0;\n        long sum9
    = 0;\n        long max9 = 0;\n        long min9 = 0;\n        long count9 = 0;\n
    \       long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n        long
    count10 = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11
    = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long max12 =
    0;\n        long min12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long min13 = 0;\n        long count13 = 0;\n
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n        long
    count14 = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long min15
    = 0;\n        long count15 = 0;\n        long sum16 = 0;\n        long max16 =
    0;\n        long min16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long min17 = 0;\n        long count17 = 0;\n
    \       long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n        long
    count18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long max20 =
    0;\n        long min20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long min21 = 0;\n        long count21 = 0;\n
    \       long sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppt38u5cn.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmppt38u5cn.cs(106,13): error CS1001: Identifier expected

    /tmp/tmppt38u5cn.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long max
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k]) {\n                        count++;\n
    \                   }\n                    if (a[j] < a[i] && a[j] < a[k]) {\n
    \                       count++;\n                    }\n                    if
    (a[k] < a[i] && a[k] < a[j]) {\n                        count++;\n                    }\n
    \                   if (a[i] > a[j] && a[i] > a[k]) {\n                        count++;\n
    \                   }\n                    if (a[j] > a[i] && a[j] > a[k]) {\n
    \                       count++;\n                    }\n                    if
    (a[k] > a[i] && a[k] > a[j]) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        if (count > max) {\n            max
    = count;\n        }\n        return max;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz_feasve.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpz_feasve.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(24,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(29,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(29,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(29,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(29,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(32,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(32,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(32,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(32,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(35,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(35,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(35,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(35,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(38,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(38,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(38,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz_feasve.cs(38,47): error CS0021: Cannot apply indexi'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[j] < a[k]) {\n                        ans
    += 1;\n                    }\n                }\n            }\n        }\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9vnod886.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp9vnod886.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9vnod886.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9vnod886.cs(32,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9vnod886.cs(32,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9vnod886.cs(32,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9vnod886.cs(32,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxTriples
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxdge612b.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpxdge612b.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpxdge612b.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpxdge612b.cs(21,14): warning CS0219: The variable ''maxTriples'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(22,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(23,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(24,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(25,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(26,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(27,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(28,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(29,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(30,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(31,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(32,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(33,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(34,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(35,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpxdge612b.cs(36,14): warning CS0'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        for (int i = 1; i <= n; i++) {\n            a[i - 1] = (i * i -
    i + 1);\n            sum += a[i - 1];\n            if (sum > max) {\n                max
    = sum;\n                count = 0;\n            }\n            if (sum == max)
    {\n                count++;\n            }\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ghb7zji.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpli5hqaa3.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        for (int i = 1; i <= n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n                temp = i;\n            }\n        }\n        long count
    = 0;\n        for (int i = 1; i <= n; i++) {\n            if (temp == i) {\n                count++;\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprdez7v4a.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] + a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <611855b548384ebc9282ce097f7613e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <611855b548384ebc9282ce097f7613e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp1lxpww7.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpp1lxpww7.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \       }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    long temp = a[i] + a[j] + a[k];\n                    if
    (temp % 3 == 0) {\n                        count++;\n                        if
    (temp > max) {\n                            max = temp;\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqu1pzl00.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd1zraoj2.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpd1zraoj2.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpd1zraoj2.cs(20,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(21,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(22,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(23,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(24,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(25,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(26,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(27,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(28,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(29,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(30,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(31,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(32,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(33,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(34,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(35,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(36,14): warning CS0219: The variab'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long temp
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k]) {\n                        temp
    = a[i];\n                        a[i] = a[j];\n                        a[j] =
    temp;\n                    }\n                    if (a[j] < a[k]) {\n                        temp
    = a[j];\n                        a[j] = a[k];\n                        a[k] =
    temp;\n                    }\n                    if (a[i] > a[j] && a[i] > a[k])
    {\n                        temp = a[i];\n                        a[i] = a[j];\n
    \                       a[j] = temp;\n                    }\n                    if
    (a[k] > a[j]) {\n                        temp = a[k];\n                        a[k]
    = a[j];\n                        a[j] = temp;\n                    }\n                    if
    (a[i] < a[j] && a[j] < a[k] && a[k] < a[i]) {\n                        temp =
    a[i];\n                        a[i] = a[j];\n                        a[j] = a[k];\n
    \                       a[k] = temp;\n                    }\n                    if
    (a[i] > a[j] && a[j] > a[k] && a[k] > a[i]) {\n                        temp =
    a[i];\n                        a[i] = a[j];\n                        a[j] = a[k];\n
    \                       a[k] = temp;\n                    }\n                }\n
    \           }\n        }\n        long max = 0;\n        for (int i = 0; i < n;
    i++) {\n            if (a[i] % 3 == 0) {\n                count++;\n                if
    (a[i] > max) {\n                    max = a[i];\n                }\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpevm8zoq_.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long sum2
    = 0;\n        long temp2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n
    \       long sum4 = 0;\n        long temp4 = 0;\n        long sum5 = 0;\n        long
    temp5 = 0;\n        long sum6 = 0;\n        long temp6 = 0;\n        long sum7
    = 0;\n        long temp7 = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n
    \       long sum9 = 0;\n        long temp9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long sum11 = 0;\n        long temp11 = 0;\n        long sum12
    = 0;\n        long temp12 = 0;\n        long sum13 = 0;\n        long temp13 =
    0;\n        long sum14 = 0;\n        long temp14 = 0;\n        long sum15 = 0;\n
    \       long temp15 = 0;\n        long sum16 = 0;\n        long temp16 = 0;\n
    \       long sum17 = 0;\n        long temp17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long sum19 = 0;\n        long temp19 = 0;\n        long sum20
    = 0;\n        long temp20 = 0;\n        long sum21 = 0;\n        long temp21 =
    0;\n        long sum22 = 0;\n        long temp22 = 0;\n        long sum23 = 0;\n
    \       long temp23 = 0;\n        long sum24 = 0;\n        long temp24 = 0;\n
    \       long sum25 = 0;\n        long temp25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long sum27 = 0;\n        long temp27 = 0;\n        long sum28
    = 0;\n        long temp28 = 0;\n        long sum29 = 0;\n        long temp29 =
    0;\n        long sum30 = 0;\n        long temp30 = 0;\n        long sum31 = 0;\n
    \       long temp31 = 0;\n        long sum32 = 0;\n        long temp32 = 0;\n
    \       long sum33 = 0;\n        long temp33 = 0;\n        long sum34 = 0;\n        long
    temp34 = 0;\n        long sum35 = 0;\n        long temp35 = 0;\n        long sum36
    = 0;\n        long temp36 = 0;\n        long sum37 = 0;\n        long temp37 =
    0;\n        long sum38 = 0;\n        long temp38 = 0;\n        long sum39 = 0;\n
    \       long temp39 = 0;\n        long sum40 = 0;\n        long temp40 = 0;\n
    \       long sum41 = 0;\n        long temp41 = 0;\n        long sum42 = 0;\n        long
    temp42 = 0;\n        long sum43 = 0;\n        long temp\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7vadsu0z.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7vadsu0z.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxSum
    = 0;\n        long maxSum2 = 0;\n        long maxSum3 = 0;\n        long maxSum4
    = 0;\n        long maxSum5 = 0;\n        long maxSum6 = 0;\n        long maxSum7
    = 0;\n        long maxSum8 = 0;\n        long maxSum9 = 0;\n        long maxSum10
    = 0;\n        long maxSum11 = 0;\n        long maxSum12 = 0;\n        long maxSum13
    = 0;\n        long maxSum14 = 0;\n        long maxSum15 = 0;\n        long maxSum16
    = 0;\n        long maxSum17 = 0;\n        long maxSum18 = 0;\n        long maxSum19
    = 0;\n        long maxSum20 = 0;\n        long maxSum21 = 0;\n        long maxSum22
    = 0;\n        long maxSum23 = 0;\n        long maxSum24 = 0;\n        long maxSum25
    = 0;\n        long maxSum26 = 0;\n        long maxSum27 = 0;\n        long maxSum28
    = 0;\n        long maxSum29 = 0;\n        long maxSum30 = 0;\n        long maxSum31
    = 0;\n        long maxSum32 = 0;\n        long maxSum33 = 0;\n        long maxSum34
    = 0;\n        long maxSum35 = 0;\n        long maxSum36 = 0;\n        long maxSum37
    = 0;\n        long maxSum38 = 0;\n        long maxSum39 = 0;\n        long maxSum40
    = 0;\n        long maxSum41 = 0;\n        long maxSum42 = 0;\n        long maxSum43
    = 0;\n        long maxSum44 = 0;\n        long maxSum45 = 0;\n        long maxSum46
    = 0;\n        long maxSum47 = 0;\n        long maxSum48 = 0;\n        long maxSum49
    = 0;\n        long maxSum50 = 0;\n        long maxSum51 = 0;\n        long maxSum52
    = 0;\n        long maxSum53 = 0;\n        long maxSum54 = 0;\n        long maxSum55
    = 0;\n        long maxSum56 = 0;\n        long maxSum57 = 0;\n        long maxSum58
    = 0;\n        long maxSum59 = 0;\n        long maxSum60 = 0;\n        long maxSum61
    = 0;\n        long maxSum62 = 0;\n        long maxSum63 = 0;\n        long maxSum64
    = 0;\n        long maxSum65 = 0;\n        long maxSum66 = 0;\n        long maxSum67
    = 0;\n        long maxSum68 = 0;\n        long maxSum69 = 0;\n        long maxSum70
    = 0;\n        long maxSum71 = 0;\n        long \n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_sjjo4hs.cs(92,13): error CS1001: Identifier expected

    /tmp/tmp_sjjo4hs.cs(92,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n
    \           a[i] = i * i - i + 1;\n            sum += a[i];\n        }\n        long
    max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    (a[i] == a[j] && a[j] == a[k]) {\n                        long temp = a[i] + a[j]
    + a[k];\n                        if (temp % 3 == 0) {\n                            max
    = Math.Max(max, temp);\n                        }\n                    }\n                }\n
    \           }\n        }\n        return max;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmaicw0w5.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpmaicw0w5.cs(21,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(22,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,41): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,49): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(29,37): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(29,44): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(29,51): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long min3 = 0;\n        long
    sum4 = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long sum5 =
    0;\n        long max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long
    max6 = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 =
    0;\n        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long min9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n
    \       long sum11 = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long
    sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n        long sum13
    = 0;\n        long max13 = 0;\n        long min13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long min14 = 0;\n        long sum15 = 0;\n        long
    max15 = 0;\n        long min15 = 0;\n        long sum16 = 0;\n        long max16
    = 0;\n        long min16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n
    \       long min17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    min18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n
    \       long sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long
    sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23
    = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n        long
    max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n        long max26
    = 0;\n        long min26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n
    \       long min27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    min28 = 0;\n        long sum29 = 0;\n        long max29 = 0;\n        long min\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptwqtgbrm.cs(105,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long sum2
    = 0;\n        long temp2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n
    \       long sum4 = 0;\n        long temp4 = 0;\n        long sum5 = 0;\n        long
    temp5 = 0;\n        long sum6 = 0;\n        long temp6 = 0;\n        long sum7
    = 0;\n        long temp7 = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n
    \       long sum9 = 0;\n        long temp9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long sum11 = 0;\n        long temp11 = 0;\n        long sum12
    = 0;\n        long temp12 = 0;\n        long sum13 = 0;\n        long temp13 =
    0;\n        long sum14 = 0;\n        long temp14 = 0;\n        long sum15 = 0;\n
    \       long temp15 = 0;\n        long sum16 = 0;\n        long temp16 = 0;\n
    \       long sum17 = 0;\n        long temp17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long sum19 = 0;\n        long temp19 = 0;\n        long sum20
    = 0;\n        long temp20 = 0;\n        long sum21 = 0;\n        long temp21 =
    0;\n        long sum22 = 0;\n        long temp22 = 0;\n        long sum23 = 0;\n
    \       long temp23 = 0;\n        long sum24 = 0;\n        long temp24 = 0;\n
    \       long sum25 = 0;\n        long temp25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long sum27 = 0;\n        long temp27 = 0;\n        long sum28
    = 0;\n        long temp28 = 0;\n        long sum29 = 0;\n        long temp29 =
    0;\n        long sum30 = 0;\n        long temp30 = 0;\n        long sum31 = 0;\n
    \       long temp31 = 0;\n        long sum32 = 0;\n        long temp32 = 0;\n
    \       long sum33 = 0;\n        long temp33 = 0;\n        long sum34 = 0;\n        long
    temp34 = 0;\n        long sum35 = 0;\n        long temp35 = 0;\n        long sum36
    = 0;\n        long temp36 = 0;\n        long sum37 = 0;\n        long temp37 =
    0;\n        long sum38 = 0;\n        long temp38 = 0;\n        long sum39 = 0;\n
    \       long temp39 = 0;\n        long sum40 = 0;\n        long temp40 = 0;\n
    \       long sum41 = 0;\n        long temp41 = 0;\n        long sum42 = 0;\n        long
    temp42 = 0;\n        long sum43 = 0;\n        long temp\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7vadsu0z.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7vadsu0z.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxTriples
    = 0;\n        long maxTriple = 0;\n        long maxTripleSum = 0;\n        long
    maxTripleSum2 = 0;\n        long maxTripleSum3 = 0;\n        long maxTripleSum4
    = 0;\n        long maxTripleSum5 = 0;\n        long maxTripleSum6 = 0;\n        long
    maxTripleSum7 = 0;\n        long maxTripleSum8 = 0;\n        long maxTripleSum9
    = 0;\n        long maxTripleSum10 = 0;\n        long maxTripleSum11 = 0;\n        long
    maxTripleSum12 = 0;\n        long maxTripleSum13 = 0;\n        long maxTripleSum14
    = 0;\n        long maxTripleSum15 = 0;\n        long maxTripleSum16 = 0;\n        long
    maxTripleSum17 = 0;\n        long maxTripleSum18 = 0;\n        long maxTripleSum19
    = 0;\n        long maxTripleSum20 = 0;\n        long maxTripleSum21 = 0;\n        long
    maxTripleSum22 = 0;\n        long maxTripleSum23 = 0;\n        long maxTripleSum24
    = 0;\n        long maxTripleSum25 = 0;\n        long maxTripleSum26 = 0;\n        long
    maxTripleSum27 = 0;\n        long maxTripleSum28 = 0;\n        long maxTripleSum29
    = 0;\n        long maxTripleSum30 = 0;\n        long maxTripleSum31 = 0;\n        long
    maxTripleSum32 = 0;\n        long maxTripleSum33 = 0;\n        long maxTripleSum34
    = 0;\n        long maxTripleSum35 = 0;\n        long maxTripleSum36 = 0;\n        long
    maxTripleSum37 = 0;\n        long maxTripleSum38 = 0;\n        long maxTripleSum39
    = 0;\n        long maxTripleSum40 = 0;\n        long maxTripleSum41 = 0;\n        long
    maxTripleSum42 = 0;\n        long maxTripleSum43 = 0;\n        long maxTripleSum44
    = 0;\n        long maxTripleSum45 = 0;\n        long maxTripleSum46 = 0;\n        long
    maxTripleSum47 = 0;\n        long maxTripleSum48 = 0;\n        long maxTripleSum49
    = 0;\n        long maxTripleSum50 = 0;\n        long maxTripleSum51 = 0;\n        long
    maxTripleSum52 = 0;\n        long maxTripleSum53 = 0;\n        long maxTripleSum54
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2_s4agdn.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp2_s4agdn.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp2_s4agdn.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp2_s4agdn.cs(21,14): warning CS0219: The variable ''maxTriples'' is assigned
    but its value is never used

    /tmp/tmp2_s4agdn.cs(22,14): warning CS0219: The variable ''maxTriple'' is assigned
    but its value is never used

    /tmp/tmp2_s4agdn.cs(23,14): warning CS0219: The variable ''maxTripleSum'' is assigned
    but its value is never used

    /tmp/tmp2_s4agdn.cs(24,14): warning CS0219: The variable ''maxTripleSum2'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(25,14): warning CS0219: The variable ''maxTripleSum3'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(26,14): warning CS0219: The variable ''maxTripleSum4'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(27,14): warning CS0219: The variable ''maxTripleSum5'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(28,14): warning CS0219: The variable ''maxTripleSum6'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(29,14): warning CS0219: The variable ''maxTripleSum7'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(30,14): warning CS0219: The variable ''maxTripleSum8'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(31,14): warning CS0219: The variable ''maxTripleSum9'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(32,14): warning CS0219: The variable ''maxTripleSum10'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(33,14): warning CS0219: The variable ''maxTripleSum11'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(34,14): warning CS0219: The variable ''maxTripleSum12'' is
    assigned but its value is never used

    /tmp/tmp2_s4agdn.cs(35,14): warning CS0219: Th'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long sumOfSquares
    = 0;\n        long sumOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares = 0;\n
    \       long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares = 0;\n
    \       long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxh2c46vo.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpxh2c46vo.cs(32,14): error CS0128: A local variable or function named ''sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmpxh2c46vo.cs(34,14): error CS0128: A local variable or function named ''sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmpxh2c46vo.cs(36,14): error CS0128: A local variable or function named ''sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmpxh2c46vo.cs(37,14): error CS0128: A local variable or function named ''sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmpxh2c46vo.cs(39,14): error CS0128: A local variable or function named ''sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmpxh2c46vo.cs(40,14): error CS0128: A local variable or function named ''sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmpxh2c46vo.cs(41,14): error CS0128: A local variable or function named ''sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmpxh2c46vo.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpxh2c46vo.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpxh2c46vo.cs(21,14): warning CS0219: The variable ''sumOfSquares'' is assigned '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long max
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqyavr6do.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpqyavr6do.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpqyavr6do.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long sum2
    = 0;\n        long max2 = 0;\n        long sum3 = 0;\n        long max3 = 0;\n
    \       long sum4 = 0;\n        long max4 = 0;\n        long sum5 = 0;\n        long
    max5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long sum7 =
    0;\n        long max7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    sum9 = 0;\n        long max9 = 0;\n        long sum10 = 0;\n        long max10
    = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long sum12 = 0;\n
    \       long max12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n        long
    sum14 = 0;\n        long max14 = 0;\n        long sum15 = 0;\n        long max15
    = 0;\n        long sum16 = 0;\n        long max16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    sum19 = 0;\n        long max19 = 0;\n        long sum20 = 0;\n        long max20
    = 0;\n        long sum21 = 0;\n        long max21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long sum23 = 0;\n        long max23 = 0;\n        long
    sum24 = 0;\n        long max24 = 0;\n        long sum25 = 0;\n        long max25
    = 0;\n        long sum26 = 0;\n        long max26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    sum29 = 0;\n        long max29 = 0;\n        long sum30 = 0;\n        long max30
    = 0;\n        long sum31 = 0;\n        long max31 = 0;\n        long sum32 = 0;\n
    \       long max32 = 0;\n        long sum33 = 0;\n        long max33 = 0;\n        long
    sum34 = 0;\n        long max34 = 0;\n        long sum35 = 0;\n        long max35
    = 0;\n        long sum36 = 0;\n        long max36 = 0;\n        long sum37 = 0;\n
    \       long max37 = 0;\n        long sum38 = 0;\n        long max38 = 0;\n        long
    sum39 = 0;\n        long max39 = 0;\n        long sum40 = 0;\n        long max40
    = 0;\n        long sum41 = 0;\n        long max41 = 0;\n        long sum42 = 0;\n
    \       long max42 = 0;\n        long sum43 = 0;\n        long max\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk0q0bfkc.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpk0q0bfkc.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxSum
    = 0;\n        long maxSumTriples = 0;\n        long maxTriples = 0;\n        long
    maxTriplesSum = 0;\n        long maxTriplesSumTriples = 0;\n        long maxTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriples = 0;\n        long maxTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriples = 0;\n        long
    maxTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n
    \       long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long
    maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples = 0;\n        long
    maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long
    maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long
    maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples = 0;\n
    \       long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTri\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp74agqm8h.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp74agqm8h.cs(42,100): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long sum2
    = 0;\n        long max2 = 0;\n        long sum3 = 0;\n        long max3 = 0;\n
    \       long sum4 = 0;\n        long max4 = 0;\n        long sum5 = 0;\n        long
    max5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long sum7 =
    0;\n        long max7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    sum9 = 0;\n        long max9 = 0;\n        long sum10 = 0;\n        long max10
    = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long sum12 = 0;\n
    \       long max12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n        long
    sum14 = 0;\n        long max14 = 0;\n        long sum15 = 0;\n        long max15
    = 0;\n        long sum16 = 0;\n        long max16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    sum19 = 0;\n        long max19 = 0;\n        long sum20 = 0;\n        long max20
    = 0;\n        long sum21 = 0;\n        long max21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long sum23 = 0;\n        long max23 = 0;\n        long
    sum24 = 0;\n        long max24 = 0;\n        long sum25 = 0;\n        long max25
    = 0;\n        long sum26 = 0;\n        long max26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    sum29 = 0;\n        long max29 = 0;\n        long sum30 = 0;\n        long max30
    = 0;\n        long sum31 = 0;\n        long max31 = 0;\n        long sum32 = 0;\n
    \       long max32 = 0;\n        long sum33 = 0;\n        long max33 = 0;\n        long
    sum34 = 0;\n        long max34 = 0;\n        long sum35 = 0;\n        long max35
    = 0;\n        long sum36 = 0;\n        long max36 = 0;\n        long sum37 = 0;\n
    \       long max37 = 0;\n        long sum38 = 0;\n        long max38 = 0;\n        long
    sum39 = 0;\n        long max39 = 0;\n        long sum40 = 0;\n        long max40
    = 0;\n        long sum41 = 0;\n        long max41 = 0;\n        long sum42 = 0;\n
    \       long max42 = 0;\n        long sum43 = 0;\n        long max\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk0q0bfkc.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpk0q0bfkc.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 1; i <= n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long triple = 0;\n        for (int i = 1; i <= n; i++) {\n            for
    (int j = 1; j <= n; j++) {\n                for (int k = 1; k <= n; k++) {\n                    if
    (a[i] < a[j] && a[i] < a[k]) {\n                        triple++;\n                    }\n
    \               }\n            }\n        }\n        return triple;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxexn98xf.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpxexn98xf.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpxexn98xf.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpxexn98xf.cs(32,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpxexn98xf.cs(32,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpxexn98xf.cs(32,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpxexn98xf.cs(32,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp;\n        long temp2;\n        long temp3;\n        long
    temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n        long
    temp8;\n        long temp9;\n        long temp10;\n        long temp11;\n        long
    temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n        long
    temp16;\n        long temp17;\n        long temp18;\n        long temp19;\n        long
    temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n        long
    temp24;\n        long temp25;\n        long temp26;\n        long temp27;\n        long
    temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n        long
    temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n        long
    temp36;\n        long temp37;\n        long temp38;\n        long temp39;\n        long
    temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n        long
    temp44;\n        long temp45;\n        long temp46;\n        long temp47;\n        long
    temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n        long
    temp52;\n        long temp53;\n        long temp54;\n        long temp55;\n        long
    temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n        long
    temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n        long
    temp64;\n        long temp65;\n        long temp66;\n        long temp67;\n        long
    temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n        long
    temp72;\n        long temp73;\n        long temp74;\n        long temp75;\n        long
    temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n        long
    temp80;\n        long temp81;\n        long temp82;\n        long temp83;\n        long
    temp84;\n        long temp85;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqusrtn9q.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxTriples
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt_4xdo0o.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd1zraoj2.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpd1zraoj2.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpd1zraoj2.cs(20,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(21,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(22,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(23,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(24,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(25,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(26,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(27,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(28,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(29,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(30,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(31,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(32,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(33,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(34,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(35,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(36,14): warning CS0219: The variab'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max)\n                max = sum;\n        }\n        long
    count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    (a[i] == a[j] && a[j] == a[k] && a[i] % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt0exbdki.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long min3 = 0;\n        long
    sum4 = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long sum5 =
    0;\n        long max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long
    max6 = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 =
    0;\n        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long min9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n
    \       long sum11 = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long
    sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n        long sum13
    = 0;\n        long max13 = 0;\n        long min13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long min14 = 0;\n        long sum15 = 0;\n        long
    max15 = 0;\n        long min15 = 0;\n        long sum16 = 0;\n        long max16
    = 0;\n        long min16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n
    \       long min17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    min18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n
    \       long sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long
    sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23
    = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n        long
    max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n        long max26
    = 0;\n        long min26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n
    \       long min27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    min28 = 0;\n        long sum29 = 0;\n        long max29 = 0;\n        long \n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpanaol47w.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpanaol47w.cs(105,13): error CS1001: Identifier expected

    /tmp/tmpanaol47w.cs(105,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n        long sum3 = 0;\n
    \       long temp3 = 0;\n        long sum4 = 0;\n        long temp4 = 0;\n        long
    sum5 = 0;\n        long temp5 = 0;\n        long sum6 = 0;\n        long temp6
    = 0;\n        long sum7 = 0;\n        long temp7 = 0;\n        long sum8 = 0;\n
    \       long temp8 = 0;\n        long sum9 = 0;\n        long temp9 = 0;\n        long
    sum10 = 0;\n        long temp10 = 0;\n        long sum11 = 0;\n        long temp11
    = 0;\n        long sum12 = 0;\n        long temp12 = 0;\n        long sum13 =
    0;\n        long temp13 = 0;\n        long sum14 = 0;\n        long temp14 = 0;\n
    \       long sum15 = 0;\n        long temp15 = 0;\n        long sum16 = 0;\n        long
    temp16 = 0;\n        long sum17 = 0;\n        long temp17 = 0;\n        long sum18
    = 0;\n        long temp18 = 0;\n        long sum19 = 0;\n        long temp19 =
    0;\n        long sum20 = 0;\n        long temp20 = 0;\n        long sum21 = 0;\n
    \       long temp21 = 0;\n        long sum22 = 0;\n        long temp22 = 0;\n
    \       long sum23 = 0;\n        long temp23 = 0;\n        long sum24 = 0;\n        long
    temp24 = 0;\n        long sum25 = 0;\n        long temp25 = 0;\n        long sum26
    = 0;\n        long temp26 = 0;\n        long sum27 = 0;\n        long temp27 =
    0;\n        long sum28 = 0;\n        long temp28 = 0;\n        long sum29 = 0;\n
    \       long temp29 = 0;\n        long sum30 = 0;\n        long temp30 = 0;\n
    \       long sum31 = 0;\n        long temp31 = 0;\n        long sum32 = 0;\n        long
    temp32 = 0;\n        long sum33 = 0;\n        long temp33 = 0;\n        long sum34
    = 0;\n        long temp34 = 0;\n        long sum35 = 0;\n        long temp35 =
    0;\n        long sum36 = 0;\n        long temp36 = 0;\n        long sum37 = 0;\n
    \       long temp37 = 0;\n        long sum38 = 0;\n        long temp38 = 0;\n
    \       long sum39 = 0;\n        long temp39 = 0;\n        long sum40 = 0;\n        long
    temp40 = 0;\n        long sum41 = 0;\n        long temp41 = 0;\n        long sum42
    = 0;\n        long temp42 = 0;\n        long sum43 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmp14dpth.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpmp14dpth.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpmp14dpth.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpmp14dpth.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(23,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(24,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(25,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(26,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(27,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(28,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(29,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(30,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(31,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(32,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(33,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(34,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(35,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpmp14dpth.cs(36,14): warning CS0219: The variable'
  timestamp: 1659976304
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n        }\n        Array.Sort(a);\n        long triple = 0;\n
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    long
    tripleSum = a[i] + a[j] + a[k];\n                    if (tripleSum > triple) {\n
    \                       triple = tripleSum;\n                    }\n                }\n
    \           }\n        }\n        return triple;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c72196ce9c8c416483aacd5940d22ffe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c72196ce9c8c416483aacd5940d22ffe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976305
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long max = 0;\n        int[] a = new int[n];\n        Array.Sort(a);\n
    \       for (int i = 0; i < n; i++) {\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        long
    ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans += a[i];\n            if
    (ans > max) {\n                ans = max;\n            }\n        }\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6622b01a533f412e94f5eebb346d308c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6622b01a533f412e94f5eebb346d308c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976305
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n                count = 0;\n            }\n            if (sum == max) {\n
    \               count++;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85b00359ca2843079d892fb740f3a8e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85b00359ca2843079d892fb740f3a8e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long temp\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnoqg3ugh.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpblvfde5e.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpblvfde5e.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpblvfde5e.cs(20,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(21,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(22,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(23,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(24,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(25,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(26,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(27,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(28,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(29,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(30,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(31,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(32,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(33,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(34,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(35,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(36,14): warning CS02'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6hihu84y.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp6hihu84y.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long max = 0;\n        long a[] = new long[n];\n        long sum2
    = 0;\n        long max2 = 0;\n        long sum3 = 0;\n        long max3 = 0;\n
    \       long sum4 = 0;\n        long max4 = 0;\n        long sum5 = 0;\n        long
    max5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long sum7 =
    0;\n        long max7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    sum9 = 0;\n        long max9 = 0;\n        long sum10 = 0;\n        long max10
    = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long sum12 = 0;\n
    \       long max12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n        long
    sum14 = 0;\n        long max14 = 0;\n        long sum15 = 0;\n        long max15
    = 0;\n        long sum16 = 0;\n        long max16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    sum19 = 0;\n        long max19 = 0;\n        long sum20 = 0;\n        long max20
    = 0;\n        long sum21 = 0;\n        long max21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long sum23 = 0;\n        long max23 = 0;\n        long
    sum24 = 0;\n        long max24 = 0;\n        long sum25 = 0;\n        long max25
    = 0;\n        long sum26 = 0;\n        long max26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    sum29 = 0;\n        long max29 = 0;\n        long sum30 = 0;\n        long max30
    = 0;\n        long sum31 = 0;\n        long max31 = 0;\n        long sum32 = 0;\n
    \       long max32 = 0;\n        long sum33 = 0;\n        long max33 = 0;\n        long
    sum34 = 0;\n        long max34 = 0;\n        long sum35 = 0;\n        long max35
    = 0;\n        long sum36 = 0;\n        long max36 = 0;\n        long sum37 = 0;\n
    \       long max37 = 0;\n        long sum38 = 0;\n        long max38 = 0;\n        long
    sum39 = 0;\n        long max39 = 0;\n        long sum40 = 0;\n        long max40
    = 0;\n        long sum41 = 0;\n        long max41 = 0;\n        long sum42 = 0;\n
    \       long max42 = 0;\n        long sum43 = 0;\n        long max\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp90bfoh9f.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp90bfoh9f.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long temp\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnoqg3ugh.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long a[] = new long[n];\n        long temp = 0;\n        long sum2
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptkh0vdif.cs(19,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        int[] a = new int[n];\n        long max = 0;\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long triples = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k]) {\n                        int
    temp = a[i];\n                        a[i] = a[j];\n                        a[j]
    = temp;\n                    }\n                    if (a[j] < a[k] && a[j] <
    a[i]) {\n                        int temp = a[j];\n                        a[j]
    = a[k];\n                        a[k] = temp;\n                    }\n                    if
    (a[k] < a[i] && a[k] < a[j]) {\n                        int temp = a[k];\n                        a[k]
    = a[i];\n                        a[i] = temp;\n                    }\n                    long
    temp = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        triples++;\n
    \                   }\n                }\n            }\n        }\n        return
    triples;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu7v170kp.cs(33,29): error CS0136: A local or parameter named ''temp''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpu7v170kp.cs(38,29): error CS0136: A local or parameter named ''temp''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpu7v170kp.cs(43,29): error CS0136: A local or parameter named ''temp''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for
    (int k = 0; k < n; k++) {\n                    if (i < j && j < k && k < i) {\n
    \                       temp = a[i] + a[j] + a[k];\n                        if
    (temp % 3 == 0) {\n                            sum += temp;\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpipglms20.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyk724d3w.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpyk724d3w.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpyk724d3w.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        long temp2;\n
    \       long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n
    \       long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n
    \       long temp11;\n        long temp12;\n        long temp13;\n        long
    temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n        long
    temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n        long
    temp22;\n        long temp23;\n        long temp24;\n        long temp25;\n        long
    temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n        long
    temp30;\n        long temp31;\n        long temp32;\n        long temp33;\n        long
    temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n        long
    temp38;\n        long temp39;\n        long temp40;\n        long temp41;\n        long
    temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n        long
    temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n        long
    temp50;\n        long temp51;\n        long temp52;\n        long temp53;\n        long
    temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n        long
    temp58;\n        long temp59;\n        long temp60;\n        long temp61;\n        long
    temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n        long
    temp66;\n        long temp67;\n        long temp68;\n        long temp69;\n        long
    temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n        long
    temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n        long
    temp78;\n        long temp79;\n        long temp80;\n        long temp81;\n        long
    temp82;\n        long temp83;\n        long temp84;\n        long temp85;\n        long
    temp86;\n        long \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv1k38n8r.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpv1k38n8r.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpv1k38n8r.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd1zraoj2.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpd1zraoj2.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpd1zraoj2.cs(20,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(21,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(22,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(23,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(24,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(25,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(26,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(27,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(28,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(29,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(30,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(31,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(32,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(33,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(34,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(35,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(36,14): warning CS0219: The variab'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxSum
    = 0;\n        long maxSumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriplesSum = 0;\n        long sumTriplesSumTriples = 0;\n        long sumTriplesSumTriplesSum
    = 0;\n        long sumTriplesSumTriplesSumTriples = 0;\n        long sumTriplesSumTriplesSumTriplesSum
    = 0;\n        long sumTriplesSumTriplesSumTriplesSumTriples = 0;\n        long
    sumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long sumTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n
    \       long sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long
    sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples = 0;\n        long
    sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long
    sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long
    sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples = 0;\n
    \       long sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long sumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTri\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4d4gqotd.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp4d4gqotd.cs(42,100): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        long max =
    0;\n        long count = 0;\n        long temp2;\n        long temp3;\n        long
    temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n        long
    temp8;\n        long temp9;\n        long temp10;\n        long temp11;\n        long
    temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n        long
    temp16;\n        long temp17;\n        long temp18;\n        long temp19;\n        long
    temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n        long
    temp24;\n        long temp25;\n        long temp26;\n        long temp27;\n        long
    temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n        long
    temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n        long
    temp36;\n        long temp37;\n        long temp38;\n        long temp39;\n        long
    temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n        long
    temp44;\n        long temp45;\n        long temp46;\n        long temp47;\n        long
    temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n        long
    temp52;\n        long temp53;\n        long temp54;\n        long temp55;\n        long
    temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n        long
    temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n        long
    temp64;\n        long temp65;\n        long temp66;\n        long temp67;\n        long
    temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n        long
    temp72;\n        long temp73;\n        long temp74;\n        long temp75;\n        long
    temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n        long
    temp80;\n        long temp81;\n        long temp82;\n        long temp83;\n        long
    temp84;\n        long temp85;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkimm5wdh.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpblvfde5e.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpblvfde5e.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpblvfde5e.cs(20,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(21,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(22,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(23,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(24,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(25,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(26,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(27,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(28,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(29,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(30,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(31,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(32,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(33,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(34,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(35,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(36,14): warning CS02'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 = 0;\n        long
    max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n        long max3 =
    0;\n        long min3 = 0;\n        long sum4 = 0;\n        long max4 = 0;\n        long
    min4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long min5 =
    0;\n        long sum6 = 0;\n        long max6 = 0;\n        long min6 = 0;\n        long
    sum7 = 0;\n        long max7 = 0;\n        long min7 = 0;\n        long sum8 =
    0;\n        long max8 = 0;\n        long min8 = 0;\n        long sum9 = 0;\n        long
    max9 = 0;\n        long min9 = 0;\n        long sum10 = 0;\n        long max10
    = 0;\n        long min10 = 0;\n        long sum11 = 0;\n        long max11 = 0;\n
    \       long min11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    min12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n        long min13
    = 0;\n        long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n
    \       long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n        long
    sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n        long sum17
    = 0;\n        long max17 = 0;\n        long min17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long min18 = 0;\n        long sum19 = 0;\n        long
    max19 = 0;\n        long min19 = 0;\n        long sum20 = 0;\n        long max20
    = 0;\n        long min20 = 0;\n        long sum21 = 0;\n        long max21 = 0;\n
    \       long min21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    min22 = 0;\n        long sum23 = 0;\n        long max23 = 0;\n        long min23
    = 0;\n        long sum24 = 0;\n        long max24 = 0;\n        long min24 = 0;\n
    \       long sum25 = 0;\n        long max25 = 0;\n        long min25 = 0;\n        long
    sum26 = 0;\n        long max26 = 0;\n        long min26 = 0;\n        long sum27
    = 0;\n        long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n        long
    max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpayxms7wd.cs(18,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpayxms7wd.cs(19,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpayxms7wd.cs(20,14): warning CS0219: The variable ''min'' is assigned but
    its value is never used

    /tmp/tmpayxms7wd.cs(21,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(22,14): warning CS0219: The variable ''max2'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(23,14): warning CS0219: The variable ''min2'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(24,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(25,14): warning CS0219: The variable ''max3'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(26,14): warning CS0219: The variable ''min3'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(27,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(28,14): warning CS0219: The variable ''max4'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(29,14): warning CS0219: The variable ''min4'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(30,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(31,14): warning CS0219: The variable ''max5'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(32,14): warning CS0219: The variable ''min5'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(33,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(34,14): warning CS0219: The variable ''max6'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(35,14): warning CS0219: The variable ''min6'' is assigned
    but its value is never used

    /tmp/tmpayxms7wd.cs(36,14): warning CS0219: The vari'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    temp = a[i] + a[j] + a[k];\n                    if (temp
    % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn03b0pdc.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpn03b0pdc.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpn03b0pdc.cs(24,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpn03b0pdc.cs(29,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpn03b0pdc.cs(29,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpn03b0pdc.cs(29,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long a[] = new long[n];\n        long temp = 0;\n        long sum2
    = 0;\n        long temp2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n
    \       long sum4 = 0;\n        long temp4 = 0;\n        long sum5 = 0;\n        long
    temp5 = 0;\n        long sum6 = 0;\n        long temp6 = 0;\n        long sum7
    = 0;\n        long temp7 = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n
    \       long sum9 = 0;\n        long temp9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long sum11 = 0;\n        long temp11 = 0;\n        long sum12
    = 0;\n        long temp12 = 0;\n        long sum13 = 0;\n        long temp13 =
    0;\n        long sum14 = 0;\n        long temp14 = 0;\n        long sum15 = 0;\n
    \       long temp15 = 0;\n        long sum16 = 0;\n        long temp16 = 0;\n
    \       long sum17 = 0;\n        long temp17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long sum19 = 0;\n        long temp19 = 0;\n        long sum20
    = 0;\n        long temp20 = 0;\n        long sum21 = 0;\n        long temp21 =
    0;\n        long sum22 = 0;\n        long temp22 = 0;\n        long sum23 = 0;\n
    \       long temp23 = 0;\n        long sum24 = 0;\n        long temp24 = 0;\n
    \       long sum25 = 0;\n        long temp25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long sum27 = 0;\n        long temp27 = 0;\n        long sum28
    = 0;\n        long temp28 = 0;\n        long sum29 = 0;\n        long temp29 =
    0;\n        long sum30 = 0;\n        long temp30 = 0;\n        long sum31 = 0;\n
    \       long temp31 = 0;\n        long sum32 = 0;\n        long temp32 = 0;\n
    \       long sum33 = 0;\n        long temp33 = 0;\n        long sum34 = 0;\n        long
    temp34 = 0;\n        long sum35 = 0;\n        long temp35 = 0;\n        long sum36
    = 0;\n        long temp36 = 0;\n        long sum37 = 0;\n        long temp37 =
    0;\n        long sum38 = 0;\n        long temp38 = 0;\n        long sum39 = 0;\n
    \       long temp39 = 0;\n        long sum40 = 0;\n        long temp40 = 0;\n
    \       long sum41 = 0;\n        long temp41 = 0;\n        long sum42 = 0;\n        long
    temp42 = 0;\n        long sum43 = 0;\n        long temp\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc0az__7t.cs(19,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpc0az__7t.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long min3 = 0;\n        long
    sum4 = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long sum5 =
    0;\n        long max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long
    max6 = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 =
    0;\n        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long min9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n
    \       long sum11 = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long
    sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n        long sum13
    = 0;\n        long max13 = 0;\n        long min13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long min14 = 0;\n        long sum15 = 0;\n        long
    max15 = 0;\n        long min15 = 0;\n        long sum16 = 0;\n        long max16
    = 0;\n        long min16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n
    \       long min17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    min18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n
    \       long sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long
    sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23
    = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n        long
    max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n        long max26
    = 0;\n        long min26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n
    \       long min27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    min28 = 0;\n        long sum29 = 0;\n        long max29 = 0;\n        long min\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptwqtgbrm.cs(105,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3oxlh7tn.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp3oxlh7tn.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp;\n        long temp2;\n
    \       long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n
    \       long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n
    \       long temp11;\n        long temp12;\n        long temp13;\n        long
    temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n        long
    temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n        long
    temp22;\n        long temp23;\n        long temp24;\n        long temp25;\n        long
    temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n        long
    temp30;\n        long temp31;\n        long temp32;\n        long temp33;\n        long
    temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n        long
    temp38;\n        long temp39;\n        long temp40;\n        long temp41;\n        long
    temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n        long
    temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n        long
    temp50;\n        long temp51;\n        long temp52;\n        long temp53;\n        long
    temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n        long
    temp58;\n        long temp59;\n        long temp60;\n        long temp61;\n        long
    temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n        long
    temp66;\n        long temp67;\n        long temp68;\n        long temp69;\n        long
    temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n        long
    temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n        long
    temp78;\n        long temp79;\n        long temp80;\n        long temp81;\n        long
    temp82;\n        long temp83;\n        long temp84;\n        long temp85;\n        long
    temp86;\n        long temp\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj28q_bkn.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp73glt0bb.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgpkd3duq.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpgpkd3duq.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpgpkd3duq.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp;\n
    \       long count = 0;\n        long temp2;\n        long temp3;\n        long
    temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n        long
    temp8;\n        long temp9;\n        long temp10;\n        long temp11;\n        long
    temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n        long
    temp16;\n        long temp17;\n        long temp18;\n        long temp19;\n        long
    temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n        long
    temp24;\n        long temp25;\n        long temp26;\n        long temp27;\n        long
    temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n        long
    temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n        long
    temp36;\n        long temp37;\n        long temp38;\n        long temp39;\n        long
    temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n        long
    temp44;\n        long temp45;\n        long temp46;\n        long temp47;\n        long
    temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n        long
    temp52;\n        long temp53;\n        long temp54;\n        long temp55;\n        long
    temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n        long
    temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n        long
    temp64;\n        long temp65;\n        long temp66;\n        long temp67;\n        long
    temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n        long
    temp72;\n        long temp73;\n        long temp74;\n        long temp75;\n        long
    temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n        long
    temp80;\n        long temp81;\n        long temp82;\n        long temp83;\n        long
    temp84;\n        long temp85;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl12ekem6.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5445oktv.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n
    \       long count2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n        long
    count3 = 0;\n        long sum4 = 0;\n        long temp4 = 0;\n        long count4
    = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n        long count5 = 0;\n
    \       long sum6 = 0;\n        long temp6 = 0;\n        long count6 = 0;\n        long
    sum7 = 0;\n        long temp7 = 0;\n        long count7 = 0;\n        long sum8
    = 0;\n        long temp8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n
    \       long temp9 = 0;\n        long count9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long count10 = 0;\n        long sum11 = 0;\n        long
    temp11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long
    temp12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n        long
    temp13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n        long
    temp14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n        long
    temp15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n        long
    temp16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long
    temp17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n        long
    temp19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long
    temp20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n        long
    temp21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n        long
    temp22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n        long
    temp23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n        long
    temp24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n        long
    temp25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n        long
    temp27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n        long
    temp28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n        long
    temp29\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmqcaktnf.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpmqcaktnf.cs(105,20): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpli5hqaa3.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphbx83vij.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 = 0;\n        long
    sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 =
    0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0s66xcz2.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp0s66xcz2.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxTriples
    = 0;\n        long maxTriple = 0;\n        long maxTriple2 = 0;\n        long
    maxTriple3 = 0;\n        long maxTriple4 = 0;\n        long maxTriple5 = 0;\n
    \       long maxTriple6 = 0;\n        long maxTriple7 = 0;\n        long maxTriple8
    = 0;\n        long maxTriple9 = 0;\n        long maxTriple10 = 0;\n        long
    maxTriple11 = 0;\n        long maxTriple12 = 0;\n        long maxTriple13 = 0;\n
    \       long maxTriple14 = 0;\n        long maxTriple15 = 0;\n        long maxTriple16
    = 0;\n        long maxTriple17 = 0;\n        long maxTriple18 = 0;\n        long
    maxTriple19 = 0;\n        long maxTriple20 = 0;\n        long maxTriple21 = 0;\n
    \       long maxTriple22 = 0;\n        long maxTriple23 = 0;\n        long maxTriple24
    = 0;\n        long maxTriple25 = 0;\n        long maxTriple26 = 0;\n        long
    maxTriple27 = 0;\n        long maxTriple28 = 0;\n        long maxTriple29 = 0;\n
    \       long maxTriple30 = 0;\n        long maxTriple31 = 0;\n        long maxTriple32
    = 0;\n        long maxTriple33 = 0;\n        long maxTriple34 = 0;\n        long
    maxTriple35 = 0;\n        long maxTriple36 = 0;\n        long maxTriple37 = 0;\n
    \       long maxTriple38 = 0;\n        long maxTriple39 = 0;\n        long maxTriple40
    = 0;\n        long maxTriple41 = 0;\n        long maxTriple42 = 0;\n        long
    maxTriple43 = 0;\n        long maxTriple44 = 0;\n        long maxTriple45 = 0;\n
    \       long maxTriple46 = 0;\n        long maxTriple47 = 0;\n        long maxTriple48
    = 0;\n        long maxTriple49 = 0;\n        long maxTriple50 = 0;\n        long
    maxTriple51 = 0;\n        long maxTriple52 = 0;\n        long maxTriple53 = 0;\n
    \       long maxTriple54 = 0;\n        long maxTriple55 = 0;\n        long maxTriple56
    = 0;\n        long maxTriple57 = 0;\n        long maxTriple58 = 0;\n        long
    maxTriple59 = 0;\n        long maxTriple60 = 0;\n        long maxTriple61 = 0;\n
    \       long maxTri\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7oc0sb0.cs(83,20): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp;\n        for(int i = 1; i < n; i++) {\n            for(int
    j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if(temp % 3 == 0) {\n                        count++;\n
    \                   }\n                    if(temp > max) {\n                        max
    = temp;\n                    }\n                }\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp_ot46g1.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for
    (int k = 0; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n                    if
    (temp % 3 == 0) {\n                        sum += temp;\n                    }\n
    \               }\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9mmhkffq.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long[] a = new long[n];\n        long max = 0;\n        long temp
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        Array.Sort(a);\n        for (int i = 0; i < n; i++) {\n            temp
    = sum;\n            sum = 0;\n            for (int j = 0; j < n; j++) {\n                sum
    += a[j];\n                if (sum > temp) {\n                    temp = sum;\n
    \               }\n            }\n            if (temp % 3 == 0) {\n                max
    = temp;\n            }\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2de65ae9b1a4649990223a94ea7ef0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2de65ae9b1a4649990223a94ea7ef0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp;\n
    \       for (int i = 1; i <= n; i++) {\n            temp = i * i - i + 1;\n            sum
    += temp;\n            a[i] = temp;\n        }\n        for (int i = 1; i <= n;
    i++) {\n            for (int j = 1; j <= n; j++) {\n                for (int k
    = 1; k <= n; k++) {\n                    if (a[i] < a[j] && a[i] < a[k]) {\n                        temp
    = a[i];\n                        a[i] = a[j];\n                        a[j] =
    temp;\n                        temp = a[i];\n                        a[i] = a[k];\n
    \                       a[k] = temp;\n                    }\n                    if
    (a[j] < a[k]) {\n                        temp = a[j];\n                        a[j]
    = a[k];\n                        a[k] = temp;\n                    }\n                }\n
    \           }\n        }\n        for (int i = 1; i <= n; i++) {\n            if
    (a[i] % 3 == 0) {\n                max = Math.Max(max, a[i]);\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0jcddgoj.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpprrgybzf.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpprrgybzf.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpprrgybzf.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpprrgybzf.cs(21,14): warning CS0219: The variable ''min'' is assigned but
    its value is never used

    /tmp/tmpprrgybzf.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpprrgybzf.cs(36,14): warning CS0219: The variable '''
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long maxSum = 0;\n        for (int i = 0; i < n; i++) {\n            long
    sum = 0;\n            for (int j = 0; j < n; j++) {\n                for (int
    k = 0; k < n; k++) {\n                    sum += a[j] * a[j] * a[k];\n                }\n
    \           }\n            if (sum > maxSum) {\n                maxSum = sum;\n
    \           }\n        }\n        return maxSum;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcax_2why.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpcax_2why.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcax_2why.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcax_2why.cs(30,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpcax_2why.cs(33,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcax_2why.cs(33,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcax_2why.cs(33,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long a[] = new long[n];\n        Array.Sort(a);\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptu6u7_va.cs(19,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpco96m1pi.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpco96m1pi.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpco96m1pi.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long min3 = 0;\n        long
    sum4 = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long sum5 =
    0;\n        long max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long
    max6 = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 =
    0;\n        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long min9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n
    \       long sum11 = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long
    sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n        long sum13
    = 0;\n        long max13 = 0;\n        long min13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long min14 = 0;\n        long sum15 = 0;\n        long
    max15 = 0;\n        long min15 = 0;\n        long sum16 = 0;\n        long max16
    = 0;\n        long min16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n
    \       long min17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    min18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n
    \       long sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long
    sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23
    = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n        long
    max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n        long max26
    = 0;\n        long min26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n
    \       long min27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    min28 = 0;\n        long sum29 = 0;\n        long max29 = 0;\n        long min\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptwqtgbrm.cs(105,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp;\n        for (int i = 1; i <= n; i++) {\n            sum
    = 0;\n            for (int j = 1; j <= n; j++) {\n                for (int k =
    1; k <= n; k++) {\n                    temp = a[j] * a[j] * a[k];\n                    if
    (temp % 3 == 0) {\n                        sum += temp;\n                    }\n
    \               }\n            }\n            if (sum > max) {\n                max
    = sum;\n            }\n            count++;\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppi64hj0g.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    long sum = a[i] + a[j] + a[k];\n                    if
    (sum % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6w0jweac.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long sumOfSquares
    = 0;\n        long maxOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxMaxSumOfSquares = 0;\n        long maxSum = 0;\n        long maxSumOfSquares
    = 0;\n        long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n
    \       long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n
    \       long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n
    \       long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n
    \       long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n
    \       long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n
    \       long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n
    \       long maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxMaxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxMaxSumOfSquares = 0;\n
    \       long maxSumOfSquares = 0;\n        long maxMaxSumOf\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5nksuqj6.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp5nksuqj6.cs(79,25): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4c820bbu.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp4c820bbu.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(28,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(28,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(28,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long max
    = 0;\n        long min = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7pf91ya1.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7pf91ya1.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp7pf91ya1.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp;\n        long temp2;\n        long temp3;\n        long
    temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n        long
    temp8;\n        long temp9;\n        long temp10;\n        long temp11;\n        long
    temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n        long
    temp16;\n        long temp17;\n        long temp18;\n        long temp19;\n        long
    temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n        long
    temp24;\n        long temp25;\n        long temp26;\n        long temp27;\n        long
    temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n        long
    temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n        long
    temp36;\n        long temp37;\n        long temp38;\n        long temp39;\n        long
    temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n        long
    temp44;\n        long temp45;\n        long temp46;\n        long temp47;\n        long
    temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n        long
    temp52;\n        long temp53;\n        long temp54;\n        long temp55;\n        long
    temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n        long
    temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n        long
    temp64;\n        long temp65;\n        long temp66;\n        long temp67;\n        long
    temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n        long
    temp72;\n        long temp73;\n        long temp74;\n        long temp75;\n        long
    temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n        long
    temp80;\n        long temp81;\n        long temp82;\n        long temp83;\n        long
    temp84;\n        long temp85;\n\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsw_9nv6o.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpsw_9nv6o.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpsw_9nv6o.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpsw_9nv6o.cs(21,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpsw_9nv6o.cs(22,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(23,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(24,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(25,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(26,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(27,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(28,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(29,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(30,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(31,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(32,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(33,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(34,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(35,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(36,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(37,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmpsw_9nv6o.cs(38,14): warning CS01'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpco96m1pi.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpco96m1pi.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpco96m1pi.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long max
    = 0;\n        long count = 0;\n        long temp2 = 0;\n        long max2 = 0;\n
    \       long count2 = 0;\n        long temp3 = 0;\n        long max3 = 0;\n        long
    count3 = 0;\n        long temp4 = 0;\n        long max4 = 0;\n        long count4
    = 0;\n        long temp5 = 0;\n        long max5 = 0;\n        long count5 = 0;\n
    \       long temp6 = 0;\n        long max6 = 0;\n        long count6 = 0;\n        long
    temp7 = 0;\n        long max7 = 0;\n        long count7 = 0;\n        long temp8
    = 0;\n        long max8 = 0;\n        long count8 = 0;\n        long temp9 = 0;\n
    \       long max9 = 0;\n        long count9 = 0;\n        long temp10 = 0;\n        long
    max10 = 0;\n        long count10 = 0;\n        long temp11 = 0;\n        long
    max11 = 0;\n        long count11 = 0;\n        long temp12 = 0;\n        long
    max12 = 0;\n        long count12 = 0;\n        long temp13 = 0;\n        long
    max13 = 0;\n        long count13 = 0;\n        long temp14 = 0;\n        long
    max14 = 0;\n        long count14 = 0;\n        long temp15 = 0;\n        long
    max15 = 0;\n        long count15 = 0;\n        long temp16 = 0;\n        long
    max16 = 0;\n        long count16 = 0;\n        long temp17 = 0;\n        long
    max17 = 0;\n        long count17 = 0;\n        long temp18 = 0;\n        long
    max18 = 0;\n        long count18 = 0;\n        long temp19 = 0;\n        long
    max19 = 0;\n        long count19 = 0;\n        long temp20 = 0;\n        long
    max20 = 0;\n        long count20 = 0;\n        long temp21 = 0;\n        long
    max21 = 0;\n        long count21 = 0;\n        long temp22 = 0;\n        long
    max22 = 0;\n        long count22 = 0;\n        long temp23 = 0;\n        long
    max23 = 0;\n        long count23 = 0;\n        long temp24 = 0;\n        long
    max24 = 0;\n        long count24 = 0;\n        long temp25 = 0;\n        long
    max25 = 0;\n        long count25 = 0;\n        long temp26 = 0;\n        long
    max26 = 0;\n        long count26 = 0;\n        long temp27 = 0;\n        long
    max27 = 0;\n        long count27 = 0;\n        long temp28 = 0;\n        long
    max28 = 0;\n        long count28 = 0;\n        long temp29 = 0;\n        long
    max29\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkesamqp8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpkesamqp8.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            sum2
    += a[i];\n        }\n        if (sum2 % 3 == 0) {\n            return max;\n        }\n
    \       return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwu43qjab.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpwu43qjab.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpwu43qjab.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpwu43qjab.cs(30,21): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976305
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long[] a = new long[n];\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] && a[j] == a[k] && a[i] % 3 == 0) {\n
    \                       count++;\n                    }\n                }\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76b9791a6310477c9ed6e502121e05ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76b9791a6310477c9ed6e502121e05ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long temp
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbvw8xqit.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpbvw8xqit.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbvw8xqit.cs(28,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbvw8xqit.cs(28,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbvw8xqit.cs(28,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbvw8xqit.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max)\n                max = sum;\n        }\n        long
    triples = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j =
    i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    long
    sum = a[i] + a[j] + a[k];\n                    if (sum % 3 == 0)\n                        triples++;\n
    \               }\n            }\n        }\n        return triples;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpljmmgxcj.cs(31,26): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgpkd3duq.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpgpkd3duq.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpgpkd3duq.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       for (int i = 1; i <= n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1;
    j <= n; j++) {\n                for (int k = 1; k <= n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        temp2
    = a[i];\n                        temp3 = a[j];\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.GetMaxTriples (System.Int64 n) [0x00024]
    in <b4a1ee2469364d18913bd5b35a17ff47>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <b4a1ee2469364d18913bd5b35a17ff47>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n
    \ at Problem.GetMaxTriples (System.Int64 n) [0x00024] in <b4a1ee2469364d18913bd5b35a17ff47>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <b4a1ee2469364d18913bd5b35a17ff47>:0
    \n"
  stdout: ''
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n
    \       long count2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n        long
    count3 = 0;\n        long sum4 = 0;\n        long temp4 = 0;\n        long count4
    = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n        long count5 = 0;\n
    \       long sum6 = 0;\n        long temp6 = 0;\n        long count6 = 0;\n        long
    sum7 = 0;\n        long temp7 = 0;\n        long count7 = 0;\n        long sum8
    = 0;\n        long temp8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n
    \       long temp9 = 0;\n        long count9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long count10 = 0;\n        long sum11 = 0;\n        long
    temp11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long
    temp12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n        long
    temp13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n        long
    temp14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n        long
    temp15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n        long
    temp16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long
    temp17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n        long
    temp19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long
    temp20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n        long
    temp21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n        long
    temp22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n        long
    temp23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n        long
    temp24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n        long
    temp25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n        long
    temp27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n        long
    temp28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n        long
    temp29\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1gafi7eq.cs(105,20): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    temp = a[i] + a[j] + a[k];\n                    if (temp
    % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2jtbm1u.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp73glt0bb.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n
    \       long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long
    sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 =
    0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long
    sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19
    = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long
    sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29
    = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n
    \       long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long
    sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39
    = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long
    sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49
    = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n
    \       long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long
    sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59
    = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n
    \       long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long
    sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69
    = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long
    sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79
    = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6zqy7c0g.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp6zqy7c0g.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n
    \           a[i] = i * i - i + 1;\n            sum += a[i];\n        }\n        long
    maxTriples = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j
    = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    (a[i] < a[j] && a[j] < a[k]) {\n                        long triples = a[i] +
    a[j] + a[k];\n                        if (triples % 3 == 0) {\n                            maxTriples
    = Math.Max(maxTriples, triples);\n                        }\n                    }\n
    \               }\n            }\n        }\n        return maxTriples;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgq9blp5f.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpgq9blp5f.cs(21,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(22,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(28,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(28,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(28,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(28,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(29,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(29,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgq9blp5f.cs(29,54): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxTriples
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n                maxTriples = i;\n            }\n        }\n        return
    maxTriples;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbzelondr.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long triples = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] + a[k]) {\n                        triples++;\n
    \                   }\n                }\n            }\n        }\n        return
    triples;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdhqacphy.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        long max = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp03qj8vnv.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp03qj8vnv.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp03qj8vnv.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    temp = a[i] + a[j] + a[k];\n                    if (temp
    % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2_kq4sh_.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n
    \       long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long
    sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 =
    0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long
    sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19
    = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long
    sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29
    = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n
    \       long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long
    sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39
    = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long
    sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49
    = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n
    \       long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long
    sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59
    = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n
    \       long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long
    sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69
    = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long
    sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79
    = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1r5hu90d.cs(104,19): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long max
    = 0;\n        long temp;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n        }\n        for (int i = 0;
    i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n
    \                   if (temp % 3 == 0) {\n                        count++;\n                        if
    (temp > max) {\n                            max = temp;\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbdzb86ct.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpbdzb86ct.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbdzb86ct.cs(25,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbdzb86ct.cs(30,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbdzb86ct.cs(30,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpbdzb86ct.cs(30,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976305
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c88461333e9a431494c655668c9d82c3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c88461333e9a431494c655668c9d82c3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n
    \       long count2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n        long
    count3 = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i -
    i + 1;\n        }\n        for (int i = 0; i < n; i++) {\n            sum += a[i];\n
    \       }\n        for (int i = 0; i < n; i++) {\n            max = Math.Max(max,
    a[i]);\n        }\n        for (int i = 0; i < n; i++) {\n            temp = sum
    - a[i];\n            if (temp % 3 == 0) {\n                count++;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            sum2 += a[i];\n
    \       }\n        for (int i = 0; i < n; i++) {\n            temp2 = sum2 - a[i];\n
    \           if (temp2 % 3 == 0) {\n                count2++;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            sum3 += a[i];\n
    \       }\n        for (int i = 0; i < n; i++) {\n            temp3 = sum3 - a[i];\n
    \           if (temp3 % 3 == 0) {\n                count3++;\n            }\n
    \       }\n        long max2 = Math.Max(max, max2);\n        long max3 = Math.Max(max3,
    max3);\n        long max4 = Math.Max(max4, max4);\n        long max5 = Math.Max(max5,
    max5);\n        long max6 = Math.Max(max6, max6);\n        long max7 = Math.Max(max7,
    max7);\n        long max8 = Math.Max(max8, max8);\n        long max9 = Math.Max(max9,
    max9);\n        long max10 = Math.Max(max10, max10);\n        long max11 = Math.Max(max11,
    max11);\n        long max12 = Math.Max(max12, max12);\n        long max13 = Math.Max(max13,
    max13);\n        long max14 = Math.Max(max14, max14);\n        long max15 = Math.Max(max15,
    max15);\n        long max16 = Math.Max(max16, max16);\n        long max17 = Math.Max(max17,
    max17);\n        long max18 = Math.Max(max18, max18);\n        long max19 = Math.Max(max19,
    max19);\n        long max20 = Math.Max(max20, max20);\n        long max21 = Math.Max(max21,
    max21);\n        long max22 = Math.Max(max22, max22);\n        long max23 = Math.Max(max23,
    max23);\n        long max24 = Math.Max(max24, max24);\n        long max25 = Math.Max(max25,
    max25);\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5klcyc3l.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8gj507q5.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp8gj507q5.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn_m21hap.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long maxSum = 0;\n        long minSum = 0;\n        long sumOfSquares
    = 0;\n        long sumOfSquareOfMin = 0;\n        long sumOfSquareOfMax = 0;\n
    \       long sumOfSquareOfSum = 0;\n        long sumOfSquareOfSumOfMin = 0;\n
    \       long sumOfSquareOfSumOfMax = 0;\n        long sumOfSquareOfSumOfSum =
    0;\n        long sumOfSquareOfSumOfSumOfMin = 0;\n        long sumOfSquareOfSumOfSumOfMax
    = 0;\n        long sumOfSquareOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfMin = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfMax
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMax = 0;\n        long
    sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMax = 0;\n        long
    sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMax = 0;\n        long
    sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMax = 0;\n        long
    sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfMax = 0;\n        long
    sumOfSquareOfSumOfSum\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp53tnnfw1.cs(54,35): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long count = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n
    \       long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long
    sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 =
    0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long
    sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19
    = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long
    sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29
    = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n
    \       long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long
    sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39
    = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long
    sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49
    = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n
    \       long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long
    sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59
    = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n
    \       long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long
    sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69
    = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long
    sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79
    = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxe0jvxb3.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpxe0jvxb3.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n                temp = i;\n            }\n        }\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j
    < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    (a[i] == a[j] && a[j] == a[k]) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8a4htfxj.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        int[] a = new int[n];\n        Array.Sort(a);\n        long max
    = 0;\n        for (int i = 0; i < n; i++) {\n            sum += a[i];\n            if
    (sum % 3 == 0) {\n                max = Math.Max(max, sum);\n            }\n        }\n
    \       return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <545043e92df64f84b88a254b40fd9893>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <545043e92df64f84b88a254b40fd9893>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n
    \           a[i] = i * i - i + 1;\n            sum += a[i];\n        }\n        long
    max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    (a[i] == a[j] && a[j] == a[k]) {\n                        long temp = a[i] + a[j]
    + a[k];\n                        if (temp % 3 == 0) {\n                            max
    = Math.Max(max, temp);\n                        }\n                    }\n                }\n
    \           }\n        }\n        return max;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmaicw0w5.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpmaicw0w5.cs(21,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(22,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,41): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(28,49): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(29,37): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(29,44): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmaicw0w5.cs(29,51): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n
    \           a[i] = i * i - i + 1;\n        }\n        Array.Sort(a);\n        long
    sum = 0;\n        for (int i = 0; i < n; i++) {\n            int j = i + 1;\n
    \           int k = n - 1;\n            while (j > 0 && k > 0) {\n                if
    (a[j] < a[k]) {\n                    j--;\n                } else if (a[j] > a[k])
    {\n                    k--;\n                } else {\n                    sum++;\n
    \                   j--;\n                    k--;\n                }\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp7s4oh90.cs(24,14): error CS0128: A local variable or function named ''sum''
    is already defined in this scope

    /tmp/tmpp7s4oh90.cs(27,21): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpp7s4oh90.cs(24,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        for (int i = 1; i <= n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1;
    j <= n; j++) {\n                for (int k = 1; k <= n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0yq66rdf.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long maxTriples = 0;\n        long minTriples = 0;\n        long
    sumTriples = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long
    temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6
    = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n
    \       long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n
    \       long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n
    \       long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n
    \       long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n
    \       long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n
    \       long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n
    \       long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n
    \       long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n
    \       long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n
    \       long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n
    \       long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n
    \       long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n
    \       long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n
    \       long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n
    \       long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n
    \       long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n
    \       long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n
    \       long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n
    \       long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n
    \       long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n
    \       long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n
    \       long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n
    \       long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n
    \       long temp79\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgfyde4ak.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpgfyde4ak.cs(103,20): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyk724d3w.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpyk724d3w.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpyk724d3w.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0;
    j < n; j++) {\n                for (int k = 0; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdl4r9pny.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpdl4r9pny.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpdl4r9pny.cs(28,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpdl4r9pny.cs(28,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpdl4r9pny.cs(28,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpdl4r9pny.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpli5hqaa3.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp1lxpww7.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpp1lxpww7.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n
    \       long count2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n        long
    count3 = 0;\n        long sum4 = 0;\n        long temp4 = 0;\n        long count4
    = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n        long count5 = 0;\n
    \       long sum6 = 0;\n        long temp6 = 0;\n        long count6 = 0;\n        long
    sum7 = 0;\n        long temp7 = 0;\n        long count7 = 0;\n        long sum8
    = 0;\n        long temp8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n
    \       long temp9 = 0;\n        long count9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long count10 = 0;\n        long sum11 = 0;\n        long
    temp11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long
    temp12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n        long
    temp13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n        long
    temp14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n        long
    temp15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n        long
    temp16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long
    temp17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n        long
    temp19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long
    temp20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n        long
    temp21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n        long
    temp22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n        long
    temp23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n        long
    temp24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n        long
    temp25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n        long
    temp27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n        long
    temp28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n        long
    temp29 = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptv1i3c_l.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmptv1i3c_l.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmptv1i3c_l.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmptv1i3c_l.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(22,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(23,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(25,14): warning CS0219: The variable ''count2'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(26,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(27,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(28,14): warning CS0219: The variable ''count3'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(29,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(30,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(31,14): warning CS0219: The variable ''count4'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(32,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(33,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(34,14): warning CS0219: The variable ''count5'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(35,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(36,14): warning CS0219: The va'
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long temp\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpufvad86l.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpelsunqny.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpelsunqny.cs(103,19): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        long max = 0;\n        long min = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8pfxs25o.cs(104,20): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd1zraoj2.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpd1zraoj2.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpd1zraoj2.cs(20,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(21,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(22,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(23,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(24,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(25,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(26,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(27,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(28,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(29,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(30,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(31,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(32,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(33,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(34,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(35,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(36,14): warning CS0219: The variab'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long a[] = new long[n];\n        long temp = 0;\n        long count
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv453j3lm.cs(19,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long sum2 = 0;\n        long max2 = 0;\n        long count2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long count3 = 0;\n        long
    sum4 = 0;\n        long max4 = 0;\n        long count4 = 0;\n        long sum5
    = 0;\n        long max5 = 0;\n        long count5 = 0;\n        long sum6 = 0;\n
    \       long max6 = 0;\n        long count6 = 0;\n        long sum7 = 0;\n        long
    max7 = 0;\n        long count7 = 0;\n        long sum8 = 0;\n        long max8
    = 0;\n        long count8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n
    \       long count9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long
    count10 = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long count11
    = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long count12 =
    0;\n        long sum13 = 0;\n        long max13 = 0;\n        long count13 = 0;\n
    \       long sum14 = 0;\n        long max14 = 0;\n        long count14 = 0;\n
    \       long sum15 = 0;\n        long max15 = 0;\n        long count15 = 0;\n
    \       long sum16 = 0;\n        long max16 = 0;\n        long count16 = 0;\n
    \       long sum17 = 0;\n        long max17 = 0;\n        long count17 = 0;\n
    \       long sum18 = 0;\n        long max18 = 0;\n        long count18 = 0;\n
    \       long sum19 = 0;\n        long max19 = 0;\n        long count19 = 0;\n
    \       long sum20 = 0;\n        long max20 = 0;\n        long count20 = 0;\n
    \       long sum21 = 0;\n        long max21 = 0;\n        long count21 = 0;\n
    \       long sum22 = 0;\n        long max22 = 0;\n        long count22 = 0;\n
    \       long sum23 = 0;\n        long max23 = 0;\n        long count23 = 0;\n
    \       long sum24 = 0;\n        long max24 = 0;\n        long count24 = 0;\n
    \       long sum25 = 0;\n        long max25 = 0;\n        long count25 = 0;\n
    \       long sum26 = 0;\n        long max26 = 0;\n        long count26 = 0;\n
    \       long sum27 = 0;\n        long max27 = 0;\n        long count27 = 0;\n
    \       long sum28 = 0;\n        long max28 = 0;\n        long count28 = 0;\n
    \       long sum29 = 0;\n        long max29 = 0;\n        long count\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9svnx8r4.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        for (int
    i = 1; i < n; i++) {\n            sum += a[i];\n            count += 1;\n        }\n
    \       long maxSum = sum;\n        long maxCount = count;\n        for (int i
    = 1; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long tempSum = a[i] + a[j]
    + a[k];\n                    if (tempSum == maxSum) {\n                        maxCount
    = Math.Max(maxCount, count);\n                    }\n                    if (tempSum
    > maxSum) {\n                        maxSum = tempSum;\n                        maxCount
    = 1;\n                    }\n                }\n            }\n        }\n        return
    maxCount;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx_dzlwmf.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpx_dzlwmf.cs(22,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpx_dzlwmf.cs(30,36): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpx_dzlwmf.cs(30,43): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpx_dzlwmf.cs(30,50): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long sum2
    = 0;\n        long max2 = 0;\n        long sum3 = 0;\n        long max3 = 0;\n
    \       long sum4 = 0;\n        long max4 = 0;\n        long sum5 = 0;\n        long
    max5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long sum7 =
    0;\n        long max7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    sum9 = 0;\n        long max9 = 0;\n        long sum10 = 0;\n        long max10
    = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long sum12 = 0;\n
    \       long max12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n        long
    sum14 = 0;\n        long max14 = 0;\n        long sum15 = 0;\n        long max15
    = 0;\n        long sum16 = 0;\n        long max16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    sum19 = 0;\n        long max19 = 0;\n        long sum20 = 0;\n        long max20
    = 0;\n        long sum21 = 0;\n        long max21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long sum23 = 0;\n        long max23 = 0;\n        long
    sum24 = 0;\n        long max24 = 0;\n        long sum25 = 0;\n        long max25
    = 0;\n        long sum26 = 0;\n        long max26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    sum29 = 0;\n        long max29 = 0;\n        long sum30 = 0;\n        long max30
    = 0;\n        long sum31 = 0;\n        long max31 = 0;\n        long sum32 = 0;\n
    \       long max32 = 0;\n        long sum33 = 0;\n        long max33 = 0;\n        long
    sum34 = 0;\n        long max34 = 0;\n        long sum35 = 0;\n        long max35
    = 0;\n        long sum36 = 0;\n        long max36 = 0;\n        long sum37 = 0;\n
    \       long max37 = 0;\n        long sum38 = 0;\n        long max38 = 0;\n        long
    sum39 = 0;\n        long max39 = 0;\n        long sum40 = 0;\n        long max40
    = 0;\n        long sum41 = 0;\n        long max41 = 0;\n        long sum42 = 0;\n
    \       long max42 = 0;\n        long sum43 = 0;\n        long max\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk0q0bfkc.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpk0q0bfkc.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 1; i < n; i++) {\n            sum = 0;\n            for (int j = i; j < n;
    j++) {\n                for (int k = j; k < n; k++) {\n                    sum
    += a[k];\n                }\n            }\n            if (sum % 3 == 0) {\n
    \               max = Math.Max(max, sum);\n            }\n            a[i] = i
    * i - i + 1;\n        }\n        return max;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5sj1lo82.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long min3 = 0;\n        long
    sum4 = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long sum5 =
    0;\n        long max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long
    max6 = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 =
    0;\n        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long min9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n
    \       long sum11 = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long
    sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n        long sum13
    = 0;\n        long max13 = 0;\n        long min13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long min14 = 0;\n        long sum15 = 0;\n        long
    max15 = 0;\n        long min15 = 0;\n        long sum16 = 0;\n        long max16
    = 0;\n        long min16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n
    \       long min17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    min18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n
    \       long sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long
    sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23
    = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n        long
    max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n        long max26
    = 0;\n        long min26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n
    \       long min27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    min28 = 0;\n        long sum29 = 0;\n        long max29 = 0;\n        long min\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptwqtgbrm.cs(105,17): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpli5hqaa3.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxSum
    = 0;\n        long maxSum2 = 0;\n        long maxSum3 = 0;\n        long maxSum4
    = 0;\n        long maxSum5 = 0;\n        long maxSum6 = 0;\n        long maxSum7
    = 0;\n        long maxSum8 = 0;\n        long maxSum9 = 0;\n        long maxSum10
    = 0;\n        long maxSum11 = 0;\n        long maxSum12 = 0;\n        long maxSum13
    = 0;\n        long maxSum14 = 0;\n        long maxSum15 = 0;\n        long maxSum16
    = 0;\n        long maxSum17 = 0;\n        long maxSum18 = 0;\n        long maxSum19
    = 0;\n        long maxSum20 = 0;\n        long maxSum21 = 0;\n        long maxSum22
    = 0;\n        long maxSum23 = 0;\n        long maxSum24 = 0;\n        long maxSum25
    = 0;\n        long maxSum26 = 0;\n        long maxSum27 = 0;\n        long maxSum28
    = 0;\n        long maxSum29 = 0;\n        long maxSum30 = 0;\n        long maxSum31
    = 0;\n        long maxSum32 = 0;\n        long maxSum33 = 0;\n        long maxSum34
    = 0;\n        long maxSum35 = 0;\n        long maxSum36 = 0;\n        long maxSum37
    = 0;\n        long maxSum38 = 0;\n        long maxSum39 = 0;\n        long maxSum40
    = 0;\n        long maxSum41 = 0;\n        long maxSum42 = 0;\n        long maxSum43
    = 0;\n        long maxSum44 = 0;\n        long maxSum45 = 0;\n        long maxSum46
    = 0;\n        long maxSum47 = 0;\n        long maxSum48 = 0;\n        long maxSum49
    = 0;\n        long maxSum50 = 0;\n        long maxSum51 = 0;\n        long maxSum52
    = 0;\n        long maxSum53 = 0;\n        long maxSum54 = 0;\n        long maxSum55
    = 0;\n        long maxSum56 = 0;\n        long maxSum57 = 0;\n        long maxSum58
    = 0;\n        long maxSum59 = 0;\n        long maxSum60 = 0;\n        long maxSum61
    = 0;\n        long maxSum62 = 0;\n        long maxSum63 = 0;\n        long maxSum64
    = 0;\n        long maxSum65 = 0;\n        long maxSum66 = 0;\n        long maxSum67
    = 0;\n        long maxSum68 = 0;\n        long maxSum69 = 0;\n        long maxSum70
    = 0;\n        long maxSum71 = 0;\n        \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx_uk41vw.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd1zraoj2.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpd1zraoj2.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpd1zraoj2.cs(20,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(21,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(22,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(23,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(24,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(25,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(26,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(27,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(28,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(29,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(30,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(31,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(32,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(33,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(34,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(35,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(36,14): warning CS0219: The variab'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_uc3by5y.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp_uc3by5y.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,41): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,49): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n            }\n        }\n        long sum2 = 0;\n        for (int i = 0;
    i < n; i++) {\n            sum2 += a[i];\n        }\n        if (sum2 % 3 == 0)
    {\n            count++;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98aefcc9ae3045fd90d6439d59144bd2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <98aefcc9ae3045fd90d6439d59144bd2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n
    \                   if (temp % 3 == 0) {\n                        sum += temp;\n
    \                   }\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp27pbvvn2.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp;\n
    \       long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n
    \       long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n
    \       long temp10;\n        long temp11;\n        long temp12;\n        long
    temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n        long
    temp17;\n        long temp18;\n        long temp19;\n        long temp20;\n        long
    temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n        long
    temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n        long
    temp29;\n        long temp30;\n        long temp31;\n        long temp32;\n        long
    temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n        long
    temp37;\n        long temp38;\n        long temp39;\n        long temp40;\n        long
    temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n        long
    temp45;\n        long temp46;\n        long temp47;\n        long temp48;\n        long
    temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n        long
    temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n        long
    temp57;\n        long temp58;\n        long temp59;\n        long temp60;\n        long
    temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n        long
    temp65;\n        long temp66;\n        long temp67;\n        long temp68;\n        long
    temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n        long
    temp73;\n        long temp74;\n        long temp75;\n        long temp76;\n        long
    temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n        long
    temp81;\n        long temp82;\n        long temp83;\n        long temp84;\n        long
    temp85;\n        long temp\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd368aic_.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpd368aic_.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long temp;\n
    \       long temp2;\n        long temp3;\n        for (int i = 0; i < n; i++)
    {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for
    (int k = 0; k < n; k++) {\n                    if (i < j && j < k && a[i] + a[j]
    + a[k] == sum) {\n                        temp = a[i];\n                        temp2
    = a[j];\n                        temp3 = a[k];\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzy3uj9al.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpzy3uj9al.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzy3uj9al.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzy3uj9al.cs(31,43): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzy3uj9al.cs(31,50): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzy3uj9al.cs(31,57): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzy3uj9al.cs(32,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzy3uj9al.cs(33,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzy3uj9al.cs(34,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxSum
    = 0;\n        long maxSumTriples = 0;\n        long maxTriples = 0;\n        long
    maxTriplesSum = 0;\n        long maxTriplesSumTriples = 0;\n        long maxTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriples = 0;\n        long maxTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriples = 0;\n        long
    maxTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum = 0;\n
    \       long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples = 0;\n
    \       long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum =
    0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriples
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSumTriplesSum
    = 0;\n        long maxTriplesSum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpctiamntq.cs(42,27): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpblvfde5e.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpblvfde5e.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpblvfde5e.cs(20,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(21,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(22,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(23,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(24,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(25,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(26,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(27,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(28,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(29,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(30,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(31,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(32,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(33,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(34,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(35,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(36,14): warning CS02'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long max
    = 0;\n        long temp = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    temp = a[i] + a[j] + a[k];\n                    if (temp
    % 3 == 0) {\n                        count++;\n                        if (temp
    > max) {\n                            max = temp;\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6xr1upeb.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp6xr1upeb.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp6xr1upeb.cs(29,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp6xr1upeb.cs(29,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp6xr1upeb.cs(29,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp6xr1upeb.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp;\n
    \       long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n
    \       long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n
    \       long temp10;\n        long temp11;\n        long temp12;\n        long
    temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n        long
    temp17;\n        long temp18;\n        long temp19;\n        long temp20;\n        long
    temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n        long
    temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n        long
    temp29;\n        long temp30;\n        long temp31;\n        long temp32;\n        long
    temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n        long
    temp37;\n        long temp38;\n        long temp39;\n        long temp40;\n        long
    temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n        long
    temp45;\n        long temp46;\n        long temp47;\n        long temp48;\n        long
    temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n        long
    temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n        long
    temp57;\n        long temp58;\n        long temp59;\n        long temp60;\n        long
    temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n        long
    temp65;\n        long temp66;\n        long temp67;\n        long temp68;\n        long
    temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n        long
    temp73;\n        long temp74;\n        long temp75;\n        long temp76;\n        long
    temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n        long
    temp81;\n        long temp82;\n        long temp83;\n        long temp84;\n        long
    temp85;\n        long temp\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd368aic_.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpd368aic_.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 1; i <= n; i++) {\n            sum += i * i - i + 1;\n        }\n        for
    (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                for
    (int k = 1; k <= n; k++) {\n                    if (i != j && j != k && k != i
    && a[i] + a[j] + a[k] == sum) {\n                        a[i] = a[j];\n                        a[j]
    = a[k];\n                        a[k] = i;\n                        max = Math.Max(max,
    a[i]);\n                    }\n                }\n            }\n        }\n        return
    max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4vbzx2lc.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long maxTriples
    = 0;\n        long maxTriple = 0;\n        long sumTriples = 0;\n        long
    sumTriple = 0;\n        long sumTriple2 = 0;\n        long sumTriple3 = 0;\n        long
    sumTriple4 = 0;\n        long sumTriple5 = 0;\n        long sumTriple6 = 0;\n
    \       long sumTriple7 = 0;\n        long sumTriple8 = 0;\n        long sumTriple9
    = 0;\n        long sumTriple10 = 0;\n        long sumTriple11 = 0;\n        long
    sumTriple12 = 0;\n        long sumTriple13 = 0;\n        long sumTriple14 = 0;\n
    \       long sumTriple15 = 0;\n        long sumTriple16 = 0;\n        long sumTriple17
    = 0;\n        long sumTriple18 = 0;\n        long sumTriple19 = 0;\n        long
    sumTriple20 = 0;\n        long sumTriple21 = 0;\n        long sumTriple22 = 0;\n
    \       long sumTriple23 = 0;\n        long sumTriple24 = 0;\n        long sumTriple25
    = 0;\n        long sumTriple26 = 0;\n        long sumTriple27 = 0;\n        long
    sumTriple28 = 0;\n        long sumTriple29 = 0;\n        long sumTriple30 = 0;\n
    \       long sumTriple31 = 0;\n        long sumTriple32 = 0;\n        long sumTriple33
    = 0;\n        long sumTriple34 = 0;\n        long sumTriple35 = 0;\n        long
    sumTriple36 = 0;\n        long sumTriple37 = 0;\n        long sumTriple38 = 0;\n
    \       long sumTriple39 = 0;\n        long sumTriple40 = 0;\n        long sumTriple41
    = 0;\n        long sumTriple42 = 0;\n        long sumTriple43 = 0;\n        long
    sumTriple44 = 0;\n        long sumTriple45 = 0;\n        long sumTriple46 = 0;\n
    \       long sumTriple47 = 0;\n        long sumTriple48 = 0;\n        long sumTriple49
    = 0;\n        long sumTriple50 = 0;\n        long sumTriple51 = 0;\n        long
    sumTriple52 = 0;\n        long sumTriple53 = 0;\n        long sumTriple54 = 0;\n
    \       long sumTriple55 = 0;\n        long sumTriple56 = 0;\n        long sumTriple57
    = 0;\n        long sumTriple58 = 0;\n        long sumTriple59 = 0;\n        long
    sumTriple60\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4qn_euds.cs(83,25): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgpkd3duq.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpgpkd3duq.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpgpkd3duq.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long sumOfSquares
    = 0;\n        long maxOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSum = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares =
    0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long
    maxSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long maxSumOfSquares
    = 0;\n        long maxSumOfSquares = 0;\n        \n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmviaqwud.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfmk6e_n5.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpfmk6e_n5.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpfmk6e_n5.cs(24,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpfmk6e_n5.cs(32,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpfmk6e_n5.cs(32,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpfmk6e_n5.cs(32,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpfmk6e_n5.cs(32,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpfmk6e_n5.cs(32,55): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpfmk6e_n5.cs(32,62): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long max
    = 0;\n        long min = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpldheu83h.cs(104,17): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp;\n        long temp2;\n        for (int i = 0; i < n;
    i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int i = 0;
    i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n
    \                   if (temp % 3 == 0) {\n                        count++;\n                    }\n
    \                   if (temp > max) {\n                        max = temp;\n                    }\n
    \               }\n            }\n        }\n        Console.WriteLine(\"Max Triples
    : {0}\", max);\n        Console.WriteLine(\"Count : {0}\", count);\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo6hmt9p2.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpblvfde5e.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpblvfde5e.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpblvfde5e.cs(20,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(21,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(22,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(23,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(24,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(25,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(26,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(27,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(28,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(29,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(30,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(31,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(32,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(33,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(34,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(35,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpblvfde5e.cs(36,14): warning CS02'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long sumOfSquares
    = 0;\n        long sumOfSquareOfProducts = 0;\n        long productOfProducts
    = 0;\n        long productOfProductOfProducts = 0;\n        long productOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProducts = 0;\n        long
    productOfProductOfProductOfProductOfProductOfProducts = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        long productOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProductOfProducts
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2rld6j12.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp;\n
    \       long count = 0;\n        long temp2;\n        long temp3;\n        long
    temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n        long
    temp8;\n        long temp9;\n        long temp10;\n        long temp11;\n        long
    temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n        long
    temp16;\n        long temp17;\n        long temp18;\n        long temp19;\n        long
    temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n        long
    temp24;\n        long temp25;\n        long temp26;\n        long temp27;\n        long
    temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n        long
    temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n        long
    temp36;\n        long temp37;\n        long temp38;\n        long temp39;\n        long
    temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n        long
    temp44;\n        long temp45;\n        long temp46;\n        long temp47;\n        long
    temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n        long
    temp52;\n        long temp53;\n        long temp54;\n        long temp55;\n        long
    temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n        long
    temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n        long
    temp64;\n        long temp65;\n        long temp66;\n        long temp67;\n        long
    temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n        long
    temp72;\n        long temp73;\n        long temp74;\n        long temp75;\n        long
    temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n        long
    temp80;\n        long temp81;\n        long temp82;\n        long temp83;\n        long
    temp84;\n        long temp85;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl12ekem6.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long min3 = 0;\n        long
    sum4 = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long sum5 =
    0;\n        long max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long
    max6 = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 =
    0;\n        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long
    min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long min9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n
    \       long sum11 = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long
    sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n        long sum13
    = 0;\n        long max13 = 0;\n        long min13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long min14 = 0;\n        long sum15 = 0;\n        long
    max15 = 0;\n        long min15 = 0;\n        long sum16 = 0;\n        long max16
    = 0;\n        long min16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n
    \       long min17 = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long
    min18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n
    \       long sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long
    sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23
    = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n        long
    max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n        long max26
    = 0;\n        long min26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n
    \       long min27 = 0;\n        long sum28 = 0;\n        long max28 = 0;\n        long
    min28 = 0;\n        long sum29 = 0;\n        long max29 = 0;\n        long \n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpanaol47w.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpanaol47w.cs(105,13): error CS1001: Identifier expected

    /tmp/tmpanaol47w.cs(105,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_uc3by5y.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp_uc3by5y.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,41): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_uc3by5y.cs(32,49): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphbx83vij.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd1zraoj2.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpd1zraoj2.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpd1zraoj2.cs(20,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(21,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(22,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(23,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(24,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(25,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(26,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(27,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(28,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(29,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(30,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(31,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(32,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(33,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(34,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(35,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmpd1zraoj2.cs(36,14): warning CS0219: The variab'
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            sum2
    += a[i];\n        }\n        if (sum2 % 3 == 0) {\n            return max;\n        }\n
    \       return -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8fq7m1bb.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long sumOfSquares = 0;\n        long sumOfSquareOfSums = 0;\n        long
    sumOfSquareOfSumOfSquares = 0;\n        long sumOfSquareOfSumOfSquareOfSums =
    0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquares = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSums
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares = 0;\n
    \       long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums = 0;\n        long
    sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares = 0;\n        long
    sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums = 0;\n        long
    sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums
    = 0;\n        long sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOf\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7obkzqdt.cs(41,97): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        Array.Sort(a);\n        long sum = 0;\n        for (int
    i = 0; i < n; i++) {\n            sum += a[i];\n        }\n        long maxSum
    = sum;\n        for (int i = 0; i < n; i++) {\n            long sum = 0;\n            for
    (int j = i + 1; j < n; j++) {\n                sum += a[j];\n            }\n            if
    (sum % 3 == 0) {\n                maxSum = Math.Max(maxSum, sum);\n            }\n
    \       }\n        return maxSum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpngkl563r.cs(26,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long sumOfSquares = 0;\n        long squareOfSum = 0;\n        long
    squareOfSquares = 0;\n        long sumOfSquareOfSquares = 0;\n        long squareOfSumOfSquares
    = 0;\n        long maxOfSquares = 0;\n        long maxOfSum = 0;\n        long
    maxOfSumOfSquares = 0;\n        long maxOfSquareOfSum = 0;\n        long maxOfSumOfSquareOfSquares
    = 0;\n        long maxOfSquareOfSumOfSquares = 0;\n        long maxOfSumOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquares = 0;\n        long
    maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquares = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long maxOfSumOfSquareOfSquareOfSquareOfSquare\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8lkhnmms.cs(50,54): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long max
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k]) {\n                        count++;\n
    \                   }\n                    if (a[j] < a[k] && a[j] < a[i]) {\n
    \                       count++;\n                    }\n                    if
    (a[k] < a[i] && a[k] < a[j]) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        max = sum / 3;\n        if
    (count > max) {\n            max = count;\n        }\n        return max;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgscpz20h.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpgscpz20h.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(24,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(29,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(29,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(29,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(29,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(32,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(32,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(32,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(32,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(35,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(35,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(35,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpgscpz20h.cs(35,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpelsunqny.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpelsunqny.cs(103,19): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n
    \           a[i] = i * i - i + 1;\n            sum += a[i];\n        }\n        long
    max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j
    < n; j++) {\n                if (j > i) {\n                    for (int k = 0;
    k < n; k++) {\n                        if ((i + j + k) == sum) {\n                            if
    (a[i] < a[j]) {\n                                if (a[i] < a[k]) {\n                                    max
    = Math.Max(max, a[i]);\n                                }\n                                else
    {\n                                    max = Math.Max(max, a[k]);\n                                }\n
    \                           }\n                            else {\n                                if
    (a[j] < a[k]) {\n                                    max = Math.Max(max, a[j]);\n
    \                               }\n                                else {\n                                    max
    = Math.Max(max, a[k]);\n                                }\n                            }\n
    \                       }\n                    }\n                }\n            }\n
    \       }\n        return max;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppwsf1wjh.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmppwsf1wjh.cs(21,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(22,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(30,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(30,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(31,37): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(31,44): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(32,57): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(35,57): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(39,37): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(39,44): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(40,57): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmppwsf1wjh.cs(43,57): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        sum
    += temp;\n                        if (sum > max) {\n                            max
    = sum;\n                        }\n                    }\n                }\n
    \           }\n        }\n        return max;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9iay2y4b.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        long count
    = 0;\n        long max = 0;\n        long temp2;\n        long temp3;\n        long
    temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n        long
    temp8;\n        long temp9;\n        long temp10;\n        long temp11;\n        long
    temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n        long
    temp16;\n        long temp17;\n        long temp18;\n        long temp19;\n        long
    temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n        long
    temp24;\n        long temp25;\n        long temp26;\n        long temp27;\n        long
    temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n        long
    temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n        long
    temp36;\n        long temp37;\n        long temp38;\n        long temp39;\n        long
    temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n        long
    temp44;\n        long temp45;\n        long temp46;\n        long temp47;\n        long
    temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n        long
    temp52;\n        long temp53;\n        long temp54;\n        long temp55;\n        long
    temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n        long
    temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n        long
    temp64;\n        long temp65;\n        long temp66;\n        long temp67;\n        long
    temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n        long
    temp72;\n        long temp73;\n        long temp74;\n        long temp75;\n        long
    temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n        long
    temp80;\n        long temp81;\n        long temp82;\n        long temp83;\n        long
    temp84;\n        long temp85;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj_p3gmne.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n
    \       long count2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n        long
    count3 = 0;\n        long sum4 = 0;\n        long temp4 = 0;\n        long count4
    = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n        long count5 = 0;\n
    \       long sum6 = 0;\n        long temp6 = 0;\n        long count6 = 0;\n        long
    sum7 = 0;\n        long temp7 = 0;\n        long count7 = 0;\n        long sum8
    = 0;\n        long temp8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n
    \       long temp9 = 0;\n        long count9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long count10 = 0;\n        long sum11 = 0;\n        long
    temp11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long
    temp12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n        long
    temp13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n        long
    temp14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n        long
    temp15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n        long
    temp16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long
    temp17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n        long
    temp19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long
    temp20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n        long
    temp21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n        long
    temp22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n        long
    temp23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n        long
    temp24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n        long
    temp25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n        long
    temp27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n        long
    temp28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n        long
    temp29 = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptv1i3c_l.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmptv1i3c_l.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmptv1i3c_l.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmptv1i3c_l.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(22,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(23,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(25,14): warning CS0219: The variable ''count2'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(26,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(27,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(28,14): warning CS0219: The variable ''count3'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(29,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(30,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(31,14): warning CS0219: The variable ''count4'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(32,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(33,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(34,14): warning CS0219: The variable ''count5'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(35,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmptv1i3c_l.cs(36,14): warning CS0219: The va'
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long count = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6pnk81b7.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp6pnk81b7.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21x7kjz8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            sum2
    += a[i] + a[i] + a[i];\n        }\n        return sum2 % 3 == 0 ? max : 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_nhobxs3.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp_nhobxs3.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_nhobxs3.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_nhobxs3.cs(30,21): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_nhobxs3.cs(30,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_nhobxs3.cs(30,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long temp2
    = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long
    temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84
    = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpli5hqaa3.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    long sum = a[i] + a[j] + a[k];\n                    if
    (sum % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppnkkwxul.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n
    \                   if (temp % 3 == 0) {\n                        sum += temp;\n
    \                   }\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp27pbvvn2.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long sum
    = 0;\n        long a[] = new long[n];\n        long temp;\n        long sum1 =
    0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum83 = 0;\n\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4z38e8ik.cs(19,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long sum2 = 0;\n        long sum3
    = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n
    \       long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long
    sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13
    = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n
    \       long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long
    sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23
    = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long
    sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33
    = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n
    \       long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long
    sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43
    = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long
    sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53
    = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long
    sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63
    = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n
    \       long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long
    sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73
    = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long
    sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83
    = 0;\n        long sum84 = 0;\n        long sum85\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpelsunqny.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpelsunqny.cs(103,19): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8dqaq1bj.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8dqaq1bj.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp8dqaq1bj.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp8dqaq1bj.cs(36,14): warning CS0219:'
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        long temp2;\n
    \       long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n
    \       long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n
    \       long temp11;\n        long temp12;\n        long temp13;\n        long
    temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n        long
    temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n        long
    temp22;\n        long temp23;\n        long temp24;\n        long temp25;\n        long
    temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n        long
    temp30;\n        long temp31;\n        long temp32;\n        long temp33;\n        long
    temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n        long
    temp38;\n        long temp39;\n        long temp40;\n        long temp41;\n        long
    temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n        long
    temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n        long
    temp50;\n        long temp51;\n        long temp52;\n        long temp53;\n        long
    temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n        long
    temp58;\n        long temp59;\n        long temp60;\n        long temp61;\n        long
    temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n        long
    temp66;\n        long temp67;\n        long temp68;\n        long temp69;\n        long
    temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n        long
    temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n        long
    temp78;\n        long temp79;\n        long temp80;\n        long temp81;\n        long
    temp82;\n        long temp83;\n        long temp84;\n        long temp85;\n        long
    temp86;\n        long \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv1k38n8r.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpv1k38n8r.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpv1k38n8r.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long[]
    a = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpap8cof_e.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpap8cof_e.cs(20,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpap8cof_e.cs(21,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(22,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(23,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(24,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(25,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(26,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(27,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(28,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(29,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(30,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(31,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(32,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(33,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(34,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(35,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(36,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpap8cof_e.cs(37,14): w'
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp73glt0bb.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976304
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4c820bbu.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp4c820bbu.cs(23,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(28,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(28,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(28,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4c820bbu.cs(19,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvi5y5nmg.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpco96m1pi.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpco96m1pi.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpco96m1pi.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n            }\n        }\n
    \       long count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    long sum = a[i] + a[j] + a[k];\n                    if
    (sum % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcvupnglm.cs(18,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpcvupnglm.cs(22,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcvupnglm.cs(23,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcvupnglm.cs(32,26): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpcvupnglm.cs(32,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcvupnglm.cs(32,39): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcvupnglm.cs(32,46): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp;\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        sum
    += temp;\n                    }\n                }\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnqb0art8.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long min
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long min2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long min3 = 0;\n        long count3 = 0;\n        long sum4
    = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long count4 = 0;\n
    \       long sum5 = 0;\n        long max5 = 0;\n        long min5 = 0;\n        long
    count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long min6
    = 0;\n        long count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n
    \       long min7 = 0;\n        long count7 = 0;\n        long sum8 = 0;\n        long
    max8 = 0;\n        long min8 = 0;\n        long count8 = 0;\n        long sum9
    = 0;\n        long max9 = 0;\n        long min9 = 0;\n        long count9 = 0;\n
    \       long sum10 = 0;\n        long max10 = 0;\n        long min10 = 0;\n        long
    count10 = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11
    = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long max12 =
    0;\n        long min12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long min13 = 0;\n        long count13 = 0;\n
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n        long
    count14 = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long min15
    = 0;\n        long count15 = 0;\n        long sum16 = 0;\n        long max16 =
    0;\n        long min16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long min17 = 0;\n        long count17 = 0;\n
    \       long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n        long
    count18 = 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19
    = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long max20 =
    0;\n        long min20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long min21 = 0;\n        long count21 = 0;\n
    \       long sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long
    count\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1c409vk9.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sumOfSquares = 0;\n        long sumOfCubes
    = 0;\n        long sumOfCubesSquare = 0;\n        long sumOfCubesSquareSum = 0;\n
    \       long sumOfCubesSquareSumSquare = 0;\n        long sumOfCubesSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquare = 0;\n        long sumOfCubesSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquare = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum
    = 0;\n        long sumOfCubesSquareSumSquareSumSquareSumSquareSum = 0;\n        long
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppgr9g_bf.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmppgr9g_bf.cs(56,13): error CS1001: Identifier expected

    /tmp/tmppgr9g_bf.cs(56,13): error CS1002: ; expected

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long temp
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n
    \       long count2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n        long
    count3 = 0;\n        long sum4 = 0;\n        long temp4 = 0;\n        long count4
    = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n        long count5 = 0;\n
    \       long sum6 = 0;\n        long temp6 = 0;\n        long count6 = 0;\n        long
    sum7 = 0;\n        long temp7 = 0;\n        long count7 = 0;\n        long sum8
    = 0;\n        long temp8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n
    \       long temp9 = 0;\n        long count9 = 0;\n        long sum10 = 0;\n        long
    temp10 = 0;\n        long count10 = 0;\n        long sum11 = 0;\n        long
    temp11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long
    temp12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n        long
    temp13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n        long
    temp14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n        long
    temp15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n        long
    temp16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long
    temp17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n        long
    temp18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n        long
    temp19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n        long
    temp20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n        long
    temp21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n        long
    temp22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n        long
    temp23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n        long
    temp24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n        long
    temp25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n        long
    temp26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n        long
    temp27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n        long
    temp28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n        long
    temp29\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmqcaktnf.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpmqcaktnf.cs(105,20): error CS1002: ; expected

    '
  timestamp: 1659976305
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        for (int
    i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max)\n                max = sum;\n        }\n        long
    count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i
    + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    (a[i] == a[j] && a[j] == a[k]) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpicw8lnsu.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long max = 0;\n        long count
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n            if (sum > max) {\n                max =
    sum;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5t0mg1no.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // Explanation: \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple
    is (1, 7, 13).\n    public static long GetMaxTriples(long n) {\n        long a[]
    = new long[n];\n        long sum = 0;\n        long temp = 0;\n        long max
    = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83
    = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm_u8ov4f.cs(18,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976306

name: HumanEval_127_intersection
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given two intervals,\n    // where each interval is\
  \ a pair of integers. For example, interval = (start, end) = (1, 2).\n    // The\
  \ given intervals are closed which means that the interval (start, end)\n    //\
  \ includes both start and end.\n    // For each given interval, it is assumed that\
  \ its start is less or equal its end.\n    // Your task is to determine whether\
  \ the length of intersection of these two \n    // intervals is a prime number.\n\
  \    // Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n  \
  \  // which its length is 1, which not a prime number.\n    // If the length of\
  \ the intersection is a prime number, return \"YES\",\n    // otherwise, return\
  \ \"NO\".\n    // If the two intervals don't intersect, return \"NO\".\n    // [input/output]\
  \ samples:\n    public static string Intersection(Tuple<long, long> interval1, Tuple<long,\
  \ long> interval2) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(2L, 3L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-1L,\
  \ 1L)), (Tuple.Create(0L, 4L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-3L,\
  \ -1L)), (Tuple.Create(-5L, 5L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ 2L)), (Tuple.Create(-4L, 0L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-11L,\
  \ 2L)), (Tuple.Create(-1L, -1L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(3L, 5L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(1L, 2L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ -2L)), (Tuple.Create(-3L, -2L))).Equals((\"NO\")));\n    }\n\n}\n"
completions: ["        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length);\n        long max2 = max / 2;\n \
    \       long max3 = max2 / 2;\n        long max4 = max3 / 2;\n        long max5\
    \ = max4 / 2;\n        long max6 = max5 / 2;\n        long max7 = max6 / 2;\n\
    \        long max8 = max7 / 2;\n        long max9 = max8 / 2;\n        long max10\
    \ = max9 / 2;\n        long max11 = max10 / 2;\n        long max12 = max11 / 2;\n\
    \        long max13 = max12 / 2;\n        long max14 = max13 / 2;\n        long\
    \ max15 = max14 / 2;\n        long max16 = max15 / 2;\n        long max17 = max16\
    \ / 2;\n        long max18 = max17 / 2;\n        long max19 = max18 / 2;\n   \
    \     long max20 = max19 / 2;\n        long max21 = max20 / 2;\n        long max22\
    \ = max21 / 2;\n        long max23 = max22 / 2;\n        long max24 = max23 /\
    \ 2;\n        long max25 = max24 / 2;\n        long max26 = max25 / 2;\n     \
    \   long max27 = max26 / 2;\n        long max28 = max27 / 2;\n        long max29\
    \ = max28 / 2;\n        long max30 = max29 / 2;\n        long max31 = max30 /\
    \ 2;\n        long max32 = max31 / 2;\n        long max33 = max32 / 2;\n     \
    \   long max34 = max33 / 2;\n        long max35 = max34 / 2;\n        long max36\
    \ = max35 / 2;\n        long max37 = max36 / 2;\n        long max38 = max37 /\
    \ 2;\n        long max39 = max38 / 2;\n        long max40 = max39 / 2;\n     \
    \   long max41 = max40 / 2;\n        long max42 = max41 / 2;\n        long max43\
    \ = max42 / 2;\n        long max44 = max43 / 2;\n        long max45 = max44 /\
    \ 2;\n        long max46 = max45 / 2;\n        long max47 = max46 / 2;\n     \
    \   long max48 = max47 / ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        bool isPrime =\
    \ true;\n        long prime = 2;\n        while (isPrime) {\n            if (length\
    \ == prime)\n                return \"YES\";\n            if (length == prime\
    \ + 1) {\n                isPrime = false;\n            }\n            prime++;\n\
    \        }\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long prime = 2;\n        while\
    \ (isPrime) {\n            if (length == prime)\n                return \"YES\"\
    ;\n            if (length < prime)\n                isPrime = false;\n       \
    \     prime++;\n        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long prime = 2;\n        while\
    \ (isPrime) {\n            if (length == prime)\n                return \"YES\"\
    ;\n            if (length == prime + 1)\n                return \"NO\";\n    \
    \        if (length == prime * 2)\n                isPrime = false;\n        \
    \    prime++;\n        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long max = (long)Math.Sqrt(length);\n \
    \       long max2 = max * max;\n        long max3 = max2 * max;\n        long\
    \ max4 = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5\
    \ * max;\n        long max7 = max6 * max;\n        long max8 = max7 * max;\n \
    \       long max9 = max8 * max;\n        long max10 = max9 * max;\n        long\
    \ max11 = max10 * max;\n        long max12 = max11 * max;\n        long max13\
    \ = max12 * max;\n        long max14 = max13 * max;\n        long max15 = max14\
    \ * max;\n        long max16 = max15 * max;\n        long max17 = max16 * max;\n\
    \        long max18 = max17 * max;\n        long max19 = max18 * max;\n      \
    \  long max20 = max19 * max;\n        long max21 = max20 * max;\n        long\
    \ max22 = max21 * max;\n        long max23 = max22 * max;\n        long max24\
    \ = max23 * max;\n        long max25 = max24 * max;\n        long max26 = max25\
    \ * max;\n        long max27 = max26 * max;\n        long max28 = max27 * max;\n\
    \        long max29 = max28 * max;\n        long max30 = max29 * max;\n      \
    \  long max31 = max30 * max;\n        long max32 = max31 * max;\n        long\
    \ max33 = max32 * max;\n        long max34 = max33 * max;\n        long max35\
    \ = max34 * max;\n        long max36 = max35 * max;\n        long max37 = max36\
    \ * max;\n        long max38 = max37 * max;\n        long max39 = max38 * max;\n\
    \        long max40 = max39 * max;\n        long max41 = max40 * max;\n      \
    \  long max42 = max41 * max;\n        long max43 = max42 * max;\n        long\
    \ max44 = ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ + 1);\n        long mid = start + (end - start) / 2;\n        bool isPrime =\
    \ true;\n        long count = 0;\n        long prime = start;\n        while (isPrime\
    \ && prime <= max) {\n            isPrime = true;\n            long test = (long)Math.Sqrt(prime);\n\
    \            while (test <= max) {\n                if (prime % test == 0) {\n\
    \                    isPrime = false;\n                    break;\n          \
    \      }\n                test += 1;\n            }\n            if (isPrime)\n\
    \                count += 1;\n            prime += 1;\n        }\n        if (count\
    \ % 2 == 0)\n            return \"NO\";\n        return \"YES\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long mid = (start + end) / 2;\n        bool isPrime\
    \ = true;\n        long prime = start;\n        while (prime < end) {\n      \
    \      if (IsPrime(prime)) {\n                isPrime = true;\n            } else\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \            prime++;\n        }\n        if (isPrime) return \"YES\";\n     \
    \   return \"NO\";", "        long start = interval1.Item1;\n        long end\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = end - start;\n        length = length\
    \ * end2 - start2 * length;\n        if (length == 0) return \"NO\";\n       \
    \ long start3 = start;\n        long end3 = end;\n        long start4 = start2;\n\
    \        long end4 = end2;\n        long length2 = end3 - start3;\n        long\
    \ length3 = end4 - start4;\n        long length4 = length2 * length3;\n      \
    \  long length5 = length4 * length3;\n        long length6 = length5 * length3;\n\
    \        long length7 = length6 * length3;\n        long length8 = length7 * length3;\n\
    \        long length9 = length8 * length3;\n        long length10 = length9 *\
    \ length3;\n        long length11 = length10 * length3;\n        long length12\
    \ = length11 * length3;\n        long length13 = length12 * length3;\n       \
    \ long length14 = length13 * length3;\n        long length15 = length14 * length3;\n\
    \        long length16 = length15 * length3;\n        long length17 = length16\
    \ * length3;\n        long length18 = length17 * length3;\n        long length19\
    \ = length18 * length3;\n        long length20 = length19 * length3;\n       \
    \ long length21 = length20 * length3;\n        long length22 = length21 * length3;\n\
    \        long length23 = length22 * length3;\n        long length24 = length23\
    \ * length3;\n        long length25 = length24 * length3;\n        long length26\
    \ = length25 * length3;\n        long length27 = length26 * length3;\n       \
    \ long length28 = length27 * length3;\n        long length29 = length28 * length3;\n\
    \        long length30 = length29 * length3;\n        long length31 = length30\
    \ * length3;\n        long length32 = length31 * length3;\n        long length33\
    \ = length32 * length3;\n        long length34 = length33 * length3;\n       \
    \ long length35 = length34 * length3;\n        long length36 = length35 * length3;\n\
    \        long length37 = length36 * length3;\n        long length38 = length37\
    \ * length3;\n        long length39 = length38 * length3;\n        long length40\
    \ = length39 * length3;\n        long length41 = length40 * length3;\n       \
    \ long length42 = ", "        long start = interval1.Item1;\n        long end\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = end - start;\n        length = length\
    \ * length + end2 - start2;\n        long length = length / 2;\n        bool isPrime\
    \ = true;\n        long count = 0;\n        long temp = 0;\n        long temp2\
    \ = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 =\
    \ 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n\
    \        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n\
    \        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length + 1);\n        long mid = start + (end\
    \ - start) / 2;\n        long count = 0;\n        long sum = 0;\n        long\
    \ product = 1;\n        while (true) {\n            long num = Math.Abs(mid -\
    \ mid);\n            sum += num;\n            product *= num;\n            if\
    \ (num == 1)\n                break;\n            long temp = sum;\n         \
    \   sum = product;\n            product = temp;\n            mid = start + (end\
    \ - start) / 2;\n            count++;\n        }\n        if (count % 2 == 0)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n      \
    \      if (length == prime)\n                return \"YES\";\n            if (length\
    \ == prime + 1) {\n                isPrime = false;\n            }\n         \
    \   prime += 2;\n        }\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length * length + end2 - start2;\n        bool isPrime = true;\n\
    \        long prime = length / 2;\n        while (isPrime) {\n            if (length\
    \ < prime) {\n                isPrime = false;\n            } else {\n       \
    \         length -= prime;\n                prime = length / 2;\n            }\n\
    \        }\n        if (isPrime) {\n            return \"YES\";\n        } else\
    \ {\n            return \"NO\";\n        }", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long mid = start + (end - start)\
    \ / 2;\n        if (IsPrime(mid)) return \"YES\";\n        return \"NO\";", " \
    \       long start = interval1.Item1;\n        long end = interval1.Item2;\n \
    \       long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = (end - start) * (end2 - start2) / (end - start2) * (end\
    \ - start);\n        if (length < 2) {\n            return \"NO\";\n        }\n\
    \        if (length == 2 || length == 3) {\n            return \"YES\";\n    \
    \    }\n        long length2 = length / 2;\n        long length3 = length / 3;\n\
    \        long length4 = length / 4;\n        long length5 = length / 5;\n    \
    \    long length6 = length / 6;\n        long length7 = length / 7;\n        long\
    \ length8 = length / 8;\n        long length9 = length / 9;\n        long length10\
    \ = length / 10;\n        long length11 = length / 11;\n        long length12\
    \ = length / 12;\n        long length13 = length / 13;\n        long length14\
    \ = length / 14;\n        long length15 = length / 15;\n        long length16\
    \ = length / 16;\n        long length17 = length / 17;\n        long length18\
    \ = length / 18;\n        long length19 = length / 19;\n        long length20\
    \ = length / 20;\n        long length21 = length / 21;\n        long length22\
    \ = length / 22;\n        long length23 = length / 23;\n        long length24\
    \ = length / 24;\n        long length25 = length / 25;\n        long length26\
    \ = length / 26;\n        long length27 = length / 27;\n        long length28\
    \ = length / 28;\n        long length29 = length / 29;\n        long length30\
    \ = length / 30;\n        long length31 = length / 31;\n        long length32\
    \ = length / 32;\n        long length33 = length / 33;\n        long length34\
    \ = length / 34;\n        long length35 = length / 35;\n        long length36\
    \ = length / 36;\n        long length37 = length / 37;\n        long length38\
    \ = length / 38;\n        long length39 = length / 39;\n        long length40\
    \ = length / 40;\n        long length41 = length / 41;\n        long length42\
    \ = length / 42;\n        long length43 = length / 43;\n        long length44\
    \ = length / 44;\n        long length45 = length / 45;\n        long length46\
    \ = length / 46;\n        long length47 = length / 47;\n        long ", "    \
    \    long start = interval1.Item1;\n        long end = interval1.Item2;\n    \
    \    long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n  \
    \      long length = end - start;\n        length = length * length + end2 - start2;\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                length += prime;\n                prime++;\n\
    \            }\n        }\n        if (length == prime) {\n            return\
    \ \"YES\";\n        } else {\n            return \"NO\";\n        }", "      \
    \  long start = interval1.Item1;\n        long end = interval1.Item2;\n      \
    \  long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n    \
    \    long length = (end - start) * (end2 - start2);\n        bool isPrime = true;\n\
    \        if (length == 1) {\n            isPrime = false;\n        }\n       \
    \ else if (length == 2) {\n            long a = start;\n            long b = end;\n\
    \            long c = start2;\n            long d = end2;\n            long e\
    \ = (a + b) * (c + d);\n            long f = (b - a) * (d - c);\n            long\
    \ g = (c - a) * (d - b);\n            long h = (d - a) * (b - c);\n          \
    \  long i = (e + f) * (g + h);\n            long j = (f - e) * (g + h);\n    \
    \        long k = (g - e) * (h + f);\n            long l = (h - e) * (f + g);\n\
    \            long m = (i - j) * (k + l);\n            long n = (j - i) * (k +\
    \ l);\n            long o = (k - i) * (l + k);\n            long p = (l - i) *\
    \ (l + k);\n            long q = (i - j) * (k + l);\n            long r = (j -\
    \ i) * (k + l);\n            long s = (k - i) * (l + k);\n            long t =\
    \ (l - i) * (l + k);\n            long u = (i - j) * (k + l);\n            long\
    \ v = (j - i) * (k + l);\n            long w = (i - j) * (l + k);\n          \
    \  long x = (j - i) * (l + k);\n            long y = (i - j) * (k + l);\n    \
    \        long z = (j - i) * (k + l);\n            long A = (m + n) * (o + p);\n\
    \            long B = (m + n) * (q + r);\n            long C = (m + n) * (s +\
    \ t);\n            long D = (m + n) * (u + v);\n            long E = (m + n) *\
    \ (w + x);\n            long F = (m + n) * (y + z);\n            long G = (m +\
    \ n) * (y + z);\n            long H = (m + n) * (y + z);\n            long I =\
    \ (m + n) * (y + z);\n            long J = (m + n) * (y + z);\n            long\
    \ K = (m + n) * (y + z);\n            long L = (m + n) * (y + z);\n          \
    \  long M = (m + n) * (y + z);\n            long N = (m + n) * (y + z);\n    \
    \        long O = (m + n", "        long start = interval1.Item1;\n        long\
    \ end = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = end - start;\n        length\
    \ = length * end2 - start2 * length;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long start3 = start;\n        long end3 = end;\n        long\
    \ start4 = start2;\n        long end4 = end2;\n        long length2 = end3 - start3;\n\
    \        long length3 = end4 - start4;\n        long length4 = length2 * length3;\n\
    \        if (length4 % 2 == 0)\n            return \"NO\";\n        long length5\
    \ = length4 / 2;\n        long length6 = length5 / 2;\n        long length7 =\
    \ length6 / 2;\n        long length8 = length7 / 2;\n        long length9 = length8\
    \ / 2;\n        long length10 = length9 / 2;\n        long length11 = length10\
    \ / 2;\n        long length12 = length11 / 2;\n        long length13 = length12\
    \ / 2;\n        long length14 = length13 / 2;\n        long length15 = length14\
    \ / 2;\n        long length16 = length15 / 2;\n        long length17 = length16\
    \ / 2;\n        long length18 = length17 / 2;\n        long length19 = length18\
    \ / 2;\n        long length20 = length19 / 2;\n        long length21 = length20\
    \ / 2;\n        long length22 = length21 / 2;\n        long length23 = length22\
    \ / 2;\n        long length24 = length23 / 2;\n        long length25 = length24\
    \ / 2;\n        long length26 = length25 / 2;\n        long length27 = length26\
    \ / 2;\n        long length28 = length27 / 2;\n        long length29 = length28\
    \ / 2;\n        long length30 = length29 / 2;\n        long length31 = length30\
    \ / 2;\n        long length32 = length31 / 2;\n        long length33 = length32\
    \ / 2;\n        long length34 = length33 / 2;\n        long length35 = length34\
    \ / 2;\n        long length36 = length35 / 2;\n        long length37 = length36\
    \ / 2;\n        long length38 = length37 / 2;\n        long length39 = length38\
    \ / 2;\n        long length40 = length39 / 2;\n        long length41 = length40\
    \ / 2;\n        long length42 = length41 / 2;\n        long length43 = length42\
    \ / 2;\n        long length44 = length4", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long num = 2;\n        bool isPrime = true;\n        while\
    \ (isPrime) {\n            if (num % 2 == 0) {\n                isPrime = false;\n\
    \            }\n            num /= 2;\n        }\n        if (length == num)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = (end - start) * (end2\
    \ - start2);\n        bool isPrime = true;\n        long prime = 2;\n        while\
    \ (isPrime) {\n            if (length == prime) {\n                isPrime = false;\n\
    \            } else {\n                prime++;\n            }\n        }\n  \
    \      if (length == prime) {\n            return \"YES\";\n        } else {\n\
    \            return \"NO\";\n        }", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length * length + end2 - start2;\n        long result = length\
    \ / 2;\n        long remainder = length % 2;\n        if (remainder == 0) {\n\
    \            if (result == 1) {\n                return \"YES\";\n           \
    \ } else {\n                return \"NO\";\n            }\n        }\n       \
    \ long result2 = result - 1;\n        long result3 = result + 1;\n        bool\
    \ isPrime = true;\n        bool isPrime2 = true;\n        bool isPrime3 = true;\n\
    \        bool isPrime4 = true;\n        bool isPrime5 = true;\n        bool isPrime6\
    \ = true;\n        bool isPrime7 = true;\n        bool isPrime8 = true;\n    \
    \    bool isPrime9 = true;\n        bool isPrime10 = true;\n        bool isPrime11\
    \ = true;\n        bool isPrime12 = true;\n        bool isPrime13 = true;\n  \
    \      bool isPrime14 = true;\n        bool isPrime15 = true;\n        bool isPrime16\
    \ = true;\n        bool isPrime17 = true;\n        bool isPrime18 = true;\n  \
    \      bool isPrime19 = true;\n        bool isPrime20 = true;\n        bool isPrime21\
    \ = true;\n        bool isPrime22 = true;\n        bool isPrime23 = true;\n  \
    \      bool isPrime24 = true;\n        bool isPrime25 = true;\n        bool isPrime26\
    \ = true;\n        bool isPrime27 = true;\n        bool isPrime28 = true;\n  \
    \      bool isPrime29 = true;\n        bool isPrime30 = true;\n        bool isPrime31\
    \ = true;\n        bool isPrime32 = true;\n        bool isPrime33 = true;\n  \
    \      bool isPrime34 = true;\n        bool isPrime35 = true;\n        bool isPrime36\
    \ = true;\n        bool isPrime37 = true;\n        bool isPrime38 = true;\n  \
    \      bool isPrime39 = true;\n        bool isPrime40 = true;\n        bool isPrime41\
    \ = true;\n        bool isPrime42 = true;\n        bool isPrime43 = true;\n  \
    \      bool isPrime44 = true;\n        bool isPrime45 = true;\n        bool isPrime46\
    \ = true;\n        bool isPrime47 = true;\n        bool isPrime48 = true;\n  \
    \      bool isPrime49 = true;\n        bool isPrime50 = true;", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long inter = start + length;\n        bool isPrime\
    \ = true;\n        long i = 2;\n        while (i < inter) {\n            if (i\
    \ % 2 == 0) {\n                isPrime = false;\n                break;\n    \
    \        }\n            i += 2;\n        }\n        if (isPrime) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime && prime <\
    \ length) {\n            if (length%prime == 0) {\n                isPrime = false;\n\
    \            }\n            prime++;\n        }\n        if (isPrime) return \"\
    YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n    \
    \    long end = interval1.Item2;\n        long start2 = interval2.Item1;\n   \
    \     long end2 = interval2.Item2;\n        long length = end - start;\n     \
    \   length = length * length + end2 - start2;\n        long length2 = end - start2;\n\
    \        long length3 = length * length2;\n        long length4 = length * length;\n\
    \        long length5 = length * length3;\n        long length6 = length * length4;\n\
    \        long length7 = length * length5;\n        long length8 = length * length6;\n\
    \        long length9 = length * length7;\n        long length10 = length * length8;\n\
    \        long length11 = length * length9;\n        long length12 = length * length10;\n\
    \        long length13 = length * length11;\n        long length14 = length *\
    \ length12;\n        long length15 = length * length13;\n        long length16\
    \ = length * length14;\n        long length17 = length * length15;\n        long\
    \ length18 = length * length16;\n        long length19 = length * length17;\n\
    \        long length20 = length * length18;\n        long length21 = length *\
    \ length19;\n        long length22 = length * length20;\n        long length23\
    \ = length * length21;\n        long length24 = length * length22;\n        long\
    \ length25 = length * length23;\n        long length26 = length * length24;\n\
    \        long length27 = length * length25;\n        long length28 = length *\
    \ length26;\n        long length29 = length * length27;\n        long length30\
    \ = length * length28;\n        long length31 = length * length29;\n        long\
    \ length32 = length * length30;\n        long length33 = length * length31;\n\
    \        long length34 = length * length32;\n        long length35 = length *\
    \ length33;\n        long length36 = length * length34;\n        long length37\
    \ = length * length35;\n        long length38 = length * length36;\n        long\
    \ length39 = length * length37;\n        long length40 = length * length38;\n\
    \        long length41 = length * length39;\n        long length42 = length *\
    \ length40;\n        long length43 = length * length41;\n        long length44\
    \ = length * length42;\n        long length45 = length * length43;\n        long\
    \ length46 = length * length44;", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length + 1);\n        long mid = start + (end\
    \ - start) / 2;\n        long count = 0;\n        long sum = 0;\n        long\
    \ prime = 1;\n        while (prime <= max) {\n            long num = Math.Sqrt(prime);\n\
    \            sum += num;\n            if (sum == mid) count++;\n            if\
    \ (sum > mid) break;\n            prime++;\n        }\n        if (count == 0)\
    \ return \"NO\";\n        if (count == 1) return \"YES\";\n        long max2 =\
    \ Math.Sqrt(count);\n        long min2 = Math.Sqrt(count + 1);\n        long mid2\
    \ = start + (end - start) / 2;\n        long count2 = 0;\n        long sum2 =\
    \ 0;\n        long prime2 = 1;\n        while (prime2 <= max2) {\n           \
    \ long num2 = Math.Sqrt(prime2);\n            sum2 += num2;\n            if (sum2\
    \ == mid2) count2++;\n            if (sum2 > mid2) break;\n            prime2++;\n\
    \        }\n        if (count2 == 0) return \"NO\";\n        if (count2 == 1)\
    \ return \"YES\";\n        long max3 = Math.Sqrt(count2);\n        long min3 =\
    \ Math.Sqrt(count2 + 1);\n        long mid3 = start + (end - start) / 2;\n   \
    \     long count3 = 0;\n        long sum3 = 0;\n        long prime3 = 1;\n   \
    \     while (prime3 <= max3) {\n            long num3 = Math.Sqrt(prime3);\n \
    \           sum3 += num3;\n            if (sum3 == mid3) count3++;\n         \
    \   if (sum3 > mid3) break;\n            prime3++;\n        }\n        if (count3\
    \ == 0) return \"NO\";\n        if (count3 == 1) return \"YES\";\n        long\
    \ max4 = Math.Sqrt(count3);\n        long min4 = Math.Sqrt(count3 + 1);\n    \
    \    long mid4 = start + (end - start) / 2;\n        long count4 = 0;\n      \
    \  long sum4 = 0;\n        long prime4 = 1;\n        while (prime4 <= max4) {\n\
    \            long num4 = Math.Sqrt(prime4);\n            sum4 += num4;\n     \
    \       if (sum4 == mid4) count4++;\n            if (sum4 > mid4) break;\n   \
    \         prime4++;\n        }\n        if (count4 == 0) return \"NO\";\n    \
    \    if (count4 == 1) return \"YES\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = start;\n        while (isPrime\
    \ && prime <= end) {\n            if (length == prime) return \"YES\";\n     \
    \       isPrime = IsPrime(prime);\n            prime++;\n        }\n        return\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long start2 = Math.Min(interval2.Item1, interval1.Item1);\n\
    \        long end2 = Math.Max(interval2.Item2, interval1.Item2);\n        long\
    \ length2 = end2 - start2;\n        if (length2 == 0) return \"NO\";\n       \
    \ if (length2 == 1) return \"YES\";\n        long start3 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0) return \"NO\"\
    ;\n        if (length3 == 1) return \"YES\";\n        long start4 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end4 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        if (length4 == 1) return \"YES\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        if (length5 == 1) return \"YES\";\n        long start6 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end6 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0) return \"NO\"\
    ;\n        if (length6 == 1) return \"YES\";\n        long start7 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0) return \"NO\"\
    ;\n        if (length7 == 1) return \"YES\";\n        long start8 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end8 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        if (length8 == 1) return \"YES\";\n        long start9 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Max(interval1.Item2, interval2.Item2);",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        if (length == 1)\
    \ return \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long min\
    \ = (long)Math.Sqrt(length / 2);\n        long mid = start + max;\n        long\
    \ sum = 0;\n        long count = 0;\n        while (count < max) {\n         \
    \   sum += count;\n            count += 1;\n            if (sum % 2 == 0) mid++;\n\
    \        }\n        bool isPrime = true;\n        long prime = start;\n      \
    \  while (prime <= mid) {\n            if (IsPrime(prime)) {\n               \
    \ isPrime = true;\n                break;\n            }\n            prime +=\
    \ 2;\n        }\n        if (isPrime) return \"YES\";\n        return \"NO\";",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        long start2 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long end2 = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ length2 = end2 - start2;\n        if (length == 0 || length2 == 0) {\n     \
    \       return \"NO\";\n        }\n        long length = Math.Min(length, length2);\n\
    \        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long length3 = end3\
    \ - start3;\n        if (length3 == 0) {\n            return \"NO\";\n       \
    \ }\n        long length4 = Math.Min(length3, length2);\n        long start5 =\
    \ Math.Min(interval1.Item1, interval2.Item1);\n        long end5 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length5 = end5 - start5;\n        if (length5\
    \ == 0) {\n            return \"NO\";\n        }\n        long length6 = Math.Min(length5,\
    \ length2);\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0) {\n            return \"\
    NO\";\n        }\n        long length8 = Math.Min(length7, length2);\n       \
    \ long start9 = Math.Min(interval1.Item1, interval2.Item1);\n        long end9\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length9 = end9 -\
    \ start9;\n        if (length9 == 0) {\n            return \"NO\";\n        }\n\
    \        long length10 = Math.Min(length9, length2);\n        long start11 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end11 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length11 = end11 - start11;\n        if (length11 == 0) {\n    \
    \        return \"NO\";\n        }\n        long length12 = Math.Min(length11,\
    \ length2);\n        long start13 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end13 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length13 = end13 - start13;\n        if (length13 == 0) {\n            return\
    \ \"NO\";\n        }\n        long length14 = Math.Min(length13, length2);\n \
    \       long start15 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end15 = Math.", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ start2 = Math.Min(interval2.Item1, interval1.Item1);\n        long end2 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0) return \"NO\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0) return \"NO\";\n       \
    \ long start4 = Math.Min(interval2.Item1, interval1.Item1);\n        long end4\
    \ = Math.Max(interval2.Item2, interval1.Item2);\n        long length4 = end4 -\
    \ start4;\n        if (length4 == 0) return \"NO\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        long start6 = Math.Min(interval2.Item1, interval1.Item1);\n       \
    \ long end6 = Math.Max(interval2.Item2, interval1.Item2);\n        long length6\
    \ = end6 - start6;\n        if (length6 == 0) return \"NO\";\n        long start7\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end7 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length7 = end7 - start7;\n        if (length7\
    \ == 0) return \"NO\";\n        long start8 = Math.Min(interval2.Item1, interval1.Item1);\n\
    \        long end8 = Math.Max(interval2.Item2, interval1.Item2);\n        long\
    \ length8 = end8 - start8;\n        if (length8 == 0) return \"NO\";\n       \
    \ long start9 = Math.Min(interval1.Item1, interval2.Item1);\n        long end9\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length9 = end9 -\
    \ start9;\n        if (length9 == 0) return \"NO\";\n        long start10 = Math.Min(interval2.Item1,\
    \ interval1.Item1);\n        long end10 = Math.Max(interval2.Item2, interval1.Item2);\n\
    \        long length10 = end10 - start10;\n        if (length10 == 0) return \"\
    NO\";\n        long start11", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ + 1);\n        long mid = start + max;\n        long count = 0;\n        while\
    \ (true) {\n            long x = Math.Sqrt(mid);\n            if (x == mid)\n\
    \                return \"YES\";\n            if (x == min)\n                return\
    \ \"NO\";\n            if (x == max)\n                return \"YES\";\n      \
    \      long y = Math.Sqrt(mid - 1);\n            if (y == mid)\n             \
    \   return \"YES\";\n            if (y == min)\n                return \"NO\"\
    ;\n            if (y == max)\n                return \"YES\";\n            long\
    \ z = Math.Sqrt(mid + 1);\n            if (z == mid)\n                return \"\
    YES\";\n            if (z == min)\n                return \"NO\";\n          \
    \  if (z == max)\n                return \"YES\";\n            mid = x + y;\n\
    \            count++;\n        }", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (isPrime) {\n            if (mid % prime == 0)\n \
    \               isPrime = false;\n            else\n                prime++;\n\
    \        }\n        if (isPrime)\n            return \"YES\";\n        else\n\
    \            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = GetPrime(length);\n        if (prime == length) return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        bool\
    \ isPrime = true;\n        long i = 2;\n        while (i < length) {\n       \
    \     if (length % i == 0) {\n                isPrime = false;\n             \
    \   break;\n            }\n            i += 2;\n        }\n        if (isPrime)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long i = 2;\n        while (i < length)\
    \ {\n            if (length % i == 0) {\n                isPrime = false;\n  \
    \              break;\n            }\n            i += 2;\n        }\n       \
    \ if (isPrime) return \"YES\";\n        return \"NO\";", "        long start =\
    \ Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        long prime = length / 2;\n        if\
    \ (length == prime)\n            return \"YES\";\n        bool isPrime = true;\n\
    \        long counter = 1;\n        while (isPrime) {\n            if (length\
    \ == counter)\n                return \"YES\";\n            if (length < counter)\n\
    \                isPrime = false;\n            counter++;\n        }\n       \
    \ return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ prime = length / 2;\n        bool isPrime = true;\n        long counter = 1;\n\
    \        while (isPrime && counter < prime) {\n            if (start % counter\
    \ == 0 && end % counter == 0) {\n                isPrime = false;\n          \
    \  }\n            counter++;\n        }\n        if (isPrime) return \"YES\";\n\
    \        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long max2 = max / 2;\n        long max3 = max / 3;\n        long max5\
    \ = max / 5;\n        long max7 = max / 7;\n        long max9 = max / 9;\n   \
    \     long max11 = max / 11;\n        long max13 = max / 13;\n        long max17\
    \ = max / 17;\n        long max19 = max / 19;\n        long max23 = max / 23;\n\
    \        long max29 = max / 29;\n        long max31 = max / 31;\n        long\
    \ max37 = max / 37;\n        long max43 = max / 43;\n        long max51 = max\
    \ / 51;\n        long max59 = max / 59;\n        long max67 = max / 67;\n    \
    \    long max73 = max / 73;\n        long max79 = max / 79;\n        long max81\
    \ = max / 81;\n        long max89 = max / 89;\n        long max91 = max / 91;\n\
    \        long max97 = max / 97;\n        long max103 = max / 103;\n        long\
    \ max109 = max / 109;\n        long max111 = max / 111;\n        long max117 =\
    \ max / 117;\n        long max123 = max / 123;\n        long max129 = max / 129;\n\
    \        long max131 = max / 131;\n        long max137 = 3 * max / 137;\n    \
    \    long max143 = max / 143;\n        long max149 = max / 149;\n        long\
    \ max151 = max / 151;\n        long max157 = max / 157;\n        long max163 =\
    \ max / 163;\n        long max169 = max / 169;\n        long max171 = max / 171;\n\
    \        long max177 = max / 177;\n        long max183 = max / 183;\n        long\
    \ max189 = max / 189;\n        long max191 = max / 191;\n        long max197 =\
    \ max / 197;\n        long max203 = max / 203;\n        long max209 = max / 209;\n\
    \        long max211 = max / 211;\n", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long i = 2;\n        while (i < length)\
    \ {\n            if (length % i == 0) {\n                isPrime = false;\n  \
    \              break;\n            }\n            i += 2;\n        }\n       \
    \ if (isPrime) return \"YES\";\n        return \"NO\";", "        long start =\
    \ Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        bool isPrime = true;\n        long start2 = start;\n\
    \        long end2 = end;\n        while (start2 < end2) {\n            long mid\
    \ = (start2 + end2) / 2;\n            if (IsPrime(mid)) {\n                start2\
    \ = mid;\n            } else {\n                end2 = mid;\n            }\n \
    \       }\n        if (isPrime) return \"YES\";\n        return \"NO\";", "  \
    \      long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        bool isPrime = true;\n        long prime = length / 2;\n \
    \       while (prime > 1) {\n            if (length % prime == 0) {\n        \
    \        isPrime = false;\n                break;\n            }\n           \
    \ prime--;\n        }\n        if (isPrime)\n            return \"YES\";\n   \
    \     else\n            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long count = 0;\n        long start2 = start;\n        long end2 = end;\n\
    \        while (start2 < end2) {\n            count++;\n            start2++;\n\
    \            end2++;\n        }\n        if (count == 2) return \"YES\";\n   \
    \     if (count > 2) return \"NO\";\n        long start3 = start;\n        long\
    \ end3 = end;\n        while (start3 < end3) {\n            count--;\n       \
    \     start3++;\n            end3++;\n        }\n        if (count == 2) return\
    \ \"YES\";\n        if (count > 2) return \"NO\";\n        long start4 = start;\n\
    \        long end4 = end;\n        while (start4 < end4) {\n            count++;\n\
    \            start4++;\n            end4++;\n        }\n        if (count == 2)\
    \ return \"YES\";\n        if (count > 2) return \"NO\";\n        long start5\
    \ = start;\n        long end5 = end;\n        while (start5 < end5) {\n      \
    \      count--;\n            start5++;\n            end5++;\n        }\n     \
    \   if (count == 2) return \"YES\";\n        if (count > 2) return \"NO\";\n \
    \       long start6 = start;\n        long end6 = end;\n        while (start6\
    \ < end6) {\n            count++;\n            start6++;\n            end6++;\n\
    \        }\n        if (count == 2) return \"YES\";\n        if (count > 2) return\
    \ \"NO\";\n        long start7 = start;\n        long end7 = end;\n        while\
    \ (start7 < end7) {\n            count--;\n            start7++;\n           \
    \ end7++;\n        }\n        if (count == 2) return \"YES\";\n        if (count\
    \ > 2) return \"NO\";\n        long start8 = start;\n        long end8 = end;\n\
    \        while (start8 < end8) {\n            count++;\n            start8++;\n\
    \            end8++;\n        }\n        if (count == 2) return \"YES\";\n   \
    \     if (count > 2) return \"NO\";\n        long start9 = start;\n        long\
    \ end9 = end;\n        while (start9 < end9) {\n            count--;\n       \
    \     start9++;\n            end9++;\n        }\n        if (count == 2) return\
    \ \"YES\";\n        if (count > 2) return \"NO\";\n        long start10 = start;\n\
    \        long end10 = end;\n        while (start10 < end10) {\n            count++;\n\
    \            start10++;\n            end10++;\n        }\n        if (count ==\
    \ 2) return \"YES\";\n        if (count > 2) return \"NO\";", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long inter = length / 2;\n        long a = interval1.Item1\
    \ - inter;\n        long b = interval1.Item2 - inter;\n        long c = interval2.Item1\
    \ - inter;\n        long d = interval2.Item2 - inter;\n        if (a < 0)\n  \
    \          a = 0;\n        if (b < 0)\n            b = 0;\n        if (c < 0)\n\
    \            c = 0;\n        if (d < 0)\n            d = 0;\n        long p =\
    \ 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long\
    \ t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n    \
    \    long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = (start + end) / 2;\n        bool isPrime = true;\n        long prime =\
    \ 2;\n        while (isPrime) {\n            if (mid % prime == 0)\n         \
    \       isPrime = false;\n            else\n                prime++;\n       \
    \ }\n        return isPrime ? \"YES\" : \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long mid = start + (end - start) / 2;\n        bool isPrime = true;\n\
    \        long count = 0;\n        while (count < length && isPrime) {\n      \
    \      if (mid % 2 == 0) mid = mid/2;\n            else if (mid % 3 == 0) mid\
    \ = mid/3;\n            else if (mid % 5 == 0) mid = mid/5;\n            else\
    \ if (mid % 7 == 0) mid = mid/7;\n            else if (mid % 11 == 0) mid = mid/11;\n\
    \            else if (mid % 13 == 0) mid = mid/13;\n            else if (mid %\
    \ 17 == 0) mid = mid/17;\n            else if (mid % 19 == 0) mid = mid/19;\n\
    \            else if (mid % 23 == 0) mid = mid/23;\n            else if (mid %\
    \ 29 == 0) mid = mid/29;\n            else if (mid % 31 == 0) mid = mid/31;\n\
    \            else if (mid % 37 == 0) mid = mid/37;\n            else if (mid %\
    \ 41 == 0) mid = mid/41;\n            else if (mid % 43 == 0) mid = mid/43;\n\
    \            else if (mid % 47 == 0) mid = mid/47;\n            else if (mid %\
    \ 53 == 0) mid = mid/53;\n            else if (mid % 59 == 0) mid = mid/59;\n\
    \            else if (mid % 61 == 0) mid = mid/61;\n            else if (mid %\
    \ 67 == 0) mid = mid/67;\n            else if (mid % 71 == 0) mid = mid/71;\n\
    \            else if (mid % 73 == 0) mid = mid/73;\n            else if (mid %\
    \ 79 == 0) mid = mid/79;\n            else if (mid % 83 == 0) mid = mid/83;\n\
    \            else if (mid % 89 == 0) mid = mid/89;\n            else if (mid %\
    \ 97 == 0) mid = mid/97;\n            else if (mid % 101 == 0) mid = mid/101;\n\
    \            else if (mid % 103 == 0) mid = mid/103;\n            else if (mid\
    \ % 107 == 0) mid = mid/107;\n            else if (mid % 111 == 0) mid = mid/111;\n\
    \            else if (mid % 115 == 0) mid = mid", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length * end2 - start2;\n        long length2 = end - start2;\n\
    \        long length3 = length * end2;\n        long length4 = length * end3;\n\
    \        long length5 = length * end4;\n        long length6 = length * end5;\n\
    \        long length7 = length * end6;\n        long length8 = length * end7;\n\
    \        long length9 = length * end8;\n        long length10 = length * end9;\n\
    \        long length11 = length * end10;\n        long length12 = length * end11;\n\
    \        long length13 = length * end12;\n        long length14 = length * end13;\n\
    \        long length15 = length * end14;\n        long length16 = length * end15;\n\
    \        long length17 = length * end16;\n        long length18 = length * end17;\n\
    \        long length19 = length * end18;\n        long length20 = length * end19;\n\
    \        long length21 = length * end20;\n        long length22 = length * end21;\n\
    \        long length23 = length * end22;\n        long length24 = length * end23;\n\
    \        long length25 = length * end24;\n        long length26 = length * end25;\n\
    \        long length27 = length * end26;\n        long length28 = length * end27;\n\
    \        long length29 = length * end28;\n        long length30 = length * end29;\n\
    \        long length31 = length * end30;\n        long length32 = length * end31;\n\
    \        long length33 = length * end32;\n        long length34 = length * end33;\n\
    \        long length35 = length * end34;\n        long length36 = length * end35;\n\
    \        long length37 = length * end36;\n        long length38 = length * end37;\n\
    \        long length39 = length * end38;\n        long length40 = length * end39;\n\
    \        long length41 = length * end40;\n        long length42 = length * end41;\n\
    \        long length43 = length * end42;\n        long length44 = length * end43;\n\
    \        long length45 = length * end44;\n        long length46 = length * end45;",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        bool\
    \ isPrime = true;\n        long i = 2;\n        while (i < length) {\n       \
    \     if (i % 2 == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n            i += 2;\n        }\n        if (isPrime)\n       \
    \     return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long num = 1;\n        for (long i = start; i <= end; i++) {\n      \
    \      num *= i;\n        }\n        long prime = num;\n        bool isPrime =\
    \ true;\n        for (long i = 2; i <= Math.Sqrt(prime); i++) {\n            if\
    \ (prime % i == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) return \"YES\";\n        return\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long sum = 0;\n        long prime = 1;\n        bool isPrime = true;\n\
    \        while (isPrime) {\n            sum += prime;\n            isPrime = IsPrime(sum);\n\
    \            prime++;\n        }\n        if (length == sum)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long prime = 2;\n        while\
    \ (isPrime) {\n            if (length == prime)\n                return \"YES\"\
    ;\n            if (length < prime)\n                isPrime = false;\n       \
    \     prime++;\n        }\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        if (length == 2) return \"\
    YES\";\n        if (length == 3) return \"YES\";\n        if (length == 4) return\
    \ \"YES\";\n        if (length == 5) return \"YES\";\n        if (length == 6)\
    \ return \"YES\";\n        if (length == 7) return \"YES\";\n        if (length\
    \ == 8) return \"YES\";\n        if (length == 9) return \"YES\";\n        if\
    \ (length == 10) return \"YES\";\n        if (length == 11) return \"YES\";\n\
    \        if (length == 12) return \"YES\";\n        if (length == 13) return \"\
    YES\";\n        if (length == 14) return \"YES\";\n        if (length == 15) return\
    \ \"YES\";\n        if (length == 16) return \"YES\";\n        if (length == 17)\
    \ return \"YES\";\n        if (length == 18) return \"YES\";\n        if (length\
    \ == 19) return \"YES\";\n        if (length == 20) return \"YES\";\n        if\
    \ (length == 21) return \"YES\";\n        if (length == 22) return \"YES\";\n\
    \        if (length == 23) return \"YES\";\n        if (length == 24) return \"\
    YES\";\n        if (length == 25) return \"YES\";\n        if (length == 26) return\
    \ \"YES\";\n        if (length == 27) return \"YES\";\n        if (length == 28)\
    \ return \"YES\";\n        if (length == 29) return \"YES\";\n        if (length\
    \ == 30) return \"YES\";\n        if (length == 31) return \"YES\";\n        if\
    \ (length == 32) return \"YES\";\n        if (length == 33) return \"YES\";\n\
    \        if (length == 34) return \"YES\";\n        if (length == 35) return \"\
    YES\";\n        if (length == 36) return \"YES\";\n        if (length == 37) return\
    \ \"YES\";\n        if (length == 38) return \"YES\";\n        if (length == 39)\
    \ return \"YES\";\n        if (length == 40) return \"YES\";\n        if (length\
    \ == 41) return \"YES\";\n        if (length == 42) return \"YES\";\n        if\
    \ (length == 43) return \"YES\";\n        if (length == 44) return \"YES\";\n\
    \        if (length == 45) return \"YES\";\n        if (length == 46) return \"\
    YES\";\n        if (length == 47) return \"YES\";\n        if (length == 48) return\
    \ \"YES\";\n        if (length == 49) return \"YES\";\n        if (length == 50)\
    \ return \"YES\";\n        if (length == 51) return \"YES\";\n        if (length\
    \ == 52) return \"YES\";\n        if (length == 53) return \"YES\";\n        if\
    \ (length == 54) return ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ inter = start + (end - start) / 2;\n        if (inter == start) return \"YES\"\
    ;\n        if (inter == end) return \"YES\";\n        bool isPrime = true;\n \
    \       long prime = 2;\n        while (prime * prime <= length) {\n         \
    \   if (length % prime == 0) {\n                isPrime = false;\n           \
    \     break;\n            }\n            prime++;\n        }\n        if (isPrime)\
    \ return \"YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = (end - start) * (end2\
    \ - start2);\n        long length2 = length / 2;\n        long length3 = length\
    \ / 3;\n        long length4 = length / 4;\n        long length5 = length / 5;\n\
    \        long length6 = length / 6;\n        long length7 = length / 7;\n    \
    \    long length8 = length / 8;\n        long length9 = length / 9;\n        long\
    \ length10 = length / 10;\n        long length11 = length / 11;\n        long\
    \ length12 = length / 12;\n        long length13 = length / 13;\n        long\
    \ length14 = length / 14;\n        long length15 = length / 15;\n        long\
    \ length16 = length / 16;\n        long length17 = length / 17;\n        long\
    \ length18 = length / 18;\n        long length19 = length / 19;\n        long\
    \ length20 = length / 20;\n        long length21 = length / 21;\n        long\
    \ length22 = length / 22;\n        long length23 = length / 23;\n        long\
    \ length24 = length / 24;\n        long length25 = length / 25;\n        long\
    \ length26 = length / 26;\n        long length27 = length / 27;\n        long\
    \ length28 = length / 28;\n        long length29 = length / 29;\n        long\
    \ length30 = length / 30;\n        long length31 = length / 31;\n        long\
    \ length32 = length / 32;\n        long length33 = length / 33;\n        long\
    \ length34 = length / 34;\n        long length35 = length / 35;\n        long\
    \ length36 = length / 36;\n        long length37 = length / 37;\n        long\
    \ length38 = length / 38;\n        long length39 = length / 39;\n        long\
    \ length40 = length / 40;\n        long length41 = length / 41;\n        long\
    \ length42 = length / 42;\n        long length43 = length / 43;\n        long\
    \ length44 = length / 44;\n        long length45 = length / 45;\n        long\
    \ length46 = length / 46;\n        long length47 = length / 47;\n        long\
    \ length48 = length / 48;\n        long length49 = length / 49;\n        long\
    \ length50 = length / 50;\n        long length51 = ", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length * end2 - start2 * length;\n        long length2 = end -\
    \ start2;\n        long length3 = end2 - start2;\n        long length4 = end2\
    \ - start;\n        long length5 = end2 - end;\n        long length6 = end2 -\
    \ end2;\n        long length7 = end2 - end3;\n        long length8 = end2 - end4;\n\
    \        long length9 = end2 - end5;\n        long length10 = end2 - end6;\n \
    \       long length11 = end2 - end7;\n        long length12 = end2 - end8;\n \
    \       long length13 = end2 - end9;\n        long length14 = end2 - end10;\n\
    \        long length15 = end2 - end11;\n        long length16 = end2 - end12;\n\
    \        long length17 = end2 - end13;\n        long length18 = end2 - end14;\n\
    \        long length19 = end2 - end15;\n        long length20 = end2 - end16;\n\
    \        long length21 = end2 - end17;\n        long length22 = end2 - end18;\n\
    \        long length23 = end2 - end19;\n        long length24 = end2 - end20;\n\
    \        long length25 = end2 - end21;\n        long length26 = end2 - end22;\n\
    \        long length27 = end2 - end23;\n        long length28 = end2 - end24;\n\
    \        long length29 = end2 - end25;\n        long length30 = end2 - end26;\n\
    \        long length31 = end2 - end27;\n        long length32 = end2 - end28;\n\
    \        long length33 = end2 - end29;\n        long length34 = end2 - end30;\n\
    \        long length35 = end2 - end31;\n        long length36 = end2 - end32;\n\
    \        long length37 = end2 - end33;\n        long length38 = end2 - end34;\n\
    \        long length39 = end2 - end35;\n        long length40 = end2 - end36;\n\
    \        long length41 = end2 - end37;\n        long length42 = end2 - end38;\n\
    \        long length43 = end2 - end39;\n        long length44 = end2 - end40;\n\
    \        long length45 = end2 - end41;\n        long length46 = end2 - end42;\n\
    \        long length", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length) + 1;\n   \
    \     long max2 = max * max;\n        long max3 = max2 * max;\n        long max4\
    \ = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n\
    \        long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        ", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long max2 = max\
    \ / 2;\n        long max3 = max * max;\n        long max4 = max3 * max;\n    \
    \    long max5 = max4 * max;\n        long max6 = max5 * max;\n        long max7\
    \ = max6 * max;\n        long max8 = max7 * max;\n        long max9 = max8 * max;\n\
    \        long max10 = max9 * max;\n        long max11 = max10 * max;\n       \
    \ long max12 = max11 * max;\n        long max13 = max12 * max;\n        long max14\
    \ = max13 * max;\n        long max15 = max14 * max;\n        long max16 = max15\
    \ * max;\n        long max17 = max16 * max;\n        long max18 = max17 * max;\n\
    \        long max19 = max18 * max;\n        long max20 = max19 * max;\n      \
    \  long max21 = max20 * max;\n        long max22 = max21 * max;\n        long\
    \ max23 = max22 * max;\n        long max24 = max23 * max;\n        long max25\
    \ = max24 * max;\n        long max26 = max25 * max;\n        long max27 = max26\
    \ * max;\n        long max28 = max27 * max;\n        long max29 = max28 * max;\n\
    \        long max30 = max29 * max;\n        long max31 = max30 * max;\n      \
    \  long max32 = max31 * max;\n        long max33 = max32 * max;\n        long\
    \ max34 = max33 * max;\n        long max35 = max34 * max;\n        long max36\
    \ = max35 * max;\n        long max37 = max36 * max;\n        long max38 = max37\
    \ * max;\n        long max39 = max38 * max;\n        long max40 = max39 * max;\n\
    \        long max41 = max40 * max;\n        long max42 = max41 * max;\n      \
    \  long max43 = max42 * max;\n        long max44", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length * end2 - start2;\n        long length2 = end - start2;\n\
    \        long length3 = length * end2;\n        long length4 = length * end2;\n\
    \        long length5 = length * end2;\n        long length6 = length * end2;\n\
    \        long length7 = length * end2;\n        long length8 = length * end2;\n\
    \        long length9 = length * end2;\n        long length10 = length * end2;\n\
    \        long length11 = length * end2;\n        long length12 = length * end2;\n\
    \        long length13 = length * end2;\n        long length14 = length * end2;\n\
    \        long length15 = length * end2;\n        long length16 = length * end2;\n\
    \        long length17 = length * end2;\n        long length18 = length * end2;\n\
    \        long length19 = length * end2;\n        long length20 = length * end2;\n\
    \        long length21 = length * end2;\n        long length22 = length * end2;\n\
    \        long length23 = length * end2;\n        long length24 = length * end2;\n\
    \        long length25 = length * end2;\n        long length26 = length * end2;\n\
    \        long length27 = length * end2;\n        long length28 = length * end2;\n\
    \        long length29 = length * end2;\n        long length30 = length * end2;\n\
    \        long length31 = length * end2;\n        long length32 = length * end2;\n\
    \        long length33 = length * end2;\n        long length34 = length * end2;\n\
    \        long length35 = length * end2;\n        long length36 = length * end2;\n\
    \        long length37 = length * end2;\n        long length38 = length * end2;\n\
    \        long length39 = length * end2;\n        long length40 = length * end2;\n\
    \        long length41 = length * end2;\n        long length42 = length * end2;\n\
    \        long length43 = length * end2;\n        long length44 = length * end2;\n\
    \        long length45 = length * end2;\n        long length46 = length * end2;\n\
    \        long length47 = length * end2;\n        long length48 = length * end2;\n\
    \        long length49 = ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long mid = start + (end - start) / 2;\n     \
    \   bool isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n\
    \            if (length == prime) break;\n            if (length == prime + 1)\
    \ break;\n            if (length == prime * 2) break;\n            if (length\
    \ == prime * 3) break;\n            if (length == prime * 4) break;\n        \
    \    if (length == prime * 5) break;\n            if (length == prime * 6) break;\n\
    \            if (length == prime * 7) break;\n            if (length == prime\
    \ * 8) break;\n            if (length == prime * 9) break;\n            if (length\
    \ == prime * 10) break;\n            if (length == prime * 11) break;\n      \
    \      if (length == prime * 12) break;\n            if (length == prime * 13)\
    \ break;\n            if (length == prime * 14) break;\n            if (length\
    \ == prime * 15) break;\n            if (length == prime * 16) break;\n      \
    \      if (length == prime * 17) break;\n            if (length == prime * 18)\
    \ break;\n            if (length == prime * 19) break;\n            if (length\
    \ == prime * 20) break;\n            if (length == prime * 21) break;\n      \
    \      if (length == prime * 22) break;\n            if (length == prime * 23)\
    \ break;\n            if (length == prime * 24) break;\n            if (length\
    \ == prime * 25) break;\n            if (length == prime * 26) break;\n      \
    \      if (length == prime * 27) break;\n            if (length == prime * 28)\
    \ break;\n            if (length == prime * 29) break;\n            if (length\
    \ == prime * 30) break;\n            if (length == prime * 31) break;\n      \
    \      if (length == prime * 32) break;\n            if (length == prime * 33)\
    \ break;\n            if (length == prime * 34) break;\n            if (length\
    \ == prime * 35) break;\n            if (length == prime * 36) break;\n      \
    \      if (length == prime * 37) break;\n            if (length == prime * 38)\
    \ break;\n            if (length == prime * 39) break;\n            if (length\
    \ == prime * 40) break;\n            if (length == prime * 41) break;\n      \
    \      if (length == prime * 42) break;\n            if (length == prime * 43)\
    \ break;\n            if (length == prime * 44) break;\n            if (length\
    \ == prime * 45) break;\n            if (length == prime * 46) break;\n      \
    \      if (length == prime * 47) break;\n            if (length == prime * 48)\
    \ break;", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = GetPrime(length);\n        if (length == prime)\n      \
    \      return \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length) + 1;\n        long start2 = start\
    \ + 1;\n        long end2 = end - 1;\n        long length2 = end2 - start2;\n\
    \        long length3 = end - start;\n        long length4 = end2 - start;\n \
    \       long length5 = end2 - end1;\n        long length6 = end - end1;\n    \
    \    long length7 = end2 - end1;\n        long length8 = end2 - end2;\n      \
    \  long length9 = end - end2;\n        long length10 = end2 - end2;\n        long\
    \ length11 = end - end2;\n        long length12 = end2 - end1;\n        long length13\
    \ = end - end1;\n        long length14 = end2 - start;\n        long length15\
    \ = end - start;\n        long length16 = end2 - end1;\n        long length17\
    \ = end - end1;\n        long length18 = end2 - end2;\n        long length19 =\
    \ end - end2;\n        long length20 = end2 - end2;\n        long length21 = end\
    \ - end2;\n        long length22 = end2 - end1;\n        long length23 = end -\
    \ end1;\n        long length24 = end2 - start2;\n        long length25 = end -\
    \ start2;\n        long length26 = end2 - end2;\n        long length27 = end -\
    \ end2;\n        long length28 = end2 - end1;\n        long length29 = end - end1;\n\
    \        long length30 = end2 - start2;\n        long length31 = end - start2;\n\
    \        long length32 = end2 - end2;\n        long length33 = end - end2;\n \
    \       long length34 = end2 - end1;\n        long length35 = end - end1;\n  \
    \      long length36 = end2 - start2;\n        long length37 = end - start2;\n\
    \        long length38 = end2 - end2;\n        long length39 = end - end2;\n \
    \       long length40 = end2 - end1;\n        long length41 = end - end1;\n  \
    \      long length42 = end2 - start2;\n        long length43 = end - start2;\n\
    \        long length44 = end2 - end2;\n        long length45 = end - end2;\n \
    \       long length46 = end2 - end1;\n        long length47 = end - end1;\n  \
    \      long length48 = end2 - start2;\n        long length49 = end - start", " \
    \       long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        if (length == 1)\
    \ return \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long mid\
    \ = start + (end - start) / 2;\n        bool isPrime = true;\n        long count\
    \ = 0;\n        while (isPrime && count < max) {\n            long test = (long)Math.Sqrt(mid);\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == mid) test++;\n            if (test == mid) test++;\n\
    \            if (test == ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime)\n                return \"YES\";\n     \
    \       isPrime = false;\n            prime++;\n        }\n        return \"NO\"\
    ;", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long num1 = (long)Math.Pow(length, 2);\n    \
    \    long num2 = (long)Math.Pow(length, 3);\n        long num3 = (long)Math.Pow(length,\
    \ 4);\n        long num4 = (long)Math.Pow(length, 5);\n        long num5 = (long)Math.Pow(length,\
    \ 6);\n        long num6 = (long)Math.Pow(length, 7);\n        long num7 = (long)Math.Pow(length,\
    \ 8);\n        long num8 = (long)Math.Pow(length, 9);\n        long num9 = (long)Math.Pow(length,\
    \ 10);\n        long num10 = (long)Math.Pow(length, 11);\n        long num11 =\
    \ (long)Math.Pow(length, 12);\n        long num12 = (long)Math.Pow(length, 13);\n\
    \        long num13 = (long)Math.Pow(length, 14);\n        long num14 = (long)Math.Pow(length,\
    \ 15);\n        long num15 = (long)Math.Pow(length, 16);\n        long num16 =\
    \ (long)Math.Pow(length, 17);\n        long num17 = (long)Math.Pow(length, 18);\n\
    \        long num18 = (long)Math.Pow(length, 19);\n        long num19 = (long)Math.Pow(length,\
    \ 20);\n        long num20 = (long)Math.Pow(length, 21);\n        long num21 =\
    \ (long)Math.Pow(length, 22);\n        long num22 = (long)Math.Pow(length, 23);\n\
    \        long num23 = (long)Math.Pow(length, 24);\n        long num24 = (long)Math.Pow(length,\
    \ 25);\n        long num25 = (long)Math.Pow(length, 26);\n        long num26 =\
    \ (long)Math.Pow(length, 27);\n        long num27 = (long)Math.Pow(length, 28);\n\
    \        long num28 = (long)Math.Pow(length, 29);\n        long num29 = (long)Math.Pow(length,\
    \ 30);\n        long num30 = (long)Math.Pow(length, 31);\n        long num31 =\
    \ (long)Math.Pow(length, 32);\n        long num32 = (long)Math.Pow(length, 33);\n\
    \        long num33 = (long)Math.Pow(length, 34);\n        long num34 = (long)Math.Pow(length,\
    \ 35);\n        long num35 = (long)Math.Pow(length, 36);\n        long num36 =\
    \ (long)Math.Pow(length, 37);\n        long num37 = (long)Math.", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        if (length == 1) return \"YES\";\n        bool isPrime\
    \ = true;\n        long prime = 2;\n        while (isPrime) {\n            isPrime\
    \ = false;\n            for (long i = start; i <= end; i++) {\n              \
    \  if (i % prime == 0) {\n                    isPrime = true;\n              \
    \      break;\n                }\n            }\n            prime++;\n      \
    \  }\n        return \"YES\";", "        long start = interval1.Item1;\n     \
    \   long end = interval1.Item2;\n        long start2 = interval2.Item1;\n    \
    \    long end2 = interval2.Item2;\n        if (start > end) {\n            long\
    \ tmp = start;\n            start = end;\n            end = tmp;\n           \
    \ tmp = start2;\n            start2 = end2;\n            end2 = tmp;\n       \
    \ }\n        long length = end - start;\n        long length2 = end2 - start2;\n\
    \        if (length2 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length2 == 1) {\n            return \"YES\";\n        }\n        long length3\
    \ = length * length2;\n        long length4 = length3 * length3;\n        long\
    \ length5 = length4 * length4;\n        long length6 = length5 * length5;\n  \
    \      long length7 = length6 * length6;\n        long length8 = length7 * length7;\n\
    \        long length9 = length8 * length8;\n        long length10 = length9 *\
    \ length9;\n        long length11 = length10 * length10;\n        long length12\
    \ = length11 * length11;\n        long length13 = length12 * length12;\n     \
    \   long length14 = length13 * length13;\n        long length15 = length14 * length14;\n\
    \        long length16 = length15 * length15;\n        long length17 = length16\
    \ * length16;\n        long length18 = length17 * length17;\n        long length19\
    \ = length18 * length18;\n        long length20 = length19 * length19;\n     \
    \   long length21 = length20 * length20;\n        long length22 = length21 * length21;\n\
    \        long length23 = length22 * length22;\n        long length24 = length23\
    \ * length23;\n        long length25 = length24 * length24;\n        long length26\
    \ = length25 * length25;\n        long length27 = length26 * length26;\n     \
    \   long length28 = length27 * length27;\n        long length29 = length28 * length28;\n\
    \        long length30 = length29 * length29;\n        long length31 = length30\
    \ * length30;\n        long length32 = length31 * length31;\n        long length33\
    \ = length32 * length32;\n        long length34 = length33 * length33;\n     \
    \   long length35 = length34 * length34;\n        long length36 = length35 * length35;\n\
    \        long length37 = length36 * length36;\n        long length38 = length37\
    \ * length37;\n        long length39", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long i = 2;\n        while (i < length)\
    \ {\n            if (length%i == 0) {\n                isPrime = false;\n    \
    \            break;\n            }\n            i += 2;\n        }\n        if\
    \ (isPrime) return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ start2 = Math.Min(interval2.Item1, interval1.Item1);\n        long end2 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Min(interval2.Item1, interval1.Item1);\n        long end4 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Min(interval2.Item1, interval1.Item1);\n        long end6 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Min(interval2.Item1, interval1.Item1);\n        long end8 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Max(interval1.Item2, interval2.Item2);", "        long\
    \ start = interval1.Item1;\n        long end = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        long\
    \ length = (end - start) * (end2 - start2);\n        if (length < 0)\n       \
    \     return \"NO\";\n        if (length == 0)\n            return \"YES\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long start3 =\
    \ start;\n        long end3 = end;\n        long start4 = start2;\n        long\
    \ end4 = end2;\n        long length3 = (end3 - start3) * (end4 - start4);\n  \
    \      if (length3 > 0)\n            return \"NO\";\n        long start5 = start;\n\
    \        long end5 = end;\n        long start6 = start2;\n        long end6 =\
    \ end2;\n        long length5 = (end5 - start5) * (end6 - start6);\n        if\
    \ (length5 > 0)\n            return \"NO\";\n        long start7 = start;\n  \
    \      long end7 = end;\n        long start8 = start2;\n        long end8 = end2;\n\
    \        long length7 = (end7 - start7) * (end8 - start8);\n        if (length7\
    \ > 0)\n            return \"NO\";\n        long start9 = start;\n        long\
    \ end9 = end;\n        long start10 = start2;\n        long end10 = end2;\n  \
    \      long length9 = (end9 - start9) * (end10 - start10);\n        if (length9\
    \ > 0)\n            return \"NO\";\n        long start11 = start;\n        long\
    \ end11 = end;\n        long start12 = start2;\n        long end12 = end2;\n \
    \       long length11 = (end11 - start11) * (end12 - start12);\n        if (length11\
    \ > 0)\n            return \"NO\";\n        long start13 = start;\n        long\
    \ end13 = end;\n        long start14 = start2;\n        long end14 = end2;\n \
    \       long length13 = (end13 - start13) * (end14 - start14);\n        if (length13\
    \ > 0)\n            return \"NO\";\n        long start15 = start;\n        long\
    \ end15 = end;\n        long start16 = start2;\n        long end16 = end2;\n \
    \       long length15 = (end15 - start15) * (end16 - start16);\n        if (length15\
    \ > 0)\n            return \"NO\";\n        long start17 = start;\n        long\
    \ end17 = end;\n        long start18 = start2;\n        long end18 = end2;\n \
    \       long length17 = (end17 - start17) * (end18 - start18);\n        if (length17\
    \ > 0)\n            return \"NO\";\n        long start19", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        if (length == 1) return \"YES\";\n        long start2\
    \ = Math.Min(interval1.Item1, interval2.Item2);\n        long end2 = Math.Max(interval1.Item2,\
    \ interval2.Item1);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0) return \"NO\";\n        if (length2 == 1) return \"YES\";\n        long\
    \ start3 = Math.Min(interval1.Item2, interval2.Item1);\n        long end3 = Math.Max(interval1.Item1,\
    \ interval2.Item2);\n        long length3 = end3 - start3;\n        if (length3\
    \ == 0) return \"NO\";\n        if (length3 == 1) return \"YES\";\n        long\
    \ start4 = Math.Min(interval1.Item2, interval2.Item2);\n        long end4 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0) return \"NO\";\n        if (length4 == 1) return \"YES\";\n        long\
    \ start5 = Math.Min(interval1.Item1, interval2.Item2);\n        long end5 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length5 = end5 - start5;\n        if (length5\
    \ == 0) return \"NO\";\n        if (length5 == 1) return \"YES\";\n        long\
    \ start6 = Math.Min(interval1.Item1, interval2.Item1);\n        long end6 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0) return \"NO\";\n        if (length6 == 1) return \"YES\";\n        long\
    \ start7 = Math.Min(interval1.Item2, interval2.Item1);\n        long end7 = Math.Max(interval1.Item1,\
    \ interval2.Item2);\n        long length7 = end7 - start7;\n        if (length7\
    \ == 0) return \"NO\";\n        if (length7 == 1) return \"YES\";\n        long\
    \ start8 = Math.Min(interval1.Item1, interval2.Item2);\n        long end8 = Math.Max(interval1.Item2,\
    \ interval2.Item1);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0) return \"NO\";\n        if (length8 == 1) return \"YES\";\n        long\
    \ start9 = Math.Min(interval1.Item2, interval2.Item2);\n        long end9 = Math.Max(interval1.Item1,\
    \ interval2.Item1);", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = length / 2;\n        bool isPrime = true;\n        for (int\
    \ i = 2; i <= prime; i++) {\n            if (length % i == 0) {\n            \
    \    isPrime = false;\n                break;\n            }\n        }\n    \
    \    if (isPrime)\n            return \"YES\";\n        return \"NO\";", "   \
    \     long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        long prime = GetPrime(length);\n\
    \        if (length == prime) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        bool isPrime = true;\n     \
    \   long prime = length / 2;\n        while (prime > 1) {\n            if (length\
    \ % prime == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n            prime--;\n        }\n        if (isPrime) return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ start2 = Math.Min(interval1.Item2, interval2.Item2);\n        long end2 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end4 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end6 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end8 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Max(interval1.Item2, interval2.Item2);", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long max = (long)Math.Sqrt(length);\n        long\
    \ min = (long)Math.Sqrt(length + 1);\n        long mid = (start + end) / 2;\n\
    \        long count = 0;\n        long sum = 0;\n        while (start <= mid)\
    \ {\n            sum += start;\n            count++;\n            start += max;\n\
    \        }\n        while (end >= mid) {\n            sum += end;\n          \
    \  count++;\n            end -= max;\n        }\n        if (count == 1) return\
    \ \"YES\";\n        if (sum == length) return \"YES\";\n        return \"NO\";",
  "        long start = interval1.Item1;\n        long end = interval1.Item2;\n  \
    \      long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length2 == 0) {\n            return \"NO\";\n        }\n        long\
    \ length3 = length / length2;\n        long length4 = length % length2;\n    \
    \    long length5 = length3 / length4;\n        if (length5 == 1) {\n        \
    \    return \"YES\";\n        }\n        return \"NO\";", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long start2 = Math.Min(interval1.Item1, interval2.Item2);\n\
    \        long end2 = Math.Max(interval1.Item2, interval2.Item1);\n        long\
    \ length2 = end2 - start2;\n        if (length2 == 0)\n            return \"NO\"\
    ;\n        if (length2 == 1)\n            return \"YES\";\n        long start3\
    \ = Math.Min(interval1.Item2, interval2.Item1);\n        long end3 = Math.Max(interval1.Item1,\
    \ interval2.Item2);\n        long length3 = end3 - start3;\n        if (length3\
    \ == 0)\n            return \"NO\";\n        if (length3 == 1)\n            return\
    \ \"YES\";\n        long start4 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ length4 = end4 - start4;\n        if (length4 == 0)\n            return \"NO\"\
    ;\n        if (length4 == 1)\n            return \"YES\";\n        long start5\
    \ = Math.Min(interval1.Item1, interval2.Item2);\n        long end5 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length5 = end5 - start5;\n        if (length5\
    \ == 0)\n            return \"NO\";\n        if (length5 == 1)\n            return\
    \ \"YES\";\n        long start6 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end6 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length6 = end6 - start6;\n        if (length6 == 0)\n            return \"NO\"\
    ;\n        if (length6 == 1)\n            return \"YES\";\n        long start7\
    \ = Math.Min(interval1.Item2, interval2.Item1);\n        long end7 = Math.Max(interval1.Item1,\
    \ interval2.Item2);\n        long length7 = end7 - start7;\n        if (length7\
    \ == 0)\n            return \"NO\";\n        if (length7 == 1)\n            return\
    \ \"YES\";\n        long start8 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long end8 = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ length8 = end8 - start8;\n        if (length8 == 0)\n            return \"NO\"\
    ;\n        if (length8 == 1)\n            return \"YES\";\n        long start9\
    \ = Math.Min(interval1.Item1, interval2.Item2);\n        long end9 = Math.Max(interval1.Item2,\
    \ interval2.Item2);", "        long start = interval1.Item1;\n        long end\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = (end - start) * (end2 - start2);\n\
    \        if (length == 0)\n            return \"NO\";\n        long prime = length\
    \ / 2;\n        long remainder = length % 2;\n        long start3 = start;\n \
    \       long end3 = end;\n        long start4 = start2;\n        long end4 = end2;\n\
    \        long start5 = start3;\n        long end5 = end3;\n        long start6\
    \ = start4;\n        long end6 = end4;\n        long start7 = start5;\n      \
    \  long end7 = end5;\n        long start8 = start6;\n        long end8 = end6;\n\
    \        long start9 = start7;\n        long end9 = end7;\n        long start10\
    \ = start8;\n        long end10 = end8;\n        long start11 = start9;\n    \
    \    long end11 = end9;\n        long start12 = start10;\n        long end12 =\
    \ end10;\n        long start13 = start11;\n        long end13 = end11;\n     \
    \   long start14 = start12;\n        long end14 = end12;\n        long start15\
    \ = start13;\n        long end15 = end13;\n        long start16 = start14;\n \
    \       long end16 = end14;\n        long start17 = start15;\n        long end17\
    \ = end15;\n        long start18 = start16;\n        long end18 = end16;\n   \
    \     long start19 = start17;\n        long end19 = end17;\n        long start20\
    \ = start18;\n        long end20 = end18;\n        long start21 = start19;\n \
    \       long end21 = end19;\n        long start22 = start20;\n        long end22\
    \ = end20;\n        long start23 = start21;\n        long end23 = end21;\n   \
    \     long start24 = start22;\n        long end24 = end22;\n        long start25\
    \ = start23;\n        long end25 = end23;\n        long start26 = start24;\n \
    \       long end26 = end24;\n        long start27 = start25;\n        long end27\
    \ = end25;\n        long start28 = start26;\n        long end28 = end26;\n   \
    \     long start29 = start27;\n        long end29 = end27;\n        long start30\
    \ = start28;\n        long ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        for (int i = 2; i <= Math.Sqrt(length);\
    \ i++) {\n            if (length % i == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) break;\n            if (length % prime ==\
    \ 0) isPrime = false;\n            prime++;\n        }\n        if (prime == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long inter = start + (end - start) / 2;\n        bool isPrime = true;\n\
    \        long prime = 2;\n        while (prime * prime <= inter) {\n         \
    \   if (inter % prime == 0) {\n                isPrime = false;\n            \
    \    break;\n            }\n            prime++;\n        }\n        if (isPrime)\n\
    \            return \"YES\";\n        else\n            return \"NO\";", "   \
    \     long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        if (length == 1)\n\
    \            return \"YES\";\n        long prime = GetPrime(length);\n       \
    \ if (prime == 0)\n            return \"NO\";\n        if (length == prime)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        for (int i = 2; i <= length / 2; i++) {\n\
    \            if (length % i == 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ numPrimes = 0;\n        long numPrimes2 = 1;\n        long numPrimes3 = 1;\n\
    \        long numPrimes4 = 1;\n        long numPrimes5 = 1;\n        long numPrimes6\
    \ = 1;\n        long numPrimes7 = 1;\n        long numPrimes8 = 1;\n        long\
    \ numPrimes9 = 1;\n        long numPrimes10 = 1;\n        long numPrimes11 = 1;\n\
    \        long numPrimes12 = 1;\n        long numPrimes13 = 1;\n        long numPrimes14\
    \ = 1;\n        long numPrimes15 = 1;\n        long numPrimes16 = 1;\n       \
    \ long numPrimes17 = 1;\n        long numPrimes18 = 1;\n        long numPrimes19\
    \ = 1;\n        long numPrimes20 = 1;\n        long numPrimes21 = 1;\n       \
    \ long numPrimes22 = 1;\n        long numPrimes23 = 1;\n        long numPrimes24\
    \ = 1;\n        long numPrimes25 = 1;\n        long numPrimes26 = 1;\n       \
    \ long numPrimes27 = 1;\n        long numPrimes28 = 1;\n        long numPrimes29\
    \ = 1;\n        long numPrimes30 = 1;\n        long numPrimes31 = 1;\n       \
    \ long numPrimes32 = 1;\n        long numPrimes33 = 1;\n        long numPrimes34\
    \ = 1;\n        long numPrimes35 = 1;\n        long numPrimes36 = 1;\n       \
    \ long numPrimes37 = 1;\n        long numPrimes38 = 1;\n        long numPrimes39\
    \ = 1;\n        long numPrimes40 = 1;\n        long numPrimes41 = 1;\n       \
    \ long numPrimes42 = 1;\n        long numPrimes43 = 1;\n        long numPrimes44\
    \ = 1;\n        long numPrimes45 = 1;\n        long numPrimes46 = 1;\n       \
    \ long numPrimes47 = 1;\n        long numPrimes48 = 1;\n        long numPrimes49\
    \ = 1;\n        long numPrimes50 = 1;\n        long numPrimes51 = 1;\n       \
    \ long numPrimes52 = 1;\n        long numPrimes53 = 1;\n        long numPrimes54\
    \ = 1;\n        long numPrimes55 = 1;\n        long numPrimes56 = 1;\n       \
    \ long numPrimes57 = 1;\n        long numPrimes58 = 1;\n        ", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long max = (long)Math.Sqrt(length);\n        long\
    \ max2 = max / 2;\n        long max3 = max * max;\n        long max4 = max3 *\
    \ max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n   \
    \     long max7 = max6 * max;\n        long max8 = max7 * max;\n        long max9\
    \ = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44 = max43\
    \ * max;\n        long ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        for (int i = 2; i <= Math.Sqrt(length); i++) {\n  \
    \          if (length % i == 0) {\n                isPrime = false;\n        \
    \        break;\n            }\n        }\n        if (isPrime) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ length2 = length / 2;\n        long length3 = length / 3;\n        long length4\
    \ = length / 4;\n        long length5 = length / 5;\n        long length6 = length\
    \ / 6;\n        long length7 = length / 7;\n        long length8 = length / 8;\n\
    \        long length9 = length / 9;\n        long length10 = length / 10;\n  \
    \      long length11 = length / 11;\n        long length12 = length / 12;\n  \
    \      long length13 = length / 13;\n        long length14 = length / 14;\n  \
    \      long length15 = length / 15;\n        long length16 = length / 16;\n  \
    \      long length17 = length / 17;\n        long length18 = length / 18;\n  \
    \      long length19 = length / 19;\n        long length20 = length / 20;\n  \
    \      long length21 = length / 21;\n        long length22 = length / 22;\n  \
    \      long length23 = length / 23;\n        long length24 = length / 24;\n  \
    \      long length25 = length / 25;\n        long length26 = length / 26;\n  \
    \      long length27 = length / 27;\n        long length28 = length / 28;\n  \
    \      long length29 = length / 29;\n        long length30 = length / 30;\n  \
    \      long length31 = length / 31;\n        long length32 = length / 32;\n  \
    \      long length33 = length / 33;\n        long length34 = length / 34;\n  \
    \      long length35 = length / 35;\n        long length36 = length / 36;\n  \
    \      long length37 = length / 37;\n        long length38 = length / 38;\n  \
    \      long length39 = length / 39;\n        long length40 = length / 40;\n  \
    \      long length41 = length / 41;\n        long length42 = length / 42;\n  \
    \      long length43 = length / 43;\n        long length44 = length / 44;\n  \
    \      long length45 = length / 45;\n        long length46 = length / 46;\n  \
    \      long length47 = length / 47;\n        long length48 = length / 48;\n  \
    \      long length49 = length / 49;\n        long length50 = length / 50;\n  \
    \      long length51 = length", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long divisor = 2;\n        while (divisor\
    \ < length) {\n            if (length / divisor == 1) {\n                isPrime\
    \ = false;\n                break;\n            }\n            divisor++;\n  \
    \      }\n        if (isPrime) return \"YES\";\n        return \"NO\";", "   \
    \     long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        if (length == 1) return \"YES\"\
    ;\n        long start2 = Math.Min(interval1.Item2, interval2.Item2);\n       \
    \ long end2 = Math.Max(interval1.Item1, interval2.Item1);\n        long length2\
    \ = end2 - start2;\n        if (length2 == 0) return \"NO\";\n        if (length2\
    \ == 1) return \"YES\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0) return \"NO\";\n       \
    \ if (length3 == 1) return \"YES\";\n        long start4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        if (length4 == 1) return \"YES\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        if (length5 == 1) return \"YES\";\n        long start6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end6 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0) return \"NO\"\
    ;\n        if (length6 == 1) return \"YES\";\n        long start7 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0) return \"NO\"\
    ;\n        if (length7 == 1) return \"YES\";\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        if (length8 == 1) return \"YES\";\n        long start9 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Max(interval1.Item2, interval2.Item2);",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        bool isPrime = true;\n\
    \        long prime = 2;\n        while (isPrime) {\n            if (length ==\
    \ prime) break;\n            if (length % prime == 0) isPrime = false;\n     \
    \       prime++;\n        }\n        return isPrime ? \"YES\" : \"NO\";", "  \
    \      long start = interval1.Item1;\n        long end = interval1.Item2;\n  \
    \      long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length2 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length == length2) {\n            long mid = start + (length / 2);\n      \
    \      long mid2 = start2 + (length2 / 2);\n            if (mid < mid2) {\n  \
    \              return \"YES\";\n            }\n            return \"NO\";\n  \
    \      }\n        long mid = start + (length / 2);\n        long mid2 = start2\
    \ + (length2 / 2);\n        if (mid < mid2) {\n            return \"NO\";\n  \
    \      }\n        long mid3 = mid + 1;\n        long mid4 = mid2 + 1;\n      \
    \  if (mid3 > mid4) {\n            return \"NO\";\n        }\n        long mid5\
    \ = mid + 2;\n        long mid6 = mid2 + 2;\n        if (mid5 > mid6) {\n    \
    \        return \"NO\";\n        }\n        long mid7 = mid3 + 1;\n        long\
    \ mid8 = mid4 + 1;\n        if (mid7 > mid8) {\n            return \"NO\";\n \
    \       }\n        long mid9 = mid3 + 2;\n        long mid10 = mid4 + 2;\n   \
    \     if (mid9 > mid10) {\n            return \"NO\";\n        }\n        long\
    \ mid11 = mid5 + 1;\n        long mid12 = mid6 + 1;\n        if (mid11 > mid12)\
    \ {\n            return \"NO\";\n        }\n        long mid13 = mid7 + 1;\n \
    \       long mid14 = mid8 + 1;\n        if (mid13 > mid14) {\n            return\
    \ \"NO\";\n        }\n        long mid15 = mid9 + 1;\n        long mid16 = mid10\
    \ + 1;\n        if (mid15 > mid16) {\n            return \"NO\";\n        }\n\
    \        long mid17 = mid11 + 1;\n        long mid18 = mid12 + 1;\n        if\
    \ (mid17 > mid18) {\n            return \"NO\";\n        }\n        long mid19\
    \ = mid13 + 1;\n        long mid20 = mid14 + 1;\n        if (mid19 > mid20) {\n\
    \            return \"NO\";\n        }\n        long mid21 = mid15 + 1;\n    \
    \    long mid22 = mid16 + 1;\n        if (mid21 > mid22) {\n            return\
    \ \"NO\";\n        }\n        long mid23 = mid17 + 1;\n        long mid24 = mid18\
    \ + 1;\n        if (mid23 > mid24) {\n            return \"NO\";\n        }\n\
    \        long mid25 = mid19 + 1;\n        long mid26 = mid20 + 1;\n        if\
    \ (mid25 > mid26) {\n            return \"NO\";\n        }\n        ", "     \
    \   long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        bool isPrime =\
    \ true;\n        for (int i = 2; i <= Math.Sqrt(length); i++) {\n            if\
    \ (length % i == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime)\n            return \"YES\";\n\
    \        else\n            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long prime = 2;\n        while\
    \ (isPrime) {\n            isPrime = false;\n            long i = 2;\n       \
    \     while (i <= length) {\n                if (i % prime == 0) {\n         \
    \           isPrime = true;\n                    break;\n                }\n \
    \               i += 2;\n            }\n            if (isPrime)\n           \
    \     prime++;\n        }\n        if (length == prime)\n            return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long inter = length / 2;\n\
    \        long prime = IsPrime(inter);\n        if (prime == inter) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long mid = (start\
    \ + end) / 2;\n        bool isPrime = true;\n        long prime = 2;\n       \
    \ while (isPrime) {\n            if (length == prime)\n                return\
    \ \"YES\";\n            if (length == prime + 1) {\n                isPrime =\
    \ false;\n            }\n            prime += 2;\n        }\n        return \"\
    NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Min(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n       \
    \ long mid = start + (end - start) / 2;\n        long count = 0;\n        long\
    \ prime = 1;\n        while (prime < max) {\n            long num = (long)Math.Sqrt(prime);\n\
    \            if (num * num == prime) count++;\n            prime += num;\n   \
    \     }\n        if (count == 0) return \"NO\";\n        if (count == 1) return\
    \ \"YES\";\n        long max2 = (long)(Math.Sqrt(count));\n        long mid2 =\
    \ start + (end - start) / 2;\n        long count2 = 0;\n        long prime2 =\
    \ 1;\n        while (prime2 < max2) {\n            long num = (long)Math.Sqrt(prime2);\n\
    \            if (num * num == prime2) count2++;\n            prime2 += num;\n\
    \        }\n        if (count2 == 0) return \"NO\";\n        if (count2 == 1)\
    \ return \"YES\";\n        long max3 = (long)(Math.Sqrt(count2));\n        long\
    \ mid3 = start + (end - start) / 2;\n        long count3 = 0;\n        long prime3\
    \ = 1;\n        while (prime3 < max3) {\n            long num = (long)Math.Sqrt(prime3);\n\
    \            if (num * num == prime3) count3++;\n            prime3 += num;\n\
    \        }\n        if (count3 == 0) return \"NO\";\n        if (count3 == 1)\
    \ return \"YES\";\n        long max4 = (long)(Math.Sqrt(count3));\n        long\
    \ mid4 = start + (end - start) / 2;\n        long count4 = 0;\n        long prime4\
    \ = 1;\n        while (prime4 < max4) {\n            long num = (long)Math.Sqrt(prime4);\n\
    \            if (num * num == prime4) count4++;\n            prime4 += num;\n\
    \        }\n        if (count4 == 0) return \"NO\";\n        if (count4 == 1)\
    \ return \"YES\";\n        long max5 = (long)(Math.Sqrt(count4));\n        long\
    \ mid5 = start + (end - start) / 2;\n        long count5 = 0;\n        long prime5\
    \ = 1;\n        while (prime5 < max5) {\n            long num = (long)Math.Sqrt(prime5);\n\
    \            if (num * num == prime5) count5++;\n            prime5 += num;\n\
    \        }\n        if (count5 == 0) return \"NO\";\n        if (count5 == 1)\
    \ return \"YES\";\n        long ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ start2 = Math.Min(interval1.Item2, interval2.Item2);\n        long end2 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end4 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end6 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end8 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Max(interval1.Item2, interval2.Item2);", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long max2 = max / 2;\n        long max3 = max * max;\n        long max4\
    \ = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n\
    \        long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44 = max43\
    \ * max;\n        long ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long num = 1;\n        long prime = 1;\n    \
    \    while (prime * prime <= length) {\n            long next = prime * prime;\n\
    \            if (next > length) next = length;\n            if (num % next ==\
    \ 0) {\n                prime = next;\n            } else {\n                prime\
    \ = num;\n                num = next;\n            }\n        }\n        if (num\
    \ == length) return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long intersection = end - start;\n\
    \        if (length == 1) {\n            return \"YES\";\n        }\n        if\
    \ (length == 2) {\n            return \"YES\";\n        }\n        if (length\
    \ == 3) {\n            return \"YES\";\n        }\n        if (length == 5) {\n\
    \            return \"YES\";\n        }\n        if (length == 7) {\n        \
    \    return \"YES\";\n        }\n        if (length == 9) {\n            return\
    \ \"YES\";\n        }\n        if (length == 11) {\n            return \"YES\"\
    ;\n        }\n        if (length == 13) {\n            return \"YES\";\n     \
    \   }\n        if (length == 17) {\n            return \"YES\";\n        }\n \
    \       if (length == 19) {\n            return \"YES\";\n        }\n        if\
    \ (length == 21) {\n            return \"YES\";\n        }\n        if (length\
    \ == 23) {\n            return \"YES\";\n        }\n        if (length == 25)\
    \ {\n            return \"YES\";\n        }\n        if (length == 27) {\n   \
    \         return \"YES\";\n        }\n        if (length == 29) {\n          \
    \  return \"YES\";\n        }\n        if (length == 31) {\n            return\
    \ \"YES\";\n        }\n        if (length == 33) {\n            return \"YES\"\
    ;\n        }\n        if (length == 35) {\n            return \"YES\";\n     \
    \   }\n        if (length == 37) {\n            return \"YES\";\n        }\n \
    \       if (length == 39) {\n            return \"YES\";\n        }\n        if\
    \ (length == 41) {\n            return \"YES\";\n        }\n        if (length\
    \ == 43) {\n            return \"YES\";\n        }\n        if (length == 45)\
    \ {\n            return \"YES\";\n        }\n        if (length == 47) {\n   \
    \         return \"YES\";\n        }\n        if (length == 49) {\n          \
    \  return \"YES\";\n        }\n        if (length == 51) {\n            return\
    \ \"YES\";\n        }\n        if (length == 53) {\n            return \"YES\"\
    ;\n        }\n        if (length == 55) {\n            return \"YES\";\n     \
    \   }\n        if (length == 57) {\n            return \"YES\";\n        }\n \
    \       if (length == 59) {\n            return \"YES\";\n        }\n        if\
    \ (length == 61) {\n            return \"YES\";\n        }\n        if (length\
    \ == 63) {\n            return \"YES\";\n        }\n        if (length == 65)\
    \ {\n            return \"YES\";\n        }\n        if (length == 67) {\n   \
    \         return \"YES\";\n        }\n        if (length == 69) {\n          \
    \  return \"YES\";\n        }\n        if (length == 71) {\n            return\
    \ \"YES\";\n        }\n        if (length == 73) {\n            return \"YES\"\
    ;\n        }\n        if (length == 75) {\n            return \"YES\";\n     \
    \   }\n        if (length == 77) {\n            return \"YES\";\n        }\n \
    \       if (length == 79) {\n            return \"YES\";\n        }\n        if\
    \ (length == 81) {", "        long start = interval1.Item1;\n        long end\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = end - start;\n        length = length\
    \ * length + end2 - start2;\n        if (length == 0)\n            return \"NO\"\
    ;\n        if (length == 1)\n            return \"YES\";\n        long max = (start\
    \ + end) / 2;\n        long max2 = (start2 + end2) / 2;\n        long max3 = Math.Min(max,\
    \ max2);\n        long max4 = Math.Max(max, max2);\n        long max5 = Math.Min(max,\
    \ max4);\n        long max6 = Math.Max(max, max4);\n        long max7 = Math.Min(max,\
    \ max6);\n        long max8 = Math.Max(max, max6);\n        long max9 = Math.Min(max,\
    \ max8);\n        long max10 = Math.Max(max, max8);\n        long max11 = Math.Min(max,\
    \ max10);\n        long max12 = Math.Max(max, max10);\n        long max13 = Math.Min(max,\
    \ max11);\n        long max14 = Math.Max(max, max11);\n        long max15 = Math.Min(max,\
    \ max12);\n        long max16 = Math.Max(max, max12);\n        long max17 = Math.Min(max,\
    \ max13);\n        long max18 = Math.Max(max, max13);\n        long max19 = Math.Min(max,\
    \ max14);\n        long max20 = Math.Max(max, max14);\n        long max21 = Math.Min(max,\
    \ max15);\n        long max22 = Math.Max(max, max15);\n        long max23 = Math.Min(max,\
    \ max16);\n        long max24 = Math.Max(max, max16);\n        long max25 = Math.Min(max,\
    \ max17);\n        long max26 = Math.Max(max, max17);\n        long max27 = Math.Min(max,\
    \ max18);\n        long max28 = Math.Max(max, max18);\n        long max29 = Math.Min(max,\
    \ max19);\n        long max30 = Math.Max(max, max19);\n        long max31 = Math.Min(max,\
    \ max20);\n        long max32 = Math.Max(max, max20);\n        long max33 = Math.Min(max,\
    \ max21);\n        long max34 = Math.Max(max, max21);\n        long max35 = Math.Min(max,\
    \ max22);\n        long max36 = Math.Max(max, max22);\n        long max37 = Math.Min(max,\
    \ max23);\n        long max38 = Math.Max(max, max23);\n        long max39 = Math.Min(max,\
    \ max24);\n        long max", "        long start = interval1.Item1;\n       \
    \ long end = interval1.Item2;\n        long start2 = interval2.Item1;\n      \
    \  long end2 = interval2.Item2;\n        long length = end - start;\n        length\
    \ = length * length + end2 - start2;\n        long length2 = end - start2;\n \
    \       long length3 = length * length2;\n        long length4 = length3 * length3;\n\
    \        long length5 = length4 * length4;\n        long length6 = length5 * length5;\n\
    \        long length7 = length6 * length6;\n        long length8 = length7 * length7;\n\
    \        long length9 = length8 * length8;\n        long length10 = length9 *\
    \ length9;\n        long length11 = length10 * length10;\n        long length12\
    \ = length11 * length11;\n        long length13 = length12 * length12;\n     \
    \   long length14 = length13 * length13;\n        long length15 = length14 * length14;\n\
    \        long length16 = length15 * length15;\n        long length17 = length16\
    \ * length16;\n        long length18 = length17 * length17;\n        long length19\
    \ = length18 * length18;\n        long length20 = length19 * length19;\n     \
    \   long length21 = length20 * length20;\n        long length22 = length21 * length21;\n\
    \        long length23 = length22 * length22;\n        long length24 = length23\
    \ * length23;\n        long length25 = length24 * length24;\n        long length26\
    \ = length25 * length25;\n        long length27 = length26 * length26;\n     \
    \   long length28 = length27 * length27;\n        long length29 = length28 * length28;\n\
    \        long length30 = length29 * length29;\n        long length31 = length30\
    \ * length30;\n        long length32 = length31 * length31;\n        long length33\
    \ = length32 * length32;\n        long length34 = length33 * length33;\n     \
    \   long length35 = length34 * length34;\n        long length36 = length35 * length35;\n\
    \        long length37 = length36 * length36;\n        long length38 = length37\
    \ * length37;\n        long length39 = length38 * length38;\n        long length40\
    \ = length39 * length39;\n        long length41 = length40 * length40;\n     \
    \   long length42 = length41 * length41;\n        long length43 = length42", " \
    \       long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        bool isPrime = true;\n\
    \        long prime = 2;\n        while (isPrime) {\n            if (length ==\
    \ prime) {\n                isPrime = false;\n            } else {\n         \
    \       length += prime;\n            }\n            prime += 2;\n        }\n\
    \        if (length == prime) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length + 1);\n        long mid = (start +\
    \ end) / 2;\n        long count = 0;\n        long sum = 0;\n        while (start\
    \ <= mid) {\n            sum += start;\n            count++;\n            start\
    \ += max;\n        }\n        while (end >= mid) {\n            sum += end;\n\
    \            count++;\n            end -= max;\n        }\n        if (count ==\
    \ 0)\n            return \"NO\";\n        long sum2 = sum / count;\n        long\
    \ sum3 = sum2 / count;\n        long sum4 = sum3 / count;\n        long sum5 =\
    \ sum4 / count;\n        if (sum5 == 1)\n            return \"YES\";\n       \
    \ return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = length / 2;\n        while (isPrime &&\
    \ prime > 1) {\n            isPrime = IsPrime(prime);\n            prime = prime\
    \ / 2;\n        }\n        if (isPrime) return \"YES\";\n        return \"NO\"\
    ;", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        long sum =\
    \ 0;\n        long prime = 1;\n        while (prime <= length) {\n           \
    \ sum += prime;\n            prime++;\n        }\n        if (sum == length) return\
    \ \"YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length + end2 - start2;\n        bool isPrime = true;\n      \
    \  long prime = 2;\n        while (isPrime) {\n            if (length == prime)\
    \ {\n                isPrime = false;\n            }\n            else {\n   \
    \             length++;\n                prime++;\n            }\n        }\n\
    \        if (length == prime) {\n            return \"YES\";\n        }\n    \
    \    else {\n            return \"NO\";\n        }", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = length / 2;\n        bool isPrime = true;\n        for (int\
    \ i = 2; i <= prime; i++) {\n            if (length % i == 0) {\n            \
    \    isPrime = false;\n                break;\n            }\n        }\n    \
    \    if (isPrime) return \"YES\";\n        return \"NO\";", "        long start\
    \ = interval1.Item1;\n        long end = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        long length\
    \ = end - start;\n        long length2 = end2 - start2;\n        if (length ==\
    \ 0 || length2 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ == length2) {\n            long start = interval1.Item1;\n            long end\
    \ = interval1.Item2;\n            long start2 = interval2.Item1;\n           \
    \ long end2 = interval2.Item2;\n            long length = end - start;\n     \
    \       long length2 = end2 - start2;\n            if (length == length2) {\n\
    \                long start = interval1.Item1;\n                long end = interval1.Item2;\n\
    \                long start2 = interval2.Item1;\n                long end2 = interval2.Item2;\n\
    \                long length = end - start;\n                long length2 = end2\
    \ - start2;\n                if (length == length2) {\n                    long\
    \ start = interval1.Item1;\n                    long end = interval1.Item2;\n\
    \                    long start2 = interval2.Item1;\n                    long\
    \ end2 = interval2.Item2;\n                    long length = end - start;\n  \
    \                  long length2 = end2 - start2;\n                    if (length\
    \ == length2) {\n                        long start = interval1.Item1;\n     \
    \                   long end = interval1.Item2;\n                        long\
    \ start2 = interval2.Item1;\n                        long end2 = interval2.Item2;\n\
    \                        long length = end - start;\n                        long\
    \ length2 = end2 - start2;\n                        if (length == length2) {\n\
    \                            long start = interval1.Item1;\n                 \
    \           long end = interval1.Item2;\n                            long start2\
    \ = interval2.Item1;\n                            long end2 = interval2.Item2;\n\
    \                            long length = end - start;\n                    \
    \        long length2 = end2 - start2;\n                            if (length\
    \ == length2) {\n                                long start = interval1.Item1;\n\
    \                                long end = interval1.Item2;\n               \
    \                 long start2 = interval2.Item1;\n                           \
    \     long end2 = interval2.Item2;\n                                long length\
    \ = end - start;\n                                long length2 = end2 - start2;\n\
    \                                if (length == length2) {\n                  \
    \                  long start = interval1.Item1;\n                           \
    \         long end = interval1.Item2;\n                                    long\
    \ start2 = interval2.Item1;\n                                    long end2 = interval2.Item2;\n\
    \                                    long length = end - start;\n            \
    \                        long length2 = end2 - start2;\n                     \
    \               if (length == length2) {\n                                   \
    \     long start = interval1.Item1;\n                                        long\
    \ end = interval1.Item2;\n                                        long start2\
    \ = interval2.Item1;\n                                        long end2 = interval2.Item2;\n\
    \                                        long length = end - start;\n        \
    \                                long length2 = end2 - start2;\n             \
    \                           if (length == length2) {", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      long length2 = end2 - start2;\n        if (length2 == 0) {\n          \
    \  return length == 0 ? \"YES\" : \"NO\";\n        }\n        if (length == length2)\
    \ {\n            long start3 = start;\n            long end3 = end;\n        \
    \    long start4 = start2;\n            long end4 = end2;\n            long start5\
    \ = start3;\n            long end5 = end3;\n            long start6 = start4;\n\
    \            long end6 = end4;\n            long start7 = start5;\n          \
    \  long end7 = end5;\n            long start8 = start6;\n            long end8\
    \ = end6;\n            long start9 = start7;\n            long end9 = end7;\n\
    \            long start10 = start8;\n            long end10 = end8;\n        \
    \    long start11 = start9;\n            long end11 = end9;\n            long\
    \ start12 = start10;\n            long end12 = end10;\n            long start13\
    \ = start11;\n            long end13 = end11;\n            long start14 = start12;\n\
    \            long end14 = end12;\n            long start15 = start13;\n      \
    \      long end15 = end13;\n            long start16 = start14;\n            long\
    \ end16 = end14;\n            long start17 = start15;\n            long end17\
    \ = end15;\n            long start18 = start16;\n            long end18 = end16;\n\
    \            long start19 = start17;\n            long end19 = end17;\n      \
    \      long start20 = start18;\n            long end20 = end18;\n            long\
    \ start21 = start19;\n            long end21 = end19;\n            long start22\
    \ = start20;\n            long end22 = end20;\n            long start23 = start21;\n\
    \            long end23 = end21;\n            long start24 = start22;\n      \
    \      long end24 = end22;\n            long start25 = start23;\n            long\
    \ end25 = end23;\n            long start26 = start24;\n            long end26\
    \ = end24;\n            long start27 = start25;\n            long end27 = end25;\n\
    \            long start28 = start26;\n            long end28 = end26;\n      \
    \      long start29 = start27;\n            long end29 = end27;\n            long\
    \ start30 = start28;\n            ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long sum = 0;\n        long product\
    \ = 1;\n        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            sum += product;\n            product *= prime;\n            isPrime\
    \ = IsPrime(sum);\n        }\n        if (length == 1) {\n            return \"\
    YES\";\n        }\n        if (length != prime) {\n            return \"NO\";\n\
    \        }\n        return \"YES\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length +\
    \ 1);\n        long maxPrime = max - 1;\n        long minPrime = min + 1;\n  \
    \      bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (maxPrime % prime == 0)\n                maxPrime /= prime;\n\
    \            else\n                isPrime = false;\n            if (minPrime\
    \ % prime == 0)\n                minPrime /= prime;\n            else\n      \
    \          isPrime = false;\n            prime++;\n        }\n        if (maxPrime\
    \ == minPrime)\n            return \"NO\";\n        return \"YES\";", "      \
    \  long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        if (length == 1) return \"YES\"\
    ;\n        bool isPrime = true;\n        long max = (long)Math.Sqrt(length) +\
    \ 1;\n        for (long i = 2; i <= max; i++) {\n            if (length % i ==\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n        }\n        if (isPrime) return \"YES\";\n        return \"NO\";",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long prime = Prime(length);\n\
    \        if (prime == length) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long max2 = max / 2;\n        long max3 = max * max;\n        long max4\
    \ = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n\
    \        long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44 = max43\
    \ * max;\n        long ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length) + 1;\n        long max2 = max * max;\n\
    \        long max3 = max2 * max;\n        long max4 = max3 * max;\n        long\
    \ max5 = max4 * max;\n        long max6 = max5 * max;\n        long max7 = max6\
    \ * max;\n        long max8 = max7 * max;\n        long max9 = max8 * max;\n \
    \       long max10 = max9 * max;\n        long max11 = max10 * max;\n        long\
    \ max12 = max11 * max;\n        long max13 = max12 * max;\n        long max14\
    \ = max13 * max;\n        long max15 = max14 * max;\n        long max16 = max15\
    \ * max;\n        long max17 = max16 * max;\n        long max18 = max17 * max;\n\
    \        long max19 = max18 * max;\n        long max20 = max19 * max;\n      \
    \  long max21 = max20 * max;\n        long max22 = max21 * max;\n        long\
    \ max23 = max22 * max;\n        long max24 = max23 * max;\n        long max25\
    \ = max24 * max;\n        long max26 = max25 * max;\n        long max27 = max26\
    \ * max;\n        long max28 = max27 * max;\n        long max29 = max28 * max;\n\
    \        long max30 = max29 * max;\n        long max31 = max30 * max;\n      \
    \  long max32 = max31 * max;\n        long max33 = max32 * max;\n        long\
    \ max34 = max33 * max;\n        long max35 = max34 * max;\n        long max36\
    \ = max35 * max;\n        long max37 = max36 * max;\n        long max38 = max37\
    \ * max;\n        long max39 = max38 * max;\n        long max40 = max39 * max;\n\
    \        long max41 = max40 * max;\n        long max42 = max41 * max;\n      \
    \  long max43 = max42 * max;\n        long max44 = max43 * max;", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        if (length == 1) return \"YES\";\n        long mid\
    \ = start + (end - start) / 2;\n        long count = 0;\n        long sum = 0;\n\
    \        while (start <= mid) {\n            sum += start;\n            count++;\n\
    \            start += 2;\n        }\n        while (end >= mid) {\n          \
    \  sum += end;\n            count++;\n            end -= 2;\n        }\n     \
    \   if (sum == mid) {\n            if (count == 2) return \"YES\";\n         \
    \   else if (count > 2) return \"NO\";\n            else return \"NO\";\n    \
    \    }\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        for (int i = 2; i <= Math.Sqrt(length);\
    \ i++) {\n            if (length % i == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime)\n    \
    \        return \"YES\";\n        else\n            return \"NO\";", "       \
    \ long start = interval1.Item1;\n        long end = interval1.Item2;\n       \
    \ long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n     \
    \   long length = end - start;\n        length = length * end2 - start2;\n   \
    \     long length2 = end - start2;\n        long length3 = length * end2;\n  \
    \      long length4 = length * end3;\n        long length5 = length * end4;\n\
    \        long length6 = length * end5;\n        long length7 = length * end6;\n\
    \        long length8 = length * end7;\n        long length9 = length * end8;\n\
    \        long length10 = length * end9;\n        long length11 = length * end10;\n\
    \        long length12 = length * end11;\n        long length13 = length * end12;\n\
    \        long length14 = length * end13;\n        long length15 = length * end14;\n\
    \        long length16 = length * end15;\n        long length17 = length * end16;\n\
    \        long length18 = length * end17;\n        long length19 = length * end18;\n\
    \        long length20 = length * end19;\n        long length21 = length * end20;\n\
    \        long length22 = length * end21;\n        long length23 = length * end22;\n\
    \        long length24 = length * end23;\n        long length25 = length * end24;\n\
    \        long length26 = length * end25;\n        long length27 = length * end26;\n\
    \        long length28 = length * end27;\n        long length29 = length * end28;\n\
    \        long length30 = length * end29;\n        long length31 = length * end30;\n\
    \        long length32 = length * end31;\n        long length33 = length * end32;\n\
    \        long length34 = length * end33;\n        long length35 = length * end34;\n\
    \        long length36 = length * end35;\n        long length37 = length * end36;\n\
    \        long length38 = length * end37;\n        long length39 = length * end38;\n\
    \        long length40 = length * end39;\n        long length41 = length * end40;\n\
    \        long length42 = length * end41;\n        long length43 = length * end42;\n\
    \        long length44 = length * end43;\n        long length45 = length * end44;\n\
    \        long length46 = length * end45;", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                length += prime;\n                prime++;\n\
    \            }\n        }\n        if (isPrime)\n            return \"YES\";\n\
    \        else\n            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ divisor = 2;\n        while (divisor < length) {\n            if (mid % divisor\
    \ == 0)\n                isPrime = false;\n            divisor++;\n        }\n\
    \        if (isPrime)\n            return \"YES\";\n        return \"NO\";", " \
    \       long start = interval1.Item1;\n        long end = interval1.Item2;\n \
    \       long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length2 == 0) {\n            if (length == 0) {\n                return\
    \ \"YES\";\n            }\n            return \"NO\";\n        }\n        long\
    \ length3 = length * length2;\n        long length4 = length * length3;\n    \
    \    long length5 = length * length4;\n        long length6 = length * length5;\n\
    \        long length7 = length * length6;\n        long length8 = length * length7;\n\
    \        long length9 = length * length8;\n        long length10 = length * length9;\n\
    \        long length11 = length * length10;\n        long length12 = length *\
    \ length11;\n        long length13 = length * length12;\n        long length14\
    \ = length * length13;\n        long length15 = length * length14;\n        long\
    \ length16 = length * length15;\n        long length17 = length * length16;\n\
    \        long length18 = length * length17;\n        long length19 = length *\
    \ length18;\n        long length20 = length * length19;\n        long length21\
    \ = length * length20;\n        long length22 = length * length21;\n        long\
    \ length23 = length * length22;\n        long length24 = length * length23;\n\
    \        long length25 = length * length24;\n        long length26 = length *\
    \ length25;\n        long length27 = length * length26;\n        long length28\
    \ = length * length27;\n        long length29 = length * length28;\n        long\
    \ length30 = length * length29;\n        long length31 = length * length30;\n\
    \        long length32 = length * length31;\n        long length33 = length *\
    \ length32;\n        long length34 = length * length33;\n        long length35\
    \ = length * length34;\n        long length36 = length * length35;\n        long\
    \ length37 = length * length36;\n        long length38 = length * length37;\n\
    \        long length39 = length * length38;\n        long length40 = length *\
    \ length39;\n        long length41 = length * length40;\n        long length42\
    \ = length * length41;\n        long length43 = length * length42;\n        long\
    \ length44 = length * length43;\n        long length45 = length * ", "       \
    \ long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end =\
    \ Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        long inter = length\
    \ / 2;\n        long sum = 0;\n        long product = 1;\n        while (inter\
    \ > 0) {\n            sum += product;\n            product *= inter;\n       \
    \     inter--;\n        }\n        if (sum == length)\n            return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long start2 =\
    \ Math.Min(interval2.Item1, interval1.Item1);\n        long end2 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end4 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end6 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end8 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Max(interval1.Item2, interval2.Item2);", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long start2 = Math.Min(interval2.Item1, interval1.Item1);\n\
    \        long end2 = Math.Max(interval2.Item2, interval1.Item2);\n        long\
    \ length2 = end2 - start2;\n        if (length2 == 0)\n            return \"NO\"\
    ;\n        if (length2 == 1)\n            return \"YES\";\n        long start3\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end3 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length3 = end3 - start3;\n        if (length3\
    \ == 0)\n            return \"NO\";\n        if (length3 == 1)\n            return\
    \ \"YES\";\n        long start4 = Math.Min(interval2.Item1, interval1.Item1);\n\
    \        long end4 = Math.Max(interval2.Item2, interval1.Item2);\n        long\
    \ length4 = end4 - start4;\n        if (length4 == 0)\n            return \"NO\"\
    ;\n        if (length4 == 1)\n            return \"YES\";\n        long start5\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end5 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length5 = end5 - start5;\n        if (length5\
    \ == 0)\n            return \"NO\";\n        if (length5 == 1)\n            return\
    \ \"YES\";\n        long start6 = Math.Min(interval2.Item1, interval1.Item1);\n\
    \        long end6 = Math.Max(interval2.Item2, interval1.Item2);\n        long\
    \ length6 = end6 - start6;\n        if (length6 == 0)\n            return \"NO\"\
    ;\n        if (length6 == 1)\n            return \"YES\";\n        long start7\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end7 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length7 = end7 - start7;\n        if (length7\
    \ == 0)\n            return \"NO\";\n        if (length7 == 1)\n            return\
    \ \"YES\";\n        long start8 = Math.Min(interval2.Item1, interval1.Item1);\n\
    \        long end8 = Math.Max(interval2.Item2, interval1.Item2);\n        long\
    \ length8 = end8 - start8;\n        if (length8 == 0)\n            return \"NO\"\
    ;\n        if (length8 == 1)\n            return \"YES\";\n        long start9\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end9 = Math.Max(interval1.Item2,\
    \ interval2.Item2);", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ inter = start + length;\n        bool isPrime = true;\n        long divisor\
    \ = 2;\n        while (divisor < inter) {\n            if (inter % divisor ==\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n            divisor++;\n        }\n        if (isPrime) return \"YES\";\n\
    \        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        if (length == 2 && interval1.Item1 == interval2.Item1)\
    \ return \"YES\";\n        if (length == 2 && interval1.Item2 == interval2.Item2)\
    \ return \"YES\";\n        if (length == 2 && interval1.Item1 == interval2.Item2\
    \ && interval1.Item2 == interval2.Item1) return \"YES\";\n        if (length ==\
    \ 2 && interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\
    \ return \"YES\";\n        if (length == 2 && interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item1 == interval2.Item1)\
    \ return \"YES\";\n        if (length == 2 && interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item1 == interval2.Item2\
    \ && interval1.Item2 == interval2.Item1) return \"YES\";\n        if (length ==\
    \ 2 && interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item2 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item1) return \"YES\";\n        if (length ==\
    \ 2 && interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item2 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item2 && interval1.Item2 == interval2.Item1)\
    \ return \"YES\";\n        if (length == 2 && interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item1 == interval2.Item2\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item1 == interval2.Item2\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) return \"YES\";\n        if (length ==\
    \ 2 && interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item2 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item2 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2\
    \ && interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\
    \ return \"YES\";\n        if (length == 2 && interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item1 == interval2.Item2\
    \ && interval1.Item2 == ", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ sum = 0;\n        long prime = 1;\n        while (prime <= length) {\n     \
    \       sum += prime;\n            prime++;\n        }\n        if (sum == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) return \"YES\";\n            isPrime = false;\n\
    \            prime++;\n        }\n        return \"NO\";", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length + 1);\n        long mid = start + max;\n\
    \        long count = 0;\n        long sum = 0;\n        long product = 1;\n \
    \       while (count < max) {\n            sum += product;\n            product\
    \ *= mid;\n            mid++;\n            count++;\n        }\n        if (sum\
    \ == length)\n            return \"YES\";\n        else\n            return \"\
    NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Min(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ + 1);\n        long mid = start + (end - start) / 2;\n        bool isPrime =\
    \ true;\n        long prime = start;\n        while (prime < max) {\n        \
    \    long test = (long)Math.Sqrt(prime);\n            if (test > max)\n      \
    \          test = max;\n            if (test < min)\n                test = min;\n\
    \            long test2 = prime + 1;\n            while (test2 < test) {\n   \
    \             if (mid % test2 == 0) {\n                    isPrime = false;\n\
    \                    break;\n                }\n                test2 += 2;\n\
    \            }\n            prime += 2;\n        }\n        if (isPrime)\n   \
    \         return \"YES\";\n        else\n            return \"NO\";", "      \
    \  long start = interval1.Item1;\n        long end = interval1.Item2;\n      \
    \  long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n    \
    \    long length = end - start;\n        length = length * length + end2 - start2;\n\
    \        if (length == 0) return \"NO\";\n        long length2 = end - start2;\n\
    \        if (length2 == 0) return \"NO\";\n        long length3 = length * length2;\n\
    \        long length4 = length2 * length2;\n        long length5 = length3 * length3;\n\
    \        long length6 = length4 * length4;\n        long length7 = length5 * length5;\n\
    \        long length8 = length6 * length6;\n        long length9 = length7 * length7;\n\
    \        long length10 = length8 * length8;\n        long length11 = length9 *\
    \ length9;\n        long length12 = length10 * length10;\n        long length13\
    \ = length11 * length11;\n        long length14 = length12 * length12;\n     \
    \   long length15 = length13 * length13;\n        long length16 = length14 * length14;\n\
    \        long length17 = length15 * length15;\n        long length18 = length16\
    \ * length16;\n        long length19 = length17 * length17;\n        long length20\
    \ = length18 * length18;\n        long length21 = length19 * length19;\n     \
    \   long length22 = length20 * length20;\n        long length23 = length21 * length21;\n\
    \        long length24 = length22 * length22;\n        long length25 = length23\
    \ * length23;\n        long length26 = length24 * length24;\n        long length27\
    \ = length25 * length25;\n        long length28 = length26 * length26;\n     \
    \   long length29 = length27 * length27;\n        long length30 = length28 * length28;\n\
    \        long length31 = length29 * length29;\n        long length32 = length30\
    \ * length30;\n        long length33 = length31 * length31;\n        long length34\
    \ = length32 * length32;\n        long length35 = length33 * length33;\n     \
    \   long length36 = length34 * length34;\n        long length37 = length35 * length35;\n\
    \        long length38 = length36 * length36;\n        long length39 = length37\
    \ * length37;\n        long length40 = length38 * length38;\n        long length41\
    \ = length39 * length39;\n        long length", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length * length + end2 - start2;\n        bool isPrime = true;\n\
    \        long counter = 1;\n        while (isPrime && counter < length) {\n  \
    \          if (start < end2) {\n                if (start % end2 == 0) {\n   \
    \                 isPrime = false;\n                }\n                else {\n\
    \                    start = start + 1;\n                }\n            }\n  \
    \          else {\n                if (end2 % start == 0) {\n                \
    \    isPrime = false;\n                }\n                else {\n           \
    \         end2 = end2 + 1;\n                }\n            }\n            counter\
    \ = counter + 1;\n        }\n        if (isPrime) {\n            return \"YES\"\
    ;\n        }\n        else {\n            return \"NO\";\n        }", "      \
    \  long start = interval1.Item1;\n        long end = interval1.Item2;\n      \
    \  long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n    \
    \    long length = end - start;\n        length = length * length + end2 - start2;\n\
    \        bool isPrime = true;\n        bool isPrime2 = true;\n        long lengthPrime\
    \ = 0;\n        long lengthPrime2 = 0;\n        long lengthPrime3 = 0;\n     \
    \   long lengthPrime4 = 0;\n        long lengthPrime5 = 0;\n        long lengthPrime6\
    \ = 0;\n        long lengthPrime7 = 0;\n        long lengthPrime8 = 0;\n     \
    \   long lengthPrime9 = 0;\n        long lengthPrime10 = 0;\n        long lengthPrime11\
    \ = 0;\n        long lengthPrime12 = 0;\n        long lengthPrime13 = 0;\n   \
    \     long lengthPrime14 = 0;\n        long lengthPrime15 = 0;\n        long lengthPrime16\
    \ = 0;\n        long lengthPrime17 = 0;\n        long lengthPrime18 = 0;\n   \
    \     long lengthPrime19 = 0;\n        long lengthPrime20 = 0;\n        long lengthPrime21\
    \ = 0;\n        long lengthPrime22 = 0;\n        long lengthPrime23 = 0;\n   \
    \     long lengthPrime24 = 0;\n        long lengthPrime25 = 0;\n        long lengthPrime26\
    \ = 0;\n        long lengthPrime27 = 0;\n        long lengthPrime28 = 0;\n   \
    \     long lengthPrime29 = 0;\n        long lengthPrime30 = 0;\n        long lengthPrime31\
    \ = 0;\n        long lengthPrime32 = 0;\n        long lengthPrime33 = 0;\n   \
    \     long lengthPrime34 = 0;\n        long lengthPrime35 = 0;\n        long lengthPrime36\
    \ = 0;\n        long lengthPrime37 = 0;\n        long lengthPrime38 = 0;\n   \
    \     long lengthPrime39 = 0;\n        long lengthPrime40 = 0;\n        long lengthPrime41\
    \ = 0;\n        long lengthPrime42 = 0;\n        long lengthPrime43 = 0;\n   \
    \     long lengthPrime44 = 0;\n        long lengthPrime45 = 0;\n        long lengthPrime46\
    \ = 0;\n        long lengthPrime47 = 0;\n        long lengthPrime48 = 0;\n   \
    \     long lengthPrime49 = 0;\n        long lengthPrime50 = 0;\n        long lengthPrime51\
    \ = 0;\n        long lengthPrime52 = 0;\n        long lengthPrime53 = 0;\n   \
    \     long lengthPrime54 = 0;\n        long lengthPrime55 = 0;\n        long lengthPrime56\
    \ = 0;\n        long length", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long sum = 0;\n        long product\
    \ = 1;\n        bool isPrime = true;\n        long prime = 2;\n        long primeCounter\
    \ = 0;\n        while (primeCounter < length) {\n            sum += product;\n\
    \            product *= prime;\n            primeCounter++;\n        }\n     \
    \   if (sum == length) {\n            isPrime = true;\n        }\n        else\
    \ {\n            isPrime = false;\n        }\n        if (isPrime) {\n       \
    \     return \"YES\";\n        }\n        else {\n            return \"NO\";\n\
    \        }", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long start2 = start - max;\n       \
    \ long end2 = end + max;\n        long length2 = end - start2;\n        if (length2\
    \ == 0) return \"NO\";\n        long max2 = (long)Math.Sqrt(length2);\n      \
    \  long start3 = start2 - max2;\n        long end3 = end2 + max2;\n        long\
    \ length3 = end - start3;\n        if (length3 == 0) return \"NO\";\n        long\
    \ max3 = (long)Math.Sqrt(length3);\n        long start4 = start3 - max3;\n   \
    \     long end4 = end3 + max3;\n        long length4 = end - start4;\n       \
    \ if (length4 == 0) return \"NO\";\n        long max4 = (long)Math.Sqrt(length4);\n\
    \        long start5 = start4 - max4;\n        long end5 = end4 + max4;\n    \
    \    long length5 = end - start5;\n        if (length5 == 0) return \"NO\";\n\
    \        long max5 = (long)Math.Sqrt(length5);\n        long start6 = start5 -\
    \ max5;\n        long end6 = end5 + max5;\n        long length6 = end - start6;\n\
    \        if (length6 == 0) return \"NO\";\n        long max6 = (long)Math.Sqrt(length6);\n\
    \        long start7 = start6 - max6;\n        long end7 = end6 + max6;\n    \
    \    long length7 = end - start7;\n        if (length7 == 0) return \"NO\";\n\
    \        long max7 = (long)Math.Sqrt(length7);\n        long start8 = start7 -\
    \ max7;\n        long end8 = end7 + max7;\n        long length8 = end - start8;\n\
    \        if (length8 == 0) return \"NO\";\n        long max8 = (long)Math.Sqrt(length8);\n\
    \        long start9 = start8 - max8;\n        long end9 = end8 + max8;\n    \
    \    long length9 = end - start9;\n        if (length9 == 0) return \"NO\";\n\
    \        long max9 = (long)Math.Sqrt(length9);\n        long start10 = start9\
    \ - max9;\n        long end10 = end9 + max9;\n        long length10 = end - start10;\n\
    \        if (length10 == 0) return \"NO\";\n        long max10 = (long)Math.Sqrt(length10);\n\
    \        long start11 = start10 - max", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = length / 2;\n        bool isPrime = true;\n  \
    \      for (int i = 2; i <= prime; i++) {\n            if (length % i == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime)\n            return \"YES\";\n        else\n   \
    \         return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length + 1);\n        long mid = start + (end\
    \ - start) / 2;\n        bool isPrime = true;\n        long count = 0;\n     \
    \   while (isPrime && count < max) {\n            isPrime = IsPrime(mid);\n  \
    \          mid = start + (end - start) / 2;\n            count++;\n        }\n\
    \        if (isPrime)\n            return \"YES\";\n        else\n           \
    \ return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long mid = start + (end - start) / 2;\n     \
    \   if (IsPrime(mid)) return \"YES\";\n        return \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long num = 2;\n        while (true) {\n            long mid\
    \ = (start + end) / 2;\n            if (mid * mid == num)\n                return\
    \ \"YES\";\n            if (mid * mid + num == num)\n                return \"\
    NO\";\n            if (mid * mid > num)\n                end = mid;\n        \
    \    else\n                start = mid;\n        }", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = length / 2;\n        long remainder = length % 2;\n    \
    \    bool isPrime = true;\n        for (long i = start; i <= end; i++) {\n   \
    \         if (i % prime == 0) {\n                isPrime = false;\n          \
    \      break;\n            }\n        }\n        if (isPrime) return \"YES\";\n\
    \        return \"NO\";", "        long start = interval1.Item1;\n        long\
    \ end = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = end - start;\n        length\
    \ = length * end2 - start2 * end;\n        long length2 = end - start2;\n    \
    \    long length3 = end2 - start2;\n        long length4 = end - start;\n    \
    \    long length5 = end2 - start;\n        long length6 = end2 - end2;\n     \
    \   long length7 = end2 - end2;\n        long length8 = end2 - end2;\n       \
    \ long length9 = end2 - end2;\n        long length10 = end2 - end2;\n        long\
    \ length11 = end2 - end2;\n        long length12 = end2 - end2;\n        long\
    \ length13 = end2 - end2;\n        long length14 = end2 - end2;\n        long\
    \ length15 = end2 - end2;\n        long length16 = end2 - end2;\n        long\
    \ length17 = end2 - end2;\n        long length18 = end2 - end2;\n        long\
    \ length19 = end2 - end2;\n        long length20 = end2 - end2;\n        long\
    \ length21 = end2 - end2;\n        long length22 = end2 - end2;\n        long\
    \ length23 = end2 - end2;\n        long length24 = end2 - end2;\n        long\
    \ length25 = end2 - end2;\n        long length26 = end2 - end2;\n        long\
    \ length27 = end2 - end2;\n        long length28 = end2 - end2;\n        long\
    \ length29 = end2 - end2;\n        long length30 = end2 - end2;\n        long\
    \ length31 = end2 - end2;\n        long length32 = end2 - end2;\n        long\
    \ length33 = end2 - end2;\n        long length34 = end2 - end2;\n        long\
    \ length35 = end2 - end2;\n        long length36 = end2 - end2;\n        long\
    \ length37 = end2 - end2;\n        long length38 = end2 - end2;\n        long\
    \ length39 = end2 - end2;\n        long length40 = end2 - end2;\n        long\
    \ length41 = end2 - end2;\n        long length42 = end2 - end2;\n        long\
    \ length43 = end2 - end2;\n        long length44 = end2 - end2;\n        long\
    \ length45 = end2 - end2;\n        long length46 = end2 - end2;\n        long\
    \ length47 = end2 - end2;\n        long length48 = end2 - end2;\n        long\
    \ length49 = end2 - ", "        long start = interval1.Item1;\n        long end\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = 0;\n        long length2 = 0;\n  \
    \      long length3 = 0;\n        long length4 = 0;\n        long length5 = 0;\n\
    \        long length6 = 0;\n        long length7 = 0;\n        long length8 =\
    \ 0;\n        long length9 = 0;\n        long length10 = 0;\n        long length11\
    \ = 0;\n        long length12 = 0;\n        long length13 = 0;\n        long length14\
    \ = 0;\n        long length15 = 0;\n        long length16 = 0;\n        long length17\
    \ = 0;\n        long length18 = 0;\n        long length19 = 0;\n        long length20\
    \ = 0;\n        long length21 = 0;\n        long length22 = 0;\n        long length23\
    \ = 0;\n        long length24 = 0;\n        long length25 = 0;\n        long length26\
    \ = 0;\n        long length27 = 0;\n        long length28 = 0;\n        long length29\
    \ = 0;\n        long length30 = 0;\n        long length31 = 0;\n        long length32\
    \ = 0;\n        long length33 = 0;\n        long length34 = 0;\n        long length35\
    \ = 0;\n        long length36 = 0;\n        long length37 = 0;\n        long length38\
    \ = 0;\n        long length39 = 0;\n        long length40 = 0;\n        long length41\
    \ = 0;\n        long length42 = 0;\n        long length43 = 0;\n        long length44\
    \ = 0;\n        long length45 = 0;\n        long length46 = 0;\n        long length47\
    \ = 0;\n        long length48 = 0;\n        long length49 = 0;\n        long length50\
    \ = 0;\n        long length51 = 0;\n        long length52 = 0;\n        long length53\
    \ = 0;\n        long length54 = 0;\n        long length55 = 0;\n        long length56\
    \ = 0;\n        long length57 = 0;\n        long length58 = 0;\n        long length59\
    \ = 0;\n        long length60 = 0;\n        long length61 = 0;\n        long length62\
    \ = 0;\n        long length63 = 0;\n        long length64 = 0;\n        long length65\
    \ = 0;\n        long length66 = 0;\n        long length67 = 0;\n        long length68\
    \ = 0;\n        long length69 = 0;\n        long length70 = 0;\n        long length71\
    \ = 0;\n        long length72 = 0;\n        long length73 = 0;\n        long length74\
    \ = 0;\n        long length75 = 0;\n        long length76 = 0;\n        long length77\
    \ = 0;\n        long length78 = 0;\n        long length79 = 0;\n        long length80\
    \ = 0;\n        long length", "        long start = interval1.Item1;\n       \
    \ long end = interval1.Item2;\n        long start2 = interval2.Item1;\n      \
    \  long end2 = interval2.Item2;\n        long length = end - start;\n        length\
    \ = length + end2 - start2;\n        if (length == 0)\n            return \"NO\"\
    ;\n        if (length == 1)\n            return \"YES\";\n        bool isPrime\
    \ = true;\n        long prime = 2;\n        while (isPrime) {\n            if\
    \ (length == prime)\n                return \"YES\";\n            if (length <\
    \ prime)\n                return \"NO\";\n            if (length == prime + 1)\
    \ {\n                isPrime = false;\n            }\n            prime++;\n \
    \       }\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = GetPrime(length);\n        if (length == prime)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      length = length * length + end2 - start2;\n        bool isPrime = true;\n\
    \        long prime = 2;\n        while (isPrime) {\n            if (length ==\
    \ prime) {\n                isPrime = false;\n            } else {\n         \
    \       length += prime;\n                prime++;\n            }\n        }\n\
    \        if (length == prime)\n            return \"YES\";\n        else\n   \
    \         return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length +\
    \ 1);\n        long mid = start + (end - start) / 2;\n        long count = 0;\n\
    \        long sum = 0;\n        while (start < end) {\n            sum += start;\n\
    \            count++;\n            start += mid;\n        }\n        if (sum ==\
    \ max) {\n            while (start < end) {\n                sum += start;\n \
    \               count++;\n                start += mid;\n            }\n     \
    \       if (sum == max) {\n                return \"YES\";\n            }\n  \
    \      }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length /\
    \ 2);\n        long mid = start + max;\n        long count = 0;\n        while\
    \ (true) {\n            long mid2 = mid + max;\n            long mid3 = mid +\
    \ min;\n            if (mid2 >= end)\n                break;\n            if (mid3\
    \ >= end)\n                break;\n            if (mid2 == mid3)\n           \
    \     count++;\n            mid = mid2;\n            mid3 = mid2;\n        }\n\
    \        if (count % 2 == 0)\n            return \"YES\";\n        return \"NO\"\
    ;", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   bool isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n\
    \            if (length == prime)\n                return \"YES\";\n         \
    \   if (length < prime)\n                isPrime = false;\n            prime++;\n\
    \        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long intersection = end - start;\n\
    \        bool isPrime = true;\n        long prime = length;\n        while (prime\
    \ > 1) {\n            if (length / prime == 1) {\n                isPrime = false;\n\
    \                break;\n            }\n            prime--;\n        }\n    \
    \    if (isPrime) {\n            return \"YES\";\n        }\n        return \"\
    NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   long num = 1;\n        long prime = 1;\n        while (prime <= length) {\n\
    \            if (length % prime == 0) {\n                num *= prime;\n     \
    \           prime++;\n            }\n            length--;\n        }\n      \
    \  if (num == 1)\n            return \"NO\";\n        if (num == 2)\n        \
    \    return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long counter = 1;\n        while\
    \ (isPrime && counter <= length) {\n            isPrime = IsPrime(counter);\n\
    \            counter++;\n        }\n        if (isPrime)\n            return \"\
    YES\";\n        else\n            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long divisor = 2;\n        while (divisor\
    \ <= length) {\n            if (length % divisor == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n            divisor++;\n  \
    \      }\n        if (isPrime) return \"YES\";\n        return \"NO\";", "   \
    \     long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        long num = 2;\n        while\
    \ (true) {\n            long mid = (start + end) / 2;\n            if (mid * mid\
    \ == length) break;\n            if (mid * mid < length) end = mid;\n        \
    \    else start = mid;\n        }\n        if (start * start == length) return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                length--;\n            }\n            prime++;\n\
    \        }\n        return isPrime ? \"YES\" : \"NO\";", "        long start =\
    \ Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        bool isPrime\
    \ = true;\n        if (length == 1) {\n            isPrime = false;\n        }\n\
    \        else if (length == 2) {\n            if (interval1.Item1 == interval2.Item1)\
    \ {\n                isPrime = false;\n            }\n        }\n        else\
    \ if (length == 3) {\n            if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2) {\n                isPrime = false;\n            }\n   \
    \     }\n        else if (length == 5) {\n            if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item3 == interval2.Item3)\
    \ {\n                isPrime = false;\n            }\n        }\n        else\
    \ if (length == 7) {\n            if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2 && interval1.Item3 == interval2.Item3 && interval1.Item4\
    \ == interval2.Item4) {\n                isPrime = false;\n            }\n   \
    \     }\n        else if (length == 9) {\n            if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item3 == interval2.Item3\
    \ && interval1.Item4 == interval2.Item4 && interval1.Item5 == interval2.Item5)\
    \ {\n                isPrime = false;\n            }\n        }\n        else\
    \ if (length == 11) {\n            if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2 && interval1.Item3 == interval2.Item3 && interval1.Item4\
    \ == interval2.Item4 && interval1.Item5 == interval2.Item5 && interval1.Item6\
    \ == interval2.Item6) {\n                isPrime = false;\n            }\n   \
    \     }\n        else if (length == 13) {\n            if (interval1.Item1 ==\
    \ interval2.Item1 && interval1.Item2 == interval2.Item2 && interval1.Item3 ==\
    \ interval2.Item3 && interval1.Item4 == interval2.Item4 && interval1.Item5 ==\
    \ interval2.Item5 && interval1.Item6 == interval2.Item6 && interval1.Item7 ==\
    \ interval2.Item7) {\n                isPrime = false;\n            }\n      \
    \  }\n        else if (length == 15) {\n            if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2 && interval1.Item3 == interval2.Item3\
    \ && interval1.Item4 == interval2.Item4 && interval1.Item5 == interval2.Item5\
    \ && interval1.Item6 == interval2.Item6 && interval1.Item7 == interval2.Item7\
    \ && interval1.Item8 == interval2.Item8) {\n                isPrime = false;",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n      \
    \      if (length == prime)\n                return \"YES\";\n            if (length\
    \ == prime * prime)\n                isPrime = false;\n            prime++;\n\
    \        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ start2 = Math.Min(interval2.Item1, interval1.Item1);\n        long end2 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Min(interval1.Item1, interval3.Item1);\n        long end4 = Math.Max(interval1.Item2,\
    \ interval3.Item2);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Min(interval2.Item1, interval3.Item1);\n\
    \        long end5 = Math.Max(interval2.Item2, interval3.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Min(interval1.Item1, interval3.Item1);\n        long end6 = Math.Max(interval1.Item2,\
    \ interval3.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Min(interval2.Item1, interval3.Item1);\n\
    \        long end7 = Math.Max(interval2.Item2, interval3.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Min(interval1.Item1, interval4.Item1);\n        long end8 = Math.Max(interval1.Item2,\
    \ interval4.Item2);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Min(interval2.Item1, interval4.Item1);\n\
    \        long end9 = Math.Max(interval2.Item2, interval4.Item2);", "        long\
    \ start = interval1.Item1;\n        long end = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        long\
    \ length = end - start;\n        length = length + end2 - start2;\n        bool\
    \ isPrime = true;\n        long prime = length / 2;\n        while (isPrime) {\n\
    \            if (length == prime) {\n                isPrime = false;\n      \
    \      } else {\n                length--;\n            }\n        }\n       \
    \ if (isPrime) {\n            return \"YES\";\n        } else {\n            return\
    \ \"NO\";\n        }", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ sum = 0;\n        for (long i = start; i <= end; i++) {\n            sum +=\
    \ i;\n        }\n        if (sum == length) return \"YES\";\n        return \"\
    NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   long max = (long)Math.Sqrt(length);\n        long mid = start + (end - start)\
    \ / 2;\n        long count = 0;\n        long prime = 1;\n        while (prime\
    \ < max) {\n            long num = Math.Sqrt(prime);\n            long num2 =\
    \ Math.Sqrt(num);\n            long num3 = Math.Sqrt(num2);\n            long\
    \ num4 = Math.Sqrt(num3);\n            long num5 = Math.Sqrt(num4);\n        \
    \    long num6 = Math.Sqrt(num5);\n            long num7 = Math.Sqrt(num6);\n\
    \            long num8 = Math.Sqrt(num7);\n            long num9 = Math.Sqrt(num8);\n\
    \            long num10 = Math.Sqrt(num9);\n            long num11 = Math.Sqrt(num10);\n\
    \            long num12 = Math.Sqrt(num11);\n            long num13 = Math.Sqrt(num12);\n\
    \            long num14 = Math.Sqrt(num13);\n            long num15 = Math.Sqrt(num14);\n\
    \            long num16 = Math.Sqrt(num15);\n            long num17 = Math.Sqrt(num16);\n\
    \            long num18 = Math.Sqrt(num17);\n            long num19 = Math.Sqrt(num18);\n\
    \            long num20 = Math.Sqrt(num19);\n            long num21 = Math.Sqrt(num20);\n\
    \            long num22 = Math.Sqrt(num21);\n            long num23 = Math.Sqrt(num22);\n\
    \            long num24 = Math.Sqrt(num23);\n            long num25 = Math.Sqrt(num24);\n\
    \            long num26 = Math.Sqrt(num25);\n            long num27 = Math.Sqrt(num26);\n\
    \            long num28 = Math.Sqrt(num27);\n            long num29 = Math.Sqrt(num28);\n\
    \            long num30 = Math.Sqrt(num29);\n            long num31 = Math.Sqrt(num30);\n\
    \            long num32 = Math.Sqrt(num31);\n            long num33 = Math.Sqrt(num32);\n\
    \            long num34 = Math.Sqrt(num33);\n            long num35 = Math.Sqrt(num34);\n\
    \            long num36 = Math.Sqrt(num35);\n            long num37 = Math.Sqrt(num36);\n\
    \            long num38 = Math.", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long max = (long)Math.Sqrt(length);\n \
    \       long maxPrime = (long)Math.Sqrt(length);\n        long prime = maxPrime;\n\
    \        while (prime < max) {\n            if (length / prime == 1) {\n     \
    \           isPrime = false;\n                break;\n            }\n        \
    \    prime += maxPrime;\n        }\n        if (isPrime) return \"YES\";\n   \
    \     return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ start2 = Math.Min(interval1.Item1, interval2.Item1);\n        long end2 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0) return \"NO\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0) return \"NO\";\n       \
    \ long start4 = Math.Min(interval1.Item1, interval2.Item1);\n        long end4\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length4 = end4 -\
    \ start4;\n        if (length4 == 0) return \"NO\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        long start6 = Math.Min(interval1.Item1, interval2.Item1);\n       \
    \ long end6 = Math.Max(interval1.Item2, interval2.Item2);\n        long length6\
    \ = end6 - start6;\n        if (length6 == 0) return \"NO\";\n        long start7\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end7 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length7 = end7 - start7;\n        if (length7\
    \ == 0) return \"NO\";\n        long start8 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end8 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length8 = end8 - start8;\n        if (length8 == 0) return \"NO\";\n       \
    \ long start9 = Math.Min(interval1.Item1, interval2.Item1);\n        long end9\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length9 = end9 -\
    \ start9;\n        if (length9 == 0) return \"NO\";\n        long start10 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end10 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length10 = end10 - start10;\n        if (length10 == 0) return \"\
    NO\";\n        long start11", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        if (length == 2) return \"\
    YES\";\n        if (length == 3) return \"YES\";\n        if (length == 4) return\
    \ \"YES\";\n        if (length == 5) return \"YES\";\n        if (length == 6)\
    \ return \"YES\";\n        if (length == 7) return \"YES\";\n        if (length\
    \ == 8) return \"YES\";\n        if (length == 9) return \"YES\";\n        if\
    \ (length == 10) return \"YES\";\n        if (length == 11) return \"YES\";\n\
    \        if (length == 12) return \"YES\";\n        if (length == 13) return \"\
    YES\";\n        if (length == 14) return \"YES\";\n        if (length == 15) return\
    \ \"YES\";\n        if (length == 16) return \"YES\";\n        if (length == 17)\
    \ return \"YES\";\n        if (length == 18) return \"YES\";\n        if (length\
    \ == 19) return \"YES\";\n        if (length == 20) return \"YES\";\n        if\
    \ (length == 21) return \"YES\";\n        if (length == 22) return \"YES\";\n\
    \        if (length == 23) return \"YES\";\n        if (length == 24) return \"\
    YES\";\n        if (length == 25) return \"YES\";\n        if (length == 26) return\
    \ \"YES\";\n        if (length == 27) return \"YES\";\n        if (length == 28)\
    \ return \"YES\";\n        if (length == 29) return \"YES\";\n        if (length\
    \ == 30) return \"YES\";\n        if (length == 31) return \"YES\";\n        if\
    \ (length == 32) return \"YES\";\n        if (length == 33) return \"YES\";\n\
    \        if (length == 34) return \"YES\";\n        if (length == 35) return \"\
    YES\";\n        if (length == 36) return \"YES\";\n        if (length == 37) return\
    \ \"YES\";\n        if (length == 38) return \"YES\";\n        if (length == 39)\
    \ return \"YES\";\n        if (length == 40) return \"YES\";\n        if (length\
    \ == 41) return \"YES\";\n        if (length == 42) return \"YES\";\n        if\
    \ (length == 43) return \"YES\";\n        if (length == 44) return \"YES\";\n\
    \        if (length == 45) return \"YES\";\n        if (length == 46) return \"\
    YES\";\n        if (length == 47) return \"YES\";\n        if (length == 48) return\
    \ \"YES\";\n        if (length == 49) return \"YES\";\n        if (length == 50)\
    \ return \"YES\";\n        if (length == 51) return \"YES\";\n        if (length\
    \ == 52) return \"YES\";\n        if (length == 53) return \"YES\";\n        if\
    \ (length == 54) return ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length) + 1;\n   \
    \     long max2 = max - 1;\n        long max3 = max - 2;\n        long max4 =\
    \ max - 3;\n        long max5 = max - 4;\n        long max6 = max - 5;\n     \
    \   long max7 = max - 6;\n        long max8 = max - 7;\n        long max9 = max\
    \ - 8;\n        long max10 = max - 9;\n        long max11 = max - 10;\n      \
    \  long max12 = max - 11;\n        long max13 = max - 12;\n        long max14\
    \ = max - 13;\n        long max15 = max - 14;\n        long max16 = max - 15;\n\
    \        long max17 = max - 16;\n        long max18 = max - 17;\n        long\
    \ max19 = max - 18;\n        long max20 = max - 19;\n        long max21 = max\
    \ - 20;\n        long max22 = max - 21;\n        long max23 = max - 22;\n    \
    \    long max24 = max - 23;\n        long max25 = max - 24;\n        long max26\
    \ = max - 25;\n        long max27 = max - 26;\n        long max28 = max - 27;\n\
    \        long max29 = max - 28;\n        long max30 = max - 29;\n        long\
    \ max31 = max - 30;\n        long max32 = max - 31;\n        long max33 = max\
    \ - 32;\n        long max34 = max - 33;\n        long max35 = max - 34;\n    \
    \    long max36 = max - 35;\n        long max37 = max - 36;\n        long max38\
    \ = max - 37;\n        long max39 = max - 38;\n        long max40 = max - 39;\n\
    \        long max41 = max - 40;\n        long max42 = max - 41;\n        long\
    \ max43 = max - 42;\n        long max44 = max - 43;\n        long max45 = max\
    \ - 44;\n        long max46 = max - 45;\n        long max47 = max - 46;\n    \
    \    long max48 = max - 47;\n        long max49 = max - 48;\n        long max50\
    \ = max - 49;\n        long max51 = max - 50;\n        long max52 = max - 51;\n\
    \        long max53 = max - 52;\n        long max54 = max - 53", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long max = (long)Math.Sqrt(length);\n        long\
    \ min = (long)Math.Sqrt(length + 1);\n        long mid = start + (end - start)\
    \ / 2;\n        bool isPrime = true;\n        long prime = start;\n        while\
    \ (isPrime) {\n            isPrime = false;\n            long test = (long)Math.Sqrt(prime);\n\
    \            long test2 = (long)Math.Sqrt(prime);\n            while (test < max)\
    \ {\n                if (prime % test == 0) {\n                    isPrime = true;\n\
    \                    break;\n                }\n                test += test2;\n\
    \            }\n            prime += prime;\n        }\n        if (prime == end)\
    \ {\n            return \"YES\";\n        }\n        return \"NO\";", "      \
    \  long start = interval1.Item1;\n        long end = interval1.Item2;\n      \
    \  long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n    \
    \    long length = (end - start) * (end2 - start2);\n        if (length == 0)\
    \ {\n            return \"NO\";\n        }\n        bool isPrime = true;\n   \
    \     long prime = 2;\n        while (isPrime) {\n            if (length == prime)\
    \ {\n                return \"YES\";\n            }\n            if (length <\
    \ prime) {\n                isPrime = false;\n            }\n            prime++;\n\
    \        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long max2 = max * max;\n        long max3 = max2 * max;\n        long\
    \ max4 = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5\
    \ * max;\n        long max7 = max6 * max;\n        long max8 = max7 * max;\n \
    \       long max9 = max8 * max;\n        long max10 = max9 * max;\n        long\
    \ max11 = max10 * max;\n        long max12 = max11 * max;\n        long max13\
    \ = max12 * max;\n        long max14 = max13 * max;\n        long max15 = max14\
    \ * max;\n        long max16 = max15 * max;\n        long max17 = max16 * max;\n\
    \        long max18 = max17 * max;\n        long max19 = max18 * max;\n      \
    \  long max20 = max19 * max;\n        long max21 = max20 * max;\n        long\
    \ max22 = max21 * max;\n        long max23 = max22 * max;\n        long max24\
    \ = max23 * max;\n        long max25 = max24 * max;\n        long max26 = max25\
    \ * max;\n        long max27 = max26 * max;\n        long max28 = max27 * max;\n\
    \        long max29 = max28 * max;\n        long max30 = max29 * max;\n      \
    \  long max31 = max30 * max;\n        long max32 = max31 * max;\n        long\
    \ max33 = max32 * max;\n        long max34 = max33 * max;\n        long max35\
    \ = max34 * max;\n        long max36 = max35 * max;\n        long max37 = max36\
    \ * max;\n        long max38 = max37 * max;\n        long max39 = max38 * max;\n\
    \        long max40 = max39 * max;\n        long max41 = max40 * max;\n      \
    \  long max42 = max41 * max;\n        long max43 = max42 * max;\n        long\
    \ max", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        bool isPrime = true;\n        long prime = 2;\n    \
    \    while (isPrime && prime <= length) {\n            if (length / prime == 1)\
    \ {\n                isPrime = false;\n            }\n            else {\n   \
    \             isPrime = true;\n                prime++;\n            }\n     \
    \   }\n        if (isPrime) {\n            return \"YES\";\n        }\n      \
    \  return \"NO\";", "        long start = interval1.Item1;\n        long end =\
    \ interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = end - start;\n        long length2\
    \ = end2 - start2;\n        if (length2 == 0)\n            return \"NO\";\n  \
    \      if (length == 0)\n            return \"NO\";\n        if (length2 == 1)\n\
    \            return \"YES\";\n        long length3 = length * length;\n      \
    \  long length4 = length2 * length2;\n        long length5 = length3 * length3;\n\
    \        long length6 = length4 * length4;\n        long length7 = length5 * length5;\n\
    \        long length8 = length6 * length6;\n        long length9 = length7 * length7;\n\
    \        long length10 = length8 * length8;\n        long length11 = length9 *\
    \ length9;\n        long length12 = length10 * length10;\n        long length13\
    \ = length11 * length11;\n        long length14 = length12 * length12;\n     \
    \   long length15 = length13 * length13;\n        long length16 = length14 * length14;\n\
    \        long length17 = length15 * length15;\n        long length18 = length16\
    \ * length16;\n        long length19 = length17 * length17;\n        long length20\
    \ = length18 * length18;\n        long length21 = length19 * length19;\n     \
    \   long length22 = length20 * length20;\n        long length23 = length21 * length21;\n\
    \        long length24 = length22 * length22;\n        long length25 = length23\
    \ * length23;\n        long length26 = length24 * length24;\n        long length27\
    \ = length25 * length25;\n        long length28 = length26 * length26;\n     \
    \   long length29 = length27 * length27;\n        long length30 = length28 * length28;\n\
    \        long length31 = length29 * length29;\n        long length32 = length30\
    \ * length30;\n        long length33 = length31 * length31;\n        long length34\
    \ = length32 * length32;\n        long length35 = length33 * length33;\n     \
    \   long length36 = length34 * length34;\n        long length37 = length35 * length35;\n\
    \        long length38 = length36 * length36;\n        long length39 = length37\
    \ * length37;\n        long length40 = length38 * length38;\n        long length41\
    \ = length39 * length39;\n        long length42 = ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ start2 = Math.Min(interval1.Item2, interval2.Item2);\n        long end2 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end4 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end6 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end8 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Max(interval1.Item2, interval2.Item2);", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long num = 0;\n        long num2 = 0;\n        long\
    \ num3 = 0;\n        long num4 = 0;\n        long num5 = 0;\n        long num6\
    \ = 0;\n        long num7 = 0;\n        long num8 = 0;\n        long num9 = 0;\n\
    \        long num10 = 0;\n        long num11 = 0;\n        long num12 = 0;\n \
    \       long num13 = 0;\n        long num14 = 0;\n        long num15 = 0;\n  \
    \      long num16 = 0;\n        long num17 = 0;\n        long num18 = 0;\n   \
    \     long num19 = 0;\n        long num20 = 0;\n        long num21 = 0;\n    \
    \    long num22 = 0;\n        long num23 = 0;\n        long num24 = 0;\n     \
    \   long num25 = 0;\n        long num26 = 0;\n        long num27 = 0;\n      \
    \  long num28 = 0;\n        long num29 = 0;\n        long num30 = 0;\n       \
    \ long num31 = 0;\n        long num32 = 0;\n        long num33 = 0;\n        long\
    \ num34 = 0;\n        long num35 = 0;\n        long num36 = 0;\n        long num37\
    \ = 0;\n        long num38 = 0;\n        long num39 = 0;\n        long num40 =\
    \ 0;\n        long num41 = 0;\n        long num42 = 0;\n        long num43 = 0;\n\
    \        long num44 = 0;\n        long num45 = 0;\n        long num46 = 0;\n \
    \       long num47 = 0;\n        long num48 = 0;\n        long num49 = 0;\n  \
    \      long num50 = 0;\n        long num51 = 0;\n        long num52 = 0;\n   \
    \     long num53 = 0;\n        long num54 = 0;\n        long num55 = 0;\n    \
    \    long num56 = 0;\n        long num57 = 0;\n        long num58 = 0;\n     \
    \   long num59 = 0;\n        long num60 = 0;\n        long num61 = 0;\n      \
    \  long num62 = 0;\n        long num63 = 0;\n        long num64 = 0;\n       \
    \ long num65 = 0;\n        long num66 = 0;\n        long num67 = 0;\n        long\
    \ num68 = 0;\n        long num69 = 0;\n        long num70 = 0;\n        long num71\
    \ = 0;\n        long num72 = 0;\n        long num73 = 0;\n        long num74 =\
    \ 0;\n        long num75 = 0;\n        long num76 = 0;\n        long num77 = 0;\n\
    \        long num78 = 0;\n        long num79", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                length++;\n                prime++;\n   \
    \         }\n        }\n        if (length == prime) return \"YES\";\n       \
    \ return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ prime = GetPrime(length);\n        if (prime == length) return \"YES\";\n  \
    \      return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = length;\n        while (isPrime) {\n \
    \           if (length == 1) return \"YES\";\n            long nextPrime = prime\
    \ + 1;\n            isPrime = IsPrime(nextPrime);\n            prime = nextPrime;\n\
    \        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long start2 = start;\n      \
    \  long end2 = end;\n        long length2 = end - start;\n        while (start2\
    \ < end2) {\n            long mid = (start2 + end2) / 2;\n            if (Math.Abs(mid\
    \ - start) > Math.Abs(mid - end))\n                end2 = mid;\n            else\n\
    \                start2 = mid;\n        }\n        long mid = start2 + end2;\n\
    \        if (Math.Abs(mid - start) > Math.Abs(mid - end))\n            end2 =\
    \ mid;\n        else\n            start2 = mid;\n        while (start2 < end2)\
    \ {\n            long mid = (start2 + end2) / 2;\n            if (Math.Abs(mid\
    \ - start) > Math.Abs(mid - end))\n                end2 = mid;\n            else\n\
    \                start2 = mid;\n        }\n        long mid = start2 + end2;\n\
    \        if (Math.Abs(mid - start) > Math.Abs(mid - end))\n            end2 =\
    \ mid;\n        else\n            start2 = mid;\n        while (start2 < end2)\
    \ {\n            long mid = (start2 + end2) / 2;\n            if (Math.Abs(mid\
    \ - start) > Math.Abs(mid - end))\n                end2 = mid;\n            else\n\
    \                start2 = mid;\n        }\n        long mid = start2 + end2;\n\
    \        if (Math.Abs(mid - start) > Math.Abs(mid - end))\n            end2 =\
    \ mid;\n        else\n            start2 = mid;\n        while (start2 < end2)\
    \ {\n            long mid = (start2 + end2) / 2;\n            if (Math.Abs(mid\
    \ - start) > Math.Abs(mid - end))\n                end2 = mid;\n            else\n\
    \                start2 = mid;\n        }\n        long mid = start2 + end2;\n\
    \        if (Math.Abs(mid - start) > Math.Abs(mid - end))\n            end2 =\
    \ mid;\n        else\n            start2 = mid;\n        while (start2 < end2)\
    \ {\n            long mid = (start2 + end2) / 2;\n            if (Math.Abs(mid\
    \ - start) > Math.Abs(mid - end))\n                end2 = mid;\n            else\n\
    \                start2 = mid;\n        }\n        long mid = start2 + end2;\n\
    \        if (Math.Abs(mid - start) > Math.Abs(", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (isPrime) {\n            isPrime = false;\n      \
    \      prime++;\n            long i = start;\n            while (i <= end) {\n\
    \                if (i % prime == 0) {\n                    isPrime = true;\n\
    \                    break;\n                }\n                i++;\n       \
    \     }\n        }\n        if (length == prime)\n            return \"YES\";\n\
    \        else\n            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length);\n        long max2 = max / 2;\n \
    \       long max3 = max * max;\n        long max4 = max3 * max;\n        long\
    \ max5 = max4 * max;\n        long max6 = max5 * max;\n        long max7 = max6\
    \ * max;\n        long max8 = max7 * max;\n        long max9 = max8 * max;\n \
    \       long max10 = max9 * max;\n        long max11 = max10 * max;\n        long\
    \ max12 = max11 * max;\n        long max13 = max12 * max;\n        long max14\
    \ = max13 * max;\n        long max15 = max14 * max;\n        long max16 = max15\
    \ * max;\n        long max17 = max16 * max;\n        long max18 = max17 * max;\n\
    \        long max19 = max18 * max;\n        long max20 = max19 * max;\n      \
    \  long max21 = max20 * max;\n        long max22 = max21 * max;\n        long\
    \ max23 = max22 * max;\n        long max24 = max23 * max;\n        long max25\
    \ = max24 * max;\n        long max26 = max25 * max;\n        long max27 = max26\
    \ * max;\n        long max28 = max27 * max;\n        long max29 = max28 * max;\n\
    \        long max30 = max29 * max;\n        long max31 = max30 * max;\n      \
    \  long max32 = max31 * max;\n        long max33 = max32 * max;\n        long\
    \ max34 = max33 * max;\n        long max35 = max34 * max;\n        long max36\
    \ = max35 * max;\n        long max37 = max36 * max;\n        long max38 = max37\
    \ * max;\n        long max39 = max38 * max;\n        long max40 = max39 * max;\n\
    \        long max41 = max40 * max;\n        long max42 = max41 * max;\n      \
    \  long max43 = max42 * max;\n        long max44 = max43 * max;\n        long ",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long sum = 0;\n \
    \       for (long i = start; i <= end; i++) {\n            sum += i;\n       \
    \ }\n        if (sum == length) return \"YES\";\n        return \"NO\";", "  \
    \      long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n      \
    \      if (length == prime)\n                return \"YES\";\n            if (length\
    \ == prime + 1)\n                return \"NO\";\n            if (length == prime\
    \ + 2)\n                return \"YES\";\n            if (length == prime + 3)\n\
    \                return \"YES\";\n            if (length == prime + 4)\n     \
    \           return \"YES\";\n            if (length == prime + 5)\n          \
    \      return \"YES\";\n            if (length == prime + 6)\n               \
    \ return \"YES\";\n            if (length == prime + 7)\n                return\
    \ \"YES\";\n            if (length == prime + 8)\n                return \"YES\"\
    ;\n            if (length == prime + 9)\n                return \"YES\";\n   \
    \         if (length == prime + 10)\n                return \"YES\";\n       \
    \     if (length == prime + 11)\n                return \"YES\";\n           \
    \ if (length == prime + 12)\n                return \"YES\";\n            if (length\
    \ == prime + 13)\n                return \"YES\";\n            if (length == prime\
    \ + 14)\n                return \"YES\";\n            if (length == prime + 15)\n\
    \                return \"YES\";\n            if (length == prime + 16)\n    \
    \            return \"YES\";\n            if (length == prime + 17)\n        \
    \        return \"YES\";\n            if (length == prime + 18)\n            \
    \    return \"YES\";\n            if (length == prime + 19)\n                return\
    \ \"YES\";\n            if (length == prime + 20)\n                return \"YES\"\
    ;\n            if (length == prime + 21)\n                return \"YES\";\n  \
    \          if (length == prime + 22)\n                return \"YES\";\n      \
    \      if (length == prime + 23)\n                return \"YES\";\n          \
    \  if (length == prime + 24)\n                return \"YES\";\n            if\
    \ (length == prime + 25)\n                return \"YES\";\n            if (length\
    \ == prime + 26)\n                return \"YES\";\n            if (length == prime\
    \ + 27)\n                return \"YES\";\n            if (length == prime + 28)\n\
    \                return \"YES\";\n            if (length == prime + 29)\n    \
    \            return \"YES\";\n            if (length == prime + 30)\n        \
    \        return \"YES\";\n            if (length == prime + 31)\n            \
    \    return \"YES\";\n            if (length == prime + 32)\n                return\
    \ \"YES\";\n            if (length == prime + 33)\n                return \"YES\"\
    ;\n            if (length == prime + 34)\n                return \"YES\";\n  \
    \          if (length == prime + 35)\n                return \"YES\";\n      \
    \      if (length == prime + 36)\n                return ", "        long start\
    \ = interval1.Item1;\n        long end = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start\
    \ > end) {\n            long temp = start;\n            start = end;\n       \
    \     end = temp;\n        }\n        if (start2 > end2) {\n            long temp\
    \ = start2;\n            start2 = end2;\n            end2 = temp;\n        }\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length2 == 0) {\n            return \"NO\";\n        }\n        long\
    \ length3 = length * length2;\n        long length4 = length * length3;\n    \
    \    long length5 = length * length4;\n        long length6 = length * length5;\n\
    \        long length7 = length * length6;\n        long length8 = length * length7;\n\
    \        long length9 = length * length8;\n        long length10 = length * length9;\n\
    \        long length11 = length * length10;\n        long length12 = length *\
    \ length11;\n        long length13 = length * length12;\n        long length14\
    \ = length * length13;\n        long length15 = length * length14;\n        long\
    \ length16 = length * length15;\n        long length17 = length * length16;\n\
    \        long length18 = length * length17;\n        long length19 = length *\
    \ length18;\n        long length20 = length * length19;\n        long length21\
    \ = length * length20;\n        long length22 = length * length21;\n        long\
    \ length23 = length * length22;\n        long length24 = length * length23;\n\
    \        long length25 = length * length24;\n        long length26 = length *\
    \ length25;\n        long length27 = length * length26;\n        long length28\
    \ = length * length27;\n        long length29 = length * length28;\n        long\
    \ length30 = length * length29;\n        long length31 = length * length30;\n\
    \        long length32 = length * length31;\n        long length33 = length *\
    \ length32;\n        long length34 = length * length33;\n        long length35\
    \ = length * length34;\n        long length36 = length * length35;\n        long\
    \ length37 = length * length36;\n        long length38 = length * length37;\n\
    \        long length39 = length * length38;\n        long length40 = length *\
    \ length39;\n        long length41 = length * length40;\n        long length",
  "        long start = interval1.Item1;\n        long end = interval1.Item2;\n  \
    \      long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = 0;\n        if (start < end) {\n            length = end\
    \ - start;\n        } else if (start > end) {\n            length = start - end;\n\
    \        }\n        if (length == 0) {\n            return \"NO\";\n        }\n\
    \        if (length == 1) {\n            return \"YES\";\n        }\n        if\
    \ (length == 2) {\n            if (start == start2 && end == end2) {\n       \
    \         return \"YES\";\n            }\n            return \"NO\";\n       \
    \ }\n        long start3 = start;\n        long end3 = end;\n        long start4\
    \ = start2;\n        long end4 = end2;\n        long start5 = start3;\n      \
    \  long end5 = end3;\n        long start6 = start4;\n        long end6 = end4;\n\
    \        long start7 = start5;\n        long end7 = end5;\n        long start8\
    \ = start6;\n        long end8 = end6;\n        long start9 = start7;\n      \
    \  long end9 = end7;\n        long start10 = start8;\n        long end10 = end8;\n\
    \        long start11 = start9;\n        long end11 = end9;\n        long start12\
    \ = start10;\n        long end12 = end10;\n        long start13 = start11;\n \
    \       long end13 = end11;\n        long start14 = start12;\n        long end14\
    \ = end12;\n        long start15 = start13;\n        long end15 = end13;\n   \
    \     long start16 = start14;\n        long end16 = end14;\n        long start17\
    \ = start15;\n        long end17 = end15;\n        long start18 = start16;\n \
    \       long end18 = end16;\n        long start19 = start17;\n        long end19\
    \ = end17;\n        long start20 = start18;\n        long end20 = end18;\n   \
    \     long start21 = start19;\n        long end21 = end19;\n        long start22\
    \ = start20;\n        long end22 = end20;\n        long start23 = start21;\n \
    \       long end23 = end21;\n        long start24 = start22;\n        long end24\
    \ = end22;\n        long start25 = start23;\n        long end25 = end23;\n   \
    \     long start26 = start24;\n        long end26 = end24;\n        long start27\
    \ = start25;\n        long end27 = end25;\n        long start28 = ", "       \
    \ long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end =\
    \ Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        long prime = GetPrime(length);\n\
    \        if (prime == length) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        bool isPrime =\
    \ true;\n        long prime = 2;\n        while (isPrime) {\n            if (length\
    \ == prime)\n                return \"YES\";\n            if (length == prime\
    \ + 1) {\n                isPrime = false;\n            }\n            prime +=\
    \ 2;\n        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = Prime(length);\n        if (prime == length)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start > end) {\n          \
    \  long temp = start;\n            start = end;\n            end = temp;\n   \
    \     }\n        if (start2 > end2) {\n            long temp = start2;\n     \
    \       start2 = end2;\n            end2 = temp;\n        }\n        long length\
    \ = end - start;\n        long length2 = end2 - start2;\n        if (length2 ==\
    \ 0) {\n            return \"NO\";\n        }\n        long length3 = length *\
    \ length2;\n        long length4 = length3 * length3;\n        long length5 =\
    \ length4 * length4;\n        long length6 = length5 * length5;\n        long\
    \ length7 = length6 * length6;\n        long length8 = length7 * length7;\n  \
    \      long length9 = length8 * length8;\n        long length10 = length9 * length9;\n\
    \        long length11 = length10 * length10;\n        long length12 = length11\
    \ * length11;\n        long length13 = length12 * length12;\n        long length14\
    \ = length13 * length13;\n        long length15 = length14 * length14;\n     \
    \   long length16 = length15 * length15;\n        long length17 = length16 * length16;\n\
    \        long length18 = length17 * length17;\n        long length19 = length18\
    \ * length18;\n        long length20 = length19 * length19;\n        long length21\
    \ = length20 * length20;\n        long length22 = length21 * length21;\n     \
    \   long length23 = length22 * length22;\n        long length24 = length23 * length23;\n\
    \        long length25 = length24 * length24;\n        long length26 = length25\
    \ * length25;\n        long length27 = length26 * length26;\n        long length28\
    \ = length27 * length27;\n        long length29 = length28 * length28;\n     \
    \   long length30 = length29 * length29;\n        long length31 = length30 * length30;\n\
    \        long length32 = length31 * length31;\n        long length33 = length32\
    \ * length32;\n        long length34 = length33 * length33;\n        long length35\
    \ = length34 * length34;\n        long length36 = length35 * length35;\n     \
    \   long length37 = length36 * length36;\n        long length38 = length37 * length37;\n\
    \        long length39 = ", "        long start = interval1.Item1;\n        long\
    \ end = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = end - start;\n        length\
    \ = length * length + end2 - start2;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long a = start;\n        long b = end;\n        long c = start2;\n\
    \        long d = end2;\n        long p = 1;\n        long q = 1;\n        long\
    \ r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n    \
    \    long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long a = start;\n        long b = end;\n       \
    \ long c = start2;\n        long d = end2;\n        long p = 1;\n        long\
    \ q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n    \
    \    long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n\
    \        long y = 1;\n        long z = 1;\n        long a = start;\n        long\
    \ b = end;\n        long c = start2;\n        long d = end2;\n        long p =\
    \ 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long\
    \ t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n    \
    \    long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = start;\n\
    \        long b = end;\n        long c = start2;\n        long d = end2;\n   \
    \     long p = 1;\n        long q = 1;\n        long r = 1;\n        long s =\
    \ 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long\
    \ w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n    \
    \    long a = start;\n        long b = end;\n        long c = start2;\n      \
    \  long d = end2;\n        long p = 1;\n        long q = 1;\n        long r =\
    \ 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long\
    \ v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n    \
    \    long z = 1;\n        long a = start;\n        long b = end;\n        long\
    \ c = start2;\n        long d = end2;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n", "  \
    \      long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        bool isPrime = true;\n\
    \        long prime = 2;\n        while (isPrime && prime <= length) {\n     \
    \       if (length % prime == 0) {\n                isPrime = false;\n       \
    \     }\n            prime++;\n        }\n        if (isPrime) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long start2 = start - max;\n       \
    \ long end2 = end + max;\n        long length2 = end - start2;\n        if (length2\
    \ == 0) return \"NO\";\n        long max2 = (long)Math.Sqrt(length2);\n      \
    \  long start3 = start2 - max2;\n        long end3 = end2 + max2;\n        long\
    \ length3 = end - start3;\n        if (length3 == 0) return \"NO\";\n        long\
    \ max3 = (long)Math.Sqrt(length3);\n        long start4 = start3 - max3;\n   \
    \     long end4 = end3 + max3;\n        long length4 = end - start4;\n       \
    \ if (length4 == 0) return \"NO\";\n        long max4 = (long)Math.Sqrt(length4);\n\
    \        long start5 = start4 - max4;\n        long end5 = end4 + max4;\n    \
    \    long length5 = end - start5;\n        if (length5 == 0) return \"NO\";\n\
    \        long max5 = (long)Math.Sqrt(length5);\n        long start6 = start5 -\
    \ max5;\n        long end6 = end5 + max5;\n        long length6 = end - start6;\n\
    \        if (length6 == 0) return \"NO\";\n        long max6 = (long)Math.Sqrt(length6);\n\
    \        long start7 = start6 - max6;\n        long end7 = end6 + max6;\n    \
    \    long length7 = end - start7;\n        if (length7 == 0) return \"NO\";\n\
    \        long max7 = (long)Math.Sqrt(length7);\n        long start8 = start7 -\
    \ max7;\n        long end8 = end7 + max7;\n        long length8 = end - start8;\n\
    \        if (length8 == 0) return \"NO\";\n        long max8 = (long)Math.Sqrt(length8);\n\
    \        long start9 = start8 - max8;\n        long end9 = end8 + max8;\n    \
    \    long length9 = end - start9;\n        if (length9 == 0) return \"NO\";\n\
    \        long max9 = (long)Math.Sqrt(length9);\n        long start10 = start9\
    \ - max9;\n        long end10 = end9 + max9;\n        long length10 = end - start10;\n\
    \        if (length10 == 0) return \"NO\";\n        long max10 = (long)Math.Sqrt(length10);\n\
    \        long start11 = start10 - max", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        if (length == 2 && interval1.Item1\
    \ == interval2.Item1) return \"YES\";\n        if (length == 2 && interval1.Item2\
    \ == interval2.Item2) return \"YES\";\n        if (length == 2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item2 == interval2.Item1) return \"YES\";\n\
    \        if (length == 2 && interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2) return \"YES\";\n        if (length == 2 && interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item1) return \"YES\";\n        if (length == 2 && interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item1) return \"YES\";\n\
    \        if (length == 2 && interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item1) return \"YES\";\n\
    \        if (length == 2 && interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item1) return \"YES\";\n        if (length == 2 && interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item1) return \"YES\";\n        if (length == 2 && interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item1) return \"YES\";\n\
    \        if (length == 2 && interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == interval2.Item2 && interval1.Item1\
    \ == interval2.Item2 && interval1.Item1 == ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = GetPrime(length);\n        if (prime == length) return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long mid = start + (end - start) / 2;\n        bool isPrime = true;\n\
    \        long prime = 2;\n        while (isPrime) {\n            if (length ==\
    \ prime) {\n                isPrime = false;\n            } else {\n         \
    \       prime++;\n            }\n        }\n        return isPrime ? \"YES\" :\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = length / 2;\n        bool isPrime = true;\n        long\
    \ i = 2;\n        while (isPrime && i < prime) {\n            if (length % i ==\
    \ 0) {\n                isPrime = false;\n            }\n            i++;\n  \
    \      }\n        if (isPrime)\n            return \"YES\";\n        else\n  \
    \          return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long mid = start\
    \ + (end - start) / 2;\n        bool isPrime = true;\n        long count = 0;\n\
    \        for (long i = start; i <= mid; i++) {\n            if (IsPrime(i))\n\
    \                count++;\n        }\n        if (count == 1)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long prime = GetPrime(length);\n\
    \        if (prime == length) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        if (length == 1)\n\
    \            return \"YES\";\n        long mid = start + (end - start) / 2;\n\
    \        long count = 0;\n        long prime = 1;\n        while (prime <= length)\
    \ {\n            long test = (mid + prime) / 2;\n            if (Math.Abs(mid\
    \ - test) < prime / 2)\n                prime++;\n            else\n         \
    \       prime--;\n            count++;\n        }\n        if (count == 1)\n \
    \           return \"YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      long length2 = end2 - start2;\n        if (length == 0 || length2 == 0)\
    \ {\n            return \"NO\";\n        }\n        long length3 = length * length;\n\
    \        long length4 = length2 * length2;\n        long length5 = length3 * length3;\n\
    \        long length6 = length4 * length4;\n        long length7 = length5 * length5;\n\
    \        long length8 = length6 * length6;\n        long length9 = length7 * length7;\n\
    \        long length10 = length8 * length8;\n        long length11 = length9 *\
    \ length9;\n        long length12 = length10 * length10;\n        long length13\
    \ = length11 * length11;\n        long length14 = length12 * length12;\n     \
    \   long length15 = length13 * length13;\n        long length16 = length14 * length14;\n\
    \        long length17 = length15 * length15;\n        long length18 = length16\
    \ * length16;\n        long length19 = length17 * length17;\n        long length20\
    \ = length18 * length18;\n        long length21 = length19 * length19;\n     \
    \   long length22 = length20 * length20;\n        long length23 = length21 * length21;\n\
    \        long length24 = length22 * length22;\n        long length25 = length23\
    \ * length23;\n        long length26 = length24 * length24;\n        long length27\
    \ = length25 * length25;\n        long length28 = length26 * length26;\n     \
    \   long length29 = length27 * length27;\n        long length30 = length28 * length28;\n\
    \        long length31 = length29 * length29;\n        long length32 = length30\
    \ * length30;\n        long length33 = length31 * length31;\n        long length34\
    \ = length32 * length32;\n        long length35 = length33 * length33;\n     \
    \   long length36 = length34 * length34;\n        long length37 = length35 * length35;\n\
    \        long length38 = length36 * length36;\n        long length39 = length37\
    \ * length37;\n        long length40 = length38 * length38;\n        long length41\
    \ = length39 * length39;\n        long length42 = length40 * length40;\n     \
    \   long length43 = length", "        long start = interval1.Item1;\n        long\
    \ end = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = end - start;\n        length\
    \ = length * length / 2;\n        long length2 = end2 - start2;\n        length\
    \ = length * length / 2;\n        if (length == length2) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        bool isPrime = true;\n    \
    \    long prime = 2;\n        while (isPrime) {\n            if (length == prime)\
    \ {\n                isPrime = false;\n            } else {\n                prime++;\n\
    \            }\n        }\n        return \"YES\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long sum = 0;\n        long prime = 1;\n        while (prime\
    \ <= length) {\n            sum += prime;\n            prime += 2;\n        }\n\
    \        if (sum == length)\n            return \"YES\";\n        return \"NO\"\
    ;", "        long start = interval1.Item1;\n        long end = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = end - start;\n        length = length * length + end2 -\
    \ start2;\n        bool isPrime = true;\n        long prime = length;\n      \
    \  while (isPrime) {\n            if (length == 1) {\n                isPrime\
    \ = false;\n            }\n            else {\n                length--;\n   \
    \             prime++;\n            }\n        }\n        if (prime == length)\
    \ {\n            return \"YES\";\n        }\n        return \"NO\";", "      \
    \  long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        if (length == 1)\n\
    \            return \"YES\";\n        long mid = start + (end - start) / 2;\n\
    \        if (IsPrime(mid))\n            return \"YES\";\n        return \"NO\"\
    ;"]
stop_tokens:
- "\n    }\n"

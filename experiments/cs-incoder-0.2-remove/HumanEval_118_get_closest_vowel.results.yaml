language: cs
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplo20rds0.cs(36,88): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length /\
    \ 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length /\
    \ 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length /\
    \ 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length /\
    \ 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length /\
    \ 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length /\
    \ 2);\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp22gpa28c.cs(26,16): error CS0128: A local variable or function named ''vowelsMiddleLeftRight''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(27,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeft''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(28,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeft''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(29,16): error CS0128: A local variable or function named ''vowelsMiddleRightRight''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(30,16): error CS0128: A local variable or function named ''vowelsMiddleLeftRight''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(31,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeft''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeft''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleRightRight''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleLeftRight''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeft''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeft''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleRightRight''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftRight''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeft''
    is already defined in this scope

    /tmp/tmp22gpa28c.cs(40,16): error CS0128: A l'
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMid\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt1uhnx73.cs(34,108): error CS1026: ) expected

    /tmp/tmpt1uhnx73.cs(34,108): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelCount = 0;\n        int\
    \ consonantCount = word.Length;\n        int consonantIndex = 0;\n        int\
    \ vowelIndex = 0;\n        string result = \"\";\n        while (consonantIndex\
    \ < consonantCount) {\n            if (vowels.IndexOf(word[consonantIndex], StringComparison.OrdinalIgnoreCase)\
    \ >= 0) {\n                vowelCount++;\n            }\n            consonantIndex++;\n\
    \        }\n        while (vowelIndex < vowelCount) {\n            if (vowels.IndexOf(word[vowelIndex],\
    \ StringComparison.OrdinalIgnoreCase) >= 0) {\n                vowelIndex++;\n\
    \            }\n        }\n        if (vowelIndex == vowelCount) {\n         \
    \   return result;\n        }\n        while (consonantIndex < consonantCount)\
    \ {\n            if (vowels.IndexOf(word[consonantIndex], StringComparison.OrdinalIgnoreCase)\
    \ >= 0) {\n                vowelIndex++;\n            }\n            consonantIndex++;\n\
    \        }\n        while (vowelIndex < vowelCount) {\n            if (vowels.IndexOf(word[vowelIndex],\
    \ StringComparison.OrdinalIgnoreCase) >= 0) {\n                vowelIndex++;\n\
    \            }\n        }\n        if (vowelIndex == vowelCount) {\n         \
    \   return result;\n        }\n        while (consonantIndex < consonantCount)\
    \ {\n            if (vowels.IndexOf(word[consonantIndex], StringComparison.OrdinalIgnoreCase)\
    \ >= 0) {\n                vowelIndex++;\n            }\n            consonantIndex++;\n\
    \        }\n        while (vowelIndex < vowelCount) {\n            if (vowels.IndexOf(word[vowelIndex],\
    \ StringComparison.OrdinalIgnoreCase) >= 0) {\n                vowelIndex++;\n\
    \            }\n        }\n        if (vowelIndex == vowelCount) {\n         \
    \   return result;\n        }\n        while (consonantIndex < consonantCount)\
    \ {\n            if (vowels.IndexOf(word[consonantIndex], StringComparison.OrdinalIgnoreCase)\
    \ >= 0) {\n                vowelIndex++;\n            }\n            consonantIndex++;\n\
    \        }\n        while (vowelIndex < vowelCount) {\n            if (vowels.IndexOf(word[vowelIndex],\
    \ StringComparison.OrdinalIgnoreCase) >= 0) {\n                vowelIndex++;\n\
    \            }\n        }\n        if (vowelIndex == vowelCount) {\n         \
    \   return result;\n        }\n        while (consonantIndex < consonantCount)\
    \ {\n            if (vowels.IndexOf(word[consonantIndex], StringComparison.OrdinalIgnoreCase)\
    \ >= 0) {\n                vowelIndex++;\n            }\n            consonantIndex++;\n\
    \        }\n        while (vowelIndex < vowelCount) {\n            if (vowels.IndexOf(word[vowelIndex],\
    \ StringComparison.OrdinalIgnoreCase) >= 0) {\n                vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaluay8tp.cs(86,22): error CS1002: ; expected

    /tmp/tmpaluay8tp.cs(88,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpaluay8tp.cs(104,2): error CS1513: } expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsAll = vowels + vowelsLeft + vowelsRight + vowelsMiddle;\n   \
    \     string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper() +\
    \ vowelsAll.ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAll = vowelsAllCaps + vowelsAllCapsLower + vowelsAllCapsUpper;\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpldcjr5wr.cs(41,64): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRightLeft\
    \ = vowels.Substring(\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqrpuzcnh.cs(40,71): error CS1026: ) expected

    /tmp/tmpqrpuzcnh.cs(40,71): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothBoth = vowelsBothUpper.ToUpper()\
    \ + vowelsBothLower.ToLower();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyjmqu56h.cs(41,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsCount = word.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowelsCountReverse29.To\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo1q0835o.cs(47,62): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8m5pctez.cs(38,88): error CS1525: Invalid expression term ''}''

    /tmp/tmp8m5pctez.cs(38,88): error CS1026: ) expected

    /tmp/tmp8m5pctez.cs(38,88): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowel\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphbj9on08.cs(50,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsBoth = vowels.Substring(0, vowels.Length / 2 + 1);\n        string\
    \ vowelsAll = vowels.Substring(0, vowels.Length);\n        string vowelsAllLeft\
    \ = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllRight = vowels.Substring(0,\
    \ vowels.Length);\n        string vowelsAllMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllBoth = vowels.Substring(0, vowels.Length / 2\
    \ + 1);\n        string vowelsAllAll = vowels.Substring(0, vowels.Length);\n \
    \       string vowelsAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n  \
    \      string vowelsAllAllRight = vowels.Substring(0, vowels.Length);\n      \
    \  string vowelsAllAllMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsAllAllBoth = vowels.Substring(0, vowels.Length / 2 + 1);\n  \
    \      string vowelsAllAllAll = vowels.Substring(0, vowels.Length);\n        string\
    \ vowelsAllAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsAllAllAllRight = vowels.Substring(0, vowels.Length);\n        string vowelsAllAllAllMiddle\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsAllAllAllBoth\
    \ = vowels.Substring(0, vowels.Length / 2 + 1);\n        string vowelsAllAllAllAll\
    \ = vowels.Substring(0, vowels.Length);\n        string vowelsAllAllAllAllLeft\
    \ = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllAllAllAllRight\
    \ = vowels.Substring(0, vowels.Length);\n        string vowelsAllAllAllAllMiddle\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth\
    \ = vowels.Substring(0, vowels.Length / 2 + 1);\n        string vowelsAllAllAllAllAll\
    \ = vowels.Substring(0, vowels.Length);\n        string vowelsAllAllAllAllAllLeft\
    \ = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllAllAllAllAllRight\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnmvknemb.cs(43,61): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length / 2, vowels.Length\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3haqfwfy.cs(40,82): error CS1026: ) expected

    /tmp/tmp3haqfwfy.cs(40,82): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0g7z_oug.cs(31,157): error CS1026: ) expected

    /tmp/tmp0g7z_oug.cs(31,157): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpper = vowelsBothCapUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjdw7x5cs.cs(37,166): error CS1001: Identifier expected

    /tmp/tmpjdw7x5cs.cs(37,166): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCap\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUp = vowelsAllCap.ToUpper();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpanhxd4bo.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring((word.Length / 2), word.Length - word.Length\
    \ / 2);\n        string vowelsMiddleLeft = word.Substring(0, word.Length - word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = word.Substring((word.Length /\
    \ 2), word.Length - word.Length / 2);\n        string vowelsMiddleLeftRightLeft\
    \ = word.Substring(0, word.Length - word.Length / 2 - word.Length / 4);\n    \
    \    string vowelsMiddleLeftRightLeftRight = word.Substring((word.Length / 2),\
    \ word.Length - word.Length / 2 - word.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = word.Substring(0, word.Length - word.Length / 2 - word.Length / 4 - word.Length\
    \ / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRight = word.Substring((word.Length\
    \ / 2), word.Length - word.Length / 2 - word.Length / 4 - word.Length / 8);\n\
    \        string vowelsMiddleLeftRightLeftRightLeftRightLeft = word.Substring(0,\
    \ word.Length - word.Length / 2 - word.Length / 4 - word.Length / 8 - word.Length\
    \ / 16);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight = word.Substring((word.Length\
    \ / 2), word.Length - word.Length / 2 - word.Length / 4 - word.Length / 8 - word.Length\
    \ / 16);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(0, word.Length - word.Length / 2 - word.Length / 4 - word.Length\
    \ / 8 - word.Length / 16 - word.Length / 32);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring((word.Length / 2), word.Length - word.Length / 2 - word.Length\
    \ / 4 - word.Length / 8 - word.Length / 16 - word.Length / 32);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft = word.Substring(0,\
    \ word.Length - word.Length / 2 - word.Length / 4 - word.Length / 8 - word.Length\
    \ / 16 - word.Length / 32 - word.Length / 64);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring((word.Length / 2), word.Length - word.Length / 2 - word.Length\
    \ / 4 - word.Length / 8 - word.Length / 16\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzsfnsz_c.cs(32,203): error CS1026: ) expected

    /tmp/tmpzsfnsz_c.cs(32,203): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = word.ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCount2 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 1);\n        string vowelsCount3 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 2);\n        string vowelsCount4 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 3);\n        string vowelsCount5 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 4);\n        string vowelsCount6 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 5);\n        string vowelsCount7 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 6);\n        string vowelsCount8 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 7);\n        string vowelsCount9 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 8);\n        string vowelsCount10 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 9);\n        string vowelsCount11 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 10);\n        string vowelsCount12 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 11);\n        string vowelsCount13 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 12);\n        string vowelsCount14 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 13);\n        string vowelsCount15 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 14);\n        string vowelsCount16 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 15);\n        string vowelsCount17 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 16);\n        string vowelsCount18 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 17);\n        string vowelsCount19 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 18);\n        string vowelsCount20 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 19);\n        string vowelsCount21 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 20);\n        string vowelsCount22 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 21);\n        string vowelsCount23 = vowelsCount.Substring(0, vowelsCount.Length\
    \ - 22);\n        string vowelsCount\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdogippn2.cs(40,27): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length - 1,\
    \ 1);\n        string vowelsMiddle = word.Substring(word.Length / 2, 1);\n   \
    \     string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n        string\
    \ vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCap = vowelsAll.ToUpper().ToLower();\n        string\
    \ vowelsAllCapUpper = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapAll = vowelsAllCap.ToUpper().ToLower();\n\
    \        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string\
    \ vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        string vowelsAllCapAllUpperLower\
    \ = vowelsAllCapAll.ToUpper().ToLower();\n        \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ni5f6kv.cs(30,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(31,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(32,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(33,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(34,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(35,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(36,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(37,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(38,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(39,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(40,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(41,16): error CS0128: A local variable or function named ''vowelsAllCapAllUpperLower''
    is already defined in this scope

    /tmp/tmp_ni5f6kv.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n        string\
    \ vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCaps = vowelsAll.ToUpper() + vowelsAll.ToLower();\n \
    \       string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsUpper\
    \ = vowelsAllCaps.ToUpper();\n        string vowelsAllCapsAll = vowelsAllCapsUpper\
    \ + vowelsAllCapsLower;\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAll\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4grdviz5.cs(42,25): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 8);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 8);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 16);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 16,\
    \ vowels.Length / 16);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 512);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 1024);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2048);\n        string vowelsMiddle22 = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpowetoasi.cs(40,38): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0, word.Length\
    \ / 4);\n        string vowelsMiddleLeftRightMiddleRight = vowels.Substring(word.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(0, word.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(word.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRight\
    \ = vowels.Substring(0, word.Length / 16);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(word.Length / 16, vowels.Length / 16);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, word.Length / 32);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(word.Length / 32, vowels.Length / 32);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, word.Length / 64);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(word.Length / 64, vowels.Length / 64);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, word.Length / 128);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(word.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, word.Length / 256);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpib8kcawn.cs(36,129): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRight2 = vowelsRight.Substring(0, vowelsRight.Length - 1);\n\
    \        string vowelsRight3 = vowelsRight2.Substring(0, vowelsRight2.Length -\
    \ 1);\n        string vowelsRight4 = vowelsRight3.Substring(0, vowelsRight3.Length\
    \ - 1);\n        string vowelsRight5 = vowelsRight4.Substring(0, vowelsRight4.Length\
    \ - 1);\n        string vowelsRight6 = vowelsRight5.Substring(0, vowelsRight5.Length\
    \ - 1);\n        string vowelsRight7 = vowelsRight6.Substring(0, vowelsRight6.Length\
    \ - 1);\n        string vowelsRight8 = vowelsRight7.Substring(0, vowelsRight7.Length\
    \ - 1);\n        string vowelsRight9 = vowelsRight8.Substring(0, vowelsRight8.Length\
    \ - 1);\n        string vowelsRight10 = vowelsRight9.Substring(0, vowelsRight9.Length\
    \ - 1);\n        string vowelsRight11 = vowelsRight10.Substring(0, vowelsRight10.Length\
    \ - 1);\n        string vowelsRight12 = vowelsRight11.Substring(0, vowelsRight11.Length\
    \ - 1);\n        string vowelsRight13 = vowelsRight12.Substring(0, vowelsRight12.Length\
    \ - 1);\n        string vowelsRight14 = vowelsRight13.Substring(0, vowelsRight13.Length\
    \ - 1);\n        string vowelsRight15 = vowelsRight14.Substring(0, vowelsRight14.Length\
    \ - 1);\n        string vowelsRight16 = vowelsRight15.Substring(0, vowelsRight15.Length\
    \ - 1);\n        string vowelsRight17 = vowelsRight16.Substring(0, vowelsRight16.Length\
    \ - 1);\n        string vowelsRight18 = vowelsRight17.Substring(0, vowelsRight17.Length\
    \ - 1);\n        string vowelsRight19 = vowelsRight18.Substring(0, vowelsRight18.Length\
    \ - 1);\n        string vowelsRight20 = vowelsRight19.Substring(0, vowelsRight19.Length\
    \ - 1);\n        string vowelsRight21 = vowelsRight20.Substring(0, vowelsRight20.Length\
    \ - 1);\n        string vowelsRight22 = vowelsRight21.Substring(0, vowelsRight21.Length\
    \ - 1);\n        string vowelsRight23 = vowelsRight22.Substring(0, vowelsRight22.Length\
    \ - 1);\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmperpi8zms.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = word.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowelsCount\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzzxtt1iw.cs(47,50): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAll = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAllBoth = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsAllLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllRightLeft = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length);\n        string vowelsAllMiddleLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllBothLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllRightLeftMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllMiddleLeftMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllBothLeftMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllLeftRightMiddleBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllRightLeftMiddleBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllMiddleLeftMiddleBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllBothLeftMiddleBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllLeftRightMiddleBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllRightLeftMiddleBothBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowel\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0ang96hq.cs(40,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n\
    \        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddle\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphg75d_wj.cs(41,28): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothRightLeftBoth = vowels.Substring(0, vowel\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_kinr5n1.cs(29,67): error CS1026: ) expected

    /tmp/tmp_kinr5n1.cs(29,67): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length - 1,\
    \ 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n \
    \       string vowelsMiddleRight = vowels.Substring(word.Length / 2, 1);\n   \
    \     string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n      \
    \  string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n    \
    \    string vowelsMiddleRightLeft = vowels.Substring(word.Length / 2, 1);\n  \
    \      string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length / 2);\n \
    \       string vowelsMiddleRightRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string vowelsMiddleRightLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightRight = vowels.Substring(word.Length / 2, 1);\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcs9w4m4s.cs(46,15): error CS1001: Identifier expected

    /tmp/tmpcs9w4m4s.cs(46,15): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1pz3_iia.cs(34,89): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsUpper + vowelsAllCapsLower;\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbi0lwcnh.cs(42,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        int vowelsCountFromRight = word.Length - vowelsCount;\n        int vowelsCountFromLeft\
    \ = vowelsCount - 1;\n        int vowelsCountFromRightFromLeft = vowelsCountFromRight\
    \ - vowelsCountFromLeft;\n        int vowelsCountFromLeftFromRight = vowelsCountFromLeft\
    \ - vowelsCountFromRight;\n        int vowelsCountFromLeftFromRightFromLeft =\
    \ vowelsCountFromLeftFromRight - vowelsCountFromRightFromLeft;\n        int vowelsCountFromLeftFromRightFromLeftFromRight\
    \ = vowelsCountFromLeftFromRightFromLeft - vowelsCountFromRightFromLeftFromLeft;\n\
    \        int vowelsCountFromLeftFromRightFromLeftFromRightFromLeft = vowelsCountFromLeftFromRightFromLeftFromRight\
    \ - vowelsCountFromRightFromLeftFromLeftFromRight;\n        int vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRight\
    \ = vowelsCountFromLeftFromRightFromLeftFromRightFromLeft - vowelsCountFromRightFromLeftFromRightFromLeftFromRight;\n\
    \        int vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft\
    \ = vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRight - vowelsCountFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRight;\n\
    \        int vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRight\
    \ = vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft - vowelsCountFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft;\n\
    \        int vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft\
    \ = vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft\
    \ - vowelsCountFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft;\n\
    \        int vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft\
    \ = vowelsCountFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft\
    \ - vowelsCountFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeftFromRightFromLeft;\n\
    \        int vowelsCountFromLeftFromRightFromLeftFromRightFrom\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc8zmbyb9.cs(30,62): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCap\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplg1jcwm3.cs(42,29): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5qqgkdzp.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        int consonantsCount = word.Length - vowelsCount;\n        int vowelsCountFromRight\
    \ = vowelsCount - 1;\n        int consonantsCountFromRight = consonantsCount -\
    \ vowelsCountFromRight;\n        string closestVowel = \"\";\n        string vowelsString\
    \ = \"\";\n        string consonantsString = \"\";\n        string vowelsStringFromRight\
    \ = \"\";\n        string consonantsStringFromRight = \"\";\n        bool isVowel\
    \ = false;\n        bool isConsonant = false;\n        bool isVowelFromRight =\
    \ false;\n        bool isConsonantFromRight = false;\n        bool isVowelFromRightAndConsonantFromRight\
    \ = false;\n        bool isConsonantFromRightAndVowelFromRight = false;\n    \
    \    bool isVowelFromRightAndConsonantFromRightAndVowelFromRight = false;\n  \
    \      bool isConsonantFromRightAndVowelFromRightAndConsonantFromRight = false;\n\
    \        bool isVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRight\
    \ = false;\n        bool isVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRight\
    \ = false;\n        bool isVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRight\
    \ = false;\n        bool isVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRight\
    \ = false;\n        bool isVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRight\
    \ = false;\n        bool isVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRight\
    \ = false;\n        bool isVowelFromRightAndConsonantFromRightAndVowelFromRightAndConsonantFromRightAndVowelFromRightAnd\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9cmipnf1.cs(40,109): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAll = vowelsLeft + vowelsRight +\
    \ vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n      \
    \  string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n     \
    \   string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppllxpfg0.cs(30,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(31,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(32,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(33,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(34,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(35,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(36,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(37,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(38,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(39,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(40,16): error CS0128: A local variable or function named ''vowelsAllCapsAllUpperLower''
    is already defined in this scope

    /tmp/tmppllxpfg0.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothRightLeftBoth = vowels.Substring(0, vowel\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_kinr5n1.cs(29,67): error CS1026: ) expected

    /tmp/tmp_kinr5n1.cs(29,67): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 16);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeft\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7yqwyvi2.cs(35,88): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBoth\
    \ = vowelsBothBothUpper.Replace(vowelsBothBothLower, \"\");\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBothBoth.ToUpper();\n        string vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBoth = vowelsBothBothBothUpper.Replace(vowelsBothBothBothLower,\
    \ \"\");\n        string vowelsBothBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothLower = vowelsBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothBoth = vowelsBothBothBothBothUpper.Replace(vowelsBothBothBothLower,\
    \ \"\");\n        string vowelsBothBothBothBothBothUpper = vowelsBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothBothLower = vowelsBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothBoth = vowelsBothBothBothBothUpper.Replace(vowelsBothBothBothLower,\
    \ \"\");\n        string vowelsBothBothBothBothBothUpper = vowelsBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothBothLower = vowelsBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothBothBoth = vowelsBothBothBothBothBothUpper.Replace(vowelsBothBothBothBothLower,\
    \ \"\");\n        string vowelsBothBothBothBothBothBothUpper = vowelsBothBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothBothBothLower = vowelsBothBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothBothBoth = vowelsBoth\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdt4zqrxl.cs(40,59): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_j38xf4.cs(34,80): error CS1001: Identifier expected

    /tmp/tmpi_j38xf4.cs(34,80): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2\
    \ - 1);\n        string vowelsMiddle3 = vowels.Substring(0, vowels.Length / 2\
    \ - 2);\n        string vowelsMiddle4 = vowels.Substring(0, vowels.Length / 2\
    \ - 3);\n        string vowelsMiddle5 = vowels.Substring(0, vowels.Length / 2\
    \ - 4);\n        string vowelsMiddle6 = vowels.Substring(0, vowels.Length / 2\
    \ - 5);\n        string vowelsMiddle7 = vowels.Substring(0, vowels.Length / 2\
    \ - 6);\n        string vowelsMiddle8 = vowels.Substring(0, vowels.Length / 2\
    \ - 7);\n        string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 2\
    \ - 8);\n        string vowelsMiddle10 = vowels.Substring(0, vowels.Length / 2\
    \ - 9);\n        string vowelsMiddle11 = vowels.Substring(0, vowels.Length / 2\
    \ - 10);\n        string vowelsMiddle12 = vowels.Substring(0, vowels.Length /\
    \ 2 - 11);\n        string vowelsMiddle13 = vowels.Substring(0, vowels.Length\
    \ / 2 - 12);\n        string vowelsMiddle14 = vowels.Substring(0, vowels.Length\
    \ / 2 - 13);\n        string vowelsMiddle15 = vowels.Substring(0, vowels.Length\
    \ / 2 - 14);\n        string vowelsMiddle16 = vowels.Substring(0, vowels.Length\
    \ / 2 - 15);\n        string vowelsMiddle17 = vowels.Substring(0, vowels.Length\
    \ / 2 - 16);\n        string vowelsMiddle18 = vowels.Substring(0, vowels.Length\
    \ / 2 - 17);\n        string vowelsMiddle19 = vowels.Substring(0, vowels.Length\
    \ / 2 - 18);\n        string vowelsMiddle20 = vowels.Substring(0, vowels.Length\
    \ / 2 - 19);\n        string vowelsMiddle21 = vowels.Substring(0, vowels.Length\
    \ / 2 - 20);\n        string vowelsMiddle22 = vowels.Substring(0, vowels.Length\
    \ / 2 - 21);\n        string vowelsMiddle23 = vowels.Substring(0, vowels.Length\
    \ / 2 - 22);\n        string vowelsMiddle24 = vowels.Substring(0, vowels.Length\
    \ / 2 - 23);\n        string vowelsMiddle25 = vowels.Substring(0, vowels.Length\
    \ / 2 - \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp29u1gm_a.cs(43,72): error CS1525: Invalid expression term ''}''

    /tmp/tmp29u1gm_a.cs(43,72): error CS1026: ) expected

    /tmp/tmp29u1gm_a.cs(43,72): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCap.ToUpper().ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCap.ToUpper().ToLower();\n        string vowelsBothCapUpperLowerUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n       \
    \ string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9my76tsp.cs(35,151): error CS1001: Identifier expected

    /tmp/tmp9my76tsp.cs(35,151): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = \"\";\n \
    \       string vowelsCount2 = \"\";\n        string vowelsCount3 = \"\";\n   \
    \     string vowelsCount4 = \"\";\n        string vowelsCount5 = \"\";\n     \
    \   string vowelsCount6 = \"\";\n        string vowelsCount7 = \"\";\n       \
    \ string vowelsCount8 = \"\";\n        string vowelsCount9 = \"\";\n        string\
    \ vowelsCount10 = \"\";\n        string vowelsCount11 = \"\";\n        string\
    \ vowelsCount12 = \"\";\n        string vowelsCount13 = \"\";\n        string\
    \ vowelsCount14 = \"\";\n        string vowelsCount15 = \"\";\n        string\
    \ vowelsCount16 = \"\";\n        string vowelsCount17 = \"\";\n        string\
    \ vowelsCount18 = \"\";\n        string vowelsCount19 = \"\";\n        string\
    \ vowelsCount20 = \"\";\n        string vowelsCount21 = \"\";\n        string\
    \ vowelsCount22 = \"\";\n        string vowelsCount23 = \"\";\n        string\
    \ vowelsCount24 = \"\";\n        string vowelsCount25 = \"\";\n        string\
    \ vowelsCount26 = \"\";\n        string vowelsCount27 = \"\";\n        string\
    \ vowelsCount28 = \"\";\n        string vowelsCount29 = \"\";\n        string\
    \ vowelsCount30 = \"\";\n        string vowelsCount31 = \"\";\n        string\
    \ vowelsCount32 = \"\";\n        string vowelsCount33 = \"\";\n        string\
    \ vowelsCount34 = \"\";\n        string vowelsCount35 = \"\";\n        string\
    \ vowelsCount36 = \"\";\n        string vowelsCount37 = \"\";\n        string\
    \ vowelsCount38 = \"\";\n        string vowelsCount39 = \"\";\n        string\
    \ vowelsCount40 = \"\";\n        string vowelsCount41 = \"\";\n        string\
    \ vowelsCount42 = \"\";\n        string vowelsCount43 = \"\";\n        string\
    \ vowelsCount44 = \"\";\n        string vowelsCount45 = \"\";\n        string\
    \ vowelsCount46 = \"\";\n        string vowelsCount47 = \"\";\n        string\
    \ vowelsCount48 = \"\";\n        string vowelsCount49 = \"\";\n        string\
    \ vowelsCount50 = \"\";\n        string vowelsCount51 = \"\";\n        string\
    \ vowelsCount52 = \"\";\n        string vowelsCount53 = \"\";\n        string\
    \ vowelsCount54 = \"\";\n        string vowelsCount55 = \"\";\n        string\
    \ vowelsCount56 = \"\";\n        string vowelsCount57 = \"\";\n        string\
    \ vowelsCount58 = \"\";\n        string vowelsCount59 = \"\";\n        string\
    \ vowelsCount60 = \"\";\n        string vowelsCount61 = \"\";\n        string\
    \ vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpneiolktq.cs(78,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        string vowelsLeft = word.Substring(0, word.Length - vowelsCount);\n \
    \       string vowelsRight = word.Substring(word.Length - vowelsCount);\n    \
    \    string vowelsMiddle = word.Substring(0, word.Length - vowelsCount / 2);\n\
    \        string vowelsMiddle2 = word.Substring(0, word.Length - vowelsCount /\
    \ 2);\n        string vowelsMiddle3 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle4 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle5 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle6 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle7 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle8 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle9 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle10 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle11 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle12 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle13 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle14 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle15 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle16 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle17 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle18 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle19 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle20 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle21 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle22 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle23 = word.Substring(0, word.Length - vowelsCount\
    \ / 2);\n        string vowelsMiddle24 = word.Substring\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu9i33138.cs(43,47): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int startIndex = word.Length -\
    \ 1;\n        int endIndex = word.Length - 1;\n        int vowelCount = 0;\n \
    \       string result = \"\";\n        for (int i = word.Length - 1; i >= 0; i--)\
    \ {\n            if (vowels.Contains(word[i])) {\n                vowelCount++;\n\
    \                if (vowelCount > 1) {\n                    startIndex = i;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     for (int i = word.Length - 1; i >= 0; i--) {\n            if (vowels.Contains(word[i]))\
    \ {\n                vowelCount++;\n                if (vowelCount > 1) {\n  \
    \                  endIndex = i;\n                    break;\n               \
    \ }\n            }\n        }\n        if (startIndex < 0 || endIndex < 0) {\n\
    \            return \"\";\n        }\n        for (int i = startIndex; i <= endIndex;\
    \ i++) {\n            if (vowels.Contains(word[i])) {\n                vowelCount++;\n\
    \                if (vowelCount > 1) {\n                    result = word[i];\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf5_8olgm.cs(46,30): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length - 1,\
    \ 1);\n        string vowelsMiddle = word.Substring(word.Length / 2, 1);\n   \
    \     string vowelsAll = vowelsLeft + vowelsMiddle + vowelsRight;\n        string\
    \ vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCaps = vowelsAll.ToUpper().ToLower();\n        string\
    \ vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsUpper\
    \ = vowelsAllCaps.ToUpper();\n        string vowelsAllCapsAll = vowelsAllCapsUpper\
    \ + vowelsAllCapsLower;\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllCaps = vowelsAllCapsAll.ToUpper().ToLower();\n        string\
    \ vowelsAllCapsAllCapsLower = vowelsAllCapsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAllCapsUpper = vowelsAllCapsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAllCapsAll = vowelsAllCapsAllCapsUpper + vowelsAllCapsAllCapsLower;\n\
    \        string vowelsAllCapsAllCapsAllUpper = vowelsAllCapsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllCapsAllLower = vowelsAllCapsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllCapsAllCaps = vowelsAllCapsAllCapsAll.ToUpper().ToLower();\n\
    \        string vowelsAllCapsAllCapsAllCapsLower = vowelsAllCapsAllCapsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAllCapsAllCapsUpper = vowelsAllCapsAllCapsAllCaps.ToUpper();\n\
    \        string vowelsAllCapsAllCapsAllCapsAll = vowelsAllCapsAllCapsAllCapsUpper\
    \ + vowelsAllCaps\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphjo9hgx5.cs(38,97): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelCount = vowels.Count(c\
    \ => word.Contains(c));\n        int consonantCount = word.Count(c => c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u');\n        int vowelIndex =\
    \ vowelCount - consonantCount;\n        int consonantIndex = consonantCount -\
    \ vowelCount;\n        int vowelIndex = vowelIndex < 0 ? 0 : vowelIndex;\n   \
    \     int consonantIndex = consonantIndex < 0 ? 0 : consonantIndex;\n        string\
    \ vowel = vowels[vowelIndex];\n        string consonant = word.Substring(consonantIndex,\
    \ consonantCount);\n        return vowel + consonant;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1t0ht4we.cs(21,13): error CS0128: A local variable or function named ''vowelIndex''
    is already defined in this scope

    /tmp/tmp1t0ht4we.cs(22,13): error CS0128: A local variable or function named ''consonantIndex''
    is already defined in this scope

    /tmp/tmp1t0ht4we.cs(23,24): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCap\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n        string vowelsAllCapAll\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n\
    \        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string\
    \ vowelsAllCapAllCap = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllCapLower\
    \ = vowelsAllCapAllCap.ToLower();\n        string vowelsAllCapAllCapUpper = vowelsAllCapAllCap.ToUpper();\n\
    \        string vowelsAllCapAllCapAll = vowelsAllCapAllCap.ToUpper();\n      \
    \  string vowelsAllCapAllCapAllLower = vowelsAllCapAllCapAll.ToLower();\n    \
    \    string vowelsAllCapAllCapAllUpper = vowelsAllCapAllCapAll.ToUpper();\n  \
    \      string vowelsAllCapAllCapAllCap = vowelsAllCapAllCapAll.ToUpper();\n  \
    \      string vowelsAllCapAllCapAllCapLower = vowelsAllCapAllCapAllCap.ToLower();\n\
    \        string vowelsAllCapAllCapAllCapUpper = vowelsAllCapAllCapAllCap.ToUpper();\n\
    \        string vowelsAllCapAllCapAllCapAll = vowelsAllCapAllCapAllCap.ToUpper();\n\
    \        string vowelsAllCapAllCapAllCapAllLower = vowelsAllCapAllCapAllCapAll.ToLower();\n\
    \        string vowelsAllCapAllCapAllCapAllUpper = vowelsAllCapAllCapAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllCapAllCapAllCap = vowel\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxj0gzma8.cs(41,54): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        int vowelsCountFromRight = word.Length - vowelsCount;\n        int vowelsCountFromLeft\
    \ = vowelsCount - 1;\n        int vowelsCountFromRightToLeft = vowelsCountFromRight\
    \ - vowelsCountFromLeft;\n        int vowelsCountFromLeftToRight = vowelsCountFromLeft\
    \ - vowelsCountFromRight;\n        int vowelsCountFromRightToLeftToRight = vowelsCountFromRightToLeft\
    \ - vowelsCountFromLeftToRight;\n        int vowelsCountFromLeftToRightToLeft\
    \ = vowelsCountFromLeftToRight - vowelsCountFromRightToLeft;\n        int vowelsCountFromRightToLeftToRightToLeft\
    \ = vowelsCountFromRightToLeftToRight - vowelsCountFromLeftToRightToLeft;\n  \
    \      int vowelsCountFromLeftToRightToLeftToRight = vowelsCountFromLeftToRightToLeft\
    \ - vowelsCountFromRightToLeftToRight;\n        int vowelsCountFromRightToLeftToRightToLeftToRight\
    \ = vowelsCountFromRightToLeftToRightToLeft - vowelsCountFromLeftToRightToLeftToRight;\n\
    \        int vowelsCountFromLeftToRightToLeftToRightToLeftToRight = vowelsCountFromLeftToRightToLeftToRightToLeft\
    \ - vowelsCountFromRightToLeftToRightToLeftToRight;\n        int vowelsCountFromRightToLeftToRightToLeftToRightToLeftToRight\
    \ = vowelsCountFromRightToLeftToRightToLeftToRight - vowelsCountFromLeftToRightToLeftToRightToLeftToRight;\n\
    \        int vowelsCountFromLeftToRightToLeftToRightToLeftToRightToLeftToRight\
    \ = vowelsCountFromLeftToRightToLeftToRightToLeftToRightToLeftToRight - vowelsCountFromRightToLeftToRightToLeftToRightToLeftToRightToLeftToRight;\n\
    \        int vowelsCountFromRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRight\
    \ = vowelsCountFromRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzpexr0hf.cs(30,342): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        int vowelsCountFromRight = word.Length - vowelsCount;\n        string\
    \ vowelsStringFromRight = word.Substring(vowelsCountFromRight);\n        string\
    \ vowelsStringFromRightUpper = vowelsStringFromRight.ToUpper();\n        string\
    \ vowelsStringFromRightLower = vowelsStringFromRight.ToLower();\n        string\
    \ vowelsStringFromRightVowels = vowelsStringFromRight.Replace(vowelsStringFromRightUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsLower = vowelsStringFromRight.Replace(vowelsStringFromRightLower,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpper = vowelsStringFromRight.Replace(vowelsStringFromRightVowels,\
    \ \"\");\n        string vowelsStringFromRightVowelsLowerUpper = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsLower,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpperLower = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsLowerUpperUpper = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsLowerUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpperLowerUpper = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsUpperLowerUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpperLowerUpperUpper = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsUpperLowerUpperUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpperLowerUpperUpperUpper\
    \ = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsUpperLowerUpperUpperUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpperLowerUpperUpperUpper\
    \ = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsUpperLowerUpperUpperUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpperLowerUpperUpperUpperUpper\
    \ = vowelsStringFromRight.Replace(vowelsStringFromRightVowelsUpperLowerUpperUpperUpperUpper,\
    \ \"\");\n        string vowelsStringFromRightVowelsUpperLowerUpperUpperUpperUpperUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2g3_70jw.cs(33,78): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1, 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2, 1);\n  \
    \      string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n     \
    \   string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n   \
    \     string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length /\
    \ 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleRight =\
    \ vowels.Substring(0, word.Length / 2);\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxwpcwc9j.cs(27,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(29,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(30,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(31,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftRight''
    is already defined in th'
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiny24_40.cs(38,63): error CS1001: Identifier expected

    /tmp/tmpiny24_40.cs(38,63): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapitalized = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalizedUpper = vowelsBothCapitalized.ToUpper();\n\
    \        string vowelsBothCapitalizedLower = vowelsBothCapitalized.ToLower();\n\
    \        string vowelsBothCapitalizedUpperLower = vowelsBothCapitalizedUpper.ToLower();\n\
    \        string vowelsBothCapitalizedUpperUpper = vowelsBothCapitalizedUpper.ToUpper();\n\
    \        string vowelsBothCapitalizedUpperLowerUpper = vowelsBothCapitalizedUpperLower.ToUpper();\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpper = vowelsBothCapitalizedUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpper = vowelsBothCapitalizedUpperLowerUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpper = vowelsBothCapitalizedUpperLowerUpperUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpper = vowelsBothCapitalizedUpperLowerUpperUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpper = vowelsBothCapitalizedUpperLowerUpperUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpper = vowelsBothCapitalizedUpperLowerUpperUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpper = vowelsBothCapitalizedUpperLowerUpperUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpperUpper = vowelsBothCapitalizedUpperLowerUpperUpperUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpperUpper = vowelsBothCapitalizedUpperLowerUpperUpperUpper;\n\
    \        string vowelsBothCapitalizedUpperLowerLowerUpperUpperUpper = vowelsBothCapitalizedUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3c6fq6ko.cs(37,96): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle3 = vowels.Substring(0, vowels.Length / 3);\n    \
    \    string vowelsMiddle4 = vowels.Substring(0, vowels.Length / 4);\n        string\
    \ vowelsMiddle5 = vowels.Substring(0, vowels.Length / 5);\n        string vowelsMiddle6\
    \ = vowels.Substring(0, vowels.Length / 6);\n        string vowelsMiddle7 = vowels.Substring(0,\
    \ vowels.Length / 7);\n        string vowelsMiddle8 = vowels.Substring(0, vowels.Length\
    \ / 8);\n        string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 9);\n\
    \        string vowelsMiddle10 = vowels.Substring(0, vowels.Length / 10);\n  \
    \      string vowelsMiddle11 = vowels.Substring(0, vowels.Length / 11);\n    \
    \    string vowelsMiddle12 = vowels.Substring(0, vowels.Length / 12);\n      \
    \  string vowelsMiddle13 = vowels.Substring(0, vowels.Length / 13);\n        string\
    \ vowelsMiddle14 = vowels.Substring(0, vowels.Length / 14);\n        string vowelsMiddle15\
    \ = vowels.Substring(0, vowels.Length / 15);\n        string vowelsMiddle16 =\
    \ vowels.Substring(0, vowels.Length / 16);\n        string vowelsMiddle17 = vowels.Substring(0,\
    \ vowels.Length / 17);\n        string vowelsMiddle18 = vowels.Substring(0, vowels.Length\
    \ / 18);\n        string vowelsMiddle19 = vowels.Substring(0, vowels.Length /\
    \ 19);\n        string vowelsMiddle20 = vowels.Substring(0, vowels.Length / 20);\n\
    \        string vowelsMiddle21 = vowels.Substring(0, vowels.Length / 21);\n  \
    \      string vowelsMiddle22 = vowels.Substring(0, vowels.Length / 22);\n    \
    \    string vowelsMiddle23 = vowels.Substring(0, vowels.Length / 23);\n      \
    \  string vowelsMiddle24 = vowels.Substring(0, vowels.Length / 24);\n        string\
    \ vowelsMiddle25 = vowels.Substring(0, vowels.Length / 25);\n        string vowelsMiddle26\
    \ = vowels.Substring(0, vowels.Length / 26);\n        string vowels\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpulxjydg9.cs(45,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle3 = vowels.Substring(0, vowels.Length / 3);\n    \
    \    string vowelsMiddle4 = vowels.Substring(0, vowels.Length / 4);\n        string\
    \ vowelsMiddle5 = vowels.Substring(0, vowels.Length / 5);\n        string vowelsMiddle6\
    \ = vowels.Substring(0, vowels.Length / 6);\n        string vowelsMiddle7 = vowels.Substring(0,\
    \ vowels.Length / 7);\n        string vowelsMiddle8 = vowels.Substring(0, vowels.Length\
    \ / 8);\n        string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 9);\n\
    \        string vowelsMiddle10 = vowels.Substring(0, vowels.Length / 10);\n  \
    \      string vowelsMiddle11 = vowels.Substring(0, vowels.Length / 11);\n    \
    \    string vowelsMiddle12 = vowels.Substring(0, vowels.Length / 12);\n      \
    \  string vowelsMiddle13 = vowels.Substring(0, vowels.Length / 13);\n        string\
    \ vowelsMiddle14 = vowels.Substring(0, vowels.Length / 14);\n        string vowelsMiddle15\
    \ = vowels.Substring(0, vowels.Length / 15);\n        string vowelsMiddle16 =\
    \ vowels.Substring(0, vowels.Length / 16);\n        string vowelsMiddle17 = vowels.Substring(0,\
    \ vowels.Length / 17);\n        string vowelsMiddle18 = vowels.Substring(0, vowels.Length\
    \ / 18);\n        string vowelsMiddle19 = vowels.Substring(0, vowels.Length /\
    \ 19);\n        string vowelsMiddle20 = vowels.Substring(0, vowels.Length / 20);\n\
    \        string vowelsMiddle21 = vowels.Substring(0, vowels.Length / 21);\n  \
    \      string vowelsMiddle22 = vowels.Substring(0, vowels.Length / 22);\n    \
    \    string vowelsMiddle23 = vowels.Substring(0, vowels.Length / 23);\n      \
    \  string vowelsMiddle24 = vowels.Substring(0, vowels.Length / 24);\n        string\
    \ vowelsMiddle25 = vowels.Substring(0, vowels.Length / 25);\n        string vowelsMiddle26\
    \ = vowels.Substring(0, vowels.Length / 26);\n        string vowels\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpulxjydg9.cs(45,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpavajwg5k.cs(33,140): error CS1026: ) expected

    /tmp/tmpavajwg5k.cs(33,140): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsUpper + vowelsAllCapsLower;\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbi0lwcnh.cs(42,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n\
    \        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMid\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxmk052t4.cs(41,62): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCaps = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpperLower\
    \ = vowelsBothCapsUpper.ToLower();\n        string vowelsBothCapsUpperLowerUpper\
    \ = vowelsBothCapsUpperLower.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpper\
    \ = vowelsBothCapsUpperLowerUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpik9fy2q4.cs(37,89): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ vowelsMiddleMiddle\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpblqrl93y.cs(40,34): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n       \
    \ string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCaps + vowelsAllCapsLower;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0t11w8yd.cs(42,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle3 = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsMiddle4 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle5 = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle6\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle7 = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddle8 = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle10 = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddle11 = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddle12 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle13 = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle14\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle15 = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddle16 = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle17 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle18 = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddle19 = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddle20 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle21 = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle22\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle23 = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddle24 = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle25 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle26 = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddle27 = vowels.\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3w9ncwge.cs(45,40): error CS1001: Identifier expected

    /tmp/tmp3w9ncwge.cs(45,40): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMid\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt1uhnx73.cs(34,108): error CS1026: ) expected

    /tmp/tmpt1uhnx73.cs(34,108): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpper = vowelsBothCapitalUpper.ToUpper();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptqfqvmw1.cs(37,119): error CS1001: Identifier expected

    /tmp/tmptqfqvmw1.cs(37,119): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjzfpamne.cs(39,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1b0mif7a.cs(38,52): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd6kegjee.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpd6kegjee.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpd6kegjee.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeftLeftLeftLeftLeftRightLeft''
    is already defined in this scope

    /tmp/tmpd6kegjee.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeftLeftLeftLeftLeftRightRight''
    is already defined in this scope

    /tmp/tmpd6kegjee.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length\
    \ / 2);\n        string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw9ld3_e2.cs(36,83): error CS1026: ) expected

    /tmp/tmpw9ld3_e2.cs(36,83): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_j38xf4.cs(34,80): error CS1001: Identifier expected

    /tmp/tmpi_j38xf4.cs(34,80): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2 - 1);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2 - 1);\n \
    \       string vowelsMiddleMiddle = vowels.Substring(0, word.Length / 4);\n  \
    \      string vowelsMiddleMiddleLeft = vowels.Substring(0, word.Length / 4 - 1);\n\
    \        string vowelsMiddleMiddleRight = vowels.Substring(word.Length / 4 - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, word.Length\
    \ / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 8 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight =\
    \ vowels.Substring(word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 256);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 256 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 256 - 1);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdtumfu7s.cs(28,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(29,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(41,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpdtumfu7s.cs(42,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp'
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0ngiyqzr.cs(44,59): error CS1001: Identifier expected

    /tmp/tmp0ngiyqzr.cs(44,59): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 256);\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbq8m9mhd.cs(28,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(29,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(30,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(31,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpperLower\
    \ = vowelsAllUpper.ToLower();\n        string vowelsAllLowerUpper = vowelsAllLower.ToUpper();\n\
    \        string vowelsAllLowerUpperLower = vowelsAllLowerUpper.ToLower();\n  \
    \      string vowelsAllLowerUpperLowerLower = vowelsAllLowerUpperLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLower = vowelsAllLowerUpperLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLower = vowelsAllLowerUpperLowerLowerLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLowerLower = vowelsAllLowerUpperLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLower = vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLower =\
    \ vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n   \
    \     string vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsAllLowerUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0qooijwa.cs(36,85): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsMiddle + vowelsRight;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string vowelsAllCapsAll\
    \ = vowelsAllCapsUpper + vowelsAllCapsLower;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpper = vowelsAllCapsAllLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLower = vowelsAllCapsAllLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpper = vowelsAllCapsAllLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLower = vowelsAllCapsAllLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpper = vowelsAllCapsAllLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLower = vowelsAllCapsAllLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLowerUpperUpper\
    \ = vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLowerUpper.ToLower();\n    \
    \    string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLower\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4obvyxcs.cs(38,67): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowelsBothBothBoth\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgu8813c2.cs(40,34): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2);\n        string\
    \ vowelsAll = vowelsLeft + vowelsMiddle + vowelsRight;\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCaps = vowelsAll.ToUpper();\n        string vowelsAllCapsLower\
    \ = vowelsAllCaps.ToLower();\n        string vowelsAllCapsAll = vowelsAllCapsLower\
    \ + vowelsAllCaps;\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n        string\
    \ vowelsAllCapsAllUpperLowerUpper = vowelsAllCapsAllUpperLower.ToUpper();\n  \
    \      string vowelsAllCapsAllUpperLowerUpperUpperLower = vowelsAllCapsAllUpperLowerUpperUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCap\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr269013p.cs(37,28): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord2 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord3 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord4 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord5 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord6 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord7 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord8 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord9 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord10 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord11 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord12 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord13 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord14 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord15 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord16 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c)).Count();\n        int vowelsCountInWord17 = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contain\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv100fyd6.cs(34,89): error CS1026: ) expected

    /tmp/tmpv100fyd6.cs(34,89): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBoth\
    \ = vowels.Substring(0, vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz50_qtv6.cs(40,74): error CS1026: ) expected

    /tmp/tmpz50_qtv6.cs(40,74): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightMiddle\
    \ = vowels.Substring(0, word.Length / 4);\n        string vowelsMiddleRightLeftMiddle\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 8);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 8);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 16);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 16);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 32);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 32);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 64);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 64);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 128);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 128);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 256);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 256);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 512);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 512);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 1024);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(word.Length / 1024);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 2048);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj61hl7vl.cs(43,59): error CS1001: Identifier expected

    /tmp/tmpj61hl7vl.cs(43,59): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = word.ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCount2 = vowelsCount.Substring(vowelsCount.Length\
    \ - 2, vowelsCount.Length);\n        string vowelsCount3 = vowelsCount.Substring(vowelsCount.Length\
    \ - 3, vowelsCount.Length);\n        string vowelsCount4 = vowelsCount.Substring(vowelsCount.Length\
    \ - 4, vowelsCount.Length);\n        string vowelsCount5 = vowelsCount.Substring(vowelsCount.Length\
    \ - 5, vowelsCount.Length);\n        string vowelsCount6 = vowelsCount.Substring(vowelsCount.Length\
    \ - 6, vowelsCount.Length);\n        string vowelsCount7 = vowelsCount.Substring(vowelsCount.Length\
    \ - 7, vowelsCount.Length);\n        string vowelsCount8 = vowelsCount.Substring(vowelsCount.Length\
    \ - 8, vowelsCount.Length);\n        string vowelsCount9 = vowelsCount.Substring(vowelsCount.Length\
    \ - 9, vowelsCount.Length);\n        string vowelsCount10 = vowelsCount.Substring(vowelsCount.Length\
    \ - 10, vowelsCount.Length);\n        string vowelsCount11 = vowelsCount.Substring(vowelsCount.Length\
    \ - 11, vowelsCount.Length);\n        string vowelsCount12 = vowelsCount.Substring(vowelsCount.Length\
    \ - 12, vowelsCount.Length);\n        string vowelsCount13 = vowelsCount.Substring(vowelsCount.Length\
    \ - 13, vowelsCount.Length);\n        string vowelsCount14 = vowelsCount.Substring(vowelsCount.Length\
    \ - 14, vowelsCount.Length);\n        string vowelsCount15 = vowelsCount.Substring(vowelsCount.Length\
    \ - 15, vowelsCount.Length);\n        string vowelsCount16 = vowelsCount.Substring(vowelsCount.Length\
    \ - 16, vowelsCount.Length);\n        string vowelsCount17 = vowelsCount.Substring(vowelsCount.Length\
    \ - 17, vowelsCount.Length);\n        string vowelsCount18 = vowelsCount.Substring(vowelsCount.Length\
    \ - 18, vowelsCount.Length);\n        string vowelsCount19 = vowelsCount.Substring(vowelsCount.Length\
    \ - 19, vowelsCount.Length);\n        string vowelsCount20 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsybft_yj.cs(36,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpsybft_yj.cs(36,31): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk2tb0pby.cs(40,68): error CS1525: Invalid expression term ''}''

    /tmp/tmpk2tb0pby.cs(40,68): error CS1026: ) expected

    /tmp/tmpk2tb0pby.cs(40,68): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1, 1);\n        string vowelsMiddle = word.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1, 1);\n\
    \        string vowelsMiddleMiddle = word.Substring(0, word.Length / 2);\n   \
    \     string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1, 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqd3dsk8b.cs(40,90): error CS1026: ) expected

    /tmp/tmpqd3dsk8b.cs(40,90): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1twgi5q3.cs(37,57): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothRightLeftBoth\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj5hhwt0i.cs(29,39): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n\
    \        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowel\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_l4sp118.cs(40,54): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverseReverse\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverseReverseReverse\
    \ = vowelsCountReverseReverse.ToUpper();\n        string vowelsCountReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverse.ToLower();\n        string vowelsCountReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverse.ToUpper();\n        string vowelsCountReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverse.ToLower();\n        string\
    \ vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverse =\
    \ vowelsCountReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowel\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwfqu2_np.cs(35,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_j38xf4.cs(34,80): error CS1001: Identifier expected

    /tmp/tmpi_j38xf4.cs(34,80): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowel\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphbj9on08.cs(50,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm6aidj09.cs(34,92): error CS1525: Invalid expression term ''}''

    /tmp/tmpm6aidj09.cs(34,92): error CS1026: ) expected

    /tmp/tmpm6aidj09.cs(34,92): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothBoth = vowelsBothUpper.ToUpper()\
    \ + vowelsBothLower.ToLower();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBoth\
    \ = vowelsBothBothUpper.ToUpper() + vowelsBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBothBoth.ToUpper();\n        string vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n    \
    \    string vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n        string\
    \ vowelsBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n        string vowelsBothBothBothLower\
    \ = vowelsBothBothBoth.ToLower();\n        string vowelsBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n    \
    \    string vowelsBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBothBoth.ToUpper();\n        string vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n    \
    \    string vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n        string\
    \ vowelsBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n        string vowelsBothBothBothLower\
    \ = vowelsBothBothBoth.\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuj4olcd3.cs(43,61): error CS1001: Identifier expected

    /tmp/tmpuj4olcd3.cs(43,61): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsUpper + vowelsAllCapsLower;\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbi0lwcnh.cs(42,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothBoth = vowelsBothUpper + vowelsBothLower;\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBoth\
    \ = vowelsBothBothUpper + vowelsBothBothLower;\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBothBoth.ToUpper();\n        string vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBoth = vowelsBothBothBothUpper + vowelsBothBothBothLower;\n\
    \        string vowelsBothBothBothBothUpper = vowelsBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothLower = vowelsBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBoth = vowelsBothBothBothUpper + vowelsBothBothBothLower;\n\
    \        string vowelsBothBothBothBothUpper = vowelsBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothLower = vowelsBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBoth = vowelsBothBothBothBothUpper + vowelsBothBothBothLower;\n\
    \        string vowelsBothBothBothBothUpper = vowelsBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothLower = vowelsBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothBoth = vowelsBothBothBothBothUpper + vowelsBothBothBothBothLower;\n\
    \        string vowelsBothBothBothBothUpper = vowelsBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothLower = vowelsBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBoth = vowelsBothBothBothBothUpper + vowelsBothBothBothLower;\n\
    \        string vowelsBothBothBothBothUpper = vowel\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo6u71tpn.cs(41,51): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        int vowelsCountFromRight = vowels.Length - word.Length;\n        int\
    \ vowelsCountFromLeft = word.Length - vowels.Length;\n        int vowelsCountFromBoth\
    \ = vowelsCountFromRight + vowelsCountFromLeft;\n        int vowelsCountFromRightAndLeft\
    \ = vowelsCountFromRight + vowelsCountFromLeft;\n        int vowelsCountFromBothAndRight\
    \ = vowelsCountFromBoth + vowelsCountFromRight;\n        int vowelsCountFromBothAndLeft\
    \ = vowelsCountFromBoth + vowelsCountFromLeft;\n        int vowelsCountFromBothAndBoth\
    \ = vowelsCountFromBoth + vowelsCountFromBoth;\n        int vowelsCountFromBothAndBothAndRight\
    \ = vowelsCountFromBothAndRight + vowelsCountFromBothAndLeft;\n        int vowelsCountFromBothAndBothAndLeft\
    \ = vowelsCountFromBothAndLeft + vowelsCountFromBothAndRight;\n        int vowelsCountFromBothAndBothAndBoth\
    \ = vowelsCountFromBothAndBoth + vowelsCountFromBothAndBoth;\n        int vowelsCountFromBothAndBothAndBothAndRight\
    \ = vowelsCountFromBothAndBothAndRight + vowelsCountFromBothAndBothAndLeft;\n\
    \        int vowelsCountFromBothAndBothAndBothAndLeft = vowelsCountFromBothAndBothAndLeft\
    \ + vowelsCountFromBothAndBothAndRight;\n        int vowelsCountFromBothAndBothAndBothAndBoth\
    \ = vowelsCountFromBothAndBothAndBoth + vowelsCountFromBothAndBothAndBoth;\n \
    \       int vowelsCountFromBothAndBothAndBothAndBothAndRight = vowelsCountFromBothAndBothAndBothAndRight\
    \ + vowelsCountFromBothAndBothAndBothAndLeft;\n        int vowelsCountFromBothAndBothAndBothAndBothAndLeft\
    \ = vowelsCountFromBothAndBothAndBothAndLeft + vowelsCountFromBothAndBothAndBothAndRight;\n\
    \        int vowelsCountFromBothAndBothAndBothAndBothAndBoth = vowelsCountFromBothAndBothAndBothAndBoth\
    \ + vowelsCountFromBothAndBothAndBothAndBoth;\n        int vowelsCountFromBothAndBothAndBothAndBothAndBothAndRight\
    \ = vowelsCountFromBothAndBothAndBothAndBothAndRight + vowelsCountFromBothAndBothAndBothAndBothAndLeft;\n\
    \        int vowelsCountFromBothAndBoth\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd_mnpvlt.cs(35,39): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiy_78se8.cs(28,263): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothBoth = vowelsBothUpper.ToUpper()\
    \ + vowelsBothLower.ToLower();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowelsBothBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBoth.ToUpper() + vowelsBothBothLower.ToLower();\n        string\
    \ vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyjmqu56h.cs(41,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        string vowelsLeft = word.Substring(0, word.Length - vowelsCount);\n \
    \       string vowelsRight = word.Substring(word.Length - vowelsCount);\n    \
    \    string vowelsMiddle = word.Substring(0, word.Length - vowelsCount);\n   \
    \     string vowelsMiddle2 = word.Substring(0, word.Length - vowelsCount);\n \
    \       string vowelsMiddle3 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle4 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle5 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle6 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle7 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle8 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle9 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle10 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle11 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle12 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle13 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle14 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle15 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle16 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle17 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle18 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle19 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle20 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle21 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle22 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle23 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle24 = word.Substring(0, word.Length - vowelsCount);\n\
    \        string vowelsMiddle25 = word.Substring(0, word.Length - \n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9srtkjka.cs(44,64): error CS1525: Invalid expression term ''}''

    /tmp/tmp9srtkjka.cs(44,64): error CS1026: ) expected

    /tmp/tmp9srtkjka.cs(44,64): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1, 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2, 1);\n  \
    \      string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n     \
    \   string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n   \
    \     string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length /\
    \ 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleRight =\
    \ vowels.Substring(0, word.Length / 2);\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxwpcwc9j.cs(27,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(29,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(30,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(31,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftRight''
    is already defined in this scope

    /tmp/tmpxwpcwc9j.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftRight''
    is already defined in th'
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdnskryxy.cs(29,242): error CS1026: ) expected

    /tmp/tmpdnskryxy.cs(29,242): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftRight = word.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftLeftRight = word.Substring(word.Length / 2,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzi8vsdwu.cs(40,57): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpje439fij.cs(41,82): error CS1026: ) expected

    /tmp/tmpje439fij.cs(41,82): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverseReverse\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverseReverseReverse\
    \ = vowelsCountReverseReverse.ToUpper();\n        string vowelsCountReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverse.ToLower();\n        string vowelsCountReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverse.ToUpper();\n        string vowelsCountReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverse.ToLower();\n        string\
    \ vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverse =\
    \ vowelsCountReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverse\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn19ne06s.cs(35,83): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCap.ToUpper().ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCap.ToUpper().ToLower();\n        string vowelsBothCapUpperLowerUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n       \
    \ string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9my76tsp.cs(35,151): error CS1001: Identifier expected

    /tmp/tmp9my76tsp.cs(35,151): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCap.ToUpper().ToLower();\n        string vowelsBothCapUpperLowerUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n       \
    \ string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCap.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().To\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfm70hp0b.cs(33,223): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        string vowelsLeft = word.Substring(0, word.Length - vowelsCount);\n \
    \       string vowelsRight = word.Substring(word.Length - vowelsCount);\n    \
    \    string vowelsMiddle = word.Substring(0, word.Length - vowelsCount / 2);\n\
    \        string vowelsMiddle2 = word.Substring(0, word.Length - vowelsCount /\
    \ 2 + 1);\n        string vowelsMiddle3 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 2);\n        string vowelsMiddle4 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 3);\n        string vowelsMiddle5 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 4);\n        string vowelsMiddle6 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 5);\n        string vowelsMiddle7 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 6);\n        string vowelsMiddle8 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 7);\n        string vowelsMiddle9 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 8);\n        string vowelsMiddle10 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 9);\n        string vowelsMiddle11 = word.Substring(0, word.Length - vowelsCount\
    \ / 2 + 10);\n        string vowelsMiddle12 = word.Substring(0, word.Length -\
    \ vowelsCount / 2 + 11);\n        string vowelsMiddle13 = word.Substring(0, word.Length\
    \ - vowelsCount / 2 + 12);\n        string vowelsMiddle14 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 13);\n        string vowelsMiddle15 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 14);\n        string vowelsMiddle16 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 15);\n        string vowelsMiddle17 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 16);\n        string vowelsMiddle18 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 17);\n        string vowelsMiddle19 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 18);\n        string vowelsMiddle20 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 19);\n        string vowelsMiddle21 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 20);\n        string vowelsMiddle22 = word.Substring(0,\
    \ word.Length - vowelsCount / 2 + 21);\n        string vowelsMiddle23\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnl3i92gb.cs(42,30): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2f2jz3wa.cs(37,40): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpckip5f9n.cs(40,15): error CS1001: Identifier expected

    /tmp/tmpckip5f9n.cs(40,15): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length / 32,\
    \ vowels.Length / 32);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 256, vowels.Length / 256);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 1024, vowels.Length / 1024);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2048, vowels.Length / 2048);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 4096, vowels.Length / 4096);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 8192, vowels.Length / 8192);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeft\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp128z64j7.cs(35,59): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsMiddle3 = vowels.Substring(0, vowels.Length / 3);\n        string\
    \ vowelsMiddle4 = vowels.Substring(0, vowels.Length / 4);\n        string vowelsMiddle5\
    \ = vowels.Substring(0, vowels.Length / 5);\n        string vowelsMiddle6 = vowels.Substring(0,\
    \ vowels.Length / 6);\n        string vowelsMiddle7 = vowels.Substring(0, vowels.Length\
    \ / 7);\n        string vowelsMiddle8 = vowels.Substring(0, vowels.Length / 8);\n\
    \        string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 9);\n    \
    \    string vowelsMiddle10 = vowels.Substring(0, vowels.Length / 10);\n      \
    \  string vowelsMiddle11 = vowels.Substring(0, vowels.Length / 11);\n        string\
    \ vowelsMiddle12 = vowels.Substring(0, vowels.Length / 12);\n        string vowelsMiddle13\
    \ = vowels.Substring(0, vowels.Length / 13);\n        string vowelsMiddle14 =\
    \ vowels.Substring(0, vowels.Length / 14);\n        string vowelsMiddle15 = vowels.Substring(0,\
    \ vowels.Length / 15);\n        string vowelsMiddle16 = vowels.Substring(0, vowels.Length\
    \ / 16);\n        string vowelsMiddle17 = vowels.Substring(0, vowels.Length /\
    \ 17);\n        string vowelsMiddle18 = vowels.Substring(0, vowels.Length / 18);\n\
    \        string vowelsMiddle19 = vowels.Substring(0, vowels.Length / 19);\n  \
    \      string vowelsMiddle20 = vowels.Substring(0, vowels.Length / 20);\n    \
    \    string vowelsMiddle21 = vowels.Substring(0, vowels.Length / 21);\n      \
    \  string vowelsMiddle22 = vowels.Substring(0, vowels.Length / 22);\n        string\
    \ vowelsMiddle23 = vowels.Substring(0, vowels.Length / 23);\n        string vowelsMiddle24\
    \ = vowels.Substring(0, vowels.Length / 24);\n        string vowelsMiddle25 =\
    \ vowels.Substring(0, vowels.Length / 25);\n        string vowelsMiddle26 = vowels.Substring(0,\
    \ vowels.Length / 26);\n        string vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk7tf491e.cs(45,22): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsAll = vowels.Substring(0, vowels.Length);\n        string vowelsAllLeft\
    \ = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllRight = vowels.Substring(0,\
    \ vowels.Length);\n        string vowelsAllMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAll = vowels.Substring(0, vowels.Length);\n        string\
    \ vowelsAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllAllRight\
    \ = vowels.Substring(0, vowels.Length);\n        string vowelsAllAllMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllAll = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsAllAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n\
    \        string vowelsAllAllAllRight = vowels.Substring(0, vowels.Length);\n \
    \       string vowelsAllAllAllMiddle = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAllAllBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAllAllAll = vowels.Substring(0, vowels.Length);\n   \
    \     string vowelsAllAllAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n\
    \        string vowelsAllAllAllAllRight = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsAllAllAllAllMiddle = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllAllAll = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsAllAllAllAllAllLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsAllAllAllAllAllRight = vowels.Substring(0, vowels.Length);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiukrs2cd.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothLowerUpperLower\
    \ = vowelsBothLowerUpper.ToLower();\n        string vowelsBothUpperLowerLower\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperUpper\
    \ = vowelsBothLowerUpperLower.ToLower();\n        string vowelsBothUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpper.ToUpper();\n        string vowelsBothUpperLowerUpperUpper\
    \ = vowelsBothUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperLower\
    \ = vowelsBothUpperLowerUpperUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperUpperUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpperLower\
    \ = vowelsBothUpperLowerUpperUpperUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperUpperUpperUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n        string\
    \ vowelsBothUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper =\
    \ vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper =\
    \ vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdbu9q0el.cs(27,49): error CS0103: The name ''vowelsBothUpperLowerUpper''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(30,54): error CS0841: Cannot use local variable ''vowelsBothUpperLowerUpperUpperUpperLower''
    before it is declared

    /tmp/tmpdbu9q0el.cs(32,59): error CS0103: The name ''vowelsBothUpperLowerUpperUpperUpperUpperLower''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(33,64): error CS0103: The name ''vowelsBothUpperLowerUpperUpperUpperUpperUpperLower''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(34,69): error CS0103: The name ''vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperLower''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpperLowerUpperUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpdbu9q0el.cs(35,69): error CS0103: The name ''vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperLower''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(36,74): error CS0103: The name ''vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperLower''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(37,79): error CS0103: The name ''vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperLower''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(38,16): error CS0128: A local variable or function named ''vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpdbu9q0el.cs(38,79): error CS0103: The name ''vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperLower''
    does not exist in the current context

    /tmp/tmpdbu9q0el.cs(29,54): error CS0165: Use of unassigned local variable ''vowelsBothUpperLowerUpperUpperLower''

    /tmp/tmpdbu9q0el.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 256);\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbq8m9mhd.cs(28,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(29,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(30,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(31,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length - 1,\
    \ 1);\n        string vowelsMiddle = vowels.Substring(word.Length / 2, 1);\n \
    \       string vowelsAll = vowelsLeft + vowelsMiddle + vowelsRight;\n        string\
    \ vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCap = vowelsAll.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n\
    \        string vowelsAllCapAll = vowelsAllCap.ToUpper() + vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpchs13sv5.cs(44,44): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(word.Length / 2);\n  \
    \      string vowelsAll = vowels + vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCaps + vowelsAllLower + vowelsAllUpper;\n      \
    \  string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLowerUpper\
    \ = vowelsAllCapsAll.ToUpper() + vowelsAllLower + vowelsAllUpper;\n        string\
    \ vowelsAllCapsAllLowerUpperAll = vowelsAllCapsAll.ToUpper() + vowelsAllLower\
    \ + vowelsAllUpper + vowelsAll;\n        string vowelsAllCapsAllLowerUpperAllLower\
    \ = vowelsAllCapsAll.ToUpper() + vowelsAllLower + vowelsAllUpper + vowelsAllLower\
    \ + vowelsAll;\n        string vowelsAllCapsAllLowerUpperAllLowerUpper = vowelsAllCapsAll.ToUpper()\
    \ + vowelsAllLower + vowelsAllUpper + vowelsAllLower + vowelsAllUpper + vowelsAll;\n\
    \        string vowelsAllCapsAllLowerUpperAllLowerUpperAll = vowelsAllCapsAll.ToUpper()\
    \ + vowelsAllLower + vowelsAllUpper + vowelsAllLower + vowelsAllUpper + vowelsAll\
    \ + vowelsAll;\n        string vowelsAllCapsAllLowerUpperAllLowerUpperAllLower\
    \ = vowelsAllCapsAll.ToUpper() + vowelsAllLower + vowelsAllUpper + vowelsAllLower\
    \ + vowelsAllUpper + vowelsAll + vowelsAllLower + vowelsAll;\n        string vowelsAllCapsAllLowerUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpniyej3f2.cs(34,42): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n      \
    \  string vowelsBothRight = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsBothBoth = vowels.Substring(0, vowels.Length / 2 - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length / 2 + 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n     \
    \   string vowelsBothBothBothRight = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length / 2\
    \ - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(0, vowels.Length\
    \ / 2 + 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length / 2 + 1);\n        string vowelsBothBothBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8li3oje8.cs(41,34): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = vowelsMiddle.Substring(word.Length / 2);\n        string\
    \ vowelsMiddleMiddle = word.Substring(0, word.Length / 4);\n        string vowelsMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length / 4);\n        string vowelsMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length / 4);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length / 8);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length / 8);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length / 16);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length / 16);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length / 32);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length / 32);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length / 64);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length / 64);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length / 128);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length / 128);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length / 256);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmrykxfh0.cs(42,53): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper().ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsUpper + vowelsAllCapsLower;\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpldwr9w45.cs(40,74): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsCount = \"\";\n      \
    \  string vowelsCount2 = \"\";\n        string vowelsCount3 = \"\";\n        string\
    \ vowelsCount4 = \"\";\n        string vowelsCount5 = \"\";\n        string vowelsCount6\
    \ = \"\";\n        string vowelsCount7 = \"\";\n        string vowelsCount8 =\
    \ \"\";\n        string vowelsCount9 = \"\";\n        string vowelsCount10 = \"\
    \";\n        string vowelsCount11 = \"\";\n        string vowelsCount12 = \"\"\
    ;\n        string vowelsCount13 = \"\";\n        string vowelsCount14 = \"\";\n\
    \        string vowelsCount15 = \"\";\n        string vowelsCount16 = \"\";\n\
    \        string vowelsCount17 = \"\";\n        string vowelsCount18 = \"\";\n\
    \        string vowelsCount19 = \"\";\n        string vowelsCount20 = \"\";\n\
    \        string vowelsCount21 = \"\";\n        string vowelsCount22 = \"\";\n\
    \        string vowelsCount23 = \"\";\n        string vowelsCount24 = \"\";\n\
    \        string vowelsCount25 = \"\";\n        string vowelsCount26 = \"\";\n\
    \        string vowelsCount27 = \"\";\n        string vowelsCount28 = \"\";\n\
    \        string vowelsCount29 = \"\";\n        string vowelsCount30 = \"\";\n\
    \        string vowelsCount31 = \"\";\n        string vowelsCount32 = \"\";\n\
    \        string vowelsCount33 = \"\";\n        string vowelsCount34 = \"\";\n\
    \        string vowelsCount35 = \"\";\n        string vowelsCount36 = \"\";\n\
    \        string vowelsCount37 = \"\";\n        string vowelsCount38 = \"\";\n\
    \        string vowelsCount39 = \"\";\n        string vowelsCount40 = \"\";\n\
    \        string vowelsCount41 = \"\";\n        string vowelsCount42 = \"\";\n\
    \        string vowelsCount43 = \"\";\n        string vowelsCount44 = \"\";\n\
    \        string vowelsCount45 = \"\";\n        string vowelsCount46 = \"\";\n\
    \        string vowelsCount47 = \"\";\n        string vowelsCount48 = \"\";\n\
    \        string vowelsCount49 = \"\";\n        string vowelsCount50 = \"\";\n\
    \        string vowelsCount51 = \"\";\n        string vowelsCount52 = \"\";\n\
    \        string vowelsCount53 = \"\";\n        string vowelsCount54 = \"\";\n\
    \        string vowelsCount55 = \"\";\n        string vowelsCount56 = \"\";\n\
    \        string vowelsCount57 = \"\";\n        string vowelsCount58 = \"\";\n\
    \        string vowelsCount59 = \"\";\n        string vowelsCount60 = \"\";\n\
    \        string vowelsCount61 = \"\";\n        string vowelsCount6\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz1dn3p1e.cs(78,28): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCaps.ToUpper() + vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAll.ToUpper().ToLower();\n        string vowelsAllCapsAllUpperLowerLower\
    \ = vowelsAllCapsAll.ToUpper().ToLower().ToLower();\n        string vowelsAllCapsAllUpperLowerLowerLower\
    \ = vowelsAllCapsAll.ToUpper().ToLower().ToLower().ToLower();\n        string\
    \ vowelsAllCapsAllUpperLowerLowerLowerLower = vowelsAllCapsAll.ToUpper().ToLower().ToLower().ToLower().ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerLowerLowerLowerLower = vowelsAllCapsAll.ToUpper().ToLower().ToLower().ToLower().ToLower().ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerLowerLowerLowerLowerLower = vowelsAllCapsAll.ToUpper().ToLower().ToLower().ToLower().ToLower().ToLower().ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerLowerLowerLowerLowerLowerLower = vowelsAllCapsAll.ToUpper().ToLower().ToLower().ToLower().ToLower().ToLower().ToLower().ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsAllCapsAll.ToUpper().ToLower().ToLower().To\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjwq5e36z.cs(35,129): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpper = vowelsBothCapitalUpper.ToUpper();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptqfqvmw1.cs(37,119): error CS1001: Identifier expected

    /tmp/tmptqfqvmw1.cs(37,119): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_j38xf4.cs(34,80): error CS1001: Identifier expected

    /tmp/tmpi_j38xf4.cs(34,80): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowels\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw_55e6no.cs(34,93): error CS1026: ) expected

    /tmp/tmpw_55e6no.cs(34,93): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = word.ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse2 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse3 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse4 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse5 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse6 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse7 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse8 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse9 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse10 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse11 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse12 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse13 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse14 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse15 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse16 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse17 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse18 = vowelsCount.Reverse().ToUpper().Replace(vowels,\
    \ \"\").ToLower();\n        string vowelsCountReverse19 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe7wornqm.cs(36,38): error CS1525: Invalid expression term ''}''

    /tmp/tmpe7wornqm.cs(36,38): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int startIndex = word.Length -\
    \ 1;\n        int endIndex = word.Length - 1;\n        bool found = false;\n \
    \       string vowel = \"\";\n        string vowel2 = \"\";\n        string vowel3\
    \ = \"\";\n        string vowel4 = \"\";\n        string vowel5 = \"\";\n    \
    \    string vowel6 = \"\";\n        string vowel7 = \"\";\n        string vowel8\
    \ = \"\";\n        string vowel9 = \"\";\n        string vowel10 = \"\";\n   \
    \     string vowel11 = \"\";\n        string vowel12 = \"\";\n        string vowel13\
    \ = \"\";\n        string vowel14 = \"\";\n        string vowel15 = \"\";\n  \
    \      string vowel16 = \"\";\n        string vowel17 = \"\";\n        string\
    \ vowel18 = \"\";\n        string vowel19 = \"\";\n        string vowel20 = \"\
    \";\n        string vowel21 = \"\";\n        string vowel22 = \"\";\n        string\
    \ vowel23 = \"\";\n        string vowel24 = \"\";\n        string vowel25 = \"\
    \";\n        string vowel26 = \"\";\n        string vowel27 = \"\";\n        string\
    \ vowel28 = \"\";\n        string vowel29 = \"\";\n        string vowel30 = \"\
    \";\n        string vowel31 = \"\";\n        string vowel32 = \"\";\n        string\
    \ vowel33 = \"\";\n        string vowel34 = \"\";\n        string vowel35 = \"\
    \";\n        string vowel36 = \"\";\n        string vowel37 = \"\";\n        string\
    \ vowel38 = \"\";\n        string vowel39 = \"\";\n        string vowel40 = \"\
    \";\n        string vowel41 = \"\";\n        string vowel42 = \"\";\n        string\
    \ vowel43 = \"\";\n        string vowel44 = \"\";\n        string vowel45 = \"\
    \";\n        string vowel46 = \"\";\n        string vowel47 = \"\";\n        string\
    \ vowel48 = \"\";\n        string vowel49 = \"\";\n        string vowel50 = \"\
    \";\n        string vowel51 = \"\";\n        string vowel52 = \"\";\n        string\
    \ vowel53 = \"\";\n        string vowel54 = \"\";\n        string vowel55 = \"\
    \";\n        string vowel56 = \"\";\n        string vowel57 = \"\";\n        string\
    \ vowel58 = \"\";\n        string vowel59 = \"\";\n        string vowel60 = \"\
    \";\n        string vowel61 = \"\";\n        string vowel62 = \"\";\n        string\
    \ vowel63 = \"\";\n        string vowel64 = \"\";\n        string vowel65 = \"\
    \";\n        string vowel66 = \"\";\n        string vowel67 = \"\";\n        string\
    \ vowel68 = \"\";\n        string vowel69 = \"\";\n        string vowel70 = \"\
    \";\n        string vowel71 = \"\";\n        string vowel72 = \"\";\n        string\
    \ vowel73 = \"\";\n        string vowel74 = \"\";\n        string vowel75 = \"\
    \";\n        string vowel76 = \"\";\n        string vowel77 = \"\";\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3njmb7yv.cs(97,15): error CS1001: Identifier expected

    /tmp/tmp3njmb7yv.cs(97,15): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp7lykbse.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 4);\n        string vowelsMiddleLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2hob4xh.cs(41,52): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1pz3_iia.cs(34,89): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_b4v3r6x.cs(39,75): error CS1525: Invalid expression term ''}''

    /tmp/tmp_b4v3r6x.cs(39,75): error CS1026: ) expected

    /tmp/tmp_b4v3r6x.cs(39,75): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapAll\
    \ = vowelsAllCap.ToUpper() + vowelsAllCap.ToLower();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllUpperLower = vowelsAllCapAllUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpper = vowelsAllCapAllUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLower = vowelsAllCapAllUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpper = vowelsAllCapAllUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLower = vowelsAllCapAllUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperUpperUpper =\
    \ vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperUpperLower.ToUpper();\n  \
    \      string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperUpperUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLower\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbqj95_up.cs(38,51): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowels.ToUpper();\n        string vowelsCountReverseCount\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverseCountCount\
    \ = vowelsCountReverse.ToUpper();\n        string vowelsCountReverseCountCountCount\
    \ = vowelsCountReverseCount.ToLower();\n        string vowelsCountReverseCountCountCountCount\
    \ = vowelsCountReverseCount.ToUpper();\n        string vowelsCountReverseCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToLower();\n        string vowelsCountReverseCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToUpper();\n        string vowelsCountReverseCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToLower();\n        string vowelsCountReverseCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToUpper();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToLower();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToUpper();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToLower();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToUpper();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToLower();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToUpper();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToLower();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToUpper();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToLower();\n        string vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = vowelsCountReverseCountCount.ToUpper();\n        \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpocd3kv7i.cs(32,16): error CS0128: A local variable or function named ''vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount''
    is already defined in this scope

    /tmp/tmpocd3kv7i.cs(33,16): error CS0128: A local variable or function named ''vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount''
    is already defined in this scope

    /tmp/tmpocd3kv7i.cs(36,16): error CS0128: A local variable or function named ''vowelsCountReverseCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount''
    is already defined in this scope

    /tmp/tmpocd3kv7i.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwp74gyps.cs(33,126): error CS1525: Invalid expression term ''}''

    /tmp/tmpwp74gyps.cs(33,126): error CS1026: ) expected

    /tmp/tmpwp74gyps.cs(33,126): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        string vowelsStr = vowels.ToLower();\n        string vowelsStrReverse\
    \ = vowels.ToLower();\n        string vowelsStrReverse2 = vowels.ToLower();\n\
    \        string vowelsStrReverse3 = vowels.ToLower();\n        string vowelsStrReverse4\
    \ = vowels.ToLower();\n        string vowelsStrReverse5 = vowels.ToLower();\n\
    \        string vowelsStrReverse6 = vowels.ToLower();\n        string vowelsStrReverse7\
    \ = vowels.ToLower();\n        string vowelsStrReverse8 = vowels.ToLower();\n\
    \        string vowelsStrReverse9 = vowels.ToLower();\n        string vowelsStrReverse10\
    \ = vowels.ToLower();\n        string vowelsStrReverse11 = vowels.ToLower();\n\
    \        string vowelsStrReverse12 = vowels.ToLower();\n        string vowelsStrReverse13\
    \ = vowels.ToLower();\n        string vowelsStrReverse14 = vowels.ToLower();\n\
    \        string vowelsStrReverse15 = vowels.ToLower();\n        string vowelsStrReverse16\
    \ = vowels.ToLower();\n        string vowelsStrReverse17 = vowels.ToLower();\n\
    \        string vowelsStrReverse18 = vowels.ToLower();\n        string vowelsStrReverse19\
    \ = vowels.ToLower();\n        string vowelsStrReverse20 = vowels.ToLower();\n\
    \        string vowelsStrReverse21 = vowels.ToLower();\n        string vowelsStrReverse22\
    \ = vowels.ToLower();\n        string vowelsStrReverse23 = vowels.ToLower();\n\
    \        string vowelsStrReverse24 = vowels.ToLower();\n        string vowelsStrReverse25\
    \ = vowels.ToLower();\n        string vowelsStrReverse26 = vowels.ToLower();\n\
    \        string vowelsStrReverse27 = vowels.ToLower();\n        string vowelsStrReverse28\
    \ = vowels.ToLower();\n        string vowelsStrReverse29 = vowels.ToLower();\n\
    \        string vowelsStrReverse30 = vowels.ToLower();\n        string vowelsStrReverse31\
    \ = vowels.ToLower();\n        string vowelsStrReverse32 = vowels.ToLower();\n\
    \        string vowelsStrReverse33 = vowels.ToLower();\n        string vowelsStrReverse34\
    \ = vowels.ToLower();\n        string vowelsStrReverse35 = vowels.ToLower();\n\
    \        string vowel\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4vmmvrz_.cs(54,21): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(word.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length /\
    \ 2, vowels.Length);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length);\n        string vowelsMiddleLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRight =\
    \ vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5kkoky7r.cs(40,43): error CS1001: Identifier expected

    /tmp/tmp5kkoky7r.cs(40,43): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft + vowelsRight;\n        string vowelsAll\
    \ = vowelsLeft + vowelsMiddle + vowelsRight;\n        string vowelsAllUpper =\
    \ vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCaps = vowelsAll.ToUpper() + vowelsAll.ToLower();\n \
    \       string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsUpper\
    \ = vowelsAllCaps.ToUpper();\n        string vowelsAllCapsAll = vowelsAllCapsUpper\
    \ + vowelsAllCapsLower;\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphevfgcbk.cs(42,37): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsCount = \"\";\n      \
    \  string vowelsCount2 = \"\";\n        string vowelsCount3 = \"\";\n        string\
    \ vowelsCount4 = \"\";\n        string vowelsCount5 = \"\";\n        string vowelsCount6\
    \ = \"\";\n        string vowelsCount7 = \"\";\n        string vowelsCount8 =\
    \ \"\";\n        string vowelsCount9 = \"\";\n        string vowelsCount10 = \"\
    \";\n        string vowelsCount11 = \"\";\n        string vowelsCount12 = \"\"\
    ;\n        string vowelsCount13 = \"\";\n        string vowelsCount14 = \"\";\n\
    \        string vowelsCount15 = \"\";\n        string vowelsCount16 = \"\";\n\
    \        string vowelsCount17 = \"\";\n        string vowelsCount18 = \"\";\n\
    \        string vowelsCount19 = \"\";\n        string vowelsCount20 = \"\";\n\
    \        string vowelsCount21 = \"\";\n        string vowelsCount22 = \"\";\n\
    \        string vowelsCount23 = \"\";\n        string vowelsCount24 = \"\";\n\
    \        string vowelsCount25 = \"\";\n        string vowelsCount26 = \"\";\n\
    \        string vowelsCount27 = \"\";\n        string vowelsCount28 = \"\";\n\
    \        string vowelsCount29 = \"\";\n        string vowelsCount30 = \"\";\n\
    \        string vowelsCount31 = \"\";\n        string vowelsCount32 = \"\";\n\
    \        string vowelsCount33 = \"\";\n        string vowelsCount34 = \"\";\n\
    \        string vowelsCount35 = \"\";\n        string vowelsCount36 = \"\";\n\
    \        string vowelsCount37 = \"\";\n        string vowelsCount38 = \"\";\n\
    \        string vowelsCount39 = \"\";\n        string vowelsCount40 = \"\";\n\
    \        string vowelsCount41 = \"\";\n        string vowelsCount42 = \"\";\n\
    \        string vowelsCount43 = \"\";\n        string vowelsCount44 = \"\";\n\
    \        string vowelsCount45 = \"\";\n        string vowelsCount46 = \"\";\n\
    \        string vowelsCount47 = \"\";\n        string vowelsCount48 = \"\";\n\
    \        string vowelsCount49 = \"\";\n        string vowelsCount50 = \"\";\n\
    \        string vowelsCount51 = \"\";\n        string vowelsCount52 = \"\";\n\
    \        string vowelsCount53 = \"\";\n        string vowelsCount54 = \"\";\n\
    \        string vowelsCount55 = \"\";\n        string vowelsCount56 = \"\";\n\
    \        string vowelsCount57 = \"\";\n        string vowelsCount58 = \"\";\n\
    \        string vowelsCount59 = \"\";\n        string vowelsCount60 = \"\";\n\
    \        string vowelsCount61 = \"\";\n        string vowelsCount6\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz1dn3p1e.cs(78,28): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCaps.ToUpper() + vowelsAllCapsLower.ToLower();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperLower.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAll\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmply36ub8f.cs(38,32): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ vowelsMiddleMiddle\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpblqrl93y.cs(40,34): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwp74gyps.cs(33,126): error CS1525: Invalid expression term ''}''

    /tmp/tmpwp74gyps.cs(33,126): error CS1026: ) expected

    /tmp/tmpwp74gyps.cs(33,126): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverseReverse\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverseReverseReverse\
    \ = vowelsCountReverseReverse.ToUpper();\n        string vowelsCountReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverse.ToLower();\n        string vowelsCountReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverse.ToUpper();\n        string vowelsCountReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverse.ToLower();\n        string\
    \ vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverse = vowelsCountReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverse =\
    \ vowelsCountReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToLower();\n\
    \        string vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = vowelsCountReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverseReverse.ToUpper();\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx_t2u0qi.cs(35,15): error CS1001: Identifier expected

    /tmp/tmpx_t2u0qi.cs(35,15): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsBefore = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsAfter = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBetween = vowelsBefore + vowelsAfter;\n\
    \        string vowelsAfterAndBefore = vowelsAfter + vowelsBefore;\n        string\
    \ vowelsBetweenAndBefore = vowelsBefore + vowelsBetween;\n        string vowelsBeforeAndAfter\
    \ = vowelsBefore + vowelsAfter;\n        string vowelsBetweenAndAfter = vowelsBefore\
    \ + vowelsAfter;\n        string vowelsBeforeAndBetween = vowelsBefore + vowelsBetween;\n\
    \        string vowelsAfterAndBetween = vowelsAfter + vowelsBetween;\n       \
    \ string vowelsBetweenAndAfter = vowelsBefore + vowelsAfter;\n        string vowelsBeforeAndBetweenAndAfter\
    \ = vowelsBefore + vowelsBetween + vowelsAfter;\n        string vowelsAfterAndBetweenAndBefore\
    \ = vowelsAfter + vowelsBetween + vowelsBefore;\n        string vowelsBetweenAndBeforeAndAfter\
    \ = vowelsBefore + vowelsBetween + vowelsAfter;\n        string vowelsBeforeAndAfterAndBetween\
    \ = vowelsBefore + vowelsAfter + vowelsBetween;\n        string vowelsBetweenAndBeforeAndAfter\
    \ = vowelsBefore + vowelsBetween + vowelsAfter;\n        string vowelsBeforeAndAfterAndBetween\
    \ = vowelsBefore + vowelsAfter + vowelsBetween;\n        string vowelsAfterAndBetweenAndBefore\
    \ = vowelsAfter + vowelsBetween + vowelsBefore;\n        string vowelsBetweenAndBeforeAndAfter\
    \ = vowelsBefore + vowelsBetween + vowelsAfter;\n        string vowelsBeforeAndAfterAndBetween\
    \ = vowelsBefore + vowelsAfter + vowelsBetween;\n        string vowelsAfterAndBetweenAndBeforeAndAfter\
    \ = vowelsAfter + vowelsBetween + vowelsBefore + vowelsAfter;\n        string\
    \ vowelsBetweenAndBeforeAndAfterAndBefore = vowelsBefore + vowelsBetween + vowelsAfter\
    \ + vowelsBefore;\n        string vowelsBeforeAndAfterAndBetweenAndBeforeAndAfter\
    \ = vowelsBefore + vowelsAfter + vowelsBetween + vowelsBefore + vowelsAfter;\n\
    \        string vowelsAfterAndBetweenAndBeforeAndAfterAndBefore = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcsvcsy5k.cs(39,71): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothRightLeftBoth\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj5hhwt0i.cs(29,39): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length / 32,\
    \ vowels.Length / 32);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 256, vowels.Length / 256);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 1024, vowels.Length / 1024);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2048, vowels.Length / 2048);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 4096, vowels.Length / 4096);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8192, vowels.Length / 8192);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Sub\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp59oq1dcw.cs(35,113): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiy_78se8.cs(28,263): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        int vowelsCount = vowels.Length;\n\
    \        int vowelsCountFromRight = word.Length - vowelsCount;\n        int vowelsCountFromLeft\
    \ = vowelsCount - 1;\n        int vowelsCountFromLeftToRight = vowelsCountFromRight\
    \ - vowelsCountFromLeft;\n        int vowelsCountFromRightToLeft = vowelsCountFromLeft\
    \ - vowelsCountFromRight;\n        int vowelsCountFromLeftToRightToLeft = vowelsCountFromRightToLeft\
    \ - vowelsCountFromLeftToRight;\n        int vowelsCountFromRightToLeftToRight\
    \ = vowelsCountFromLeftToRight - vowelsCountFromRightToLeft;\n        int vowelsCountFromLeftToRightToLeftToRight\
    \ = vowelsCountFromRightToLeftToRight - vowelsCountFromLeftToRightToLeft;\n  \
    \      int vowelsCountFromRightToLeftToLeftToRight = vowelsCountFromLeftToRightToLeftToRight\
    \ - vowelsCountFromRightToLeftToLeft;\n        int vowelsCountFromLeftToRightToLeftToRightToLeft\
    \ = vowelsCountFromRightToLeftToLeftToRightToLeft - vowelsCountFromLeftToRightToLeftToRight;\n\
    \        int vowelsCountFromRightToLeftToLeftToRightToLeftToRight = vowelsCountFromLeftToRightToLeftToRightToLeftToRight\
    \ - vowelsCountFromRightToLeftToLeftToRightToLeft;\n        int vowelsCountFromRightToLeftToLeftToRightToLeftToRightToLeft\
    \ = vowelsCountFromRightToLeftToLeftToRightToLeftToRightToLeft - vowelsCountFromRightToLeftToLeftToRightToLeftToRight;\n\
    \        int vowelsCountFromRightToLeftToLeftToRightToLeftToRightToLeftToRight\
    \ = vowelsCountFromRightToLeftToLeftToRightToLeftToRightToLeftToRight - vowelsCountFromRightToLeftToLeftToRightToLeftToRightToLeftToRightToLeft;\n\
    \        int vowelsCountFromRightToLeftToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeft\
    \ = vowelsCountFromRightToLeftToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeftToRightToLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt_syn1sw.cs(30,314): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_j38xf4.cs(34,80): error CS1001: Identifier expected

    /tmp/tmpi_j38xf4.cs(34,80): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpperLower.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpperUpperLower.ToUpper();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpperUpperLower.ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpperUpperUpperLower.ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpperUpperUpperLower.ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpperUpperUpperUpperLower.ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpperUpperUpperUpperLower.ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpperUpperUpperUpperUpperLower.ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_qi7vck.cs(39,43): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4oyg_yra.cs(28,247): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCap\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUp = vowelsAllCap.ToUpper();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUp\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7_16kywf.cs(44,30): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleRightMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleRightMiddleMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleRightMiddleMiddleRightMiddleRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleRightMiddleMiddleRightMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleRightMiddleMiddleRightMiddleRightMiddleRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleMiddleRightMiddleMiddleRightMiddleRightMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6lkfz69t.cs(35,164): error CS1525: Invalid expression term ''}''

    /tmp/tmp6lkfz69t.cs(35,164): error CS1026: ) expected

    /tmp/tmp6lkfz69t.cs(35,164): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper;\n    \
    \    string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCap\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppsildga1.cs(39,90): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCap\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n        string vowelsAllCapAll\
    \ = vowelsAllCap.ToUpper() + vowelsAllCap.ToLower();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2u4fnq5f.cs(43,62): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothRightBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothLeftRightBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqs3166qb.cs(29,135): error CS1001: Identifier expected

    /tmp/tmpqs3166qb.cs(29,135): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiy_78se8.cs(28,263): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsAll = vowelsLeft + vowelsRight;\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpng3r5zft.cs(19,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(20,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(24,16): error CS0128: A local variable or function named ''vowelsAllLower''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(25,16): error CS0128: A local variable or function named ''vowelsAllUpper''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(26,16): error CS0128: A local variable or function named ''vowelsAllLower''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(27,16): error CS0128: A local variable or function named ''vowelsAllUpper''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(28,16): error CS0128: A local variable or function named ''vowelsAllLower''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(29,16): error CS0128: A local variable or function named ''vowelsAllUpper''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(30,16): error CS0128: A local variable or function named ''vowelsAllLower''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(31,16): error CS0128: A local variable or function named ''vowelsAllUpper''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(32,16): error CS0128: A local variable or function named ''vowelsAllLower''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(33,16): error CS0128: A local variable or function named ''vowelsAllUpper''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(34,16): error CS0128: A local variable or function named ''vowelsAllLower''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(35,16): error CS0128: A local variable or function named ''vowelsAllUpper''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(36,16): error CS0128: A local variable or function named ''vowelsAllLower''
    is already defined in this scope

    /tmp/tmpng3r5zft.cs(37,'
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpje439fij.cs(41,82): error CS1026: ) expected

    /tmp/tmpje439fij.cs(41,82): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = word.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowelsCount\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzzxtt1iw.cs(47,50): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothUpperLower\
    \ = vowelsBothBothUpper.Replace(vowelsBothBothLower, \"\");\n        string vowelsBothBothLowerUpper\
    \ = vowelsBothBothLowerUpper.Replace(vowelsBothBothUpper, \"\");\n        string\
    \ vowelsBothBothLowerUpperLower = vowelsBothBothLowerUpperLower.Replace(vowelsBothBothUpperLower,\
    \ \"\");\n        string vowelsBothBothLowerUpperLowerUpper = vowelsBothBothLowerUpperLowerUpper.Replace(vowelsBothBothLowerUpperLower,\
    \ \"\");\n        string vowelsBothBothLowerUpperLowerUpperLower = vowelsBothBothLowerUpperLowerUpperLower.Replace(vowelsBothBothLowerUpperLower,\
    \ \"\");\n        string vowelsBothBothLowerUpperLowerUpperLowerUpper = vowelsBothBothLowerUpperLowerUpperLowerUpper.Replace(vowelsBothBothLowerUpperLowerUpperLower,\
    \ \"\");\n        string vowelsBothBothLowerUpperLowerUpperLowerUpperLower = vowelsBothBothLowerUpperLowerUpperLowerUpperLower.Replace(vowelsBothBothLowerUpperLowerUpperLowerUpperLower,\
    \ \"\");\n        string vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpper.Replace(vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpperLower,\
    \ \"\");\n        string vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpperLower.Replace(vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper,\
    \ \"\");\n        string vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper.Replace(vowelsBothBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl7_2smne.cs(34,215): error CS1026: ) expected

    /tmp/tmpl7_2smne.cs(34,215): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapital = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower() + vowelsBothCapitalLower.ToUpper();\n\
    \        string vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower()\
    \ + vowelsBothCapitalLower.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower() + vowelsBothCapitalLower.ToUpper();\n   \
    \     string vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower() +\
    \ vowelsBothCapitalLower.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower() + vowelsBothCapitalLower.ToUpper();\n   \
    \     string vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower() +\
    \ vowelsBothCapitalLower.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower() + vowelsBothCapitalLower.ToUpper();\n   \
    \     string vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower() +\
    \ vowelsBothCapitalLower.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower() + vowelsBothCapitalLower.ToUpper();\n   \
    \     string vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower() +\
    \ vowelsBothCapitalLower.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower() + vowelsBothCapitalLower.ToUpper();\n   \
    \     string vowelsBothCapitalUpperLower = \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphb0wvxk6.cs(36,45): error CS1525: Invalid expression term ''}''

    /tmp/tmphb0wvxk6.cs(36,45): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLow\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvfem_w_x.cs(42,41): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 256);\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbq8m9mhd.cs(28,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(29,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(30,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(31,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(32,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleLeft''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleRight''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleMiddleMiddleMiddle''
    is already defined in this scope

    /tmp/tmpbq8m9mhd.cs(15,26): error CS0161: ''Problem.GetClosestVowel(string)'
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowelsMiddleLeftLeft.Substring(vowelsMiddleLeftLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightLeft = vowelsMiddleLeftRightLeft.Substring(vowelsMiddleLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightRight = vowelsMiddleRightLeftRight.Substring(vowelsMiddleRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightLeftRight = vowelsMiddleLeftLeftRightLeft.Substring(vowelsMiddleLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightRightLeft = vowelsMiddleRightLeftRightRight.Substring(vowelsMiddleRightLeftRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightLeftRightRight = vowelsMiddleLeftLeftRightLeftRight.Substring(vowelsMiddleLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightRightLeftRight = vowelsMiddleRightLeftRightRightLeft.Substring(vowelsMiddleRightLeftRightRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightLeftRightRightLeft = vowelsMiddleLeftLeftRightLeftRightRight.Substring(vowelsMiddleLeftRightLeftRightRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightRightLeftRightRight = vowelsMiddleRightLeftRightRightLeftRight.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpscawtca3.cs(35,108): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAll = vowels.Substring(0, vowels.Length);\n    \
    \    string vowelsAllUpper = vowels.ToUpper();\n        string vowelsAllLower\
    \ = vowels.ToLower();\n        string vowelsAllCaps = vowels.ToUpper().ToLower();\n\
    \        string vowelsAllCapsLower = vowels.ToUpper().ToLower();\n        string\
    \ vowelsAllCapsUpper = vowels.ToUpper().ToUpper();\n        string vowelsAllCapsAll\
    \ = vowels.ToUpper().ToUpper().ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowels.ToUpper().ToUpper().ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowels.ToUpper().ToUpper().ToLower();\n        string vowelsAllCapsAllLowerUpper\
    \ = vowels.ToUpper().ToUpper().ToUpper().ToLower();\n        string vowelsAllCapsAllLowerUpperUpper\
    \ = vowels.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n        string\
    \ vowelsAllCapsAllLowerUpperUpperUpper = vowels.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperUpperUpperUpper = vowels.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperUpperUpperUpperUpper = vowels.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperUpperUpperUpperUpper = vowels.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperUpperUpperUpperUpperUpper = vowels.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp64rya2r0.cs(37,22): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCap\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUp = vowelsAllCap.ToUpper();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpanhxd4bo.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_j38xf4.cs(34,80): error CS1001: Identifier expected

    /tmp/tmpi_j38xf4.cs(34,80): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprleg7w06.cs(47,45): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsCount = word.ToUpper().ToCharArray().Where(c\
    \ => vowels.Contains(c.ToString())).Count();\n        int vowelsCountInWord =\
    \ word.ToUpper().ToCharArray().Count(c => vowels.Contains(c.ToString()));\n  \
    \      int vowelsCountInWordInWord = word.ToUpper().ToCharArray().Count(c => vowels.Contains(c.ToString())\
    \ && word.ToUpper().ToCharArray().Count(c2 => vowels.Contains(c2.ToString())));\n\
    \        int vowelsCountInWordInWordInWord = word.ToUpper().ToCharArray().Count(c\
    \ => vowels.Contains(c.ToString()) && word.ToUpper().ToCharArray().Count(c2 =>\
    \ vowels.Contains(c2.ToString())) && word.ToUpper().ToCharArray().Count(c3 =>\
    \ vowels.Contains(c3.ToString())));\n        int vowelsCountInWordInWordInWordInWord\
    \ = word.ToUpper().ToCharArray().Count(c => vowels.Contains(c.ToString()) && word.ToUpper().ToCharArray().Count(c2\
    \ => vowels.Contains(c2.ToString())) && word.ToUpper().ToCharArray().Count(c3\
    \ => vowels.Contains(c3.ToString())) && word.ToUpper().ToCharArray().Count(c4\
    \ => vowels.Contains(c4.ToString())));\n        int vowelsCountInWordInWordInWordInWordInWord\
    \ = word.ToUpper().ToCharArray().Count(c => vowels.Contains(c.ToString()) && word.ToUpper().ToCharArray().Count(c2\
    \ => vowels.Contains(c2.ToString())) && word.ToUpper().ToCharArray().Count(c3\
    \ => vowels.Contains(c3.ToString())) && word.ToUpper().ToCharArray().Count(c4\
    \ => vowels.Contains(c4.ToString())) && word.ToUpper().ToCharArray().Count(c5\
    \ => vowels.Contains(c5.ToString())));\n        int vowelsCountInWordInWordInWordInWordInWordInWord\
    \ = word.ToUpper().ToCharArray().Count(c => vowels.Contains(c.ToString()) && word.ToUpper().ToCharArray().Count(c2\
    \ => vowels.Contains(c2.ToString())) && word.ToUpper().ToCharArray().Count(c3\
    \ => vowels.Contains(c3.ToString())) && word.ToUpper().ToCharArray().Count(c4\
    \ => vowels.Contains(c4.ToString())) && word.ToUpper().ToCharArray().Count(c\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqawq1bnm.cs(23,400): error CS1026: ) expected

    /tmp/tmpqawq1bnm.cs(23,400): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5ajnxbf.cs(40,56): error CS1001: Identifier expected

    /tmp/tmp_5ajnxbf.cs(40,56): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n     \
    \   string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLower = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLower\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3ow5jxir.cs(37,72): error CS1002: ; expected

    '
  timestamp: 1659976586
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowel\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphbj9on08.cs(50,21): error CS1002: ; expected

    '
  timestamp: 1659976585
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    public static string GetClosestVowel(string word) {\n  \
    \      string vowels = \"aeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk2tb0pby.cs(40,68): error CS1525: Invalid expression term ''}''

    /tmp/tmpk2tb0pby.cs(40,68): error CS1026: ) expected

    /tmp/tmpk2tb0pby.cs(40,68): error CS1002: ; expected

    '
  timestamp: 1659976585

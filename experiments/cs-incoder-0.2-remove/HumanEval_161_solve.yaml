name: HumanEval_161_solve
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse\
  \ its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n\
  \    // If the string contains no letters, reverse the string.\n    // The function\
  \ should return the resulted string.\n    // Examples\n    public static string\
  \ Solve(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((\"\
  AsDf\")).Equals((\"aSdF\")));\n    Debug.Assert(Solve((\"1234\")).Equals((\"4321\"\
  )));\n    Debug.Assert(Solve((\"ab\")).Equals((\"AB\")));\n    Debug.Assert(Solve((\"\
  #a@C\")).Equals((\"#A@c\")));\n    Debug.Assert(Solve((\"#AsdfW^45\")).Equals((\"\
  #aSDFw^45\")));\n    Debug.Assert(Solve((\"#6@2\")).Equals((\"2@6#\")));\n    Debug.Assert(Solve((\"\
  #$a^D\")).Equals((\"#$A^d\")));\n    Debug.Assert(Solve((\"#ccc\")).Equals((\"#CCC\"\
  )));\n    }\n\n}\n"
completions: ["        string result = \"\";\n        foreach (char c in s) {\n  \
    \          if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        char[] arr = s.ToCharArray();\n        string\
    \ result = \"\";\n        foreach (char c in arr) {\n            if (Char.IsLetter(c))\
    \ {\n                string temp = Char.ToUpper(c);\n                result +=\
    \ temp;\n            } else {\n                result += c;\n            }\n \
    \       }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in s) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += c;\n  \
    \          }\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in s) {\n            if (char.IsLetter(c)) {\n    \
    \            result += char.ToUpper(c);\n            } else {\n              \
    \  result += c;\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += c;\n            }\n        }\n        return result;", " \
    \       string result = \"\";\n        foreach (char c in s) {\n            if\
    \ (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += (Char.ToUpper(c));\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        char[] chars = s.ToCharArray();\n        string\
    \ result = \"\";\n        foreach (char c in chars) {\n            if (char.IsLetter(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in s) {\n\
    \            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n\
    \        string result = \"\";\n        foreach (char c in chars) {\n        \
    \    if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n   \
    \         } else {\n                result += char.ToLower(c);\n            }\n\
    \        }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in s) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += c;\n  \
    \          }\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in s) {\n            if (char.IsLetter(c)) {\n    \
    \            result += char.ToUpper(c);\n            } else {\n              \
    \  result += c;\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += c;\n            }\n        }\n        return result;", " \
    \       string result = \"\";\n        foreach (char c in s) {\n            if\
    \ (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        char[] chars = s.ToCharArray();\n        char[]\
    \ reversed = new char[chars.Length];\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i] == char.ToUpper(chars[i])) {\n            \
    \    reversed[i] = char.ToUpper(chars[i]);\n            } else {\n           \
    \     reversed[i] = char.ToLower(chars[i]);\n            }\n        }\n      \
    \  return new string(reversed);", "        char[] chars = s.ToCharArray();\n \
    \       char[] reversed = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            if (chars[i].ToString().Length > 0) {\n  \
    \              reversed[chars.Length - i - 1] = chars[i];\n            }\n   \
    \     }\n        return new string(reversed);", "        string result = \"\"\
    ;\n        foreach (char c in s) {\n            if (char.IsLetter(c)) {\n    \
    \            result += char.ToUpper(c);\n            } else {\n              \
    \  result += c;\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += c;\n            }\n        }\n        return result;", " \
    \       char[] chars = s.ToCharArray();\n        char[] reversed = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] ==\
    \ ' ') {\n                reversed[i] = ' ';\n            } else {\n         \
    \       char c = chars[i];\n                bool isUpper = char.IsUpper(c);\n\
    \                bool isLower = char.IsLower(c);\n                if (isUpper\
    \ != isLower) {\n                    reversed[i] = (char)(isUpper ? char.ToUpper(c)\
    \ : char.ToLower(c));\n                } else {\n                    reversed[i]\
    \ = c;\n                }\n            }\n        }\n        return new string(reversed);",
  "        string result = \"\";\n        foreach (char c in s) {\n            if\
    \ (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        char[] chars = s.ToCharArray();\n        char[]\
    \ reverse = new char[chars.Length];\n        bool flag = false;\n        for (int\
    \ i = 0; i < chars.Length; i++) {\n            if (chars[i] == char.ToUpper(chars[i]))\
    \ {\n                reverse[i] = char.ToLower(chars[i]);\n                flag\
    \ = true;\n            }\n            else if (chars[i] == char.ToLower(chars[i]))\
    \ {\n                reverse[i] = char.ToUpper(chars[i]);\n                flag\
    \ = true;\n            }\n            else {\n                reverse[i] = chars[i];\n\
    \            }\n        }\n        if (flag == false) {\n            reverse =\
    \ reverse.Reverse();\n        }\n        return new string(reverse);", "     \
    \   string result = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += c;\n            }\n        }\n        return result;", " \
    \       string result = \"\";\n        foreach (char c in s) {\n            if\
    \ (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        char[] chars = s.ToCharArray();\n        string\
    \ result = \"\";\n        foreach (char c in chars) {\n            if (char.IsLetter(c))\
    \ {\n                string temp = char.ToUpper(c);\n                result +=\
    \ temp;\n            } else {\n                result += c;\n            }\n \
    \       }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in s) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += c;\n  \
    \          }\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in s) {\n            if (char.IsLetter(c)) {\n    \
    \            result += char.ToUpper(c);\n            } else {\n              \
    \  result += c;\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += c;\n            }\n        }\n        return result;", " \
    \       string result = \"\";\n        foreach (char c in s) {\n            if\
    \ (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += (char)Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += (char)char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += (Char.ToUpper(c));\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (Char.IsLetter(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += (Char.ToUpper(c));\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in s) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_135_can_arrange
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function which returns the largest index of an element\
  \ which\n    // is not greater than or equal to the element immediately preceding\
  \ it. If\n    // no such element exists then return -1. The given array will not\
  \ contain\n    // duplicate values.\n    // Examples:\n    public static long CanArrange(List<long>\
  \ arr) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
  \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
  \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L,\
  \ (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L,\
  \ (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
  \ List<long>())) == (-1L));\n    }\n\n}\n"
completions: ["        long maxIndex = -1;\n        long maxValue = arr[0];\n    \
    \    for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = -1;\n        long currentValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > currentValue)\
    \ {\n                currentIndex = i;\n                currentValue = arr[i];\n\
    \            }\n        }\n        if (currentIndex > maxIndex) {\n          \
    \  maxIndex = currentIndex;\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue =\
    \ -1;\n        foreach (long i in arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = i;\n                currentValue = i;\n  \
    \          }\n            if (currentValue > i) {\n                currentIndex\
    \ = i;\n                currentValue = i;\n            }\n            if (currentIndex\
    \ > maxIndex) {\n                maxIndex = currentIndex;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long max = arr.Max();\n        long min =\
    \ 0;\n        long maxIndex = -1;\n        foreach (long i in arr) {\n       \
    \     if (i > max) {\n                max = i;\n                maxIndex = i;\n\
    \            }\n            if (i < min) {\n                min = i;\n       \
    \     }\n        }\n        if (maxIndex == -1) {\n            return -1;\n  \
    \      }\n        if (maxIndex < min) {\n            return -1;\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxIndex = currentIndex;\n                maxValue = value;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] <= max) {\n           \
    \     max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ arr.First();\n        long largestIndex = 0;\n        foreach (long i in arr)\
    \ {\n            if (i > largest) {\n                largest = i;\n          \
    \      largestIndex = i;\n            }\n        }\n        return largestIndex;",
  "        long largest = arr.First();\n        long smallest = arr.First();\n   \
    \     foreach (long i in arr) {\n            if (i > largest) {\n            \
    \    largest = i;\n            }\n            if (i < smallest) {\n          \
    \      smallest = i;\n            }\n        }\n        if (largest < smallest)\
    \ {\n            return -1;\n        }\n        return largest;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = arr[i];\n            }\n        }\n       \
    \ return maxIndex;", "        long max = arr.First();\n        long maxIndex =\
    \ arr.IndexOf(max);\n        for (int i = 1; i < arr.Count; i++) {\n         \
    \   if (arr[i] > max) {\n                max = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        long currentValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = arr[i];\n            }\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long max = arr.Max();\n\
    \        long maxIndex = arr.IndexOf(max);\n        if (maxIndex == -1) return\
    \ -1;\n        long minIndex = arr.IndexOf(arr.Min());\n        if (minIndex ==\
    \ -1) return -1;\n        if (maxIndex < minIndex) return -1;\n        long mid\
    \ = maxIndex + (maxIndex - minIndex) / 2;\n        if (arr.Contains(mid)) return\
    \ mid;\n        return CanArrange(arr.Skip(maxIndex + 1).Take(arr.Count - maxIndex\
    \ - 1));", "        long largest = arr.First();\n        long index = 0;\n   \
    \     for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                index = i;\n                largest = arr[i];\n         \
    \   }\n        }\n        return index;", "        long largest = arr.First();\n\
    \        long index = arr.IndexOf(largest);\n        long previous = arr.ElementAt(index\
    \ - 1);\n        long current = arr.ElementAt(index);\n        if (current < previous)\
    \ {\n            return -1;\n        }\n        return index;", "        long\
    \ maxIndex = -1;\n        long currentMax = arr[0];\n        for (int i = 1; i\
    \ < arr.Count; i++) {\n            if (arr[i] > currentMax) {\n              \
    \  currentMax = arr[i];\n                maxIndex = i;\n            }\n      \
    \  }\n        return maxIndex;", "        long largest = arr.First();\n      \
    \  long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n          \
    \  if (arr[i] > largest) {\n                index = i;\n                largest\
    \ = arr[i];\n            }\n        }\n        return index;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long max = arr.First();\n        long maxIndex = -1;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = arr.IndexOf(max);\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long previous = arr.First();\n        foreach (long i in arr) {\n    \
    \        if (i > largest) {\n                largest = i;\n            }\n   \
    \         if (i < previous) {\n                previous = i;\n            }\n\
    \        }\n        return largest;", "        long largest = arr.First();\n \
    \       long index = -1;\n        for (int i = 1; i < arr.Count; i++) {\n    \
    \        if (arr[i] <= largest) {\n                index = i;\n              \
    \  largest = arr[i];\n            }\n        }\n        return index;", "    \
    \    long largest = arr.First();\n        long index = 0;\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] >= largest) {\n         \
    \       index = i;\n                largest = arr[i];\n            }\n       \
    \ }\n        return index;", "        long largest = arr.First();\n        long\
    \ index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > largest) {\n                index = i;\n                largest = arr[i];\n\
    \            }\n        }\n        return index;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long current = arr.First();\n    \
    \    long previous = arr.First();\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > largest) {\n                largest = current;\n\
    \                previous = current;\n                current = arr[i];\n    \
    \        } else if (arr[i] < current) {\n                previous = current;\n\
    \                current = arr[i];\n            }\n        }\n        if (current\
    \ > largest) {\n            return -1;\n        } else {\n            return previous;\n\
    \        }", "        long largest = arr.First();\n        long index = -1;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                index = i;\n                largest = arr[i];\n         \
    \   }\n        }\n        return index;", "        long largest = arr.First();\n\
    \        long index = arr.IndexOf(largest);\n        long previous = arr.ElementAtOrDefault(index\
    \ - 1);\n        if (previous >= largest) {\n            return -1;\n        }\n\
    \        return index;", "        long largest = arr.First();\n        long index\
    \ = arr.IndexOf(largest);\n        if (index == 0) return -1;\n        long previous\
    \ = arr[index - 1];\n        if (previous >= largest) return -1;\n        return\
    \ index;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n   \
    \     for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long max = arr.Max();\n        long maxIndex\
    \ = arr.FindIndex(x => x <= max);\n        if (maxIndex == -1)\n            return\
    \ -1;\n        else\n            return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = arr.First();\n        long currentValue = arr.First();\n\
    \        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentIndex = value;\n                currentValue = value;\n\
    \            }\n        }\n        if (currentIndex > maxIndex) {\n          \
    \  maxIndex = currentIndex;\n        }\n        return maxIndex;", "        long\
    \ max = arr.Max();\n        long maxIndex = arr.FindIndex(x => x <= max);\n  \
    \      if (maxIndex == -1) return -1;\n        return maxIndex;", "        long\
    \ largest = arr.First();\n        long largestIndex = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > largest) {\n                largest = i;\n\
    \                largestIndex = i;\n            }\n        }\n        return largestIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ arr.First();\n        long smallest = arr.Last();\n        long largestIndex\
    \ = 0;\n        long smallestIndex = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] < smallest || arr[i] > largest) {\n         \
    \       largestIndex = i;\n                smallestIndex = i;\n            }\n\
    \            else if (arr[i] > smallest && arr[i] < largest) {\n             \
    \   largestIndex = i;\n            }\n            else if (arr[i] < smallest &&\
    \ arr[i] > largest) {\n                smallestIndex = i;\n            }\n   \
    \     }\n        if (smallestIndex == largestIndex) {\n            return -1;\n\
    \        }\n        return largestIndex;", "        long maxIndex = -1;\n    \
    \    long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                maxIndex = i;\n       \
    \         maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = value;\n            }\n            if (value >\
    \ previousValue) {\n                previousValue = value;\n            }\n  \
    \          if (value > currentValue && value > previousValue) {\n            \
    \    maxIndex = currentIndex;\n            }\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long current = arr.First();\n    \
    \    long index = 0;\n        foreach (long i in arr) {\n            if (i > largest)\
    \ {\n                largest = i;\n                index = current;\n        \
    \    }\n            current = i;\n        }\n        return index;", "       \
    \ long max = arr.First();\n        long min = arr.Last();\n        long maxIndex\
    \ = -1;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ < min) {\n                min = arr[i];\n                maxIndex = i;\n   \
    \         }\n            if (arr[i] > max) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.ElementAtOrDefault(index - 1);\n        if (previous\
    \ >= largest) {\n            return -1;\n        }\n        return index;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long smallest = arr.First();\n        foreach (long i in arr) {\n    \
    \        if (i > largest) {\n                largest = i;\n            }\n   \
    \         if (i < smallest) {\n                smallest = i;\n            }\n\
    \        }\n        return arr.IndexOf(largest);", "        long largest = arr.First();\n\
    \        long index = arr.IndexOf(largest);\n        long previous = arr.ElementAt(index\
    \ - 1);\n        if (previous >= largest) {\n            return -1;\n        }\n\
    \        return index;", "        long largest = arr.First();\n        long smallest\
    \ = arr.Last();\n        long largestIndex = 0;\n        long smallestIndex =\
    \ arr.Count - 1;\n        for (int i = 1; i < arr.Count; i++) {\n            if\
    \ (arr[i] < smallest) {\n                smallest = arr[i];\n                smallestIndex\
    \ = i;\n            }\n            if (arr[i] > largest) {\n                largest\
    \ = arr[i];\n                largestIndex = i;\n            }\n        }\n   \
    \     if (largest == smallest) {\n            return -1;\n        }\n        return\
    \ largestIndex;", "        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.ElementAt(index - 1);\n        if (previous >= largest)\
    \ {\n            return -1;\n        }\n        return index;", "        long\
    \ largest = arr.First();\n        long largestIndex = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > largest) {\n                largest = i;\n\
    \                largestIndex = i;\n            }\n        }\n        return largestIndex;",
  "        long largest = arr.First();\n        long index = 0;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n        \
    \        index = i;\n                largest = arr[i];\n            }\n      \
    \  }\n        return index;", "        long max = arr.Max();\n        long maxIndex\
    \ = arr.FindIndex(x => x <= max);\n        if (maxIndex == -1)\n            return\
    \ -1;\n        return maxIndex - 1;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long currentIndex = 0;\n        long largest\
    \ = arr.First();\n        foreach (long i in arr) {\n            if (i > largest)\
    \ {\n                currentIndex = largest;\n                largest = i;\n \
    \           }\n            else if (i < currentIndex) {\n                currentIndex\
    \ = i;\n            }\n        }\n        if (largest != arr.First()) {\n    \
    \        maxIndex = currentIndex;\n        }\n        return maxIndex;", "   \
    \     long maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxValue = value;\n                maxIndex = currentIndex;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long index = 0;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n        \
    \        index = i;\n                largest = arr[i];\n            }\n      \
    \  }\n        return index;", "        long max = arr.Max();\n        long min\
    \ = arr.Min();\n        long index = -1;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] >= min && arr[i] <= max) {\n                index\
    \ = i;\n                break;\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = arr.IndexOf(largest);\n        if (index > 0) {\n       \
    \     long nextLargest = arr[index - 1];\n            if (nextLargest >= largest)\
    \ {\n                return index;\n            }\n        }\n        return -1;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long largest = arr.First();\n        long\
    \ index = arr.IndexOf(largest);\n        long previous = arr.ElementAt(index -\
    \ 1);\n        if (previous >= largest) {\n            return -1;\n        }\n\
    \        return index;", "        long max = arr.First();\n        long maxIndex\
    \ = arr.IndexOf(max);\n        for (int i = 1; i < arr.Count; i++) {\n       \
    \     if (arr[i] > max) {\n                max = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long max = arr.First();\n        long maxIndex = -1;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long index = arr.IndexOf(largest);\n        if (index != -1) {\n    \
    \        while (index > 0 && arr[index - 1] >= largest) {\n                index--;\n\
    \            }\n        }\n        return index;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long index = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > largest) {\n                index = arr.IndexOf(largest);\n\
    \                largest = i;\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long smallest = arr.First();\n        long largestIndex = -1;\n      \
    \  long smallestIndex = -1;\n        foreach (long i in arr) {\n            if\
    \ (i <= smallest && i != largest) {\n                smallest = i;\n         \
    \       smallestIndex = i;\n            }\n            if (i >= largest && i !=\
    \ smallest) {\n                largest = i;\n                largestIndex = i;\n\
    \            }\n        }\n        return largestIndex;", "        long max =\
    \ arr.Max();\n        long min = arr.Min();\n        long index = -1;\n      \
    \  foreach (long i in arr) {\n            if (i > max && i != min) {\n       \
    \         index = i;\n                break;\n            }\n        }\n     \
    \   return index;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long smallest = arr.First();\n        long largestIndex = 0;\n      \
    \  long smallestIndex = 0;\n        for (int i = 1; i < arr.Count; i++) {\n  \
    \          if (arr[i] < smallest) {\n                smallest = arr[i];\n    \
    \            smallestIndex = i;\n            }\n            if (arr[i] > largest)\
    \ {\n                largest = arr[i];\n                largestIndex = i;\n  \
    \          }\n        }\n        if (largest == smallest) {\n            return\
    \ -1;\n        }\n        return largestIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        long currentValue = arr[0];\n       \
    \ long maxValue = arr[0];\n        foreach (long value in arr) {\n           \
    \ if (value > currentValue) {\n                currentValue = value;\n       \
    \         currentIndex = maxIndex;\n            }\n            if (value > maxValue)\
    \ {\n                maxValue = value;\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ arr.First();\n        long previous = arr.First();\n        foreach (long i\
    \ in arr) {\n            if (i > largest) {\n                largest = i;\n  \
    \          }\n            if (i < previous) {\n                previous = i;\n\
    \            }\n        }\n        return previous;", "        long maxIndex =\
    \ -1;\n        long currentIndex = -1;\n        long currentMax = -1;\n      \
    \  foreach (long i in arr) {\n            if (currentIndex == -1) {\n        \
    \        currentIndex = i;\n                currentMax = i;\n            }\n \
    \           if (currentIndex > i) {\n                currentMax = i;\n       \
    \         currentIndex = i;\n            }\n        }\n        if (currentIndex\
    \ != -1) {\n            currentMax = currentIndex;\n        }\n        return\
    \ currentMax;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long smallest = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = i;\n            }\n  \
    \          if (i < smallest) {\n                smallest = i;\n            }\n\
    \        }\n        return largest;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long largest = arr.First();\n        long smallest = arr.First();\n  \
    \      foreach (long i in arr) {\n            if (i > largest) {\n           \
    \     largest = i;\n            }\n            if (i < smallest) {\n         \
    \       smallest = i;\n            }\n        }\n        if (largest == smallest)\
    \ {\n            return -1;\n        }\n        return largest;", "        long\
    \ largest = arr.First();\n        long smallest = arr.First();\n        foreach\
    \ (long i in arr) {\n            if (i > largest) {\n                largest =\
    \ i;\n            }\n            if (i < smallest) {\n                smallest\
    \ = i;\n            }\n        }\n        if (largest == smallest) {\n       \
    \     return -1;\n        }\n        return largest;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > max) {\n                max = arr[i];\n            \
    \    maxIndex = i;\n            }\n        }\n        return maxIndex;", "   \
    \     long max = arr.Max();\n        long min = 0;\n        long maxIndex = 0;\n\
    \        foreach (long i in arr) {\n            if (i <= max) {\n            \
    \    max = i;\n                maxIndex = i;\n            }\n        }\n     \
    \   return maxIndex;", "        long largest = arr.First();\n        long index\
    \ = 0;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ >= largest) {\n                index = i;\n                largest = arr[i];\n\
    \            }\n        }\n        return index;", "        long largest = arr.First();\n\
    \        long index = arr.IndexOf(largest);\n        long previous = arr.Last();\n\
    \        while (index > 0) {\n            long current = arr[index - 1];\n   \
    \         if (current > largest) {\n                largest = current;\n     \
    \           index = arr.IndexOf(largest);\n            }\n            index--;\n\
    \        }\n        return largest;", "        long max = arr.Max();\n       \
    \ long maxIndex = -1;\n        for (int i = 0; i < arr.Count; i++) {\n       \
    \     if (arr[i] <= max) {\n                maxIndex = i;\n                break;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.Max();\n        long min = arr.Min();\n        long maxIndex\
    \ = arr.IndexOf(max);\n        long minIndex = arr.IndexOf(min);\n        long\
    \ maxIndexPrev = arr.IndexOf(max, maxIndex - 1);\n        long minIndexPrev =\
    \ arr.IndexOf(min);\n        if (maxIndexPrev < minIndexPrev) {\n            return\
    \ -1;\n        }\n        if (maxIndexPrev == minIndexPrev) {\n            return\
    \ maxIndexPrev;\n        }\n        if (maxIndexPrev > minIndexPrev) {\n     \
    \       return maxIndexPrev;\n        }\n        return minIndexPrev;", "    \
    \    long max = arr.Max();\n        long maxIndex = -1;\n        for (int i =\
    \ 0; i < arr.Count; i++) {\n            if (arr[i] <= max) {\n               \
    \ maxIndex = i;\n                break;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long smallest = arr.First();\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] < smallest && arr[i] > largest) {\n         \
    \       smallest = arr[i];\n            }\n            if (arr[i] > smallest &&\
    \ arr[i] < largest) {\n                largest = arr[i];\n            }\n    \
    \    }\n        return largest;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        long currentValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > currentValue) {\n              \
    \  currentValue = arr[i];\n                maxIndex = i;\n            }\n    \
    \    }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentIndex = -1;\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > currentValue) {\n                currentIndex = i;\n                currentValue\
    \ = arr[i];\n            }\n            if (arr[i] < currentValue && maxIndex\
    \ < currentIndex) {\n                maxIndex = currentIndex;\n              \
    \  maxValue = currentValue;\n            }\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long current = arr.First();\n    \
    \    foreach (long i in arr.Skip(1))\n            if (i > largest)\n         \
    \       largest = i;\n            else\n                current = i;\n       \
    \ return largest;", "        long largest = arr.First();\n        long index =\
    \ arr.IndexOf(largest);\n        long previous = arr.ElementAtOrDefault(index\
    \ - 1);\n        if (previous >= largest) {\n            return -1;\n        }\n\
    \        return index;", "        long largest = arr.First();\n        long index\
    \ = 0;\n        foreach (long i in arr) {\n            if (i > largest) {\n  \
    \              index = arr.IndexOf(largest);\n                largest = i;\n \
    \           }\n        }\n        return index;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        long currentValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxIndex = i;\n                maxValue = arr[i];\n         \
    \   }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex =\
    \ -1;\n        long currentValue = arr[0];\n        foreach (long value in arr)\
    \ {\n            if (currentValue < value) {\n                currentIndex = currentValue;\n\
    \                currentValue = value;\n            }\n            if (currentValue\
    \ > maxValue) {\n                maxIndex = currentIndex;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long max = arr.Max();\n        long maxIndex = -1;\n        for (int i =\
    \ 0; i < arr.Count; i++) {\n            if (arr[i] <= max) {\n               \
    \ maxIndex = i;\n                break;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long currentIndex = arr.Count\
    \ - 1;\n        while (currentIndex >= 0) {\n            if (arr[currentIndex]\
    \ <= arr[currentIndex - 1]) {\n                maxIndex = currentIndex;\n    \
    \        }\n            currentIndex--;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long smallest = arr.Last();\n        long largestIndex = 0;\n        long\
    \ smallestIndex = arr.Count - 1;\n        bool found = false;\n        for (int\
    \ i = 0; i < arr.Count; i++) {\n            if (arr[i] > largest && arr[i] < smallest)\
    \ {\n                largestIndex = i;\n                largest = arr[i];\n  \
    \              found = true;\n            } else if (arr[i] < smallest && arr[i]\
    \ > largest) {\n                smallestIndex = i;\n                smallest =\
    \ arr[i];\n                found = true;\n            }\n        }\n        if\
    \ (!found) {\n            return -1;\n        }\n        return largestIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n     \
    \       if (arr[i] > largest) {\n                index = i;\n                largest\
    \ = arr[i];\n            }\n        }\n        return index;", "        long largest\
    \ = arr.First();\n        long index = -1;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] >= largest) {\n                index = i;\n \
    \               largest = arr[i];\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = arr.IndexOf(largest);\n        long previous = arr.ElementAtOrDefault(index\
    \ - 1);\n        if (previous >= largest) {\n            return -1;\n        }\n\
    \        return index;", "        long max = arr.First();\n        long maxIndex\
    \ = -1;\n        foreach (long i in arr) {\n            if (i > max) {\n     \
    \           max = i;\n                maxIndex = arr.IndexOf(max);\n         \
    \   }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = arr.IndexOf(max);\n        long minIndex = arr.IndexOf(arr.First());\n\
    \        long minValue = arr.First();\n        long maxValue = arr.First();\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long max = arr.First();\n     \
    \   long maxIndex = 0;\n        for (int i = 1; i < arr.Count; i++) {\n      \
    \      if (arr[i] > max) {\n                max = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long largest\
    \ = arr.First();\n        long smallest = arr.First();\n        foreach (long\
    \ i in arr) {\n            if (i > largest) {\n                largest = i;\n\
    \            }\n            if (i < smallest) {\n                smallest = i;\n\
    \            }\n        }\n        return largest;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] >= maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = arr.First();\n        long previous = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < previous) {\n       \
    \         previous = i;\n            }\n        }\n        return previous;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long smallest = arr.First();\n        foreach (long i in arr) {\n    \
    \        if (i > largest) {\n                largest = i;\n            }\n   \
    \         if (i < smallest) {\n                smallest = i;\n            }\n\
    \        }\n        if (smallest == largest) {\n            return -1;\n     \
    \   }\n        return largest;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long maxValue = arr[0];\n        foreach (long value in arr) {\n\
    \            if (value > maxValue) {\n                maxValue = value;\n    \
    \            maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long max = arr.First();\n        long maxIndex = arr.IndexOf(max);\n \
    \       long minIndex = arr.IndexOf(arr.First());\n        if (maxIndex == minIndex)\
    \ {\n            return -1;\n        }\n        if (maxIndex == arr.Count - 1)\
    \ {\n            return arr.Count - 1;\n        }\n        if (minIndex == 0)\
    \ {\n            return 0;\n        }\n        long minValue = arr.ElementAt(minIndex);\n\
    \        long maxValue = arr.ElementAt(maxIndex);\n        if (minValue > maxValue)\
    \ {\n            return -1;\n        }\n        if (minValue == maxValue) {\n\
    \            return minIndex;\n        }\n        long midValue = minValue + (maxValue\
    \ - minValue) / 2;\n        long midIndex = arr.IndexOf(midValue);\n        if\
    \ (midIndex == maxIndex) {\n            return midIndex;\n        }\n        if\
    \ (midIndex == minIndex) {\n            return midIndex;\n        }\n        long\
    \ leftIndex = midIndex - 1;\n        long rightIndex = midIndex + 1;\n       \
    \ if (leftIndex >= 0) {\n            long leftValue = arr.ElementAt(leftIndex);\n\
    \            if (leftValue > maxValue) {\n                return -1;\n       \
    \     }\n            if (leftValue == maxValue) {\n                return leftIndex;\n\
    \            }\n        }\n        if (rightIndex < arr.Count - 1) {\n       \
    \     long rightValue = arr.ElementAt(rightIndex);\n            if (rightValue\
    \ > maxValue) {\n                return -1;\n            }\n            if (rightValue\
    \ == maxValue) {\n                return rightIndex;\n            }\n        }\n\
    \        return -1;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long current = arr.First();\n        long previous = arr.First();\n \
    \       foreach (long i in arr) {\n            if (i > largest) {\n          \
    \      largest = i;\n            }\n            if (i < current) {\n         \
    \       current = i;\n            }\n            if (i > previous) {\n       \
    \         previous = i;\n            }\n        }\n        return largest;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n                found = false;\n\
    \            }\n            else if (value == currentValue) {\n              \
    \  found = true;\n            }\n            else if (found) {\n             \
    \   maxIndex = Math.Max(maxIndex, currentIndex);\n                currentValue\
    \ = value;\n                currentIndex = value;\n                found = false;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ arr.First();\n        long index = -1;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] >= largest) {\n                index = i;\n \
    \               largest = arr[i];\n            }\n        }\n        return index;",
  "        long largest = arr.First();\n        long previous = arr.First();\n   \
    \     foreach (long i in arr) {\n            if (i > largest) {\n            \
    \    largest = i;\n            }\n            if (i < previous) {\n          \
    \      return -1;\n            }\n            previous = i;\n        }\n     \
    \   return largest;", "        long largest = arr.First();\n        long index\
    \ = 0;\n        foreach (long i in arr) {\n            if (i > largest) {\n  \
    \              index = arr.IndexOf(largest);\n                largest = i;\n \
    \           }\n        }\n        return index;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = 0;\n        long currentValue = arr[0];\n        long previousValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n                found = false;\n\
    \            } else if (value == currentValue && value > previousValue) {\n  \
    \              currentIndex = value;\n                found = true;\n        \
    \    }\n            previousValue = currentValue;\n        }\n        if (found)\
    \ {\n            maxIndex = currentIndex;\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.ElementAtOrDefault(index - 1);\n        if (previous\
    \ >= largest)\n            return -1;\n        return index;", "        long max\
    \ = arr.First();\n        long maxIndex = -1;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long max = arr.First();\n     \
    \   long min = 0;\n        long index = 0;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             index = i;\n            }\n            if (arr[i] < min) {\n   \
    \             min = arr[i];\n            }\n        }\n        if (index == arr.Count\
    \ - 1) {\n            return -1;\n        }\n        if (arr[index] > max) {\n\
    \            return -1;\n        }\n        return index;", "        long largest\
    \ = arr.First();\n        long current = arr.First();\n        long previous =\
    \ arr.First();\n        foreach (long i in arr) {\n            if (i > largest)\
    \ {\n                largest = i;\n            }\n            if (i > current)\
    \ {\n                current = i;\n            }\n            if (i > previous)\
    \ {\n                previous = i;\n            }\n        }\n        return largest;",
  "        long max = arr.First();\n        long maxIndex = 0;\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        long currentIndex = 0;\n     \
    \   foreach (long value in arr) {\n            if (value >= maxValue) {\n    \
    \            maxValue = value;\n                maxIndex = currentIndex;\n   \
    \         }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] >= maxValue) {\n                maxIndex = i;\n              \
    \  maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n     \
    \       if (arr[i] > largest) {\n                index = i;\n                largest\
    \ = arr[i];\n            }\n        }\n        return index;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = arr.First();\n        long smallest = arr.Last();\n\
    \        long candidate = arr.First();\n        long candidateIndex = -1;\n  \
    \      for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] < smallest)\
    \ {\n                candidate = arr[i];\n                candidateIndex = i;\n\
    \                smallest = arr[i];\n            } else if (arr[i] > largest)\
    \ {\n                candidate = arr[i];\n                candidateIndex = i;\n\
    \                largest = arr[i];\n            }\n        }\n        return candidateIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long current = arr.First();\n        long previous = arr.First();\n  \
    \      foreach (long i in arr) {\n            if (i > largest) {\n           \
    \     largest = i;\n                current = previous;\n            }\n     \
    \       if (i < current) {\n                previous = current;\n            \
    \    current = i;\n            }\n        }\n        return largest;", "     \
    \   long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] >= maxValue) {\n          \
    \      maxIndex = i;\n                maxValue = arr[i];\n            }\n    \
    \    }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n     \
    \       if (arr[i] > largest) {\n                index = i;\n                largest\
    \ = arr[i];\n            }\n        }\n        return index;", "        long largest\
    \ = arr.First();\n        long index = 0;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > largest) {\n                index = i;\n  \
    \              largest = arr[i];\n            }\n        }\n        return index;",
  "        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.First();\n        while (index > 0) {\n         \
    \   previous = index;\n            index = arr.IndexOf(previous);\n        }\n\
    \        return previous;", "        long largest = arr.First();\n        long\
    \ index = arr.IndexOf(largest);\n        while (index > 0) {\n            long\
    \ temp = arr[index - 1];\n            if (temp >= largest) {\n               \
    \ largest = temp;\n            }\n            index--;\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n \
    \       for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = -1;\n        long currentValue = -1;\n        foreach\
    \ (long i in arr) {\n            if (currentIndex == -1) {\n                currentIndex\
    \ = i;\n                currentValue = i;\n            }\n            if (currentValue\
    \ < i) {\n                currentIndex = i;\n                currentValue = i;\n\
    \            }\n            if (currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long largest = arr.First();\n        long index = 0;\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n          \
    \      index = i;\n                largest = arr[i];\n            }\n        }\n\
    \        return index;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ arr.First();\n        long current = arr.First();\n        foreach (long i in\
    \ arr) {\n            if (i > largest) {\n                largest = i;\n     \
    \       }\n            if (i < current) {\n                return -1;\n      \
    \      }\n            current = i;\n        }\n        return largest;", "   \
    \     long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] >= maxValue) {\n        \
    \        maxIndex = i;\n                maxValue = arr[i];\n            }\n  \
    \      }\n        return maxIndex;", "        long largest = arr.First();\n  \
    \      long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n      \
    \      if (arr[i] > largest) {\n                index = i;\n                largest\
    \ = arr[i];\n            }\n        }\n        return index;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.Max();\n        long min = arr.Min();\n        long maxIndex\
    \ = arr.FindIndex(x => x <= max);\n        long minIndex = arr.FindIndex(x =>\
    \ x >= min);\n        if (maxIndex == -1 && minIndex == -1) {\n            return\
    \ -1;\n        }\n        if (maxIndex == -1) {\n            return minIndex;\n\
    \        }\n        if (minIndex == -1) {\n            return maxIndex;\n    \
    \    }\n        return Math.Max(maxIndex, minIndex);", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long x in arr) {\n            if (x > largest) {\n         \
    \       largest = x;\n            }\n            if (x < smallest) {\n       \
    \         smallest = x;\n            }\n        }\n        return largest;", " \
    \       long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] <= max) {\n           \
    \     max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long max = arr.First();\n        long maxIndex\
    \ = arr.IndexOf(max);\n        for (int i = 1; i < arr.Count; i++) {\n       \
    \     if (arr[i] > max) {\n                max = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long currentIndex = -1;\n        long currentValue = arr[0];\n\
    \        long previousValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            currentValue = arr[i];\n            if (currentValue < previousValue)\
    \ {\n                currentIndex = i;\n            }\n            previousValue\
    \ = currentValue;\n        }\n        if (currentIndex != -1) {\n            maxIndex\
    \ = currentIndex;\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = arr.First();\n        long smallest = arr.Last();\n\
    \        long largestIndex = -1;\n        long smallestIndex = -1;\n        foreach\
    \ (long i in arr) {\n            if (i > largest && i < smallest) {\n        \
    \        largestIndex = arr.IndexOf(i);\n                smallestIndex = arr.IndexOf(largest);\n\
    \            }\n            if (i > largest) {\n                largest = i;\n\
    \            }\n            if (i < smallest) {\n                smallest = i;\n\
    \            }\n        }\n        return largestIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long currentIndex = 0;\n \
    \       long maxValue = arr[0];\n        foreach (long value in arr) {\n     \
    \       if (value <= maxValue) {\n                currentIndex++;\n          \
    \  }\n            if (currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = value;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = -1;\n        for (int i = 1; i < arr.Count; i++) {\n    \
    \        if (arr[i] > largest) {\n                index = i;\n               \
    \ largest = arr[i];\n            }\n        }\n        return index;", "     \
    \   long max = arr.First();\n        long maxIndex = -1;\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max\
    \ = arr[i];\n                maxIndex = i;\n            }\n        }\n       \
    \ return maxIndex;", "        long largest = arr.First();\n        long current\
    \ = arr.First();\n        long previous = arr.First();\n        foreach (long\
    \ num in arr.Skip(1))\n        {\n            if (num > largest)\n           \
    \ {\n                largest = num;\n            }\n            if (num < current)\n\
    \            {\n                current = num;\n            }\n            if\
    \ (num < previous)\n            {\n                previous = num;\n         \
    \   }\n        }\n        return largest;", "        long maxIndex = -1;\n   \
    \     long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] >= maxValue) {\n                maxIndex = i;\n      \
    \          maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentMax\
    \ = arr[0];\n        foreach (long i in arr) {\n            if (i <= currentMax)\
    \ {\n                currentMax = i;\n                currentIndex = i;\n    \
    \        }\n        }\n        if (currentIndex > maxIndex) {\n            maxIndex\
    \ = currentIndex;\n        }\n        return maxIndex;", "        long largest\
    \ = arr.First();\n        long index = -1;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > largest) {\n                index = i;\n  \
    \              largest = arr[i];\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = -1;\n        foreach (long i in arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = i;\n                currentValue = i;\n  \
    \          }\n            if (currentValue < i) {\n                currentIndex\
    \ = i;\n                currentValue = i;\n            }\n        }\n        if\
    \ (currentIndex != -1) {\n            long previousIndex = -1;\n            long\
    \ previousValue = -1;\n            foreach (long i in arr) {\n               \
    \ if (previousIndex == -1) {\n                    previousIndex = i;\n       \
    \             previousValue = i;\n                }\n                if (previousValue\
    \ < i) {\n                    previousIndex = i;\n                    previousValue\
    \ = i;\n                }\n            }\n            if (previousIndex != -1)\
    \ {\n                if (currentIndex < previousIndex) {\n                   \
    \ maxIndex = currentIndex;\n                } else {\n                    maxIndex\
    \ = previousIndex;\n                }\n            }\n        }\n        return\
    \ maxIndex;", "        long max = arr.Max();\n        long min = arr.Min();\n\
    \        long index = -1;\n        for (int i = 0; i < arr.Count; i++) {\n   \
    \         if (arr[i] >= max && arr[i] <= min) {\n                index = i;\n\
    \                break;\n            }\n        }\n        return index;", " \
    \       long largest = arr.First();\n        long largestIndex = 0;\n        for\
    \ (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n   \
    \             largest = arr[i];\n                largestIndex = i;\n         \
    \   }\n        }\n        return largestIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentIndex = value;\n                currentValue = value;\n\
    \            }\n        }\n        if (currentIndex != -1) {\n            maxIndex\
    \ = currentIndex;\n        }\n        return maxIndex;", "        long max = arr.Max();\n\
    \        long min = arr.Min();\n        long mid = arr.Count / 2;\n        long\
    \ left = 0;\n        long right = arr.Count - 1;\n        long largest = -1;\n\
    \        long index = 0;\n        while (left < right) {\n            long mid\
    \ = (left + right) / 2;\n            if (arr[mid] >= mid) {\n                right\
    \ = mid;\n            } else {\n                left = mid + 1;\n            }\n\
    \        }\n        if (arr[left] <= min) {\n            largest = left;\n   \
    \     } else {\n            largest = -1;\n        }\n        return largest;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = arr.IndexOf(largest);\n        if (index == 0) return -1;\n\
    \        long previous = arr[index - 1];\n        if (previous >= largest) return\
    \ -1;\n        return index;", "        long max = arr.Max();\n        long maxIndex\
    \ = arr.FindIndex(x => x <= max);\n        if (maxIndex == -1) {\n           \
    \ return -1;\n        }\n        long maxPrev = arr[maxIndex - 1];\n        long\
    \ maxNext = arr[maxIndex + 1];\n        if (maxNext > max) {\n            return\
    \ -1;\n        }\n        return maxIndex;"]
stop_tokens:
- "\n    }\n"

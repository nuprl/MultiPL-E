name: HumanEval_140_fix_spaces
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with -\n    public static string FixSpaces(string text)\
  \ {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
  Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
  \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
  \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
  Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1\
  \ 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
completions: ["        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += \"_\";\n            }\
    \ else if (c == ' ' && result.Length > 1) {\n                result += \"-\";\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n            else if (c != ' ' && c != '-') {\n \
    \               result += c.ToString();\n            }\n        }\n        if\
    \ (result.Contains(\"_\")) {\n            result = result.Replace(\"_\", \"-\"\
    );\n        }\n        if (result.Contains(\"-\")) {\n            result = result.Replace(\"\
    -\", \" \");\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += c;\n            } else {\n                result += c.ToString().Replace('\
    \ ', '_');\n            }\n        }\n        if (result.Length > 2) {\n     \
    \       string newResult = \"\";\n            int lastSpace = -1;\n          \
    \  for (int i = 0; i < result.Length; i++) {\n                if (result[i] ==\
    \ ' ') {\n                    if (lastSpace == -1) {\n                       \
    \ lastSpace = i;\n                    } else {\n                        newResult\
    \ += \"-\";\n                        lastSpace = -1;\n                    }\n\
    \                } else {\n                    newResult += result[i];\n     \
    \           }\n            }\n            result = newResult;\n        }\n   \
    \     return result;", "        // Replace all spaces with underscores\n     \
    \   text = text.Replace(\" \", \"_\");\n        // If there are more than 2 consecutive\
    \ spaces, replace all \n        // consecutive spaces with -\n        if (text.Contains(\"\
    \ \") && (text.IndexOf(\" \") + 1).Equals(text.LastIndexOf(\" \")))\n        \
    \    text = text.Replace(\" \", \"-\");\n        return text;", "        // Replace\
    \ all spaces with underscores\n        text = text.Replace(\" \", \"_\");\n  \
    \      // Replace all consecutive spaces with -\n        text = text.Replace(\"\
    \ \", \"-\");\n        return text;", "        string result = \"\";\n       \
    \ foreach (char c in text) {\n            if (c == ' ') {\n                result\
    \ += c.ToString().Replace(\" \", \"_\");\n            }\n            else if (c\
    \ != ' ' && c != '_') {\n                result += c.ToString();\n           \
    \ }\n        }\n        if (result.Contains(\"_\")) {\n            result = result.Replace(\"\
    _\", \"-\");\n        }\n        return result;", "        string fixedText =\
    \ text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\"  \"))\n     \
    \       fixedText = fixedText.Replace(\"  \", \"-\");\n        return fixedText;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString();\n            } else\
    \ {\n                result += c.ToString() + \"_\";\n            }\n        }\n\
    \        if (result.Contains(\"___\")) {\n            result = result.Replace(\"\
    ___\", \"-\");\n        }\n        return result;", "        if (text == null)\
    \ return null;\n        StringBuilder sb = new StringBuilder();\n        bool\
    \ first = true;\n        foreach (char c in text) {\n            if (c == ' ')\
    \ {\n                if (first) {\n                    first = false;\n      \
    \          } else {\n                    sb.Append('-');\n                }\n\
    \            } else {\n                sb.Append(c);\n            }\n        }\n\
    \        return sb.ToString();", "        string fixedText = text.Replace(\" \"\
    , \"_\");\n        if (fixedText.Contains(\"  \"))\n        {\n            fixedText\
    \ = fixedText.Replace(\"  \", \"-\");\n        }\n        return fixedText;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString();\n            } else\
    \ {\n                result += c.ToString() + \"_\";\n            }\n        }\n\
    \        if (result.Contains(\"___\")) {\n            result = result.Replace(\"\
    ___\", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += \"_\";\n            }\n            else if (c != ' ' && c\
    \ != '_') {\n                result += c;\n            }\n        }\n        if\
    \ (result.Contains(\"_\") && result.Contains(\"_\")) {\n            result = result.Replace(\"\
    _\", \"-\");\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += c;\n            }\n            else {\n                result\
    \ += c.ToString().Replace(\" \", \"_\");\n            }\n        }\n        if\
    \ (result.Length > 2) {\n            string temp = \"\";\n            int count\
    \ = 0;\n            foreach (char c in result) {\n                if (c == ' ')\
    \ {\n                    count++;\n                }\n                else {\n\
    \                    if (count == 2) {\n                        temp += \"-\"\
    ;\n                    }\n                    else {\n                       \
    \ temp += c.ToString().Replace(\" \", \"_\");\n                    }\n       \
    \             count = 0;\n                }\n            }\n            result\
    \ = temp;\n        }\n        return result;", "        string result = \"\";\n\
    \        foreach (char c in text) {\n            if (c == ' ') {\n           \
    \     result += \"_\";\n            } else {\n                result += c;\n \
    \           }\n        }\n        if (result.Length > 2) {\n            result\
    \ = result.Replace(\" \", \"-\");\n        }\n        return result;", "     \
    \   string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += \"_\";\n            } else if (c ==\
    \ ' ' && result.Length > 1) {\n                result += \"-\";\n            }\
    \ else {\n                result += c;\n            }\n        }\n        return\
    \ result;", "        string fixedText = text.Replace(\" \", \"_\");\n        if\
    \ (fixedText.Contains(\"  \"))\n            fixedText = fixedText.Replace(\" \
    \ \", \"-\");\n        return fixedText;", "        // Replace all spaces with\
    \ underscores\n        text = text.Replace(\" \", \"_\");\n        // If there\
    \ are more than 2 consecutive spaces, replace all \n        // consecutive spaces\
    \ with -\n        if (text.Contains(\" \") && (text.IndexOf(\" \") + 1) < text.Length)\
    \ {\n            text = text.Replace(\" \", \"-\");\n        }\n        return\
    \ text;", "        string fixedText = text.Replace(\" \", \"_\");\n        if\
    \ (fixedText.Contains(\"___\")) {\n            fixedText = fixedText.Replace(\"\
    ___\", \"-\");\n        }\n        return fixedText;", "        string fixedText\
    \ = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\" \") && fixedText.Contains(\"\
    \ \")) {\n            fixedText = fixedText.Replace(\" \", \"-\");\n        }\n\
    \        return fixedText;", '        return Regex.Replace(text, @"\s+", "-");',
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            } else if (c\
    \ == ' ' && result.Length > 1) {\n                result += \"-\";\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += c;\n       \
    \     } else {\n                result += c.ToString().Replace(' ', '_');\n  \
    \          }\n        }\n        if (result.Length > 2) {\n            result\
    \ = result.Replace(' ', '-');\n        }\n        return result;", '        return
    Regex.Replace(text, @"\s+", " ").Replace(" -", "-");', "        string result\
    \ = \"\";\n        foreach (char c in text) {\n            if (c == ' ') {\n \
    \               result += c.ToString();\n            } else {\n              \
    \  result += c.ToString().Replace(\" \", \"_\");\n            }\n        }\n \
    \       if (result.Contains(\"___\")) {\n            result = result.Replace(\"\
    ___\", \"-\");\n        }\n        return result;", '        return text.Replace("
    ", "_").Replace(" -", "-");', "        string fixedText = text.Replace(\" \",\
    \ \"_\");\n        if (fixedText.Contains(\" \"))\n        {\n            fixedText\
    \ = fixedText.Replace(\" \", \"-\");\n        }\n        return fixedText;", " \
    \       string result = \"\";\n        foreach (char c in text) {\n          \
    \  if (c == ' ') {\n                result += \"_\";\n            } else if (c\
    \ == ' ' && result.Length > 1) {\n                result += \"-\";\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += \"_\";\n   \
    \         } else if (c == ' ' && result.Length > 1) {\n                result\
    \ += \"-\";\n            } else {\n                result += c;\n            }\n\
    \        }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            }\n            else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            }\n         \
    \   else if (c != ' ' && c != '_') {\n                result += c;\n         \
    \   }\n        }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += \"_\";\n            } else if (c != ' ' && c != '\\t') {\n\
    \                result += c;\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            string temp = result;\n            result = \"\";\n    \
    \        int i = 0;\n            while (i < temp.Length) {\n                if\
    \ (temp[i] == ' ') {\n                    result += temp[i];\n               \
    \     i++;\n                } else if (temp[i] == '\\t') {\n                 \
    \   result += temp[i];\n                    i++;\n                } else {\n \
    \                   result += temp[i];\n                    i++;\n           \
    \     }\n            }\n        }\n        return result;", "        string fixedText\
    \ = text;\n        fixedText = fixedText.Replace(\" \", \"_\");\n        fixedText\
    \ = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  fixedText = fixedText.Replace(\" -\", \"-\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        ", "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        if (result.Contains(\"___\")) {\n            result = result.Replace(\"\
    ___\", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += \"_\";\n            } else if (c == ' ' && result.Length >\
    \ 1) {\n                result += \"-\";\n            } else {\n             \
    \   result += c;\n            }\n        }\n        return result;", "       \
    \ string result = \"\";\n        foreach (char c in text) {\n            if (c\
    \ == ' ') {\n                result += c;\n            } else {\n            \
    \    result += c.ToString().Replace(\" \", \"_\");\n            }\n        }\n\
    \        if (result.Length > 2) {\n            result = result.Replace(\" \",\
    \ \"-\");\n        }\n        return result;", "        if (text == null || text.Length\
    \ == 0)\n            return text;\n        StringBuilder sb = new StringBuilder(text);\n\
    \        string s = \"\";\n        for (int i = 0; i < sb.Length; i++) {\n   \
    \         if (sb[i] == ' ') {\n                s += \"_\";\n            } else\
    \ {\n                s += sb[i];\n            }\n        }\n        if (s.Length\
    \ > 2) {\n            int i = 0;\n            while (i < s.Length - 2) {\n   \
    \             sb.Replace(\" \", string.Empty);\n                i++;\n       \
    \     }\n        }\n        return sb.ToString();", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c;\n            }\n            else {\n                result\
    \ += c.ToString().Replace(\" \", \"_\");\n            }\n        }\n        if\
    \ (result.Length > 2) {\n            result = result.Replace(\" \", \"-\");\n\
    \        }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += \"\
    _\";\n            } else if (c == ' ' && result.Length > 1) {\n              \
    \  result += \"-\";\n            } else {\n                result += c;\n    \
    \        }\n        }\n        return result;", "        string fixedText = text.Replace(\"\
    \ \", \"_\");\n        if (fixedText.Contains(\" \") && fixedText.Contains(\"\
    \ \"))\n        {\n            fixedText = fixedText.Replace(\" \", \"-\");\n\
    \        }\n        return fixedText;", "        string result = \"\";\n     \
    \   foreach (char c in text) {\n            if (c == ' ') {\n                result\
    \ += c;\n            }\n            else if (c != ' ' && c != '-') {\n       \
    \         result += '_';\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            string newResult = \"\";\n            int lastSpace = 0;\n\
    \            for (int i = 0; i < result.Length; i++) {\n                if (result[i]\
    \ == ' ') {\n                    newResult += '-';\n                    lastSpace\
    \ = i;\n                }\n                else {\n                    newResult\
    \ += result[lastSpace];\n                }\n            }\n            result\
    \ = newResult;\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c.ToString();\n            } else {\n                result\
    \ += c.ToString() + \"_\";\n            }\n        }\n        if (result.Contains(\"\
    ___\")) {\n            result = result.Replace(\"___\", \"-\");\n        }\n \
    \       return result;", "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            }\n            else if (c != ' ' && c != '_') {\n               \
    \ result += c;\n            }\n        }\n        if (result.Contains(\"___\"\
    )) {\n            result = result.Replace(\"___\", \"-\");\n        }\n      \
    \  return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += \"_\";\n   \
    \         } else if (c == ' ' && result.Length > 1) {\n                result\
    \ += \"-\";\n            } else {\n                result += c;\n            }\n\
    \        }\n        return result;", '        return Regex.Replace(text, @"\s+",
    "_");', "        // Replace all spaces with underscores\n        text = text.Replace(\"\
    \ \", \"_\");\n        // If there are more than 2 consecutive spaces, replace\
    \ all \n        // consecutive spaces with -\n        if (text.Contains(\" \"\
    ) && text.Contains(\" \")) {\n            text = text.Replace(\" \", \"-\");\n\
    \        }\n        return text;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c.ToString();\n\
    \            } else {\n                result += c.ToString() + \"_\";\n     \
    \       }\n        }\n        if (result.Contains(\"___\")) {\n            result\
    \ = result.Replace(\"___\", \"-\");\n        }\n        return result;", "   \
    \     string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += \"_\";\n            }\n            else\
    \ if (c != ' ' && c != '-') {\n                result += c;\n            }\n \
    \       }\n        if (result.Length > 2) {\n            string temp = \"\";\n\
    \            int count = 0;\n            foreach (char c in result) {\n      \
    \          if (c == ' ') {\n                    count++;\n                }\n\
    \                else {\n                    count = 1;\n                }\n \
    \               if (count > 2) {\n                    temp += c;\n           \
    \     }\n            }\n            result = temp;\n        }\n        return\
    \ result;", "        // Replace all spaces with underscores\n        text = text.Replace(\"\
    \ \", \"_\");\n        // If there are more than 2 consecutive spaces\n      \
    \  if (text.Contains(\" \") && (text.IndexOf(\" \") + 1).Equals(text.Length))\
    \ {\n            // Replace all consecutive spaces with -\n            text =\
    \ text.Replace(\" \", \"-\");\n        }\n        return text;", "        // Replace\
    \ all spaces with underscores\n        text = text.Replace(\" \", \"_\");\n  \
    \      // If there are more than 2 consecutive spaces, replace all \n        //\
    \ consecutive spaces with -\n        if (text.Contains(\" \") && (text.IndexOf(\"\
    \ \") == text.LastIndexOf(\" \") + 1)) {\n            text = text.Replace(\" \"\
    , \"-\");\n        }\n        return text;", "        string result = \"\";\n\
    \        foreach (char c in text) {\n            if (c == ' ') {\n           \
    \     result += \"_\";\n            }\n            else if (c != ' ' && c != '\
    \ ' && c != ' ') {\n                result += c.ToString();\n            }\n \
    \       }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            } else {\n                result += c.ToString().Replace(\" \", \"\
    _\");\n            }\n        }\n        if (result.Length > 2) {\n          \
    \  string temp = result;\n            result = \"\";\n            int count =\
    \ 0;\n            while (temp.Length > 0) {\n                if (temp.Length >\
    \ 2) {\n                    result += temp.Substring(0, temp.Length - 2);\n  \
    \                  count += temp.Length - 2;\n                    temp = temp.Substring(temp.Length\
    \ - 2);\n                } else {\n                    result += temp;\n     \
    \               count += temp.Length;\n                    temp = \"\";\n    \
    \            }\n            }\n            result += \"-\";\n            result\
    \ += count.ToString();\n        }\n        return result;", "        string fixedText\
    \ = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\"  \"))\n   \
    \     {\n            fixedText = fixedText.Replace(\"  \", \"-\");\n        }\n\
    \        return fixedText;", "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += c;\n  \
    \          }\n            else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          string temp = result;\n            result = \"\";\n            int\
    \ i = 0;\n            while (i < temp.Length - 2) {\n                result +=\
    \ temp.Substring(i, 2);\n                i += 2;\n            }\n            result\
    \ += temp.Substring(i, temp.Length - i);\n        }\n        return result;",
  "        string fixedText = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\"\
    \ \") && fixedText.Contains(\" \")) {\n            fixedText = fixedText.Replace(\"\
    \ \", \"-\");\n        }\n        return fixedText;", "        string result =\
    \ \"\";\n        foreach (char c in text) {\n            if (c == ' ') {\n   \
    \             result += c.ToString().Replace(\" \", \"_\");\n            }\n \
    \           else if (c != ' ' && c != ' ' && c != ' ') {\n                result\
    \ += c.ToString().Replace(\" \", \"-\");\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += \"_\";\n            }\
    \ else {\n                result += c;\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            string temp = result;\n            result = \"\";\n    \
    \        int i = 0;\n            while (i < temp.Length - 1) {\n             \
    \   if (temp[i] == ' ' && temp[i + 1] == ' ') {\n                    result +=\
    \ \"-\";\n                    i += 2;\n                } else {\n            \
    \        result += temp[i];\n                    i++;\n                }\n   \
    \         }\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += \"_\";\n            } else {\n                result += c;\n\
    \            }\n        }\n        if (result.Length > 2) {\n            string\
    \ temp = result;\n            result = \"\";\n            int i = 0;\n       \
    \     while (i < temp.Length) {\n                if (temp[i] == ' ') {\n     \
    \               result += temp[i];\n                    i++;\n               \
    \ } else {\n                    result += temp[i];\n                    i++;\n\
    \                    while (i < temp.Length && temp[i] == ' ') {\n           \
    \             result += temp[i];\n                        i++;\n             \
    \       }\n                }\n            }\n        }\n        return result;",
  "        // Replace all spaces with underscores\n        text = text.Replace(\"\
    \ \", \"_\");\n        // If there are more than 2 consecutive spaces, replace\
    \ all \n        // consecutive spaces with -\n        if (text.Contains(\" \"\
    ) && (text.IndexOf(\"  \") > text.IndexOf(\" \")))\n            text = text.Replace(\"\
    \ \", \"-\");\n        return text;", "        string result = \"\";\n       \
    \ foreach (char c in text) {\n            if (c == ' ') {\n                result\
    \ += c.ToString();\n            } else {\n                result += c.ToString()\
    \ + \"_\";\n            }\n        }\n        if (result.Length > 2) {\n     \
    \       result = result.Replace(\"  \", \"_\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c;\n            }\n            else\
    \ {\n                result += c.ToString().Replace(\" \", \"_\");\n         \
    \   }\n        }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c;\n            } else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c;\n            } else {\n      \
    \          result += c.ToString().Replace(\" \", \"_\");\n            }\n    \
    \    }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        // Replace all spaces\
    \ with underscores\n        text = text.Replace(\" \", \"_\");\n        // If\
    \ there are more than 2 consecutive spaces, replace all \n        // consecutive\
    \ spaces with -\n        if (text.Contains(\" \") && text.Contains(\" \")) {\n\
    \            text = text.Replace(\" \", \"-\");\n        }\n        return text;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString().Replace(\" \", \"_\"\
    );\n            } else if (c != ' ' && c != '_') {\n                result +=\
    \ c.ToString();\n            }\n        }\n        if (result.Length > 2) {\n\
    \            result = result.Replace(\" \", \"-\");\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += \"_\";\n            }\
    \ else {\n                result += c;\n            }\n        }\n        if (result.Contains(\"\
    \  \")) {\n            result = result.Replace(\"  \", \"-\");\n        }\n  \
    \      return result;", "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += c;\n  \
    \          } else {\n                result += c.ToString().Replace(\" \", \"\
    _\");\n            }\n        }\n        if (result.Length > 2) {\n          \
    \  result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            } else if (c\
    \ == ' ' && result.Length > 1) {\n                result += \"-\";\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += c.ToString();\n\
    \            }\n            else {\n                result += c.ToString() + \"\
    _\";\n            }\n        }\n        if (result.Contains(\"___\")) {\n    \
    \        result = result.Replace(\"___\", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c;\n            }\n            else\
    \ {\n                result += c.ToString().Replace(\" \", \"_\");\n         \
    \   }\n        }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        string fixedText =\
    \ text;\n        fixedText = fixedText.Replace(\" \", \"_\");\n        fixedText\
    \ = fixedText.Replace(\" \", \"_\");\n        fixedText = fixedText.Replace(\"\
    \ \", \"-\");\n        return fixedText;", "        string result = \"\";\n  \
    \      foreach (char c in text) {\n            if (c == ' ') {\n             \
    \   result += \"_\";\n            }\n            else if (c == ' ' && result.Length\
    \ > 1) {\n                result += \"-\";\n            }\n            else {\n\
    \                result += c;\n            }\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            }\n         \
    \   else if (c != ' ' && c != '-') {\n                result += c;\n         \
    \   }\n        }\n        return result;", "        string result = \"\";\n  \
    \      foreach (char c in text) {\n            if (c == ' ') {\n             \
    \   result += \"_\";\n            }\n            else if (c == ' ' && result.Length\
    \ > 1) {\n                result += \"-\";\n            }\n            else {\n\
    \                result += c;\n            }\n        }\n        return result;",
  "        if (text == null || text.Length == 0)\n            return text;\n     \
    \   var sb = new StringBuilder();\n        var lastSpace = -1;\n        var lastSpaceIndex\
    \ = -1;\n        var lastSpaceCount = 0;\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            var c = text[i];\n            if (c == ' ') {\n        \
    \        if (lastSpace == -1) {\n                    lastSpace = i;\n        \
    \            lastSpaceIndex = i;\n                    lastSpaceCount = 1;\n  \
    \              }\n                else {\n                    lastSpaceCount++;\n\
    \                }\n            }\n            else if (lastSpace != -1) {\n \
    \               if (lastSpaceCount == 2) {\n                    lastSpaceCount\
    \ = 0;\n                    sb.Append('-');\n                }\n             \
    \   else {\n                    lastSpaceCount = 0;\n                    sb.Append('_');\n\
    \                }\n            }\n            sb.Append(c);\n            lastSpace\
    \ = -1;\n            lastSpaceIndex = -1;\n            lastSpaceCount = -1;\n\
    \        }\n        return sb.ToString();", "        string result = \"\";\n \
    \       foreach (char c in text) {\n            if (c == ' ') {\n            \
    \    result += c.ToString();\n            } else {\n                result +=\
    \ c.ToString() + \"_\";\n            }\n        }\n        if (result.Length >\
    \ 2) {\n            result = result.Replace(\" \", \"-\");\n        }\n      \
    \  return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += c;\n       \
    \     } else {\n                result += c.ToString().Replace(\" \", \"_\");\n\
    \            }\n        }\n        if (result.Length > 2) {\n            result\
    \ = result.Replace(\" \", \"-\");\n        }\n        return result;", "     \
    \   string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += c;\n            } else {\n         \
    \       result += c.ToString().Replace(\" \", \"_\");\n            }\n       \
    \ }\n        if (result.Length > 2) {\n            string temp = result;\n   \
    \         result = \"\";\n            int count = 0;\n            while (temp.Length\
    \ > 2) {\n                result += temp.Substring(0, temp.Length - 1);\n    \
    \            result += temp.Substring(temp.Length - 1);\n                temp\
    \ = temp.Substring(0, temp.Length - 2);\n                count++;\n          \
    \  }\n            result += \"_\" + temp.Substring(0, temp.Length - 1);\n    \
    \    }\n        return result;", "        string fixedText = text;\n        fixedText\
    \ = fixedText.Replace(\" \", \"_\");\n        fixedText = fixedText.Replace(\"\
    \ -\", \"-\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n      \
    \  return fixedText;", "        // Replace all spaces with underscores\n     \
    \   text = text.Replace(\" \", \"_\");\n\n        // If there are more than 2\
    \ consecutive spaces, \n        // then replace all consecutive spaces with -\n\
    \        if (text.Contains(\" \") && (text.IndexOf(\" \") + 1) < text.Length)\
    \ {\n            text = text.Replace(\" \", \"-\");\n        }\n\n        return\
    \ text;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += c;\n            }\n  \
    \          else {\n                result += c.ToString().Replace(\" \", \"_\"\
    );\n            }\n        }\n        if (result.Length > 2) {\n            result\
    \ = result.Replace(\" \", \"-\");\n        }\n        return result;", "     \
    \   if (text == null) return null;\n        StringBuilder sb = new StringBuilder(text.Length);\n\
    \        foreach (char c in text) {\n            if (c == ' ') {\n           \
    \     sb.Append('_');\n            }\n            else {\n                sb.Append(c);\n\
    \            }\n        }\n        return sb.ToString();", "        string result\
    \ = \"\";\n        foreach (char c in text) {\n            if (c == ' ') {\n \
    \               result += c.ToString();\n            }\n            else {\n \
    \               result += c.ToString().Replace(\" \", \"_\");\n            }\n\
    \        }\n        if (result.Length > 2) {\n            string newResult = result.Replace(\"\
    \ \", \"-\");\n            return newResult;\n        }\n        else {\n    \
    \        return result;\n        }", "        if (text == null || text.Length\
    \ <= 2)\n            return text;\n        StringBuilder sb = new StringBuilder();\n\
    \        bool space = false;\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                space = true;\n          \
    \      sb.Append('_');\n            } else {\n                if (space) {\n \
    \                   space = false;\n                    sb.Append('-');\n    \
    \            }\n                sb.Append(text[i]);\n            }\n        }\n\
    \        return sb.ToString();", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            } else {\n                result += c.ToString().Replace(\" \", \"\
    _\");\n            }\n        }\n        if (result.Length > 2) {\n          \
    \  result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  '        return text.Replace(" ", "_").Replace(" -", "-");', "        if (text ==\
    \ null) return null;\n        StringBuilder sb = new StringBuilder(text.Length);\n\
    \        foreach (char c in text) {\n            if (c == ' ') {\n           \
    \     sb.Append('_');\n            } else {\n                sb.Append(c);\n \
    \           }\n        }\n        return sb.ToString();", "        string fixedText\
    \ = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\"  \"))\n   \
    \         fixedText = fixedText.Replace(\"  \", \"-\");\n        return fixedText;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            } else {\n  \
    \              result += c;\n            }\n        }\n        if (result.Contains(\"\
    ___\")) {\n            result = result.Replace(\"___\", \"-\");\n        }\n \
    \       return result;", "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += c;\n  \
    \          }\n            else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          string temp = result;\n            result = \"\";\n            int\
    \ i = 0;\n            while (i < temp.Length - 2) {\n                result +=\
    \ temp[i];\n                i++;\n            }\n            result += temp[i];\n\
    \        }\n        return result;", '        return Regex.Replace(text, @"\s+",
    " ").Replace(" -", "-");', "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += c.ToString();\n\
    \            } else {\n                result += c.ToString() + \"_\";\n     \
    \       }\n        }\n        if (result.Contains(\"___\")) {\n            result\
    \ = result.Replace(\"___\", \"-\");\n        }\n        return result;", "   \
    \     string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += c.ToString();\n            }\n     \
    \       else {\n                result += c.ToString() + \"_\";\n            }\n\
    \        }\n        if (result.Contains(\"___\")) {\n            string temp =\
    \ result;\n            result = \"\";\n            foreach (char c in temp) {\n\
    \                if (c == ' ') {\n                    result += c.ToString();\n\
    \                }\n                else {\n                    result += c.ToString()\
    \ + \"-\";\n                }\n            }\n        }\n        return result;",
  '        return text.Replace(" ", "_").Replace(" -", "-");', "        string result\
    \ = \"\";\n        foreach (char c in text) {\n            if (c == ' ') {\n \
    \               result += \"_\";\n            } else {\n                result\
    \ += c;\n            }\n        }\n        if (result.Contains(\"_\") && result.Contains(\"\
    _\")) {\n            result = result.Replace(\"_\", \"-\");\n        }\n     \
    \   return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += c;\n       \
    \     }\n            else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          string temp = result;\n            result = \"\";\n            int\
    \ i = 0;\n            while (i < temp.Length - 1) {\n                if (temp[i]\
    \ == ' ' && temp[i + 1] == ' ') {\n                    result += temp[i];\n  \
    \                  i += 2;\n                }\n                else {\n      \
    \              result += temp[i];\n                    i++;\n                }\n\
    \            }\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += \"_\";\n            } else {\n                result += c;\n\
    \            }\n        }\n        if (result.Length > 2) {\n            string\
    \ newresult = \"\";\n            int i = 0;\n            int j = result.Length\
    \ - 1;\n            while (i < j) {\n                if (result[i] == ' ') {\n\
    \                    newresult += result[i];\n                    i++;\n     \
    \           } else {\n                    newresult += result[j];\n          \
    \          j--;\n                }\n            }\n            result = newresult;\n\
    \        }\n        return result;", "        if (text == null || text.Length\
    \ < 2)\n            return text;\n        StringBuilder sb = new StringBuilder(text.Length);\n\
    \        bool space = false;\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                space = true;\n            } else {\n     \
    \           if (space) {\n                    sb.Append('_');\n              \
    \      space = false;\n                } else {\n                    sb.Append(c);\n\
    \                }\n            }\n        }\n        return sb.ToString();",
  "        // Replace all spaces with underscores\n        text = text.Replace(\"\
    \ \", \"_\");\n        // If there are more than 2 consecutive spaces, replace\
    \ all \n        // consecutive spaces with -\n        if (text.Contains(\" \"\
    ) && (text.IndexOf(\" \") + 1 == text.LastIndexOf(\" \"))) {\n            text\
    \ = text.Replace(\" \", \"-\");\n        }\n        return text;", "        if\
    \ (text == null || text.Length == 0)\n            return text;\n        StringBuilder\
    \ sb = new StringBuilder();\n        bool space = false;\n        bool consecutive\
    \ = false;\n        for (int i = 0; i < text.Length; i++) {\n            char\
    \ c = text[i];\n            if (c == ' ') {\n                if (space) {\n  \
    \                  consecutive = false;\n                } else {\n          \
    \          space = true;\n                }\n            } else {\n          \
    \      if (space) {\n                    sb.Append('-');\n                   \
    \ space = false;\n                } else {\n                    sb.Append(c);\n\
    \                }\n            }\n        }\n        if (space)\n           \
    \ sb.Append('-');\n        return sb.ToString();", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c;\n            }\n            else {\n                result\
    \ += c.ToString().Replace(\" \", \"_\");\n            }\n        }\n        if\
    \ (result.Length > 2) {\n            string temp = result;\n            result\
    \ = \"\";\n            int i = 0;\n            while (i < temp.Length) {\n   \
    \             if (temp[i] == ' ') {\n                    result += temp[i];\n\
    \                    i++;\n                }\n                else {\n       \
    \             result += temp[i].ToString().Replace(\" \", \"-\");\n          \
    \          i++;\n                }\n            }\n        }\n        return result;",
  "        string fixedText = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\"\
    \ \") && fixedText.Contains(\" \"))\n            fixedText = fixedText.Replace(\"\
    \ \", \"-\");\n        return fixedText;", "        string result = \"\";\n  \
    \      foreach (char c in text) {\n            if (c == ' ') {\n             \
    \   result += c;\n            }\n            else {\n                result +=\
    \ c.ToString().Replace(\" \", \"_\");\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            result = result.Replace(\" \", \"-\");\n        }\n    \
    \    return result;", "        // Replace all spaces with underscores\n      \
    \  text = text.Replace(\" \", \"_\");\n        // Replace all consecutive spaces\
    \ with -\n        text = text.Replace(\" \", \"-\");\n        return text;", " \
    \       string result = \"\";\n        foreach (char c in text) {\n          \
    \  if (c == ' ') {\n                result += \"_\";\n            } else if (c\
    \ != ' ' && c != '-') {\n                result += c;\n            }\n       \
    \ }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c;\n            } else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          string lastSpace = result.Substring(result.Length - 1, 1);\n      \
    \      string nextSpace = result.Substring(result.Length - 2, 1);\n          \
    \  if (lastSpace == nextSpace) {\n                result = result.Replace(lastSpace,\
    \ \"-\");\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        foreach (char c in text) {\n            if (c == ' ')\
    \ {\n                result += c.ToString().Replace(\" \", \"_\");\n         \
    \   }\n            else if (c != ' ' && c != '-') {\n                result +=\
    \ c.ToString();\n            }\n        }\n        return result;", '        return
    Regex.Replace(text, @"\s+", "_");', "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            } else if (c != ' ' && c != '-') {\n              \
    \  result += c.ToString();\n            }\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString();\n            } else\
    \ {\n                result += c.ToString() + \"_\";\n            }\n        }\n\
    \        if (result.Contains(\"_\")) {\n            result = result.Replace(\"\
    _\", \"-\");\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += \"_\";\n            } else {\n                result += c;\n\
    \            }\n        }\n        if (result.Length > 2) {\n            string\
    \ temp = result;\n            result = \"\";\n            int i = 0;\n       \
    \     while (i < temp.Length - 1) {\n                if (temp[i] == ' ' && temp[i\
    \ + 1] == ' ') {\n                    result += \"-\";\n                    i\
    \ += 2;\n                } else {\n                    result += temp[i];\n  \
    \                  i++;\n                }\n            }\n        }\n       \
    \ return result;", "        if (text == null || text.Length == 0)\n          \
    \  return text;\n        StringBuilder sb = new StringBuilder(text.Length);\n\
    \        bool hasSpace = false;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                hasSpace = true;\n   \
    \             sb.Append('_');\n            } else {\n                sb.Append(text[i]);\n\
    \            }\n        }\n        if (hasSpace) {\n            int lastSpace\
    \ = text.IndexOf(' ');\n            while (lastSpace != -1) {\n              \
    \  sb.Replace(' ', '-');\n                lastSpace = text.IndexOf(' ', lastSpace\
    \ + 1);\n            }\n        }\n        return sb.ToString();", "        string\
    \ result = \"\";\n        foreach (char c in text) {\n            if (c == ' ')\
    \ {\n                result += \"_\";\n            }\n            else if (c ==\
    \ ' ' && result.Length > 1) {\n                result += \"-\";\n            }\n\
    \            else {\n                result += c;\n            }\n        }\n\
    \        return result;", "        string fixedText = text.Replace(\" \", \"_\"\
    );\n        if (fixedText.Contains(\"  \"))\n            fixedText = fixedText.Replace(\"\
    \  \", \"-\");\n        return fixedText;", "        string fixedText = text.Replace(\"\
    \ \", \"_\");\n        fixedText = fixedText.Replace(\" -\", \"-\");\n       \
    \ return fixedText;", "        string result = \"\";\n        foreach (char c\
    \ in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            } else if (c == ' ' && result.Length > 1) {\n                result\
    \ += \"-\";\n            } else {\n                result += c;\n            }\n\
    \        }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n            else if (c != ' ' && c != '_') {\n \
    \               result += c.ToString();\n            }\n        }\n        if\
    \ (result.Length > 2) {\n            result = result.Replace(\" \", \"-\");\n\
    \        }\n        return result;", "        string fixedText = text.Replace(\"\
    \ \", \"_\");\n        if (fixedText.Contains(\" \") && fixedText.Contains(\"\
    \ \")) {\n            fixedText = fixedText.Replace(\" \", \"-\");\n        }\n\
    \        return fixedText;", "        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += c.ToString();\n\
    \            } else {\n                result += c.ToString() + \"_\";\n     \
    \       }\n        }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += \"_\";\n            }\n            else if (c != ' ' && c\
    \ != '_') {\n                result += c;\n            }\n        }\n        if\
    \ (result.Contains(\"_\")) {\n            result = result.Replace(\"_\", \"-\"\
    );\n        }\n        if (result.Contains(\"-\")) {\n            result = result.Replace(\"\
    -\", \" \");\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += c.ToString().Replace(\" \", \"_\");\n            }\n       \
    \     else if (c != ' ' && c != '_') {\n                result += c.ToString();\n\
    \            }\n        }\n        return result;", "        string fixedText\
    \ = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\" \") && fixedText.Contains(\"\
    \ \"))\n            fixedText = fixedText.Replace(\" \", \"-\");\n        return\
    \ fixedText;", "        if (text == null || text.Length <= 2)\n            return\
    \ text;\n        StringBuilder sb = new StringBuilder(text.Length);\n        bool\
    \ space = false;\n        for (int i = 0; i < text.Length; i++) {\n          \
    \  if (text[i] == ' ') {\n                if (!space) {\n                    space\
    \ = true;\n                    sb.Append('_');\n                } else {\n   \
    \                 space = false;\n                    sb.Append('-');\n      \
    \          }\n            } else {\n                sb.Append(text[i]);\n    \
    \        }\n        }\n        return sb.ToString();", "        string result\
    \ = \"\";\n        foreach (char c in text) {\n            if (c == ' ') {\n \
    \               result += \"_\";\n            } else {\n                result\
    \ += c;\n            }\n        }\n        if (result.Length > 2) {\n        \
    \    int lastSpace = result.LastIndexOf(' ');\n            int lastSpace2 = result.LastIndexOf('\
    \ ');\n            string firstSpace = result.Substring(0, lastSpace);\n     \
    \       string secondSpace = result.Substring(lastSpace + 1);\n            string\
    \ thirdSpace = result.Substring(lastSpace2);\n            result = firstSpace\
    \ + \"-\" + secondSpace + \"-\" + thirdSpace;\n        }\n        return result;",
  "        string fixedText = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\"\
    \ \"))\n        {\n            fixedText = fixedText.Replace(\" \", \"-\");\n\
    \        }\n        return fixedText;", "        // Replace all spaces with underscores\n\
    \        text = text.Replace(\" \", \"_\");\n        // If there are more than\
    \ 2 consecutive spaces, replace all \n        // consecutive spaces with -\n \
    \       if (text.Contains(\" \") && (text.IndexOf(\" \") > text.IndexOf(\"  \"\
    ))) {\n            text = text.Replace(\" \", \"-\");\n        }\n        return\
    \ text;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += \"_\";\n            }\
    \ else {\n                result += c;\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            string temp = result;\n            result = \"\";\n    \
    \        int i = 0;\n            while (i < temp.Length) {\n                if\
    \ (temp[i] == ' ') {\n                    result += temp[i];\n               \
    \     i++;\n                } else {\n                    result += temp[i];\n\
    \                    i++;\n                    result += temp[i];\n          \
    \          i++;\n                }\n            }\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString().Replace(\" \", \"_\"\
    );\n            } else if (c != ' ' && c != '-') {\n                result +=\
    \ c.ToString();\n            }\n        }\n        if (result.Length > 2) {\n\
    \            string temp = result;\n            result = \"\";\n            int\
    \ i = 0;\n            while (i < temp.Length - 1) {\n                if (temp[i]\
    \ == ' ' && temp[i + 1] == ' ') {\n                    result += temp[i];\n  \
    \                  i += 2;\n                } else {\n                    result\
    \ += temp[i];\n                    i++;\n                }\n            }\n  \
    \      }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            }\n            else {\n                result += c.ToString().Replace('\
    \ ', '_');\n            }\n        }\n        if (result.Length > 2) {\n     \
    \       result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString().Replace(\" \", \"_\"\
    );\n            }\n            else if (c != ' ' && c != '_') {\n            \
    \    result += c.ToString();\n            }\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString().Replace(\" \", \"_\"\
    );\n            }\n            else if (c != ' ' && c != '-') {\n            \
    \    result += c.ToString();\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            string temp = result;\n            result = \"\";\n    \
    \        int count = 0;\n            while (temp.Length > 0) {\n             \
    \   if (temp.StartsWith(\"-\")) {\n                    result += temp.Substring(1);\n\
    \                    count++;\n                }\n                else if (temp.StartsWith(\"\
    \ \")) {\n                    result += temp.Substring(1);\n                 \
    \   count++;\n                }\n                else {\n                    result\
    \ += temp.Substring(1);\n                    count++;\n                }\n   \
    \             temp = temp.Substring(1);\n            }\n            if (count\
    \ > 2) {\n                string temp2 = result;\n                result = \"\"\
    ;\n                count = 0;\n                while (temp2.Length > 0) {\n  \
    \                  if (temp2.StartsWith(\"-\")) {\n                        result\
    \ += temp2.Substring(1);\n                        count++;\n                 \
    \   }\n                    else if (temp2.StartsWith(\" \")) {\n             \
    \           result += temp2.Substring(1);\n                        count++;\n\
    \                    }\n                    else {\n                        result\
    \ += temp2.Substring(1);\n                        count++;\n                 \
    \   }\n                    temp2 = temp2.Substring(1);\n                }\n  \
    \          }\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += c.ToString();\n            } else {\n                result\
    \ += c.ToString() + \"_\";\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            int lastSpace = result.LastIndexOf(' ');\n            string\
    \ firstSpace = result.Substring(0, lastSpace);\n            string secondSpace\
    \ = result.Substring(lastSpace + 1);\n            result = firstSpace + \"-\"\
    ;\n            result += secondSpace;\n        }\n        return result;", " \
    \       string result = \"\";\n        foreach (char c in text) {\n          \
    \  if (c == ' ') {\n                result += \"_\";\n            } else if (c\
    \ == ' ' && result.Length > 1) {\n                result += \"-\";\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", '        return text.Replace(" ", "_").Replace(" -", "-");',
  '        return Regex.Replace(text, @"\s+", "-");', "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += c;\n            } else {\n                result += c.ToString().Replace('\
    \ ', '_');\n            }\n        }\n        if (result.Length > 2) {\n     \
    \       string newresult = \"\";\n            int i = 0;\n            while (i\
    \ < result.Length) {\n                if (result[i] == '_') {\n              \
    \      newresult += result[i];\n                    i++;\n                } else\
    \ {\n                    newresult += result[i];\n                    i++;\n \
    \                   while (i < result.Length && result[i] == ' ') {\n        \
    \                newresult += '-';\n                        i++;\n           \
    \         }\n                }\n            }\n            result = newresult;\n\
    \        }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            } else {\n                result += c.ToString().Replace(\" \", \"\
    _\");\n            }\n        }\n        if (result.Contains(\"___\")) {\n   \
    \         result = result.Replace(\"___\", \"-\");\n        }\n        return\
    \ result;", '        return Regex.Replace(text, @"\s+", " ").Replace(" -", "-");',
  "        if (text == null || text.Length == 0) return text;\n        StringBuilder\
    \ sb = new StringBuilder(text.Length);\n        foreach (char c in text) {\n \
    \           if (c == ' ') {\n                sb.Append('_');\n            } else\
    \ {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c;\n            }\n            else\
    \ {\n                result += c.ToString().Replace(\" \", \"_\");\n         \
    \   }\n        }\n        if (result.Length > 2) {\n            string temp =\
    \ result;\n            result = \"\";\n            int i = 0;\n            while\
    \ (i < temp.Length - 1) {\n                if (temp[i] == ' ' && temp[i + 1] ==\
    \ ' ') {\n                    result += temp[i];\n                    i += 2;\n\
    \                }\n                else {\n                    result += temp[i];\n\
    \                    i++;\n                }\n            }\n        }\n     \
    \   return result;", '        return Regex.Replace(text, @"\s+", "-");', "   \
    \     string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += c;\n            }\n            else\
    \ {\n                result += c.ToString().Replace(\" \", \"_\");\n         \
    \   }\n        }\n        if (result.Length > 2) {\n            string temp =\
    \ result;\n            result = \"\";\n            int i = 0;\n            while\
    \ (i < temp.Length) {\n                if (temp[i] == ' ') {\n               \
    \     result += temp[i];\n                    i++;\n                }\n      \
    \          else {\n                    result += temp[i].ToString().Replace(\"\
    \ \", \"-\");\n                    i++;\n                }\n            }\n  \
    \      }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            } else if (c != ' ' && c != '_') {\n              \
    \  result += c.ToString();\n            }\n        }\n        if (result.Length\
    \ > 2) {\n            result = result.Replace(\" \", \"-\");\n        }\n    \
    \    return result;", "        string result = \"\";\n        foreach (char c\
    \ in text) {\n            if (c == ' ') {\n                result += c;\n    \
    \        } else {\n                result += c.ToString().Replace(' ', '_');\n\
    \            }\n        }\n        if (result.Length > 2) {\n            string\
    \ temp = result;\n            result = \"\";\n            int i = 0;\n       \
    \     while (i < temp.Length) {\n                if (temp[i] == ' ') {\n     \
    \               result += temp[i];\n                    i++;\n               \
    \ } else {\n                    result += temp[i].ToString().Replace(' ', '_');\n\
    \                    i++;\n                }\n            }\n        }\n     \
    \   return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += c;\n       \
    \     } else {\n                result += c.ToString().Replace(\" \", \"_\");\n\
    \            }\n        }\n        if (result.Length > 2) {\n            string\
    \ lastSpace = result.Substring(result.Length - 1, 1);\n            string nextSpace\
    \ = result.Substring(result.Length - 2, 1);\n            if (lastSpace == nextSpace)\
    \ {\n                result += result.Substring(0, result.Length - 1);\n     \
    \       }\n        }\n        return result;", '        return text.Replace("
    ", "_").Replace(" -", "-");', "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            }\n            else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            } else {\n  \
    \              result += c;\n            }\n        }\n        if (result.Contains(\"\
    \ \")) {\n            int spaceCount = result.Count(c => c == ' ');\n        \
    \    if (spaceCount > 2) {\n                for (int i = 0; i < spaceCount - 1;\
    \ i++) {\n                    result += \"-\";\n                }\n          \
    \  }\n        }\n        return result;", '        return text.Replace(" ", "_").Replace("
    -", "-");', "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n            else if (c != ' ' && c != '_') {\n \
    \               result += c.ToString();\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += \"_\";\n            }\n\
    \            else if (c != ' ' && c != '_') {\n                result += c;\n\
    \            }\n        }\n        if (result.Length > 2) {\n            string\
    \ newResult = \"\";\n            int lastSpace = 0;\n            int lastSpaceCount\
    \ = 0;\n            foreach (char c in result) {\n                if (c == ' ')\
    \ {\n                    lastSpaceCount++;\n                }\n              \
    \  else if (lastSpaceCount == 2 && lastSpace == 0) {\n                    newResult\
    \ += \"-\";\n                }\n                else if (lastSpaceCount == 2)\
    \ {\n                    newResult += \"_\";\n                }\n            \
    \    else if (lastSpaceCount > 2) {\n                    newResult += \"_\";\n\
    \                }\n                else {\n                    newResult += c;\n\
    \                }\n                lastSpace = c;\n                lastSpaceCount\
    \ = 0;\n            }\n            result = newResult;\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += \"_\";\n            }\n\
    \            else if (c != ' ' && c != '_') {\n                result += c;\n\
    \            }\n        }\n        if (result.Contains(\"_\")) {\n           \
    \ result = result.Replace(\"_\", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            } else if (c\
    \ == ' ' && result.Length > 1) {\n                result += \"-\";\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        // Replace all spaces with underscores\n        text\
    \ = text.Replace(\" \", \"_\");\n        // If there are more than 2 consecutive\
    \ spaces, replace all \n        // consecutive spaces with -\n        if (text.Contains(\"\
    \ \") && (text.IndexOf(\" \") + 1) < text.Length) {\n            text = text.Replace(\"\
    \ \", \"-\");\n        }\n        return text;", '        return Regex.Replace(text,
    @"\s+", " ").Replace(" -", "-");', "        string fixedText = text.Replace(\"\
    \ \", \"_\");\n        if (fixedText.Contains(\" \"))\n        {\n           \
    \ fixedText = fixedText.Replace(\" \", \"-\");\n        }\n        return fixedText;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString();\n            } else\
    \ {\n                result += c.ToString() + \"_\";\n            }\n        }\n\
    \        if (result.Length > 2) {\n            result = result.Replace(\"  \"\
    , \"_\");\n        }\n        return result;", "        string fixedText = text.Replace(\"\
    \ \", \"_\");\n        if (fixedText.Contains(\" \"))\n        {\n           \
    \ fixedText = fixedText.Replace(\" \", \"-\");\n        }\n        return fixedText;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString();\n            } else\
    \ {\n                result += c.ToString() + \"_\";\n            }\n        }\n\
    \        if (result.Contains(\"___\")) {\n            result = result.Replace(\"\
    ___\", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c;\n            }\n            else {\n                result\
    \ += c.ToString().Replace(\" \", \"_\");\n            }\n        }\n        if\
    \ (result.Length > 2) {\n            string newResult = \"\";\n            int\
    \ start = 0;\n            int end = 0;\n            while (end < result.Length)\
    \ {\n                start = end;\n                end = result.IndexOf(' ', start);\n\
    \                if (end == -1) {\n                    newResult += result.Substring(start);\n\
    \                    break;\n                }\n                newResult += result.Substring(start,\
    \ end - start);\n                newResult += \"-\";\n                start =\
    \ end + 1;\n            }\n            result = newResult;\n        }\n      \
    \  return result;", "        // Replace all spaces with underscores\n        text\
    \ = text.Replace(\" \", \"_\");\n        // If there are more than 2 consecutive\
    \ spaces, replace all \n        // consecutive spaces with -\n        if (text.Contains(\"\
    \ \") && (text.IndexOf(\" \") == text.LastIndexOf(\" \") + 1)) {\n           \
    \ text = text.Replace(\" \", \"-\");\n        }\n        return text;", "    \
    \    string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += \"_\";\n            } else if (c ==\
    \ ' ' && result.Length > 1) {\n                result += \"-\";\n            }\
    \ else {\n                result += c;\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += c.ToString();\n      \
    \      }\n            else {\n                result += c.ToString() + \"_\";\n\
    \            }\n        }\n        if (result.Contains(\"_\") && result.Contains(\"\
    _ \") && result.Contains(\"_  \")) {\n            result = result.Replace(\"_\
    \  \", \"_\");\n        }\n        return result;", "        string fixedText\
    \ = text;\n        fixedText = fixedText.Replace(\" \", \"_\");\n        if (fixedText.Contains(\"\
    \  \"))\n        {\n            fixedText = fixedText.Replace(\"  \", \"-\");\n\
    \        }\n        return fixedText;", '        return Regex.Replace(text, @"\s+",
    "_");', "        string result = \"\";\n        foreach (char c in text) {\n \
    \           if (c == ' ') {\n                result += c;\n            }\n   \
    \         else {\n                result += c.ToString().Replace(\" \", \"_\"\
    );\n            }\n        }\n        if (result.Length > 2) {\n            string\
    \ temp = result;\n            result = \"\";\n            int i = 0;\n       \
    \     while (i < temp.Length) {\n                if (temp[i] == ' ') {\n     \
    \               result += temp[i];\n                    i++;\n               \
    \ }\n                else {\n                    result += temp[i].ToString().Replace(\"\
    \ \", \"_\");\n                    i++;\n                }\n            }\n  \
    \      }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += \"\
    _\";\n            }\n            else if (c != ' ' && c != '-') {\n          \
    \      result += c;\n            }\n        }\n        return result;", "    \
    \    string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += \"_\";\n            } else if (c ==\
    \ ' ' && result.Length > 1) {\n                result += \"-\";\n            }\
    \ else {\n                result += c;\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += c;\n            } else\
    \ {\n                result += c.ToString().Replace(\" \", \"_\");\n         \
    \   }\n        }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c.ToString();\n            }\n            else {\n       \
    \         result += c.ToString() + \"_\";\n            }\n        }\n        if\
    \ (result.Contains(\"___\")) {\n            result = result.Replace(\"___\", \"\
    -\");\n        }\n        return result;", "        string result = \"\";\n  \
    \      foreach (char c in text) {\n            if (c == ' ') {\n             \
    \   result += c.ToString();\n            }\n            else {\n             \
    \   result += c.ToString() + \"_\";\n            }\n        }\n        if (result.Contains(\"\
    ___\")) {\n            result = result.Replace(\"___\", \"-\");\n        }\n \
    \       return result;", "        // Replace all spaces with underscores\n   \
    \     text = text.Replace(\" \", \"_\");\n        // If there are more than 2\
    \ consecutive spaces, replace all \n        // consecutive spaces with -\n   \
    \     if (text.Contains(\" \") && (text.IndexOf(\" \") + 1).Equals(text.Length))\
    \ {\n            text = text.Replace(\" \", \"-\");\n        }\n        return\
    \ text;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += \"_\";\n            }\
    \ else {\n                result += c;\n            }\n        }\n        if (result.Contains(\"\
    _\") && result.Contains(\"_\")) {\n            result = result.Replace(\"_\",\
    \ \"-\");\n        }\n        return result;", '        return Regex.Replace(text,
    @"\s+", "_");', '        return Regex.Replace(text, @"\s+", "_");', "        string\
    \ result = \"\";\n        foreach (char c in text) {\n            if (c == ' ')\
    \ {\n                result += c.ToString();\n            } else {\n         \
    \       result += c.ToString() + \"_\";\n            }\n        }\n        if\
    \ (result.Length > 2) {\n            result = result.Replace(\" \", \"-\");\n\
    \        }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += \"\
    _\";\n            } else if (c == ' ' && result.Length > 1) {\n              \
    \  result += \"-\";\n            } else {\n                result += c;\n    \
    \        }\n        }\n        return result;", '        return Regex.Replace(text,
    @"\s+", "_");', "        string result = \"\";\n        foreach (char c in text)\
    \ {\n            if (c == ' ') {\n                result += c;\n            }\n\
    \            else {\n                result += c.ToString().Replace(\" \", \"\
    _\");\n            }\n        }\n        if (result.Length > 2) {\n          \
    \  result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += c.ToString();\n            } else\
    \ {\n                result += c.ToString() + \"_\";\n            }\n        }\n\
    \        if (result.Length > 2) {\n            string temp = result;\n       \
    \     result = \"\";\n            int count = 0;\n            while (temp.Length\
    \ > 0) {\n                if (temp[0] == ' ') {\n                    result +=\
    \ temp[0].ToString();\n                    temp = \"\";\n                    count++;\n\
    \                } else {\n                    result += temp[0].ToString() +\
    \ \"-\";\n                    temp = \"\";\n                    count--;\n   \
    \             }\n            }\n        }\n        return result;", '        return
    Regex.Replace(text, @"\s+", "-");', "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            }\n            else if (result.Length > 0) {\n                result\
    \ += c;\n            }\n            else {\n                result += c.ToString();\n\
    \            }\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += c;\n            } else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          string temp = result;\n            result = \"\";\n            int\
    \ i = 0;\n            while (i < temp.Length - 1) {\n                if (temp[i]\
    \ == ' ' && temp[i + 1] == ' ') {\n                    result += temp[i];\n  \
    \                  i += 2;\n                } else {\n                    result\
    \ += temp[i];\n                    i++;\n                }\n            }\n  \
    \      }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += \"\
    _\";\n            } else if (c == ' ' && result.Length > 1) {\n              \
    \  result += \"-\";\n            } else {\n                result += c;\n    \
    \        }\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += c.ToString().Replace(\" \", \"_\");\n            } else if (c\
    \ != ' ' && c != '-') {\n                result += c.ToString();\n           \
    \ }\n        }\n        if (result.Length > 2) {\n            string temp = result;\n\
    \            result = \"\";\n            int index = 0;\n            while (index\
    \ < temp.Length) {\n                if (temp[index] == ' ') {\n              \
    \      result += temp[index + 1].ToString().Replace(\" \", \"_\");\n         \
    \           index += 2;\n                } else {\n                    result\
    \ += temp[index];\n                    index++;\n                }\n         \
    \   }\n        }\n        return result;", "        string result = \"\";\n  \
    \      foreach (char c in text) {\n            if (c == ' ') {\n             \
    \   result += c;\n            } else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          result = result.Replace(\" \", \"-\");\n        }\n        return result;",
  "        string result = \"\";\n        foreach (char c in text) {\n           \
    \ if (c == ' ') {\n                result += \"_\";\n            } else if (c\
    \ == ' ' && result.Length > 1) {\n                result += \"-\";\n         \
    \   } else {\n                result += c;\n            }\n        }\n       \
    \ return result;", "        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (c == ' ') {\n                result += \"_\";\n   \
    \         } else if (c == ' ' && result.Length > 1) {\n                result\
    \ += \"-\";\n            } else {\n                result += c;\n            }\n\
    \        }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            }\n            else {\n                result += c.ToString().Replace(\"\
    \ \", \"_\");\n            }\n        }\n        if (result.Length > 2) {\n  \
    \          string newresult = \"\";\n            int i = 0;\n            while\
    \ (i < result.Length - 2) {\n                newresult += result[i];\n       \
    \         newresult += \"-\";\n                i++;\n            }\n         \
    \   newresult += result[result.Length - 2];\n            result = newresult;\n\
    \        }\n        return result;", "        string fixedText = text.Replace(\"\
    \ \", \"_\");\n        if (fixedText.Contains(\"  \"))\n            fixedText\
    \ = fixedText.Replace(\"  \", \"-\");\n        return fixedText;", "        string\
    \ result = \"\";\n        foreach (char c in text) {\n            if (c == ' ')\
    \ {\n                result += \"_\";\n            } else if (c == ' ' && result.Length\
    \ > 1) {\n                result += \"-\";\n            } else {\n           \
    \     result += c;\n            }\n        }\n        return result;", "     \
    \   string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += c.ToString().Replace(\" \", \"_\");\n\
    \            }\n            else if (c != ' ' && c != ' ' && c != ' ' && c !=\
    \ ' ') {\n                result += c.ToString().Replace(\" \", \"-\");\n    \
    \        }\n        }\n        return result;", "        string result = \"\"\
    ;\n        foreach (char c in text) {\n            if (c == ' ') {\n         \
    \       result += c;\n            }\n            else {\n                result\
    \ += c.ToString().Replace(\" \", \"_\");\n            }\n        }\n        if\
    \ (result.Length > 2) {\n            result = result.Replace(\" \", \"-\");\n\
    \        }\n        return result;", "        // Replace all spaces with underscores\n\
    \        text = text.Replace(\" \", \"_\");\n\n        // Replace consecutive\
    \ spaces with -\n        if (text.Contains(\" \") && (text.IndexOf(\" \") + 1\
    \ == text.Length)) {\n            text = text.Replace(\" \", \"-\");\n       \
    \ }\n\n        return text;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += \"\
    _\";\n            } else {\n                result += c;\n            }\n    \
    \    }\n        if (result.Contains(\" \")) {\n            int count = 0;\n  \
    \          int start = 0;\n            int end = result.Length - 1;\n        \
    \    while (start < end) {\n                if (result[start] == ' ') {\n    \
    \                count++;\n                } else {\n                    break;\n\
    \                }\n                start++;\n            }\n            while\
    \ (end > start) {\n                if (result[end] == ' ') {\n               \
    \     count--;\n                } else {\n                    break;\n       \
    \         }\n                end--;\n            }\n            if (count > 2)\
    \ {\n                result = result.Replace(\" \", \"-\");\n            }\n \
    \       }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in text) {\n            if (c == ' ') {\n                result += c;\n\
    \            } else {\n                result += c.ToString().Replace(\" \", \"\
    _\");\n            }\n        }\n        if (result.Length > 2) {\n          \
    \  string temp = result;\n            result = \"\";\n            int count =\
    \ 0;\n            while (temp.Length > 0) {\n                if (temp.StartsWith(\"\
    _\")) {\n                    result += temp.Substring(1);\n                  \
    \  temp = \"\";\n                } else {\n                    result += temp.Substring(1);\n\
    \                    temp = \"\";\n                    count++;\n            \
    \    }\n                if (count == 2) {\n                    result += temp.Substring(1);\n\
    \                    temp = \"\";\n                    count = 0;\n          \
    \      }\n            }\n        }\n        return result;", "        string fixedText\
    \ = text.Replace(\" \", \"_\");\n        if (fixedText.Contains(\" \"))\n    \
    \        fixedText = fixedText.Replace(\" \", \"-\");\n        if (fixedText.Contains(\"\
    \ \"))\n            fixedText = fixedText.Replace(\" \", \"-\");\n        return\
    \ fixedText;", "        string result = \"\";\n        foreach (char c in text)\
    \ {\n            if (c == ' ') {\n                result += c;\n            }\
    \ else {\n                result += c.ToString().Replace(' ', '_');\n        \
    \    }\n        }\n        if (result.Contains(\"  \")) {\n            result\
    \ = result.Replace(\"  \", \"-\");\n        }\n        return result;", "    \
    \    string result = \"\";\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                result += c;\n            }\n            else\
    \ {\n                result += c.ToString().Replace(\" \", \"_\");\n         \
    \   }\n        }\n        if (result.Length > 2) {\n            result = result.Replace(\"\
    \ \", \"-\");\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in text) {\n            if (c == ' ') {\n       \
    \         result += \"_\";\n            }\n            else if (c != ' ' && c\
    \ != '-') {\n                result += c;\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in text) {\n\
    \            if (c == ' ') {\n                result += c;\n            }\n  \
    \          else {\n                result += c.ToString().Replace(\" \", \"_\"\
    );\n            }\n        }\n        if (result.Length > 2) {\n            string\
    \ newresult = \"\";\n            int count = 0;\n            foreach (char c in\
    \ result) {\n                if (c == ' ') {\n                    count++;\n \
    \               }\n                else {\n                    if (count == 2)\
    \ {\n                        newresult += c.ToString().Replace(\" \", \"-\");\n\
    \                    }\n                    else {\n                        newresult\
    \ += c.ToString().Replace(\" \", \"_\");\n                    }\n            \
    \        count = 0;\n                }\n            }\n            result = newresult;\n\
    \        }\n        return result;"]
stop_tokens:
- "\n    }\n"

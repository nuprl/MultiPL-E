name: HumanEval_114_minSubArraySum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array of integers nums, find the minimum sum of any\
  \ non-empty sub-array\n    // of nums.\n    // Example\n    public static long Minsubarraysum(List<long>\
  \ nums) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)1L, (long)2L, (long)4L})))\
  \ == (1L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)-3L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)-1L, (long)-2L, (long)-3L, (long)2L, (long)-10L}))) == (-14L));\n\
  \    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-9999999999999999L})))\
  \ == (-9999999999999999L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)0L, (long)10L, (long)20L, (long)1000000L}))) == (0L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L})))\
  \ == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)10L, (long)11L, (long)13L, (long)8L, (long)3L, (long)4L})))\
  \ == (3L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-33L, (long)32L, (long)-1L, (long)0L, (long)-2L}))) == (-33L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-10L}))) == (-10L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)7L}))) == (7L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)1L, (long)-1L}))) == (-1L));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long minSum = nums[0];\n        long minSumIndex = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n                minSumIndex = n;\n            }\n \
    \       }\n        return minSum;", "        long minSum = nums.Sum();\n     \
    \   foreach (var num in nums.Skip(1))\n            minSum = nums.Sum() - num;\n\
    \        return minSum;", "        long minSum = nums.Min();\n        long sum\
    \ = 0;\n        foreach (long n in nums) {\n            sum += n;\n          \
    \  if (sum < minSum) {\n                minSum = sum;\n            }\n       \
    \ }\n        return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long min = nums.Min();\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long minSum = nums.Min();\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long min = long.MaxValue;\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long minSum = nums[0];\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (sum < minSum) {\n       \
    \         minSum = sum;\n            }\n        }\n        return minSum;", " \
    \       long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Min();\n        long sum = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        long max = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return min\
    \ + max;", "        long sum = 0;\n        long minSum = nums[0];\n        for\
    \ (int i = 1; i < nums.Count; i++) {\n            sum += nums[i];\n          \
    \  if (sum < minSum) {\n                minSum = sum;\n            }\n       \
    \ }\n        return minSum;", "        long sum = 0;\n        long min = nums[0];\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long min = long.MaxValue;\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long minSum = nums[0];\n        long minSumIndex\
    \ = 0;\n        foreach (long num in nums) {\n            sum += num;\n      \
    \      if (sum < minSum) {\n                minSum = sum;\n                minSumIndex\
    \ = num;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++)\
    \ {\n            sum += nums[i];\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long minSum = nums[0];\n        long minSumIndex = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n                minSumIndex = n;\n           \
    \ }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n           \
    \ sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long minSum = nums.Min();\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long minSum = nums[0];\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ min = nums[0];\n        long max = nums[0];\n        for (int i = 1; i < nums.Count;\
    \ i++) {\n            sum += nums[i];\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n            if (sum > max) {\n           \
    \     max = sum;\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Min();\n        long sum = 0;\n        foreach (long n in nums) {\n \
    \           sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = nums[0];\n        long max = nums[0];\n        for\
    \ (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n          \
    \  if (sum < min) {\n                min = sum;\n            }\n            if\
    \ (sum > max) {\n                max = sum;\n            }\n        }\n      \
    \  return max;", "        long sum = 0;\n        long minSum = nums.Min();\n \
    \       foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        long maxSum = nums.Max();\n        long minSumIndex = 0;\n        long\
    \ maxSumIndex = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            \
    \    minSumIndex = n;\n            }\n            if (sum > maxSum) {\n      \
    \          maxSum = sum;\n                maxSumIndex = n;\n            }\n  \
    \      }\n        long sumOfSubArray = sum - minSum - maxSum;\n        if (sumOfSubArray\
    \ == 0) {\n            return minSum;\n        }\n        long minSumOfSubArray\
    \ = sum - minSum;\n        long maxSumOfSubArray = sum - maxSum;\n        long\
    \ minSumOfSubArrayIndex = minSumIndex - minSum;\n        long maxSumOfSubArrayIndex\
    \ = maxSumIndex - maxSum;\n        long minSumOfSubArraySum = minSum - minSumOfSubArray;\n\
    \        long maxSumOfSubArraySum = maxSum - maxSumOfSubArray;\n        long minSumOfSubArraySumIndex\
    \ = minSumIndex - minSumOfSubArray;\n        long maxSumOfSubArraySumIndex = maxSumIndex\
    \ - maxSumOfSubArray;\n        long minSumOfSubArraySumOfSubArray = minSumOfSubArray\
    \ - minSumOfSubArraySum;\n        long maxSumOfSubArraySumOfSubArray = maxSumOfSubArray\
    \ - maxSumOfSubArraySum;\n        long minSumOfSubArraySumOfSubArrayIndex = minSumOfSubArrayIndex\
    \ - minSumOfSubArraySum;\n        long maxSumOfSubArraySumOfSubArrayIndex = maxSumOfSubArrayIndex\
    \ - maxSumOfSubArraySum;\n        long minSumOfSubArraySumOfSubArraySum = minSumOfSubArraySum\
    \ - minSumOfSubArraySumOfSubArray;\n        long maxSumOfSubArraySumOfSubArraySum\
    \ = maxSumOfSubArraySum - maxSumOfSubArraySumOfSubArray;\n        long minSumOfSubArraySumOfSubArraySumIndex\
    \ = minSumOfSubArraySumIndex - minSumOfSubArraySumOfSubArray;\n        long maxSumOfSubArraySumOfSubArraySumIndex\
    \ = maxSumOfSubArraySumIndex - maxSumOfSubArraySumOfSubArray;\n        long minSumOfSubArraySumOfSubArraySumOfSubArray\
    \ = minSumOfSubArraySumOf", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        long maxSum = nums.Max();\n        long minSumIndex = 0;\n        long\
    \ maxSumIndex = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            \
    \    minSumIndex = n;\n            }\n            if (sum > maxSum) {\n      \
    \          maxSum = sum;\n                maxSumIndex = n;\n            }\n  \
    \      }\n        long sumOfSubarraySum = sum - minSum - maxSum;\n        long\
    \ sumOfSubarraySumIndex = 0;\n        long sumOfSubarraySumIndexIndex = 0;\n \
    \       foreach (long n in nums) {\n            sumOfSubarraySumIndex += n;\n\
    \            if (sumOfSubarraySumIndex == sumOfSubarraySum) {\n              \
    \  sumOfSubarraySumIndexIndex = n;\n            }\n        }\n        long sumOfSubarraySumIndexIndex2\
    \ = sumOfSubarraySumIndex - minSumIndex - maxSumIndex;\n        long sumOfSubarraySumIndexIndex3\
    \ = sumOfSubarraySumIndexIndex - minSumIndexIndex - maxSumIndexIndex;\n      \
    \  long sumOfSubarraySumIndexIndex4 = sumOfSubarraySumIndexIndex - minSumIndexIndex\
    \ - maxSumIndexIndex;\n        long sumOfSubarraySumIndexIndex5 = sumOfSubarraySumIndexIndex\
    \ - minSumIndexIndex - maxSumIndexIndex;\n        long sumOfSubarraySumIndexIndex6\
    \ = sumOfSubarraySumIndexIndex - minSumIndexIndex - maxSumIndexIndex;\n      \
    \  long sumOfSubarraySumIndexIndex7 = sumOfSubarraySumIndexIndex - minSumIndexIndex\
    \ - maxSumIndexIndex;\n        long sumOfSubarraySumIndexIndex8 = sumOfSubarraySumIndexIndex\
    \ - minSumIndexIndex - maxSumIndexIndex;\n        long sumOfSubarraySumIndexIndex9\
    \ = sumOfSubarraySumIndexIndex - minSumIndexIndex - maxSumIndexIndex;\n      \
    \  long sumOfSubarraySumIndexIndex10 = sumOfSubarraySumIndexIndex - minSumIndexIndex\
    \ - maxSumIndexIndex;\n        long sumOfSubarraySumIndexIndex11 = sumOfSubarraySumIndexIndex\
    \ - minSumIndexIndex - maxSumIndexIndex;\n        long sumOfSubarraySumIndexIndex12\
    \ = sumOfSubarraySumIndexIndex - minSumIndexIndex - maxSumIndexIndex;\n      \
    \  long sumOfSubarraySumIndexIndex13 = sumOfSubarraySumIndexIndex - minSumIndexIndex\
    \ - maxSumIndex", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        long\
    \ max = long.MinValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) min = sum;\n            if (sum > max) max =\
    \ sum;\n        }\n        return min + max;", "        long sum = 0;\n      \
    \  long min = long.MaxValue;\n        foreach (long n in nums) {\n           \
    \ sum += n;\n            if (sum < min) {\n                min = sum;\n      \
    \      }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long minSum = nums.Sum();\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = nums[0];\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        long maxSum = nums.Max();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = nums[0];\n        long max\
    \ = nums[0];\n        foreach (long n in nums) {\n            sum += n;\n    \
    \        if (sum < min) {\n                min = sum;\n            }\n       \
    \     if (sum > max) {\n                max = sum;\n            }\n        }\n\
    \        return max;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long minSum = nums.Min();\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums[0];\n        long minSumIndex\
    \ = 0;\n        long minSumIndex2 = 0;\n        foreach (long num in nums) {\n\
    \            sum += num;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n                minSumIndex = num;\n            }\n            if (sum\
    \ == minSum) {\n                minSumIndex2 = num;\n            }\n        }\n\
    \        long minSumIndex3 = nums.IndexOf(minSumIndex2);\n        long minSumIndex4\
    \ = nums.IndexOf(minSumIndex);\n        long minSumIndex5 = nums.IndexOf(minSumIndex3);\n\
    \        long minSumIndex6 = nums.IndexOf(minSumIndex4);\n        long minSumIndex7\
    \ = nums.IndexOf(minSumIndex5);\n        long minSumIndex8 = nums.IndexOf(minSumIndex6);\n\
    \        long minSumIndex9 = nums.IndexOf(minSumIndex7);\n        long minSumIndex10\
    \ = nums.IndexOf(minSumIndex8);\n        long minSumIndex11 = nums.IndexOf(minSumIndex9);\n\
    \        long minSumIndex12 = nums.IndexOf(minSumIndex10);\n        long minSumIndex13\
    \ = nums.IndexOf(minSumIndex11);\n        long minSumIndex14 = nums.IndexOf(minSumIndex12);\n\
    \        long minSumIndex15 = nums.IndexOf(minSumIndex13);\n        long minSumIndex16\
    \ = nums.IndexOf(minSumIndex14);\n        long minSumIndex17 = nums.IndexOf(minSumIndex15);\n\
    \        long minSumIndex18 = nums.IndexOf(minSumIndex16);\n        long minSumIndex19\
    \ = nums.IndexOf(minSumIndex17);\n        long minSumIndex20 = nums.IndexOf(minSumIndex18);\n\
    \        long minSumIndex21 = nums.IndexOf(minSumIndex19);\n        long minSumIndex22\
    \ = nums.IndexOf(minSumIndex20);\n        long minSumIndex23 = nums.IndexOf(minSumIndex21);\n\
    \        long minSumIndex24 = nums.IndexOf(minSumIndex22);\n        long minSumIndex25\
    \ = nums.IndexOf(minSumIndex23);\n        long minSumIndex26 = nums.IndexOf(minSumIndex24);\n\
    \        long minSumIndex27 = nums.IndexOf(minSumIndex25);\n        long minSumIndex28\
    \ = nums.IndexOf(minSumIndex26);\n        long minSumIndex29 = nums.IndexOf(minSumIndex27);\n",
  "        long sum = 0;\n        long min = nums[0];\n        long max = nums[0];\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return max;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        long\
    \ mid = sum / 2;\n        long mid2 = sum - mid;\n        long mid3 = sum - mid\
    \ + mid2;\n        long mid4 = sum - mid + mid + mid2;\n        long mid5 = sum\
    \ - mid + mid + mid + mid2;\n        long mid6 = sum - mid + mid + mid + mid +\
    \ mid2;\n        long mid7 = sum - mid + mid + mid + mid + mid + mid2;\n     \
    \   long mid8 = sum - mid + mid + mid + mid + mid + mid + mid2;\n        long\
    \ mid9 = sum - mid + mid + mid + mid + mid + mid + mid + mid2;\n        long mid10\
    \ = sum - mid + mid + mid + mid + mid + mid + mid + mid + mid2;\n        long\
    \ mid11 = sum - mid + mid + mid + mid + mid + mid + mid + mid + mid + mid2;\n\
    \        long mid12 = sum - mid + mid + mid + mid + mid + mid + mid + mid + mid\
    \ + mid + mid2;\n        long mid13 = sum - mid + mid + mid + mid + mid + mid\
    \ + mid + mid + mid + mid + mid + mid2;\n        long mid14 = sum - mid + mid\
    \ + mid + mid + mid + mid + mid + mid + mid + mid + mid + mid2;\n        long\
    \ mid15 = sum - mid + mid + mid + mid + mid + mid + mid + mid + mid + mid + mid\
    \ + mid2;\n        long mid16 = sum - mid + mid + mid + mid + mid + mid + mid\
    \ + mid + mid + mid + mid + mid2;\n        long mid17 = sum - mid + mid + mid\
    \ + mid + mid + mid + mid + mid + mid + mid + mid + mid + mid2;\n        long\
    \ mid18 = sum - mid + mid + mid + mid + mid + mid + mid + mid + mid + mid + mid\
    \ + mid + mid2;\n        long mid19 = sum - mid + mid + mid + mid + mid + mid\
    \ + mid + mid + mid + mid + mid + mid + mid2;\n        long mid20 = sum - mid\
    \ + mid + mid + mid + mid + ", "        long sum = 0;\n        long min = nums[0];\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        long max = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return max;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ min = nums.Min();\n        long max = nums.Max();\n        long sum = 0;\n \
    \       foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return min\
    \ + max;", "        long sum = 0;\n        long minSum = nums.Min();\n       \
    \ long maxSum = nums.Max();\n        long min = maxSum;\n        long max = minSum;\n\
    \        long sumOfSubarray = 0;\n        long subarraySum = 0;\n        bool\
    \ isSubarraySum = false;\n        bool isSubarraySumFound = false;\n        bool\
    \ isSubarraySumFound2 = false;\n        bool isSubarraySumFound3 = false;\n  \
    \      bool isSubarraySumFound4 = false;\n        bool isSubarraySumFound5 = false;\n\
    \        bool isSubarraySumFound6 = false;\n        bool isSubarraySumFound7 =\
    \ false;\n        bool isSubarraySumFound8 = false;\n        bool isSubarraySumFound9\
    \ = false;\n        bool isSubarraySumFound10 = false;\n        bool isSubarraySumFound11\
    \ = false;\n        bool isSubarraySumFound12 = false;\n        bool isSubarraySumFound13\
    \ = false;\n        bool isSubarraySumFound14 = false;\n        bool isSubarraySumFound15\
    \ = false;\n        bool isSubarraySumFound16 = false;\n        bool isSubarraySumFound17\
    \ = false;\n        bool isSubarraySumFound18 = false;\n        bool isSubarraySumFound19\
    \ = false;\n        bool isSubarraySumFound20 = false;\n        bool isSubarraySumFound21\
    \ = false;\n        bool isSubarraySumFound22 = false;\n        bool isSubarraySumFound23\
    \ = false;\n        bool isSubarraySumFound24 = false;\n        bool isSubarraySumFound25\
    \ = false;\n        bool isSubarraySumFound26 = false;\n        bool isSubarraySumFound27\
    \ = false;\n        bool isSubarraySumFound28 = false;\n        bool isSubarraySumFound29\
    \ = false;\n        bool isSubarraySumFound30 = false;\n        bool isSubarraySumFound31\
    \ = false;\n        bool isSubarraySumFound32 = false;\n        bool isSubarraySumFound33\
    \ = false;\n        bool isSubarraySumFound34 = false;\n        bool isSubarraySumFound35\
    \ = false;\n        bool isSubarraySumFound36 = false;\n        bool isSubarraySumFound37\
    \ = false;\n        bool isSubarraySumFound38 = false;\n        bool isSubarraySumFound39\
    \ = false;\n        bool isSubarraySumFound40 = false;\n        bool isSubarraySumFound41\
    \ = false;\n        bool isSubarraySumFound42 = false;\n        bool isSubarraySumFound43\
    \ = false;\n        bool isSubarraySumFound44 = false;\n        bool isSubarraySum",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums[0];\n        long minSumIndex = 0;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n                minSumIndex\
    \ = num;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = nums[0];\n        foreach (long n in nums) {\n            sum\
    \ += n;\n            if (sum < min) {\n                min = sum;\n          \
    \  }\n        }\n        return min;", "        long min = long.MaxValue;\n  \
    \      long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums.Min();\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = nums.Min();\n        long max = nums.Max();\n\
    \        long mid = (min + max) / 2;\n        long sumOfMiddle = nums.Sum(x =>\
    \ Math.Abs(x - mid));\n        sum = sumOfMiddle + sum;\n        if (sumOfMiddle\
    \ < sum) {\n            sum = sumOfMiddle;\n        }\n        foreach (var num\
    \ in nums) {\n            if (num < mid) {\n                sum += num;\n    \
    \        }\n        }\n        return sum;", "        long sum = 0;\n        long\
    \ min = nums[0];\n        long max = nums[0];\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n            if (sum > max) {\n                max = sum;\n\
    \            }\n        }\n        return max;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long min = nums[0];\n\
    \        for (int i = 1; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = nums.Min();\n        long max = nums.Max();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        long min = nums[0];\n        long max = nums[0];\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        long minSum = nums.Min();\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = nums[0];\n        long max = nums[0];\n\
    \        foreach (long num in nums) {\n            if (num < min) min = num;\n\
    \            if (num > max) max = num;\n            sum += num;\n        }\n \
    \       return sum - min;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums.Min();\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long num\
    \ in nums) {\n            sum += num;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        long\
    \ mid = sum / 2;\n        long mid2 = sum / 2;\n        long mid3 = sum / 2;\n\
    \        long mid4 = sum / 2;\n        long mid5 = sum / 2;\n        long mid6\
    \ = sum / 2;\n        long mid7 = sum / 2;\n        long mid8 = sum / 2;\n   \
    \     long mid9 = sum / 2;\n        long mid10 = sum / 2;\n        long mid11\
    \ = sum / 2;\n        long mid12 = sum / 2;\n        long mid13 = sum / 2;\n \
    \       long mid14 = sum / 2;\n        long mid15 = sum / 2;\n        long mid16\
    \ = sum / 2;\n        long mid17 = sum / 2;\n        long mid18 = sum / 2;\n \
    \       long mid19 = sum / 2;\n        long mid20 = sum / 2;\n        long mid21\
    \ = sum / 2;\n        long mid22 = sum / 2;\n        long mid23 = sum / 2;\n \
    \       long mid24 = sum / 2;\n        long mid25 = sum / 2;\n        long mid26\
    \ = sum / 2;\n        long mid27 = sum / 2;\n        long mid28 = sum / 2;\n \
    \       long mid29 = sum / 2;\n        long mid30 = sum / 2;\n        long mid31\
    \ = sum / 2;\n        long mid32 = sum / 2;\n        long mid33 = sum / 2;\n \
    \       long mid34 = sum / 2;\n        long mid35 = sum / 2;\n        long mid36\
    \ = sum / 2;\n        long mid37 = sum / 2;\n        long mid38 = sum / 2;\n \
    \       long mid39 = sum / 2;\n        long mid40 = sum / 2;\n        long mid41\
    \ = sum / 2;\n        long mid42 = sum / 2;\n        long mid43 = sum / 2;\n \
    \       long mid44 = sum / 2;\n        long mid45 = sum / 2;\n        long mid46\
    \ = sum / 2;\n        long mid47 = sum / 2;\n        long mid48 = sum / 2;\n \
    \       long mid49 = sum / 2;\n        long mid50 = sum / 2;\n        long mid51\
    \ = sum / 2;\n        long mid52 = sum / 2;\n        long mid53 = sum / 2;", " \
    \       long sum = 0;\n        long min = nums[0];\n        long max = nums[0];\n\
    \        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > max) {\n                max = sum;\n            }\n      \
    \  }\n        return max;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        long max = long.MinValue;\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            min = Math.Min(min, sum);\n            max = Math.Max(max,\
    \ sum);\n        }\n        return sum;", "        long sum = 0;\n        long\
    \ min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n           \
    \ sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = nums[0];\n        long max = nums[0];\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (sum < min) {\n          \
    \      min = sum;\n            }\n            if (sum > max) {\n             \
    \   max = sum;\n            }\n        }\n        return max;", "        long\
    \ sum = 0;\n        long min = nums[0];\n        long max = nums[0];\n       \
    \ foreach (long n in nums) {\n            sum += n;\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > max) {\n\
    \                max = sum;\n            }\n        }\n        return max;", " \
    \       long sum = 0;\n        long minSum = nums.Min();\n        long maxSum\
    \ = nums.Max();\n        long minSumIndex = 0;\n        long maxSumIndex = 0;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n                minSumIndex\
    \ = num;\n            }\n            if (sum > maxSum) {\n                maxSum\
    \ = sum;\n                maxSumIndex = num;\n            }\n        }\n     \
    \   long minSumSubArray = nums[minSumIndex];\n        long maxSumSubArray = nums[maxSumIndex];\n\
    \        long sumSubArray = sum - minSumSubArray - maxSumSubArray;\n        return\
    \ sumSubArray;", "        long sum = 0;\n        long min = nums[0];\n       \
    \ long max = nums[0];\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \     }\n        return max;", "        long sum = 0;\n        long min = nums[0];\n\
    \        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long minSum = nums[0];\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long minSum = nums.Sum();\n        foreach (long i in nums)\
    \ {\n            minSum -= i;\n            if (minSum < 0) {\n               \
    \ minSum = 0;\n            }\n        }\n        return minSum;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return min\
    \ + max;", "        long sum = 0;\n        long min = long.MaxValue;\n       \
    \ foreach (long n in nums) {\n            sum += n;\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n        }\n        return min;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        long sumOfSubarraySum\
    \ = 0;\n        foreach (long num in nums) {\n            sum += num;\n      \
    \      sumOfSubarraySum += num;\n            if (sumOfSubarraySum < minSum) {\n\
    \                minSum = sumOfSubarraySum;\n            }\n        }\n      \
    \  return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums[0];\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = nums[0];\n   \
    \     long max = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n  \
    \          sum += nums[i];\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n            if (sum > max) {\n                max = sum;\n\
    \            }\n        }\n        return max;", "        long sum = 0;\n    \
    \    long minSum = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n\
    \            sum += nums[i];\n            if (sum < minSum) {\n              \
    \  minSum = sum;\n            }\n        }\n        return minSum;", "       \
    \ long sum = 0;\n        long min = nums[0];\n        long max = nums[0];\n  \
    \      for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n \
    \           if (sum < min) {\n                min = sum;\n            }\n    \
    \        if (sum > max) {\n                max = sum;\n            }\n       \
    \ }\n        return max - min;", "        long sum = 0;\n        long minSum =\
    \ nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n   \
    \         if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        long max = long.MinValue;\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (n < min) min = n;\n     \
    \       if (n > max) max = n;\n        }\n        long mid = sum / 2;\n      \
    \  long mid2 = sum - mid;\n        long mid3 = sum - mid + mid2;\n        long\
    \ mid4 = sum - mid + mid2 + mid3;\n        long mid5 = sum - mid + mid2 + mid3\
    \ + mid4;\n        long mid6 = sum - mid + mid2 + mid3 + mid4 + mid5;\n      \
    \  long mid7 = sum - mid + mid2 + mid3 + mid4 + mid5 + mid6;\n        long mid8\
    \ = sum - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7;\n        long mid9 =\
    \ sum - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7 + mid8;\n        long mid10\
    \ = sum - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7 + mid8 + mid9;\n     \
    \   long mid11 = sum - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7 + mid8 +\
    \ mid9 + mid10;\n        long mid12 = sum - mid + mid2 + mid3 + mid4 + mid5 +\
    \ mid6 + mid7 + mid8 + mid9 + mid10 + mid11;\n        long mid13 = sum - mid +\
    \ mid2 + mid3 + mid4 + mid5 + mid6 + mid7 + mid8 + mid9 + mid10 + mid11 + mid12;\n\
    \        long mid14 = sum - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7 + mid8\
    \ + mid9 + mid10 + mid11 + mid12 + mid13;\n        long mid15 = sum - mid + mid2\
    \ + mid3 + mid4 + mid5 + mid6 + mid7 + mid8 + mid9 + mid10 + mid11 + mid12 + mid13\
    \ + mid14;\n        long mid16 = sum - mid + mid2 + mid3 + mid4 + mid5 + mid6\
    \ + mid7 + mid8 + mid9 + mid10 + mid11 + mid12 + mid13 + mid14 + mid15;\n    \
    \    long mid17 = sum - mid + mid2 + mid3 + mid4 + mid5 + mid6 + mid7 + mid8 +\
    \ mid9 + mid10 + mid11 + mid12 + mid13 + mid14 + mid15 + mid16;\n        ", " \
    \       long sum = 0;\n        long minSum = nums[0];\n        for (int i = 1;\
    \ i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum < minSum)\
    \ {\n                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = nums[0];\n        long max = nums[0];\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (sum < min) {\n          \
    \      min = sum;\n            }\n            if (sum > max) {\n             \
    \   max = sum;\n            }\n        }\n        return max;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long minSum = nums.Sum();\n\
    \        foreach (long i in nums) {\n            minSum -= i;\n            if\
    \ (minSum < 0) {\n                minSum = 0;\n            }\n        }\n    \
    \    return minSum;", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = nums.Min();\n\
    \        long max = nums.Max();\n        foreach (long n in nums) {\n        \
    \    sum += n;\n            if (sum < min) {\n                min = sum;\n   \
    \         }\n            if (sum > max) {\n                max = sum;\n      \
    \      }\n        }\n        return sum;", "        long sum = 0;\n        long\
    \ minSum = nums.Min();\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ minSum = nums[0];\n        long minSumIndex = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n                minSumIndex = n;\n            }\n      \
    \  }\n        return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        long\
    \ max = long.MinValue;\n        foreach (long num in nums) {\n            sum\
    \ += num;\n            if (sum < min) {\n                min = sum;\n        \
    \    }\n            if (sum > max) {\n                max = sum;\n           \
    \ }\n        }\n        return min + max;", "        long sum = 0;\n        long\
    \ minSum = nums.Min();\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        long max = long.MinValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n            if (sum > max) {\n           \
    \     max = sum;\n            }\n        }\n        return min + max;", "    \
    \    long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        return\
    \ sum - min + max;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long minSum = nums[0];\n        long maxSum = nums[0];\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        long\
    \ max = long.MinValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) min = sum;\n            if (sum > max) max =\
    \ sum;\n        }\n        return min + max;", "        long sum = 0;\n      \
    \  long minSum = nums.Min();\n        foreach (long n in nums) {\n           \
    \ sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        long sumOfSubarray = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            sumOfSubarray += n;\n     \
    \       if (sumOfSubarray < minSum) {\n                minSum = sumOfSubarray;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long minSum = nums.Min();\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n           \
    \ sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long min = nums[0];\n\
    \        long max = nums[0];\n        foreach (long n in nums) {\n           \
    \ sum += n;\n            if (sum < min) {\n                min = sum;\n      \
    \      }\n            if (sum > max) {\n                max = sum;\n         \
    \   }\n        }\n        return max;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long minSum = nums.Sum();\n    \
    \    long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums[0];\n        foreach (long n in nums) {\n            sum += n;\n    \
    \        if (sum < minSum) {\n                minSum = sum;\n            }\n \
    \       }\n        return minSum;", "        long sum = 0;\n        long min =\
    \ long.MaxValue;\n        long max = long.MinValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) min = sum;\n    \
    \        if (sum > max) max = sum;\n        }\n        return min + max;", " \
    \       long minSum = nums.Sum();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long min = long.MaxValue;\n        foreach (long i in nums) {\n\
    \            sum += i;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ minSum = nums[0];\n        long minSumIndex = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n                minSumIndex = n;\n            }\n      \
    \  }\n        return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        long maxSum = nums.Max();\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n            if (sum > maxSum) {\n                maxSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long min = nums[0];\n        foreach (long n in nums) {\n            sum\
    \ += n;\n            if (sum < min) {\n                min = sum;\n          \
    \  }\n        }\n        return min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long minSum = nums.Sum();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long minSum = nums.Min();\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        return\
    \ sum - min + max;", "        long sum = 0;\n        long min = nums[0];\n   \
    \     long max = nums[0];\n        foreach (long n in nums) {\n            sum\
    \ += n;\n            if (sum < min) {\n                min = sum;\n          \
    \  }\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        return max;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long minSum = nums.Min();\n    \
    \    long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long minSum = nums.Sum();\n        long\
    \ sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n      \
    \      if (sum < minSum) {\n                minSum = sum;\n            }\n   \
    \     }\n        return minSum;", "        long min = long.MaxValue;\n       \
    \ long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < min) {\n                min = sum;\n            }\n    \
    \    }\n        return min;", "        long min = long.MaxValue;\n        long\
    \ sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n      \
    \      if (sum < min) {\n                min = sum;\n            }\n        }\n\
    \        return min;", "        long sum = 0;\n        long minSum = nums[0];\n\
    \        long minSumIndex = 0;\n        long minSumIndex2 = 0;\n        long minSumIndex3\
    \ = 0;\n        long minSumIndex4 = 0;\n        long minSumIndex5 = 0;\n     \
    \   long minSumIndex6 = 0;\n        long minSumIndex7 = 0;\n        long minSumIndex8\
    \ = 0;\n        long minSumIndex9 = 0;\n        long minSumIndex10 = 0;\n    \
    \    long minSumIndex11 = 0;\n        long minSumIndex12 = 0;\n        long minSumIndex13\
    \ = 0;\n        long minSumIndex14 = 0;\n        long minSumIndex15 = 0;\n   \
    \     long minSumIndex16 = 0;\n        long minSumIndex17 = 0;\n        long minSumIndex18\
    \ = 0;\n        long minSumIndex19 = 0;\n        long minSumIndex20 = 0;\n   \
    \     long minSumIndex21 = 0;\n        long minSumIndex22 = 0;\n        long minSumIndex23\
    \ = 0;\n        long minSumIndex24 = 0;\n        long minSumIndex25 = 0;\n   \
    \     long minSumIndex26 = 0;\n        long minSumIndex27 = 0;\n        long minSumIndex28\
    \ = 0;\n        long minSumIndex29 = 0;\n        long minSumIndex30 = 0;\n   \
    \     long minSumIndex31 = 0;\n        long minSumIndex32 = 0;\n        long minSumIndex33\
    \ = 0;\n        long minSumIndex34 = 0;\n        long minSumIndex35 = 0;\n   \
    \     long minSumIndex36 = 0;\n        long minSumIndex37 = 0;\n        long minSumIndex38\
    \ = 0;\n        long minSumIndex39 = 0;\n        long minSumIndex40 = 0;\n   \
    \     long minSumIndex41 = 0;\n        long minSumIndex42 = 0;\n        long minSumIndex43\
    \ = 0;\n        long minSumIndex44 = 0;\n        long minSumIndex45 = 0;\n   \
    \     long minSumIndex46 = 0;\n        long minSumIndex47 = 0;\n        long minSumIndex48\
    \ = 0;\n        long minSumIndex49 = 0;\n        long minSumIndex50 = 0;\n   \
    \     long minSumIndex51 = 0;\n        long minSumIndex52 = 0;\n        long minSumIndex53\
    \ = 0;\n        long minSumIndex54 = 0;\n        long minSumIndex55 = 0;\n   \
    \     long minSumIndex56 = 0;\n        long minSumIndex57 = 0;\n        long minSumIndex58\
    \ = 0;\n        long minSumIndex59 = 0;\n        long minSumIndex60 = 0;\n   \
    \     long minSumIndex61 = 0;\n        long minSumIndex62 = 0;\n        long minSumIndex63\
    \ = 0;\n", "        long sum = 0;\n        long minSum = nums.Min();\n       \
    \ foreach (long n in nums) {\n            sum += n;\n            if (sum < minSum)\
    \ {\n                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;"]
stop_tokens:
- "\n    }\n"

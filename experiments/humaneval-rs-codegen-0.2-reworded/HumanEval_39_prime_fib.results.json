{
  "name": "HumanEval_39_prime_fib",
  "language": "rs",
  "prompt": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n",
  "tests": "}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp7m20ivbq.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp7m20ivbq.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `13`', /tmp/tmp9spnffp6.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 7\n  let h = 11\n  let i = 13\n  let j = 17\n  let k = 19\n  let l = 23\n  let m = 29\n  let n = 31\n  let o = 37\n  let p = 41\n  let q = 43\n  let r = 47\n  let s = 53\n  let t = 59\n  let u = 61\n  let v = 67\n  let w = 71\n  let x = 73\n  let y = 79\n  let z = 83\n  let aa = 89\n  let bb = 97\n  let cc = 101\n  let dd = 103\n  let ee = 107\n  let ff = 109\n  let gg = 113\n  let hh = 127\n  let ii = 131\n  let jj = 137\n  let kk = 139\n  let ll = 149\n  let mm = 151\n  let nn = 157\n  let oo = 163\n  let pp = 167\n  let qq = 169\n  let rr = 173\n  let ss = 179\n  let tt = 181\n  let uu = 191\n  let vv = 193\n  let ww = 197\n  let xx = 199\n  let yy = 211\n  let zz = 223\n  let aaa = 229\n  let bbb = 233\n  let ccc = 239\n  let ddd = 241\n  let eee = 251\n  let fff = 257\n  let ggg = 263\n  let hhh = 269\n  let iii = 271\n  let jjj = 277\n  let kkk = 281\n  let lll = 283\n  let mmm = 293\n  let nnn = 307\n  let ooo = 311\n  let ppp = 313\n  let qqq = 317\n  let rrr = 331\n  let sss = 337\n  let ttt = 347\n  let uuu = 349\n  let vvv = 353\n  let www = 359\n  let xxx = 367\n  let y\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 7\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:22:12\n   |\n22 |   let g = 7\n   |            ^ help: add `;` here\n23 |   let h = 11\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:23:13\n   |\n23 |   let h = 11\n   |             ^ help: add `;` here\n24 |   let i = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:24:13\n   |\n24 |   let i = 13\n   |             ^ help: add `;` here\n25 |   let j = 17\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:25:13\n   |\n25 |   let j = 17\n   |             ^ help: add `;` here\n26 |   let k = 19\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:26:13\n   |\n26 |   let k = 19\n   |             ^ help: add `;` here\n27 |   let l = 23\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp2opfaxjk.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpxbaws_3s.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpgogdl55c.rs:69:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n21 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n55 | }\n   | - ...as it matches this but it has different indentation\n...\n69 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:24:29\n   |\n24 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n25 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:25:29\n   |\n25 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n26 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:26:29\n   |\n26 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n27 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:27:29\n   |\n27 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n28 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:28:29\n   |\n28 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n29 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:29:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpiisquyh_.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpiisquyh_.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpgogdl55c.rs:69:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n21 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n55 | }\n   | - ...as it matches this but it has different indentation\n...\n69 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:24:29\n   |\n24 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n25 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:25:29\n   |\n25 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n26 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:26:29\n   |\n26 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n27 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:27:29\n   |\n27 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n28 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:28:29\n   |\n28 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n29 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:29:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmphxh9g42e.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmphxh9g42e.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmphxh9g42e.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp7m20ivbq.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp7m20ivbq.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else if n == 3 {\n    return 13\n  } else if n == 4 {\n    return 89\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let aa = prime_fib(n - 27)\n    let ab = prime_fib(n - 28)\n    let ac = prime_fib(n - 29)\n    let ad = prime_fib(n - 30)\n    let ae = prime_fib(n - 31)\n    let af = prime_fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpbj9ire21.rs:70:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n23 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n56 | }\n   | - ...as it matches this but it has different indentation\n...\n70 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:24:29\n   |\n24 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n25 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:25:29\n   |\n25 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n26 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:26:29\n   |\n26 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n27 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:27:29\n   |\n27 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n28 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:28:29\n   |\n28 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n29 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:29:29\n   |\n29 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n30 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:30:29\n   |\n30 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n31 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbj9ire21.rs:31:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    return a + b + c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp0rns0h2a.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     return a + b + c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 3\n  let e = 5\n  let f = 7\n  let g = 11\n  let h = 13\n  let i = 17\n  let j = 19\n  let k = 23\n  let l = 29\n  let m = 31\n  let n = 37\n  let o = 41\n  let p = 43\n  let q = 47\n  let r = 53\n  let s = 59\n  let t = 61\n  let u = 67\n  let v = 71\n  let w = 73\n  let x = 79\n  let y = 83\n  let z = 89\n  let aa = a\n  let bb = b\n  let cc = c\n  let dd = d\n  let ee = e\n  let ff = f\n  let gg = g\n  let hh = h\n  let ii = i\n  let jj = j\n  let kk = k\n  let ll = l\n  let mm = m\n  let nn = n\n  let oo = o\n  let pp = p\n  let qq = q\n  let rr = r\n  let ss = s\n  let tt = t\n  let uu = u\n  let vv = v\n  let ww = w\n  let xx = x\n  let yy = y\n  let zz = z\n  let aaa = aa\n  let bbb = bb\n  let ccc = cc\n  let ddd = dd\n  let eee = ee\n  let fff = ff\n  let ggg = gg\n  let hhh = hh\n  let iii = ii\n  let jjj = jj\n  let kkk = kk\n  let lll = ll\n  let mmm = mm\n  let nnn = nn\n  let ooo = oo\n  let ppp = pp\n  let qqq = qq\n  let rrr = rr\n  let sss = ss\n  let ttt = tt\n  let uuu\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:22:12\n   |\n22 |   let d = 3\n   |            ^ help: add `;` here\n23 |   let e = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:23:12\n   |\n23 |   let e = 5\n   |            ^ help: add `;` here\n24 |   let f = 7\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:24:12\n   |\n24 |   let f = 7\n   |            ^ help: add `;` here\n25 |   let g = 11\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:25:13\n   |\n25 |   let g = 11\n   |             ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 17\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:27:13\n   |\n27 |   let i = 17\n   |             ^ help: add `;` here\n28 |   let j = 19\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:28:13\n   |\n28 |   let j = 19\n   |             ^ help: add `;` here\n29 |   let k = 23\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:29:13\n   |\n29 |   let k = 23\n   |             ^ help: add `;` here\n30 |   let l = 29\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpco_7rjq3.rs:30:13\n ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpk8c3hzua.rs:71:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n25 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n57 | }\n   | - ...as it matches this but it has different indentation\n...\n71 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:26:29\n   |\n26 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n27 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:27:29\n   |\n27 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n28 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:28:29\n   |\n28 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n29 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:29:29\n   |\n29 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n30 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:30:29\n   |\n30 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n31 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:31:29\n   |\n31 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n32 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:32:29\n   |\n32 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n33 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:33:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return prime_fib(n - 3) + a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxcbd1dyl.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpxcbd1dyl.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     return prime_fib(n - 3) + a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpmv8acgc6.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  if n == 2 {\n    return 5\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp9m_tzev0.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9m_tzev0.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp9m_tzev0.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpiisquyh_.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpiisquyh_.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = a + b\n    return c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpyc9lxhux.rs:18:29\n   |\n18 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n19 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpyc9lxhux.rs:19:29\n   |\n19 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n20 |     let c = a + b\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpyc9lxhux.rs:20:18\n   |\n20 |     let c = a + b\n   |                  ^ help: add `;` here\n21 |     return c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpx5eyxkso.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpx5eyxkso.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 2\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a1 = 0\n  let b1 = 0\n  let c1 = 0\n  let d1 = 0\n  let e1 = 0\n  let f1 = 0\n  let g1 = 0\n  let h1 = 0\n  let i1 = 0\n  let j1 = 0\n  let k1 = 0\n  let l1 = 0\n  let m1 = 0\n  let n1 = 0\n  let o1 = 0\n  let p1 = 0\n  let q1 = 0\n  let r1 = 0\n  let s1 = 0\n  let t1 = 0\n  let u1 = 0\n  let v1 = 0\n  let w1 = 0\n  let x1 = 0\n  let y1 = 0\n  let z1 = 0\n  let a2 = 0\n  let b2 = 0\n  let c2 = 0\n  let d2 = 0\n  let e2 = 0\n  let f2 = 0\n  let g2 = 0\n  let h2 = 0\n  let i2 = 0\n  let j2 = 0\n  let k2 = 0\n  let l2 = 0\n  let m2 = 0\n  let n2 = 0\n  let o2 = 0\n  let p2 = 0\n  let q2 = 0\n  let r2 = 0\n  let s2 = 0\n  let t2 = 0\n  let u2 = 0\n  let v2 = 0\n  let w2 = 0\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:17:12\n   |\n17 |   let b = 2\n   |            ^ help: add `;` here\n18 |   let c = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:18:12\n   |\n18 |   let c = 0\n   |            ^ help: add `;` here\n19 |   let d = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:19:12\n   |\n19 |   let d = 0\n   |            ^ help: add `;` here\n20 |   let e = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:20:12\n   |\n20 |   let e = 0\n   |            ^ help: add `;` here\n21 |   let f = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:21:12\n   |\n21 |   let f = 0\n   |            ^ help: add `;` here\n22 |   let g = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:22:12\n   |\n22 |   let g = 0\n   |            ^ help: add `;` here\n23 |   let h = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:23:12\n   |\n23 |   let h = 0\n   |            ^ help: add `;` here\n24 |   let i = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:24:12\n   |\n24 |   let i = 0\n   |            ^ help: add `;` here\n25 |   let j = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:25:12\n   |\n25 |   let j = 0\n   |            ^ help: add `;` here\n26 |   let k = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:26:12\n   |\n26 |   let k = 0\n   |            ^ help: add `;` here\n27 |   let l = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp90bhwkyb.rs:27:12\n   |\n27 |   let l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  if n == 2 {\n    return 5\n  }\n  if n == 3 {\n    return 13\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:25:27\n   |\n25 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n26 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:26:27\n   |\n26 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n27 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:27:27\n   |\n27 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n28 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:28:27\n   |\n28 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n29 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:29:27\n   |\n29 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n30 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:30:27\n   |\n30 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n31 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:31:27\n   |\n31 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n32 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:32:27\n   |\n32 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n33 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkuuvazcr.rs:33:27\n   |\n33 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n34 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpn3abiw4p.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpkf435ct2.rs:69:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n21 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n55 | }\n   | - ...as it matches this but it has different indentation\n...\n69 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:24:29\n   |\n24 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n25 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:25:29\n   |\n25 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n26 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:26:29\n   |\n26 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n27 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:27:29\n   |\n27 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n28 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:28:29\n   |\n28 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n29 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpkf435ct2.rs:29:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  for i in 0..n - 2 {\n    a, b = b, a + b\n  }\n  return b\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp94xnmo2w.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp94xnmo2w.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `,`\n  --> /tmp/tmp94xnmo2w.rs:19:6\n   |\n19 |     a, b = b, a + b\n   |      ^ expected one of 8 possible tokens\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpnncrtr5q.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `13`', /tmp/tmp9spnffp6.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpnncrtr5q.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmphxh9g42e.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmphxh9g42e.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmphxh9g42e.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmphxh9g42e.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmphxh9g42e.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmphxh9g42e.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n <= 2 {\n    return n\n  }\n  let a = 1\n  let b = 2\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a1 = 0\n  let b1 = 0\n  let c1 = 0\n  let d1 = 0\n  let e1 = 0\n  let f1 = 0\n  let g1 = 0\n  let h1 = 0\n  let i1 = 0\n  let j1 = 0\n  let k1 = 0\n  let l1 = 0\n  let m1 = 0\n  let n1 = 0\n  let o1 = 0\n  let p1 = 0\n  let q1 = 0\n  let r1 = 0\n  let s1 = 0\n  let t1 = 0\n  let u1 = 0\n  let v1 = 0\n  let w1 = 0\n  let x1 = 0\n  let y1 = 0\n  let z1 = 0\n  let a2 = 0\n  let b2 = 0\n  let c2 = 0\n  let d2 = 0\n  let e2 = 0\n  let f2 = 0\n  let g2 = 0\n  let h2 = 0\n  let i2 = 0\n  let j2 = 0\n  let k2 = 0\n  let l2 = 0\n  let m2 = 0\n  let n2 = 0\n  let o2 = 0\n  let p2 = 0\n  let q2 = 0\n  let r2 = 0\n  let s2 = 0\n  let t2 = 0\n  let u2 = 0\n  let v2 = 0\n  let w2 = 0\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:17:12\n   |\n17 |   let b = 2\n   |            ^ help: add `;` here\n18 |   let c = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:18:12\n   |\n18 |   let c = 0\n   |            ^ help: add `;` here\n19 |   let d = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:19:12\n   |\n19 |   let d = 0\n   |            ^ help: add `;` here\n20 |   let e = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:20:12\n   |\n20 |   let e = 0\n   |            ^ help: add `;` here\n21 |   let f = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:21:12\n   |\n21 |   let f = 0\n   |            ^ help: add `;` here\n22 |   let g = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:22:12\n   |\n22 |   let g = 0\n   |            ^ help: add `;` here\n23 |   let h = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:23:12\n   |\n23 |   let h = 0\n   |            ^ help: add `;` here\n24 |   let i = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:24:12\n   |\n24 |   let i = 0\n   |            ^ help: add `;` here\n25 |   let j = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:25:12\n   |\n25 |   let j = 0\n   |            ^ help: add `;` here\n26 |   let k = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:26:12\n   |\n26 |   let k = 0\n   |            ^ help: add `;` here\n27 |   let l = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnulam6sh.rs:27:12\n   |\n27 |   let l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = a + b\n    return c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp_pm9b_ir.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp_pm9b_ir.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = a + b\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp_pm9b_ir.rs:22:18\n   |\n22 |     let c = a + b\n   |                  ^ help: add `;` here\n23 |     return c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n    d = a + b\n    if is_prime(d) {\n      return d\n    }\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpc4gtrw85.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpc4gtrw85.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpc4gtrw85.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpc4gtrw85.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpc4gtrw85.rs:24:14\n   |\n24 |     c = a + b\n   |              ^ help: add `;` here\n25 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpc4gtrw85.rs:25:10\n   |\n25 |     a = b\n   |          ^ help: add `;` here\n26 |     b = c\n   |     - unexpected token\n\nerror: expected `;`, found `d`\n  --> /tmp/tmpc4gtrw85.rs:26:10\n   |\n26 |     b = c\n   |          ^ help: add `;` here\n27 |     d = a + b\n   |     - unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpc4gtrw85.rs:27:14\n   |\n27 |     d = a + b\n   |              ^ help: add `;` here\n28 |     if is_prime(d) {\n   |     -- unexpected token\n\nerror[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpc4gtrw85.rs:28:8\n   |\n28 |     if is_prime(d) {\n   |        ^^^^^^^^ not found in this scope\n\nerror: aborting due to 9 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpnncrtr5q.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n <= 1 {\n    return n\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_fib(n - 34)\n  let ai = prime_fib(n - 35)\n  let aj =\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:16:27\n   |\n16 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n17 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:17:27\n   |\n17 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n18 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:18:27\n   |\n18 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n19 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:19:27\n   |\n19 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n20 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:20:27\n   |\n20 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n21 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:21:27\n   |\n21 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n22 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:22:27\n   |\n22 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n23 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:23:27\n   |\n23 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n24 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzqvo_e28.rs:24:27\n   |\n24 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n25 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmphxh9g42e.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmphxh9g42e.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmphxh9g42e.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    return a + b + c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp0rns0h2a.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     return a + b + c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    return a + b + c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp0rns0h2a.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     return a + b + c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpir9z2aos.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpir9z2aos.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpir9z2aos.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    return (a + b) * c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpmh58v4gh.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmh58v4gh.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpmh58v4gh.rs:24:29\n   |\n24 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n25 |     return (a + b) * c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  if n == 3 {\n    return 5\n  }\n  if n == 4 {\n    return 13\n  }\n  if n == 5 {\n    return 89\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:31:27\n   |\n31 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n32 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:32:27\n   |\n32 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n33 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:33:27\n   |\n33 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n34 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:34:27\n   |\n34 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n35 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:35:27\n   |\n35 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n36 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:36:27\n   |\n36 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n37 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:37:27\n   |\n37 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n38 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:38:27\n   |\n38 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n39 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9f9opyb8.rs:39:27\n   |\n39 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n40 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  for i in 0..n {\n    let m = a + b\n    a = b\n    b = c\n    c = d\n    d = e\n    e = f\n    f = g\n    g = h\n    h = i\n    i = j\n    j = k\n    k = l\n    l = m\n  }\n  return l\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpz95mftuf.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_fib(n - 34)\n  let ai = prime\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:21:27\n   |\n21 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n22 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:22:27\n   |\n22 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n23 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:23:27\n   |\n23 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n24 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:24:27\n   |\n24 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n25 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:25:27\n   |\n25 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n26 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:26:27\n   |\n26 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n27 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:27:27\n   |\n27 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n28 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpnncrtr5q.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpcep7om9v.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpcep7om9v.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpcep7om9v.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   return c\n   |   ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let w = prime_fib(n - 27)\n    let x = prime_fib(n - 28)\n    let y = prime_fib(n - 29)\n    let z = prime_fib(n - 30)\n    let w = prime_fib(n - 31)\n    let x = prime_fib(n - 32)\n    let y = prime_fib(n - 33)\n    let z = prime_fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpnqv2u9hj.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpxbaws_3s.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1khny_7e.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1khny_7e.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp1khny_7e.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   return c\n   |   ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpx5eyxkso.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = a + b\n    return c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1j918pyx.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1j918pyx.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = a + b\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp1j918pyx.rs:22:18\n   |\n22 |     let c = a + b\n   |                  ^ help: add `;` here\n23 |     return c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpc390j0qi.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpc390j0qi.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpc390j0qi.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   return c\n   |   ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return prime_fib_recur(a, b)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp2oj6so6t.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp2oj6so6t.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     return prime_fib_recur(a, b)\n   |     ------ unexpected token\n\nerror[E0425]: cannot find function `prime_fib_recur` in this scope\n  --> /tmp/tmp2oj6so6t.rs:22:12\n   |\n22 |     return prime_fib_recur(a, b)\n   |            ^^^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `2`', /tmp/tmpxl0z5gcl.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n {\n    let t = a + b\n    a = b\n    b = c\n    c = t\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpcj_zq4ox.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpcj_zq4ox.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpcj_zq4ox.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpcj_zq4ox.rs:20:18\n   |\n20 |     let t = a + b\n   |                  ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpcj_zq4ox.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: expected `;`, found `c`\n  --> /tmp/tmpcj_zq4ox.rs:22:10\n   |\n22 |     b = c\n   |          ^ help: add `;` here\n23 |     c = t\n   |     - unexpected token\n\nerror: aborting due to 6 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 3\n  let e = 5\n  let f = 7\n  let g = 13\n  let h = 23\n  let i = 31\n  let j = 41\n  let k = 61\n  let l = 89\n  let m = 137\n  let n = 233\n  let o = 377\n  let p = 577\n  let q = 881\n  let r = 1181\n  let s = 1789\n  let t = 2697\n  let u = 4177\n  let v = 6765\n  let w = 10946\n  let x = 17711\n  let y = 28657\n  let z = 46368\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 3\n  let e1 = 5\n  let f1 = 7\n  let g1 = 13\n  let h1 = 23\n  let i1 = 31\n  let j1 = 41\n  let k1 = 61\n  let l1 = 89\n  let m1 = 137\n  let n1 = 233\n  let o1 = 377\n  let p1 = 577\n  let q1 = 881\n  let r1 = 1181\n  let s1 = 1789\n  let t1 = 2697\n  let u1 = 4177\n  let v1 = 6765\n  let w1 = 10946\n  let x1 = 17711\n  let y1 = 28657\n  let z1 = 46368\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 3\n  let e2 = 5\n  let f2 = 7\n  let g2 = 13\n  let h2 = 23\n  let i2 = 31\n  let j2 = 41\n  let k2 = 61\n  let l2 = 89\n  let m2 = 137\n  let n2 = 233\n  let o2 = 377\n  let p2 = 577\n  let q2 = 881\n  let r\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:22:12\n   |\n22 |   let d = 3\n   |            ^ help: add `;` here\n23 |   let e = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:23:12\n   |\n23 |   let e = 5\n   |            ^ help: add `;` here\n24 |   let f = 7\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:24:12\n   |\n24 |   let f = 7\n   |            ^ help: add `;` here\n25 |   let g = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:25:13\n   |\n25 |   let g = 13\n   |             ^ help: add `;` here\n26 |   let h = 23\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:26:13\n   |\n26 |   let h = 23\n   |             ^ help: add `;` here\n27 |   let i = 31\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:27:13\n   |\n27 |   let i = 31\n   |             ^ help: add `;` here\n28 |   let j = 41\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:28:13\n   |\n28 |   let j = 41\n   |             ^ help: add `;` here\n29 |   let k = 61\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:29:13\n   |\n29 |   let k = 61\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpl9qmkzgp.rs:30:13\n ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  let d = c - a\n  let e = c - d\n  let f = e + a\n  let g = f - a\n  let h = g - e\n  let i = h + a\n  let j = i - a\n  let k = j - h\n  let l = k + a\n  let m = l - a\n  let n = m - k\n  let o = n + a\n  let p = o - a\n  let q = p - n\n  let r = q + a\n  let s = r - a\n  let t = s - p\n  let u = t + a\n  let v = u - a\n  let w = v - s\n  let x = w + a\n  let y = x - a\n  let z = y - v\n  let aa = z + a\n  let bb = aa - a\n  let cc = bb - z\n  let dd = cc + a\n  let ee = dd - a\n  let ff = ee + a\n  let gg = ff - a\n  let hh = gg - ee\n  let ii = hh + a\n  let jj = ii - a\n  let kk = jj - hh\n  let ll = kk + a\n  let mm = ll - a\n  let nn = mm - kk\n  let oo = nn + a\n  let pp = oo - a\n  let qq = pp - nn\n  let rr = qq + a\n  let ss = rr - a\n  let tt = ss - pp\n  let uu = tt + a\n  let vv = uu - a\n  let ww = vv - ss\n  let xx = ww + a\n  let yy = xx - a\n  let zz = yy - vv\n  let aaa = zz + a\n  let bbb = aaa -\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   let d = c - a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:22:16\n   |\n22 |   let d = c - a\n   |                ^ help: add `;` here\n23 |   let e = c - d\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:23:16\n   |\n23 |   let e = c - d\n   |                ^ help: add `;` here\n24 |   let f = e + a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:24:16\n   |\n24 |   let f = e + a\n   |                ^ help: add `;` here\n25 |   let g = f - a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:25:16\n   |\n25 |   let g = f - a\n   |                ^ help: add `;` here\n26 |   let h = g - e\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:26:16\n   |\n26 |   let h = g - e\n   |                ^ help: add `;` here\n27 |   let i = h + a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:27:16\n   |\n27 |   let i = h + a\n   |                ^ help: add `;` here\n28 |   let j = i - a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:28:16\n   |\n28 |   let j = i - a\n   |                ^ help: add `;` here\n29 |   let k = j - h\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpbkw_lod2.rs:29:16\n   |\n29 |   let k = ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  for i in 0..n {\n    let m = a + b\n    a = b\n    b = c\n    c = d + e\n    d = e\n    e = f + g\n    f = g\n    g = h + i\n    h = i\n    i = j + k\n    j = k\n    k = l + m\n    l = m\n  }\n  return l\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp9ydkxmd3.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmp9ydkxmd3.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let n_minus_3 = prime_fib(n - 4)\n    let n_minus_2 = prime_fib(n - 5)\n    let n_minus_1 = prime_fib(n - 6)\n    let n_0 = prime_fib(n - 7)\n    let n_1 = prime_fib(n - 8)\n    let n_2 = prime_fib(n - 9)\n    let n_3 = prime_fib(n - 10)\n    let n_4 = prime_fib(n - 11)\n    let n_5 = prime_fib(n - 12)\n    let n_6 = prime_fib(n - 13)\n    let n_7 = prime_fib(n - 14)\n    let n_8 = prime_fib(n - 15)\n    let n_9 = prime_fib(n - 16)\n    let n_10 = prime_fib(n - 17)\n    let n_11 = prime_fib(n - 18)\n    let n_12 = prime_fib(n - 19)\n    let n_13 = prime_fib(n - 20)\n    let n_14 = prime_fib(n - 21)\n    let n_15 = prime_fib(n - 22)\n    let n_16 = prime_fib(n - 23)\n    let n_17 = prime_fib(n - 24)\n    let n_18 = prime_fib(n - 25)\n    let n_19 = prime_fib(n - 26)\n    let n_20 = prime_fib(n - 27)\n    let n_21 = prime_fib(n - 28)\n    let n_22 = prime_f\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp59h986lr.rs:65:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n21 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n51 | }\n   | - ...as it matches this but it has different indentation\n...\n65 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp59h986lr.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp59h986lr.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp59h986lr.rs:24:29\n   |\n24 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n25 |     let n_minus_3 = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp59h986lr.rs:25:37\n   |\n25 |     let n_minus_3 = prime_fib(n - 4)\n   |                                     ^ help: add `;` here\n26 |     let n_minus_2 = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp59h986lr.rs:26:37\n   |\n26 |     let n_minus_2 = prime_fib(n - 5)\n   |                                     ^ help: add `;` here\n27 |     let n_minus_1 = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp59h986lr.rs:27:37\n   |\n27 |     let n_minus_1 = prime_fib(n - 6)\n   |                                     ^ help: add `;` here\n28 |     let n_0 = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp59h986lr.rs:28:31\n   |\n28 |     let n_0 = prime_fib(n - 7)\n   |                               ^ help: add `;` here\n29 |     let n_1 = prime_fib(n - 8)\n   |     --- unexpected ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp214vwdov.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp214vwdov.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpj1r42igi.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293132,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `13`', /tmp/tmpubob7hmh.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  let d = c + a\n  return d\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpwh056vdd.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwh056vdd.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwh056vdd.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   let d = c + a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpwh056vdd.rs:25:16\n   |\n25 |   let d = c + a\n   |                ^ help: add `;` here\n26 |   return d\n   |   ------ unexpected token\n\nerror: aborting due to 4 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpdw5rw0rr.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpdw5rw0rr.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpn3abiw4p.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  let d = c - a\n  let e = c - d\n  let f = e + a\n  let g = f - a\n  let h = g + a\n  let i = h - a\n  let j = i + a\n  let k = j - a\n  let l = k + a\n  let m = l - a\n  let n = m + a\n  let o = n - a\n  let p = o + a\n  let q = p - a\n  let r = q + a\n  let s = r - a\n  let t = s + a\n  let u = t - a\n  let v = u + a\n  let w = v - a\n  let x = w + a\n  let y = x - a\n  let z = y + a\n  let aa = z - a\n  let ab = aa + a\n  let ac = ab - a\n  let ad = ac + a\n  let ae = ad - a\n  let af = ae + a\n  let ag = af - a\n  let ah = ag + a\n  let ai = ah - a\n  let aj = ai + a\n  let ak = aj - a\n  let al = ak + a\n  let am = al - a\n  let an = am + a\n  let ao = an - a\n  let ap = ao + a\n  let aq = ap - a\n  let ar = aq + a\n  let as = ar - a\n  let at = as + a\n  let au = at - a\n  let av = au + a\n  let aw = av - a\n  let ax = aw + a\n  let ay = ax - a\n  let az = ay + a\n  let aaa = az - a\n  let aab = aaa + a\n  let aac = aab - a\n  let aad = aac + a\n  let aae =\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   let d = c - a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:22:16\n   |\n22 |   let d = c - a\n   |                ^ help: add `;` here\n23 |   let e = c - d\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:23:16\n   |\n23 |   let e = c - d\n   |                ^ help: add `;` here\n24 |   let f = e + a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:24:16\n   |\n24 |   let f = e + a\n   |                ^ help: add `;` here\n25 |   let g = f - a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:25:16\n   |\n25 |   let g = f - a\n   |                ^ help: add `;` here\n26 |   let h = g + a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:26:16\n   |\n26 |   let h = g + a\n   |                ^ help: add `;` here\n27 |   let i = h - a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:27:16\n   |\n27 |   let i = h - a\n   |                ^ help: add `;` here\n28 |   let j = i + a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:28:16\n   |\n28 |   let j = i + a\n   |                ^ help: add `;` here\n29 |   let k = j - a\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1qmtspyn.rs:29:16\n   |\n29 |   let k = ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = a + b\n    return c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp_pm9b_ir.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp_pm9b_ir.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = a + b\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp_pm9b_ir.rs:22:18\n   |\n22 |     let c = a + b\n   |                  ^ help: add `;` here\n23 |     return c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  let h1 = prime_fib(n - 34)\n\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:21:27\n   |\n21 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n22 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:22:27\n   |\n22 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n23 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:23:27\n   |\n23 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n24 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:24:27\n   |\n24 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n25 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:25:27\n   |\n25 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n26 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:26:27\n   |\n26 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n27 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx98da2gr.rs:27:27\n   |\n27 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n28 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    return (a + b) * c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpo846t567.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpo846t567.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpo846t567.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     return (a + b) * c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n <= 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnu_1preg.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp32n1o6hj.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzafxosdc.rs:26:29\n   |\n26 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n27 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpzafxosdc.rs:27:29\n   |\n27 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n28 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  if n == 2 {\n    return 5\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzdrl9z0f.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 0\n  for i in 0..n {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxqpam3l_.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpxqpam3l_.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpxqpam3l_.rs:21:12\n   |\n21 |   let c = 0\n   |            ^ help: add `;` here\n22 |   for i in 0..n {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpxqpam3l_.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpxqpam3l_.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `13`', /tmp/tmp9spnffp6.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp32n1o6hj.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 3\n  let e = 5\n  let f = 8\n  let g = 13\n  let h = 21\n  let i = 34\n  let j = 55\n  let k = 89\n  let l = 144\n  let m = 233\n  let n = 377\n  let o = 610\n  let p = 987\n  let q = 1597\n  let r = 2584\n  let s = 4181\n  let t = 6765\n  let u = 10946\n  let v = 17711\n  let w = 28657\n  let x = 46368\n  let y = 75025\n  let z = 121393\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 3\n  let e1 = 5\n  let f1 = 8\n  let g1 = 13\n  let h1 = 21\n  let i1 = 34\n  let j1 = 55\n  let k1 = 89\n  let l1 = 144\n  let m1 = 233\n  let n1 = 377\n  let o1 = 610\n  let p1 = 987\n  let q1 = 1597\n  let r1 = 2584\n  let s1 = 4181\n  let t1 = 6765\n  let u1 = 10946\n  let v1 = 17711\n  let w1 = 28657\n  let x1 = 46368\n  let y1 = 75025\n  let z1 = 121393\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 3\n  let e2 = 5\n  let f2 = 8\n  let g2 = 13\n  let h2 = 21\n  let i2 = 34\n  let j2 = 55\n  let k2 = 89\n  let l2 = 144\n  let m2 = 233\n  let n2 = 377\n  let o2 = 610\n  let p2 = 987\n  let q2 = 1597\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:22:12\n   |\n22 |   let d = 3\n   |            ^ help: add `;` here\n23 |   let e = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:23:12\n   |\n23 |   let e = 5\n   |            ^ help: add `;` here\n24 |   let f = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:24:12\n   |\n24 |   let f = 8\n   |            ^ help: add `;` here\n25 |   let g = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:25:13\n   |\n25 |   let g = 13\n   |             ^ help: add `;` here\n26 |   let h = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:26:13\n   |\n26 |   let h = 21\n   |             ^ help: add `;` here\n27 |   let i = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:27:13\n   |\n27 |   let i = 34\n   |             ^ help: add `;` here\n28 |   let j = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:28:13\n   |\n28 |   let j = 55\n   |             ^ help: add `;` here\n29 |   let k = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:29:13\n   |\n29 |   let k = 89\n   |             ^ help: add `;` here\n30 |   let l = 144\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpm1o773yg.rs:30:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let A = prime_fib(n - 27)\n    let B = prime_fib(n - 28)\n    let C = prime_fib(n - 29)\n    let D = prime_fib(n - 30)\n    let E = prime_fib(n - 31)\n    let F = prime_fib(n\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpwnfc4q15.rs:70:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n23 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n56 | }\n   | - ...as it matches this but it has different indentation\n...\n70 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:24:29\n   |\n24 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n25 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:25:29\n   |\n25 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n26 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:26:29\n   |\n26 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n27 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:27:29\n   |\n27 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n28 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:28:29\n   |\n28 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n29 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:29:29\n   |\n29 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n30 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:30:29\n   |\n30 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n31 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwnfc4q15.rs:31:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpx5eyxkso.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmphxh9g42e.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmphxh9g42e.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmphxh9g42e.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let aa = a * a\n  let bb = b * b\n  let cc = c * c\n  let dd = d * d\n  let ee = e * e\n  let ff = f * f\n  let gg = g * g\n  let hh = h * h\n  let ii = i * i\n  let jj = j * j\n  let kk = k * k\n  let ll = l * l\n  let mm = m * m\n  let nn = n * n\n  let oo = o * o\n  let pp = p * p\n  let qq = q * q\n  let rr = r * r\n  let ss = s * s\n  let tt = t * t\n  let uu = u * u\n  let vv = v * v\n  let ww = w * w\n  let xx = x * x\n  let yy = y * y\n  let zz = z * z\n  let aaa = aa * aa\n  let bbb = bb * bb\n  let ccc = cc * cc\n  let ddd = dd * dd\n  let eee = ee * ee\n  let fff = ff * ff\n  let ggg = gg * gg\n  let hhh = hh * hh\n  let iii = ii * ii\n  let j\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpwa5z2bjv.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  if n == 3 {\n    return 5\n  }\n  if n == 4 {\n    return 13\n  }\n  if n == 5 {\n    return 89\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293132,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmp304y1ibr.rs:41:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  if n == 3 {\n    return 5\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:25:27\n   |\n25 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n26 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:26:27\n   |\n26 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n27 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:27:27\n   |\n27 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n28 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:28:27\n   |\n28 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n29 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:29:27\n   |\n29 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n30 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:30:27\n   |\n30 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n31 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:31:27\n   |\n31 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n32 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:32:27\n   |\n32 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n33 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmplhz4o27f.rs:33:27\n   |\n33 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n34 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = a + b\n    return c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1j918pyx.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1j918pyx.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = a + b\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp1j918pyx.rs:22:18\n   |\n22 |     let c = a + b\n   |                  ^ help: add `;` here\n23 |     return c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpn3abiw4p.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnncrtr5q.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpnncrtr5q.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n <= 1 {\n    return n\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpc6187d7i.rs:16:27\n   |\n16 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n17 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpc6187d7i.rs:17:27\n   |\n17 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n18 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpc6187d7i.rs:18:16\n   |\n18 |   let c = a + b\n   |                ^ help: add `;` here\n19 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_fib(n - 34)\n  let ai = prime\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:21:27\n   |\n21 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n22 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:22:27\n   |\n22 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n23 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:23:27\n   |\n23 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n24 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:24:27\n   |\n24 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n25 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:25:27\n   |\n25 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n26 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:26:27\n   |\n26 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n27 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn89jbe2d.rs:27:27\n   |\n27 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n28 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a1 = 0\n  let b1 = 0\n  let c1 = 0\n  let d1 = 0\n  let e1 = 0\n  let f1 = 0\n  let g1 = 0\n  let h1 = 0\n  let i1 = 0\n  let j1 = 0\n  let k1 = 0\n  let l1 = 0\n  let m1 = 0\n  let n1 = 0\n  let o1 = 0\n  let p1 = 0\n  let q1 = 0\n  let r1 = 0\n  let s1 = 0\n  let t1 = 0\n  let u1 = 0\n  let v1 = 0\n  let w1 = 0\n  let x1 = 0\n  let y1 = 0\n  let z1 = 0\n  let a2 = 0\n  let b2 = 0\n  let c2 = 0\n  let d2 = 0\n  let e2 = 0\n  let f2 = 0\n  let g2 = 0\n  let h2 = 0\n  let i2 = 0\n  let j2 = 0\n  let k2 = 0\n  let l2 = 0\n  let m2 = 0\n  let n2 = 0\n  let o2 = 0\n  let p2 = 0\n  let q2 = 0\n  let r2 = 0\n  let s2 = 0\n  let t2 = 0\n  let u2 = 0\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:21:12\n   |\n21 |   let c = 0\n   |            ^ help: add `;` here\n22 |   let d = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:22:12\n   |\n22 |   let d = 0\n   |            ^ help: add `;` here\n23 |   let e = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:23:12\n   |\n23 |   let e = 0\n   |            ^ help: add `;` here\n24 |   let f = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:24:12\n   |\n24 |   let f = 0\n   |            ^ help: add `;` here\n25 |   let g = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:25:12\n   |\n25 |   let g = 0\n   |            ^ help: add `;` here\n26 |   let h = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:26:12\n   |\n26 |   let h = 0\n   |            ^ help: add `;` here\n27 |   let i = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:27:12\n   |\n27 |   let i = 0\n   |            ^ help: add `;` here\n28 |   let j = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:28:12\n   |\n28 |   let j = 0\n   |            ^ help: add `;` here\n29 |   let k = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:29:12\n   |\n29 |   let k = 0\n   |            ^ help: add `;` here\n30 |   let l = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpjlge40rz.rs:30:12\n   |\n30 |   let l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpxbaws_3s.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 3\n  let e = 5\n  let f = 7\n  let g = 11\n  let h = 13\n  let i = 17\n  let j = 19\n  let k = 23\n  let l = 29\n  let m = 31\n  let n = 37\n  let o = 41\n  let p = 43\n  let q = 47\n  let r = 53\n  let s = 59\n  let t = 61\n  let u = 67\n  let v = 71\n  let w = 73\n  let x = 79\n  let y = 83\n  let z = 89\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 3\n  let e1 = 5\n  let f1 = 7\n  let g1 = 11\n  let h1 = 13\n  let i1 = 17\n  let j1 = 19\n  let k1 = 23\n  let l1 = 29\n  let m1 = 31\n  let n1 = 37\n  let o1 = 41\n  let p1 = 43\n  let q1 = 47\n  let r1 = 53\n  let s1 = 59\n  let t1 = 61\n  let u1 = 67\n  let v1 = 71\n  let w1 = 73\n  let x1 = 79\n  let y1 = 83\n  let z1 = 89\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 3\n  let e2 = 5\n  let f2 = 7\n  let g2 = 11\n  let h2 = 13\n  let i2 = 17\n  let j2 = 19\n  let k2 = 23\n  let l2 = 29\n  let m2 = 31\n  let n2 = 37\n  let o2 = 41\n  let p2 = 43\n  let q2 = 47\n  let r2 = 53\n  let s2 = 59\n  let t2 = 61\n  let u2 = 67\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:22:12\n   |\n22 |   let d = 3\n   |            ^ help: add `;` here\n23 |   let e = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:23:12\n   |\n23 |   let e = 5\n   |            ^ help: add `;` here\n24 |   let f = 7\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:24:12\n   |\n24 |   let f = 7\n   |            ^ help: add `;` here\n25 |   let g = 11\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:25:13\n   |\n25 |   let g = 11\n   |             ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 17\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:27:13\n   |\n27 |   let i = 17\n   |             ^ help: add `;` here\n28 |   let j = 19\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:28:13\n   |\n28 |   let j = 19\n   |             ^ help: add `;` here\n29 |   let k = 23\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:29:13\n   |\n29 |   let k = 23\n   |             ^ help: add `;` here\n30 |   let l = 29\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpp1moxjnj.rs:30:13\n ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1yg4_jcc.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpe12huwkr.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpxbaws_3s.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpxbaws_3s.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmphxh9g42e.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmphxh9g42e.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmphxh9g42e.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpn3abiw4p.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let w = prime_fib(n - 27)\n    let x = prime_fib(n - 28)\n    let y = prime_fib(n - 29)\n    let z = prime_fib(n - 30)\n    let w = prime_fib(n - 31)\n    let x = prime_fib(n - 32)\n    let y = prime_fib(n - 33)\n    let z = prime_fib\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpnqv2u9hj.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpnqv2u9hj.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpdw5rw0rr.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpdw5rw0rr.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpmv8acgc6.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n    d = a + b\n    a = b\n    b = d\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpu2zwxtt7.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpu2zwxtt7.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpu2zwxtt7.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpu2zwxtt7.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpu2zwxtt7.rs:21:14\n   |\n21 |     c = a + b\n   |              ^ help: add `;` here\n22 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpu2zwxtt7.rs:22:10\n   |\n22 |     a = b\n   |          ^ help: add `;` here\n23 |     b = c\n   |     - unexpected token\n\nerror: expected `;`, found `d`\n  --> /tmp/tmpu2zwxtt7.rs:23:10\n   |\n23 |     b = c\n   |          ^ help: add `;` here\n24 |     d = a + b\n   |     - unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpu2zwxtt7.rs:24:14\n   |\n24 |     d = a + b\n   |              ^ help: add `;` here\n25 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpu2zwxtt7.rs:25:10\n   |\n25 |     a = b\n   |          ^ help: add `;` here\n26 |     b = d\n   |     - unexpected token\n\nerror: aborting due to 9 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  }\n  if n == 1 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpf8cijs37.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpf8cijs37.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmphxh9g42e.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmphxh9g42e.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmphxh9g42e.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmphxh9g42e.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n <= 1 {\n    return n\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let a1 = prime_fib(n - 27)\n  let b1 = prime_fib(n - 28)\n  let c1 = prime_fib(n - 29)\n  let d1 = prime_fib(n - 30)\n  let e1 = prime_fib(n - 31)\n  let f1 = prime_fib(n - 32)\n  let g1 = prime_fib(n - 33)\n  let h1 = prime_fib(n - 34)\n  let i1 = prime_fib(n - 35)\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:16:27\n   |\n16 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n17 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:17:27\n   |\n17 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n18 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:18:27\n   |\n18 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n19 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:19:27\n   |\n19 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n20 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:20:27\n   |\n20 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n21 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:21:27\n   |\n21 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n22 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:22:27\n   |\n22 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n23 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:23:27\n   |\n23 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n24 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpa2fdpww8.rs:24:27\n   |\n24 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n25 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `13`', /tmp/tmp9spnffp6.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return a + b\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpdw5rw0rr.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpdw5rw0rr.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     return a + b\n   |     ------ unexpected token\n\nerror: aborting due to 2 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpc390j0qi.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpc390j0qi.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpc390j0qi.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   return c\n   |   ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpk8c3hzua.rs:71:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n25 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n57 | }\n   | - ...as it matches this but it has different indentation\n...\n71 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:26:29\n   |\n26 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n27 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:27:29\n   |\n27 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n28 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:28:29\n   |\n28 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n29 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:29:29\n   |\n29 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n30 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:30:29\n   |\n30 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n31 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:31:29\n   |\n31 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n32 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:32:29\n   |\n32 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n33 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpk8c3hzua.rs:33:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpgogdl55c.rs:69:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n21 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n55 | }\n   | - ...as it matches this but it has different indentation\n...\n69 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:24:29\n   |\n24 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n25 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:25:29\n   |\n25 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n26 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:26:29\n   |\n26 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n27 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:27:29\n   |\n27 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n28 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:28:29\n   |\n28 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n29 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:29:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c // even\n  }\n  return c // odd\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpn3abiw4p.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpn3abiw4p.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp32n1o6hj.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp17nmgvo1.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmp17nmgvo1.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp32n1o6hj.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpx5eyxkso.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 2\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let aa = 0\n  let bb = 0\n  let cc = 0\n  let dd = 0\n  let ee = 0\n  let ff = 0\n  let gg = 0\n  let hh = 0\n  let ii = 0\n  let jj = 0\n  let kk = 0\n  let ll = 0\n  let mm = 0\n  let nn = 0\n  let oo = 0\n  let pp = 0\n  let qq = 0\n  let rr = 0\n  let ss = 0\n  let tt = 0\n  let uu = 0\n  let vv = 0\n  let ww = 0\n  let xx = 0\n  let yy = 0\n  let zz = 0\n  let aaaa = 0\n  let bbbb = 0\n  let cccc = 0\n  let dddd = 0\n  let eeee = 0\n  let ffff = 0\n  let gggg = 0\n  let hhhh = 0\n  let iii = 0\n  let jjjj = 0\n  let kkkk = 0\n  let llll = 0\n  let mmmm = 0\n  let nnnn = 0\n  let oooo = 0\n  let pppp = 0\n  let qqqq = 0\n  let rrrr = 0\n  let ssss = 0\n  let tttt = 0\n  let uuuu = 0\n  let vvvv = 0\n  \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:17:12\n   |\n17 |   let b = 2\n   |            ^ help: add `;` here\n18 |   let c = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:18:12\n   |\n18 |   let c = 0\n   |            ^ help: add `;` here\n19 |   let d = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:19:12\n   |\n19 |   let d = 0\n   |            ^ help: add `;` here\n20 |   let e = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:20:12\n   |\n20 |   let e = 0\n   |            ^ help: add `;` here\n21 |   let f = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:21:12\n   |\n21 |   let f = 0\n   |            ^ help: add `;` here\n22 |   let g = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:22:12\n   |\n22 |   let g = 0\n   |            ^ help: add `;` here\n23 |   let h = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:23:12\n   |\n23 |   let h = 0\n   |            ^ help: add `;` here\n24 |   let i = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:24:12\n   |\n24 |   let i = 0\n   |            ^ help: add `;` here\n25 |   let j = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:25:12\n   |\n25 |   let j = 0\n   |            ^ help: add `;` here\n26 |   let k = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:26:12\n   |\n26 |   let k = 0\n   |            ^ help: add `;` here\n27 |   let l = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpommzkx2d.rs:27:12\n   |\n27 |   let l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpc390j0qi.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpc390j0qi.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpc390j0qi.rs:24:16\n   |\n24 |   let c = a + b\n   |                ^ help: add `;` here\n25 |   return c\n   |   ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `13`', /tmp/tmp9spnffp6.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpgogdl55c.rs:69:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n21 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n55 | }\n   | - ...as it matches this but it has different indentation\n...\n69 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:24:29\n   |\n24 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n25 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:25:29\n   |\n25 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n26 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:26:29\n   |\n26 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n27 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:27:29\n   |\n27 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n28 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:28:29\n   |\n28 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n29 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpgogdl55c.rs:29:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpmv8acgc6.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpmv8acgc6.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293132,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpimume0_r.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = a + b\n    return c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1j918pyx.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1j918pyx.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = a + b\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp1j918pyx.rs:22:18\n   |\n22 |     let c = a + b\n   |                  ^ help: add `;` here\n23 |     return c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 0\n  for i in 0..n {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpxqpam3l_.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpxqpam3l_.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 0\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpxqpam3l_.rs:21:12\n   |\n21 |   let c = 0\n   |            ^ help: add `;` here\n22 |   for i in 0..n {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpxqpam3l_.rs:23:14\n   |\n23 |     c = a + b\n   |              ^ help: add `;` here\n24 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpxqpam3l_.rs:24:10\n   |\n24 |     a = b\n   |          ^ help: add `;` here\n25 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `13`', /tmp/tmp9spnffp6.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 2\n  } else if n == 1 {\n    return 3\n  } else if n == 2 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    return a + b + c\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp0rns0h2a.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmp0rns0h2a.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     return a + b + c\n   |     ------ unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  if n == 2 {\n    return 3\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = prime_fib(n - 3)\n  let d = prime_fib(n - 4)\n  let e = prime_fib(n - 5)\n  let f = prime_fib(n - 6)\n  let g = prime_fib(n - 7)\n  let h = prime_fib(n - 8)\n  let i = prime_fib(n - 9)\n  let j = prime_fib(n - 10)\n  let k = prime_fib(n - 11)\n  let l = prime_fib(n - 12)\n  let m = prime_fib(n - 13)\n  let n = prime_fib(n - 14)\n  let o = prime_fib(n - 15)\n  let p = prime_fib(n - 16)\n  let q = prime_fib(n - 17)\n  let r = prime_fib(n - 18)\n  let s = prime_fib(n - 19)\n  let t = prime_fib(n - 20)\n  let u = prime_fib(n - 21)\n  let v = prime_fib(n - 22)\n  let w = prime_fib(n - 23)\n  let x = prime_fib(n - 24)\n  let y = prime_fib(n - 25)\n  let z = prime_fib(n - 26)\n  let aa = prime_fib(n - 27)\n  let ab = prime_fib(n - 28)\n  let ac = prime_fib(n - 29)\n  let ad = prime_fib(n - 30)\n  let ae = prime_fib(n - 31)\n  let af = prime_fib(n - 32)\n  let ag = prime_fib(n - 33)\n  let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:22:27\n   |\n22 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n23 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:23:27\n   |\n23 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n24 |   let c = prime_fib(n - 3)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:24:27\n   |\n24 |   let c = prime_fib(n - 3)\n   |                           ^ help: add `;` here\n25 |   let d = prime_fib(n - 4)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:25:27\n   |\n25 |   let d = prime_fib(n - 4)\n   |                           ^ help: add `;` here\n26 |   let e = prime_fib(n - 5)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:26:27\n   |\n26 |   let e = prime_fib(n - 5)\n   |                           ^ help: add `;` here\n27 |   let f = prime_fib(n - 6)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:27:27\n   |\n27 |   let f = prime_fib(n - 6)\n   |                           ^ help: add `;` here\n28 |   let g = prime_fib(n - 7)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:28:27\n   |\n28 |   let g = prime_fib(n - 7)\n   |                           ^ help: add `;` here\n29 |   let h = prime_fib(n - 8)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:29:27\n   |\n29 |   let h = prime_fib(n - 8)\n   |                           ^ help: add `;` here\n30 |   let i = prime_fib(n - 9)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpphywu7ia.rs:30:27\n   |\n30 |   let i = prime_fib(n - 9)\n   |                           ^ help: add `;` here\n31 |   let j = prime_fib(n - 10)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpx5eyxkso.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    return prime_fib_rec(a, b, n)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpgk8a8u23.rs:22:29\n   |\n22 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n23 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `return`\n  --> /tmp/tmpgk8a8u23.rs:23:29\n   |\n23 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n24 |     return prime_fib_rec(a, b, n)\n   |     ------ unexpected token\n\nerror[E0425]: cannot find function `prime_fib_rec` in this scope\n  --> /tmp/tmpgk8a8u23.rs:24:12\n   |\n24 |     return prime_fib_rec(a, b, n)\n   |            ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else if n == 3 {\n    return 5\n  } else if n == 4 {\n    return 13\n  } else if n == 5 {\n    return 89\n  } else {\n    return prime_fib(n - 1) + prime_fib(n - 2)\n  }\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `102`,\n right: `233`', /tmp/tmpx5eyxkso.rs:37:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let aa = prime_fib(n - 27)\n    let ab = prime_fib(n - 28)\n    let ac = prime_fib(n - 29)\n    let ad = prime_fib(n - 30)\n    let ae = prime_fib(n - 31)\n    let af = prime_fib(n - 32)\n    let ag = prime_fib(n - 33)\n    let ah = prime_\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpx7tmlw1d.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpx7tmlw1d.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    c = a + b\n    a = b\n    b = c\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpw_4gbe77.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpw_4gbe77.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected `;`, found `a`\n  --> /tmp/tmpw_4gbe77.rs:20:14\n   |\n20 |     c = a + b\n   |              ^ help: add `;` here\n21 |     a = b\n   |     - unexpected token\n\nerror: expected `;`, found `b`\n  --> /tmp/tmpw_4gbe77.rs:21:10\n   |\n21 |     a = b\n   |          ^ help: add `;` here\n22 |     b = c\n   |     - unexpected token\n\nerror: aborting due to 5 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  for i in 0..n - 2 {\n    a, b, c = b, c, a + b\n  }\n  return c\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpunkfqbed.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpunkfqbed.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpunkfqbed.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   for i in 0..n - 2 {\n   |   --- unexpected token\n\nerror: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `,`\n  --> /tmp/tmpunkfqbed.rs:23:6\n   |\n23 |     a, b, c = b, c, a + b\n   |      ^ expected one of 8 possible tokens\n\nerror: aborting due to 4 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 15\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:19:12\n   |\n19 |   let a = 1\n   |            ^ help: add `;` here\n20 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:20:12\n   |\n20 |   let b = 1\n   |            ^ help: add `;` here\n21 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:21:12\n   |\n21 |   let c = 2\n   |            ^ help: add `;` here\n22 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:22:12\n   |\n22 |   let d = 2\n   |            ^ help: add `;` here\n23 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:23:12\n   |\n23 |   let e = 3\n   |            ^ help: add `;` here\n24 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:24:12\n   |\n24 |   let f = 5\n   |            ^ help: add `;` here\n25 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:25:12\n   |\n25 |   let g = 8\n   |            ^ help: add `;` here\n26 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:26:13\n   |\n26 |   let h = 13\n   |             ^ help: add `;` here\n27 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:27:13\n   |\n27 |   let i = 21\n   |             ^ help: add `;` here\n28 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:28:13\n   |\n28 |   let j = 34\n   |             ^ help: add `;` here\n29 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:29:13\n   |\n29 |   let k = 55\n   |             ^ help: add `;` here\n30 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp1hj6tqkq.rs:30:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  let m = 144\n  let n = 233\n  let o = 377\n  let p = 610\n  let q = 987\n  let r = 1597\n  let s = 2584\n  let t = 4181\n  let u = 6765\n  let v = 10946\n  let w = 17711\n  let x = 28657\n  let y = 46368\n  let z = 75025\n  let a1 = 1\n  let b1 = 1\n  let c1 = 2\n  let d1 = 2\n  let e1 = 3\n  let f1 = 5\n  let g1 = 8\n  let h1 = 13\n  let i1 = 21\n  let j1 = 34\n  let k1 = 55\n  let l1 = 89\n  let m1 = 144\n  let n1 = 233\n  let o1 = 377\n  let p1 = 610\n  let q1 = 987\n  let r1 = 1597\n  let s1 = 2584\n  let t1 = 4181\n  let u1 = 6765\n  let v1 = 10946\n  let w1 = 17711\n  let x1 = 28657\n  let y1 = 46368\n  let z1 = 75025\n  let a2 = 1\n  let b2 = 1\n  let c2 = 2\n  let d2 = 2\n  let e2 = 3\n  let f2 = 5\n  let g2 = 8\n  let h2 = 13\n  let i2 = 21\n  let j2 = 34\n  let k2 = 55\n  let l2 = 89\n  let m2 = 144\n  let n2 = 233\n  let o2 = 377\n  let p2 = 610\n  let q2 = 987\n  let r2 = 1597\n  let s2 = 2584\n  let t2\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp4i9aejq0.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 1\n  }\n  if n == 1 {\n    return 2\n  }\n  let a = prime_fib(n - 1)\n  let b = prime_fib(n - 2)\n  let c = a + b\n  if c % 2 == 0 {\n    return c\n  }\n  return c + 1\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:19:27\n   |\n19 |   let a = prime_fib(n - 1)\n   |                           ^ help: add `;` here\n20 |   let b = prime_fib(n - 2)\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpzcrbq_as.rs:20:27\n   |\n20 |   let b = prime_fib(n - 2)\n   |                           ^ help: add `;` here\n21 |   let c = a + b\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `if`\n  --> /tmp/tmpzcrbq_as.rs:21:16\n   |\n21 |   let c = a + b\n   |                ^ help: add `;` here\n22 |   if c % 2 == 0 {\n   |   -- unexpected token\n\nerror: aborting due to 3 previous errors\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n == 0 {\n    return 0\n  } else if n == 1 {\n    return 2\n  } else if n == 2 {\n    return 3\n  } else {\n    let a = prime_fib(n - 1)\n    let b = prime_fib(n - 2)\n    let c = prime_fib(n - 3)\n    let d = prime_fib(n - 4)\n    let e = prime_fib(n - 5)\n    let f = prime_fib(n - 6)\n    let g = prime_fib(n - 7)\n    let h = prime_fib(n - 8)\n    let i = prime_fib(n - 9)\n    let j = prime_fib(n - 10)\n    let k = prime_fib(n - 11)\n    let l = prime_fib(n - 12)\n    let m = prime_fib(n - 13)\n    let n = prime_fib(n - 14)\n    let o = prime_fib(n - 15)\n    let p = prime_fib(n - 16)\n    let q = prime_fib(n - 17)\n    let r = prime_fib(n - 18)\n    let s = prime_fib(n - 19)\n    let t = prime_fib(n - 20)\n    let u = prime_fib(n - 21)\n    let v = prime_fib(n - 22)\n    let w = prime_fib(n - 23)\n    let x = prime_fib(n - 24)\n    let y = prime_fib(n - 25)\n    let z = prime_fib(n - 26)\n    let a1 = prime_fib(n - 27)\n    let b1 = prime_fib(n - 28)\n    let c1 = prime_fib(n - 29)\n    let d1 = prime_fib(n - 30)\n    let e1 = prime_fib(n - 31)\n    let f1 = prime_fib(n - 32)\n    let g1 = prime_fib(n - 33)\n    \n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp32n1o6hj.rs:68:3\n   |\n12 | fn prime_fib(n: isize) -> isize {\n   |                                 - unclosed delimiter\n...\n19 |   } else {\n   |          - this delimiter might not be properly closed...\n...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n68 | }\n   |   ^\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:20:29\n   |\n20 |     let a = prime_fib(n - 1)\n   |                             ^ help: add `;` here\n21 |     let b = prime_fib(n - 2)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:21:29\n   |\n21 |     let b = prime_fib(n - 2)\n   |                             ^ help: add `;` here\n22 |     let c = prime_fib(n - 3)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:22:29\n   |\n22 |     let c = prime_fib(n - 3)\n   |                             ^ help: add `;` here\n23 |     let d = prime_fib(n - 4)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:23:29\n   |\n23 |     let d = prime_fib(n - 4)\n   |                             ^ help: add `;` here\n24 |     let e = prime_fib(n - 5)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:24:29\n   |\n24 |     let e = prime_fib(n - 5)\n   |                             ^ help: add `;` here\n25 |     let f = prime_fib(n - 6)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:25:29\n   |\n25 |     let f = prime_fib(n - 6)\n   |                             ^ help: add `;` here\n26 |     let g = prime_fib(n - 7)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:26:29\n   |\n26 |     let g = prime_fib(n - 7)\n   |                             ^ help: add `;` here\n27 |     let h = prime_fib(n - 8)\n   |     --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmp32n1o6hj.rs:27:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>> prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n/// 89\nfn prime_fib(n: isize) -> isize {\n  if n < 2 {\n    return n\n  }\n  let a = 1\n  let b = 1\n  let c = 2\n  let d = 2\n  let e = 3\n  let f = 5\n  let g = 8\n  let h = 13\n  let i = 21\n  let j = 34\n  let k = 55\n  let l = 89\n  for i in 0..n {\n    let m = a + b\n    a = b\n    b = c\n    c = d\n    d = e\n    e = f\n    f = g\n    g = h\n    h = i\n    i = j\n    j = k\n    k = l\n    l = m\n  }\n  return l\n}\n\nfn main() {\n    let candidate = prime_fib;\n    assert_eq!(candidate(1), 2);\n    assert_eq!(candidate(2), 3);\n    assert_eq!(candidate(3), 5);\n    assert_eq!(candidate(4), 13);\n    assert_eq!(candidate(5), 89);\n    assert_eq!(candidate(6), 233);\n    assert_eq!(candidate(7), 1597);\n    assert_eq!(candidate(8), 28657);\n    assert_eq!(candidate(9), 514229);\n    assert_eq!(candidate(10), 433494437);\n}\n",
      "timestamp": 1664293131,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:16:12\n   |\n16 |   let a = 1\n   |            ^ help: add `;` here\n17 |   let b = 1\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:17:12\n   |\n17 |   let b = 1\n   |            ^ help: add `;` here\n18 |   let c = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:18:12\n   |\n18 |   let c = 2\n   |            ^ help: add `;` here\n19 |   let d = 2\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:19:12\n   |\n19 |   let d = 2\n   |            ^ help: add `;` here\n20 |   let e = 3\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:20:12\n   |\n20 |   let e = 3\n   |            ^ help: add `;` here\n21 |   let f = 5\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:21:12\n   |\n21 |   let f = 5\n   |            ^ help: add `;` here\n22 |   let g = 8\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:22:12\n   |\n22 |   let g = 8\n   |            ^ help: add `;` here\n23 |   let h = 13\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:23:13\n   |\n23 |   let h = 13\n   |             ^ help: add `;` here\n24 |   let i = 21\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:24:13\n   |\n24 |   let i = 21\n   |             ^ help: add `;` here\n25 |   let j = 34\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:25:13\n   |\n25 |   let j = 34\n   |             ^ help: add `;` here\n26 |   let k = 55\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `let`\n  --> /tmp/tmpz95mftuf.rs:26:13\n   |\n26 |   let k = 55\n   |             ^ help: add `;` here\n27 |   let l = 89\n   |   --- unexpected token\n\nerror: expected `;`, found keyword `for`\n  --> /tmp/tmpz95mftuf.rs:27:13\n   |",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
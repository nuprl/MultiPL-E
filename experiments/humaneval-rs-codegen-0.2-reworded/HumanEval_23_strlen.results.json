{
  "name": "HumanEval_23_strlen",
  "language": "rs",
  "prompt": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n",
  "tests": "}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmpnkfibhjd.rs:7:17\n  |\n7 |   return string.len;\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len();\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for _ in string.iter() {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0599]: no method named `iter` found for struct `String` in the current scope\n --> /tmp/tmp9955wjlm.rs:8:19\n  |\n8 |   for _ in string.iter() {\n  |                   ^^^^ method not found in `String`\n  |\nhelp: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n  |\n8 |   for _ in string.chars() {\n  |                   ~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmpnkfibhjd.rs:7:17\n  |\n7 |   return string.len;\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len();\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmpnkfibhjd.rs:7:17\n  |\n7 |   return string.len;\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len();\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmpnkfibhjd.rs:7:17\n  |\n7 |   return string.len;\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len();\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for i in 0..string.len {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmpvl5f8rvt.rs:8:22\n  |\n8 |   for i in 0..string.len {\n  |                      ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n8 |   for i in 0..string.len() {\n  |                         ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for _ in string.iter() {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0599]: no method named `iter` found for struct `String` in the current scope\n --> /tmp/tmp9955wjlm.rs:8:19\n  |\n8 |   for _ in string.iter() {\n  |                   ^^^^ method not found in `String`\n  |\nhelp: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n  |\n8 |   for _ in string.chars() {\n  |                   ~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for i in 0..string.len() {\n    if string.get(i) == 0 {\n      break\n    }\n    len += 1\n  }\n  return len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0277]: the type `str` cannot be indexed by `usize`\n   --> /tmp/tmp902yjabj.rs:9:19\n    |\n9   |     if string.get(i) == 0 {\n    |               --- ^ string indices are ranges of `usize`\n    |               |\n    |               required by a bound introduced by this call\n    |\n    = help: the trait `SliceIndex<str>` is not implemented for `usize`\n    = help: the trait `SliceIndex<[T]>` is implemented for `usize`\nnote: required by a bound in `core::str::<impl str>::get`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp902yjabj.rs:9:25\n  |\n9 |     if string.get(i) == 0 {\n  |                         ^ expected enum `Option`, found integer\n  |\n  = note: expected enum `Option<&_>`\n             found type `{integer}`\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for _ in string.iter() {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0599]: no method named `iter` found for struct `String` in the current scope\n --> /tmp/tmp9955wjlm.rs:8:19\n  |\n8 |   for _ in string.iter() {\n  |                   ^^^^ method not found in `String`\n  |\nhelp: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n  |\n8 |   for _ in string.chars() {\n  |                   ~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for _ in string.iter() {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0599]: no method named `iter` found for struct `String` in the current scope\n --> /tmp/tmp9955wjlm.rs:8:19\n  |\n8 |   for _ in string.iter() {\n  |                   ^^^^ method not found in `String`\n  |\nhelp: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n  |\n8 |   for _ in string.chars() {\n  |                   ~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for i in string.iter() {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0599]: no method named `iter` found for struct `String` in the current scope\n --> /tmp/tmp26646nbr.rs:8:19\n  |\n8 |   for i in string.iter() {\n  |                   ^^^^ method not found in `String`\n  |\nhelp: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n  |\n8 |   for i in string.chars() {\n  |                   ~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for _ in string.iter() {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0599]: no method named `iter` found for struct `String` in the current scope\n --> /tmp/tmp9955wjlm.rs:8:19\n  |\n8 |   for _ in string.iter() {\n  |                   ^^^^ method not found in `String`\n  |\nhelp: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n  |\n8 |   for _ in string.chars() {\n  |                   ~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmpnkfibhjd.rs:7:17\n  |\n7 |   return string.len;\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len();\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmpnkfibhjd.rs:7:17\n  |\n7 |   return string.len;\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len();\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  let len = 0;\n  for i in string.iter() {\n    len += 1;\n  }\n  return len;\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0599]: no method named `iter` found for struct `String` in the current scope\n --> /tmp/tmp26646nbr.rs:8:19\n  |\n8 |   for i in string.iter() {\n  |                   ^^^^ method not found in `String`\n  |\nhelp: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n  |\n8 |   for i in string.chars() {\n  |                   ~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return length of given string\n/// >>> strlen(String::from(\"\"))\n/// 0\n/// >>> strlen(String::from(\"abc\"))\n/// 3\nfn strlen(string: String) -> isize {\n  return string.len\n}\n\nfn main() {\n    let candidate = strlen;\n    assert_eq!(candidate(String::from(\"\")), 0);\n    assert_eq!(candidate(String::from(\"x\")), 1);\n    assert_eq!(candidate(String::from(\"asdasnakj\")), 9);\n}\n",
      "timestamp": 1664292879,
      "stdout": "",
      "stderr": "error[E0615]: attempted to take value of method `len` on type `String`\n --> /tmp/tmp6h6zh817.rs:7:17\n  |\n7 |   return string.len\n  |                 ^^^ method, not a field\n  |\nhelp: use parentheses to call the method\n  |\n7 |   return string.len()\n  |                    ++\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0615`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
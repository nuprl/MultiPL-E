{
  "name": "HumanEval_35_max_element",
  "language": "rs",
  "prompt": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n",
  "tests": "}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i];\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpqw7k7j_8.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = l[i];\n   |       ^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = l[0];\n    for i in l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp_ixqulkm.rs:9:16\n  |\n9 |         if i > max {\n  |                ^^^\n  |                |\n  |                expected `&isize`, found `isize`\n  |                help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_ixqulkm.rs:10:19\n   |\n7  |     let max = l[0];\n   |               ---- expected due to this value\n...\n10 |             max = i;\n   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |             max = *i;\n   |                   +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i];\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpqw7k7j_8.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = l[i];\n   |       ^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = 0;\n    for i in 0..l.len() {\n        if l[i] > max {\n            max = l[i];\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpu_mn8npq.rs:10:13\n   |\n7  |     let max = 0;\n   |         ---\n   |         |\n   |         first assignment to `max`\n   |         help: consider making this binding mutable: `mut max`\n...\n10 |             max = l[i];\n   |             ^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = 0;\n    for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplk2s3y3_.rs:10:13\n   |\n7  |     let max = 0;\n   |         ---\n   |         |\n   |         first assignment to `max`\n   |         help: consider making this binding mutable: `mut max`\n...\n10 |             max = i;\n   |             ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in an empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp3vd6ywkp.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i];\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpqw7k7j_8.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = l[i];\n   |       ^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpa_tdlj3z.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpa_tdlj3z.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpa_tdlj3z.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpyc2vec86.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyc2vec86.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyc2vec86.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i];\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpqw7k7j_8.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = l[i];\n   |       ^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpsxb9u_ea.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in 1..l.len {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpyo9fueki.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in 1..l.len {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpyo9fueki.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpyo9fueki.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpyo9fueki.rs:11:17\n   |\n11 |   for i in 1..l.len {\n   |                 ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n11 |   for i in 1..l.len() {\n   |                    ++\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0423, E0616.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in an empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpzeiwpowe.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzeiwpowe.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzeiwpowe.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l.data[0];\n  for i in l.data[1 : l.len - 1] {\n    if l.data[i] > max {\n      max = l.data[i];\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: casts cannot be followed by a field access\n  --> /tmp/tmp0sm3tcmw.rs:11:19\n   |\n11 |   for i in l.data[1 : l.len - 1] {\n   |                   ^----\n   |                    |\n   |                    help: remove the type ascription\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp0sm3tcmw.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0573]: expected type, found local variable `l`\n  --> /tmp/tmp0sm3tcmw.rs:11:23\n   |\n11 |   for i in l.data[1 : l.len - 1] {\n   |                       ^ expecting a type here because of type ascription\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp0sm3tcmw.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp0sm3tcmw.rs:10:15\n   |\n10 |   let max = l.data[0];\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp0sm3tcmw.rs:11:14\n   |\n11 |   for i in l.data[1 : l.len - 1] {\n   |              ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp0sm3tcmw.rs:12:10\n   |\n12 |     if l.data[i] > max {\n   |          ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp0sm3tcmw.rs:13:15\n   |\n13 |       max = l.data[i];\n   |               ^^^^ unknown field\n\nerror: aborting due to 8 previous errors\n\nSome errors have detailed explanations: E0423, E0573, E0609, E0616.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpy0dv6yt8.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpy0dv6yt8.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpy0dv6yt8.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpy0dv6yt8.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i];\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpqw7k7j_8.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = l[i];\n   |       ^^^^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l.data[0];\n  for i in l.data[1 : l.len] {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: casts cannot be followed by a field access\n  --> /tmp/tmpbleirpfp.rs:11:19\n   |\n11 |   for i in l.data[1 : l.len] {\n   |                   ^----\n   |                    |\n   |                    help: remove the type ascription\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpbleirpfp.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0573]: expected type, found local variable `l`\n  --> /tmp/tmpbleirpfp.rs:11:23\n   |\n11 |   for i in l.data[1 : l.len] {\n   |                       ^ expecting a type here because of type ascription\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpbleirpfp.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpbleirpfp.rs:10:15\n   |\n10 |   let max = l.data[0];\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpbleirpfp.rs:11:14\n   |\n11 |   for i in l.data[1 : l.len] {\n   |              ^^^^ unknown field\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0423, E0573, E0609, E0616.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = 0;\n    for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplk2s3y3_.rs:10:13\n   |\n7  |     let max = 0;\n   |         ---\n   |         |\n   |         first assignment to `max`\n   |         help: consider making this binding mutable: `mut max`\n...\n10 |             max = i;\n   |             ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l.data[0];\n  for i in l.data[1 : l.len] {\n    if max < i {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: casts cannot be followed by a field access\n  --> /tmp/tmpc1y8rxqf.rs:11:19\n   |\n11 |   for i in l.data[1 : l.len] {\n   |                   ^----\n   |                    |\n   |                    help: remove the type ascription\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpc1y8rxqf.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0573]: expected type, found local variable `l`\n  --> /tmp/tmpc1y8rxqf.rs:11:23\n   |\n11 |   for i in l.data[1 : l.len] {\n   |                       ^ expecting a type here because of type ascription\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpc1y8rxqf.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpc1y8rxqf.rs:10:15\n   |\n10 |   let max = l.data[0];\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmpc1y8rxqf.rs:11:14\n   |\n11 |   for i in l.data[1 : l.len] {\n   |              ^^^^ unknown field\n\nerror: aborting due to 6 previous errors\n\nSome errors have detailed explanations: E0423, E0573, E0609, E0616.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = 0;\n    for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplk2s3y3_.rs:10:13\n   |\n7  |     let max = 0;\n   |         ---\n   |         |\n   |         first assignment to `max`\n   |         help: consider making this binding mutable: `mut max`\n...\n10 |             max = i;\n   |             ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    if l.len == 0 {\n        panic!(\"max_element called on empty vector\");\n    }\n    let max = l[0];\n    for i in l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpqv63k2w1.rs:7:10\n  |\n7 |     if l.len == 0 {\n  |          ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |     if l.len() == 0 {\n  |             ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:12:16\n   |\n12 |         if i > max {\n   |                ^^^\n   |                |\n   |                expected `&isize`, found `isize`\n   |                help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:13:19\n   |\n10 |     let max = l[0];\n   |               ---- expected due to this value\n...\n13 |             max = i;\n   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |             max = *i;\n   |                   +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpv38wigwj.rs:11:17\n   |\n11 |   let max = l[0]\n   |                 ^ help: add `;` here\n12 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpv38wigwj.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpv38wigwj.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpv38wigwj.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpv38wigwj.rs:14:13\n   |\n11 |   let max = l[0]\n   |             ---- expected due to this value\n...\n14 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    if l.len == 0 {\n        panic!(\"Cannot find max element in an empty vector\");\n    }\n    let max = l[0];\n    for i in l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp27uh83sr.rs:7:10\n  |\n7 |     if l.len == 0 {\n  |          ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |     if l.len() == 0 {\n  |             ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp27uh83sr.rs:12:16\n   |\n12 |         if i > max {\n   |                ^^^\n   |                |\n   |                expected `&isize`, found `isize`\n   |                help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp27uh83sr.rs:13:19\n   |\n10 |     let max = l[0];\n   |               ---- expected due to this value\n...\n13 |             max = i;\n   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |             max = *i;\n   |                   +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkjw_fkdg.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpkjw_fkdg.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkjw_fkdg.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:13:13\n   |\n10 |   let max = l[0]\n   |             ---- expected due to this value\n...\n13 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkjw_fkdg.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpkjw_fkdg.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkjw_fkdg.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:13:13\n   |\n10 |   let max = l[0]\n   |             ---- expected due to this value\n...\n13 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkjw_fkdg.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpkjw_fkdg.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkjw_fkdg.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:13:13\n   |\n10 |   let max = l[0]\n   |             ---- expected due to this value\n...\n13 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l.data[0];\n  for i in l.data.iter().next() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp2ep9ymuc.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp2ep9ymuc.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp2ep9ymuc.rs:11:15\n   |\n11 |   let max = l.data[0];\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp2ep9ymuc.rs:12:14\n   |\n12 |   for i in l.data.iter().next() {\n   |              ^^^^ unknown field\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0423, E0609, E0616.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkjw_fkdg.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpkjw_fkdg.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkjw_fkdg.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:13:13\n   |\n10 |   let max = l[0]\n   |             ---- expected due to this value\n...\n13 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    if l.len == 0 {\n        panic!(\"max_element called on empty vector\");\n    }\n    let max = l[0];\n    for i in l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpqv63k2w1.rs:7:10\n  |\n7 |     if l.len == 0 {\n  |          ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |     if l.len() == 0 {\n  |             ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:12:16\n   |\n12 |         if i > max {\n   |                ^^^\n   |                |\n   |                expected `&isize`, found `isize`\n   |                help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:13:19\n   |\n10 |     let max = l[0];\n   |               ---- expected due to this value\n...\n13 |             max = i;\n   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |             max = *i;\n   |                   +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp8n3sdz9z.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len {\n  |   --- unexpected token\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp8n3sdz9z.rs:8:17\n  |\n8 |   for i in 0..l.len {\n  |                 ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n8 |   for i in 0..l.len() {\n  |                    ++\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0616`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpv38wigwj.rs:11:17\n   |\n11 |   let max = l[0]\n   |                 ^ help: add `;` here\n12 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpv38wigwj.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpv38wigwj.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpv38wigwj.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpv38wigwj.rs:14:13\n   |\n11 |   let max = l[0]\n   |             ---- expected due to this value\n...\n14 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    if l.len == 0 {\n        panic!(\"max_element called on empty vector\");\n    }\n    let max = l[0];\n    for i in l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpqv63k2w1.rs:7:10\n  |\n7 |     if l.len == 0 {\n  |          ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |     if l.len() == 0 {\n  |             ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:12:16\n   |\n12 |         if i > max {\n   |                ^^^\n   |                |\n   |                expected `&isize`, found `isize`\n   |                help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:13:19\n   |\n10 |     let max = l[0];\n   |               ---- expected due to this value\n...\n13 |             max = i;\n   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |             max = *i;\n   |                   +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in an empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp3vd6ywkp.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in an empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp3vd6ywkp.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = 0;\n    for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplk2s3y3_.rs:10:13\n   |\n7  |     let max = 0;\n   |         ---\n   |         |\n   |         first assignment to `max`\n   |         help: consider making this binding mutable: `mut max`\n...\n10 |             max = i;\n   |             ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l.data[0]\n  for i in l.data[1 : l.len] {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmp_6mv7o5q.rs:10:22\n   |\n10 |   let max = l.data[0]\n   |                      ^ help: add `;` here\n11 |   for i in l.data[1 : l.len] {\n   |   --- unexpected token\n\nerror: casts cannot be followed by a field access\n  --> /tmp/tmp_6mv7o5q.rs:11:19\n   |\n11 |   for i in l.data[1 : l.len] {\n   |                   ^----\n   |                    |\n   |                    help: remove the type ascription\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmp_6mv7o5q.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0573]: expected type, found local variable `l`\n  --> /tmp/tmp_6mv7o5q.rs:11:23\n   |\n11 |   for i in l.data[1 : l.len] {\n   |                       ^ expecting a type here because of type ascription\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp_6mv7o5q.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp_6mv7o5q.rs:10:15\n   |\n10 |   let max = l.data[0]\n   |               ^^^^ unknown field\n\nerror[E0609]: no field `data` on type `Vec<isize>`\n  --> /tmp/tmp_6mv7o5q.rs:11:14\n   |\n11 |   for i in l.data[1 : l.len] {\n   |              ^^^^ unknown field\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0423, E0573, E0609, E0616.\nFor more information about an error, try `rustc --explain E0423`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = 0;\n    for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplk2s3y3_.rs:10:13\n   |\n7  |     let max = 0;\n   |         ---\n   |         |\n   |         first assignment to `max`\n   |         help: consider making this binding mutable: `mut max`\n...\n10 |             max = i;\n   |             ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1tdfdu7k.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1tdfdu7k.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1tdfdu7k.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmp1np4ctj3.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp1np4ctj3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1np4ctj3.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in 0..l.len() {\n    if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmpvfylm1a6.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in 0..l.len() {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkjw_fkdg.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpkjw_fkdg.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkjw_fkdg.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:13:13\n   |\n10 |   let max = l[0]\n   |             ---- expected due to this value\n...\n13 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkjw_fkdg.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpkjw_fkdg.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkjw_fkdg.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:13:13\n   |\n10 |   let max = l[0]\n   |             ---- expected due to this value\n...\n13 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in 1..l.len {\n    if l[i] > max {\n      max = l[i];\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpjyye899x.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0616]: field `len` of struct `Vec` is private\n  --> /tmp/tmpjyye899x.rs:11:17\n   |\n11 |   for i in 1..l.len {\n   |                 ^^^ private field\n   |\nhelp: a method `len` also exists, call it with parentheses\n   |\n11 |   for i in 1..l.len() {\n   |                    ++\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0616`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\")\n  }\n  let max = l[0]\n  for i in l.iter() {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n  --> /tmp/tmpkjw_fkdg.rs:10:17\n   |\n10 |   let max = l[0]\n   |                 ^ help: add `;` here\n11 |   for i in l.iter() {\n   |   --- unexpected token\n\nerror[E0423]: expected function, found macro `panic`\n --> /tmp/tmpkjw_fkdg.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\")\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\")\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpkjw_fkdg.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkjw_fkdg.rs:13:13\n   |\n10 |   let max = l[0]\n   |             ---- expected due to this value\n...\n13 |       max = i\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i\n   |             +\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpyc2vec86.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyc2vec86.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpyc2vec86.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpwl6rrmw3.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwl6rrmw3.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic!(\"Cannot find max element in an empty vector\");\n  }\n\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmp3vd6ywkp.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:13:12\n   |\n13 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3vd6ywkp.rs:14:13\n   |\n11 |   let max = l[0];\n   |             ---- expected due to this value\n...\n14 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |       max = *i;\n   |             +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    let max = 0;\n    for i in l {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplk2s3y3_.rs:10:13\n   |\n7  |     let max = 0;\n   |         ---\n   |         |\n   |         first assignment to `max`\n   |         help: consider making this binding mutable: `mut max`\n...\n10 |             max = i;\n   |             ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpic5nsd57.rs:9:12\n  |\n9 |     if i > max {\n  |            ^^^\n  |            |\n  |            expected `&isize`, found `isize`\n  |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpic5nsd57.rs:10:13\n   |\n7  |   let max = l[0];\n   |             ---- expected due to this value\n...\n10 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |       max = *i;\n   |             +\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  if l.len == 0 {\n    panic(\"max_element called on empty vector\");\n  }\n  let max = l[0];\n  for i in l.iter() {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0423]: expected function, found macro `panic`\n --> /tmp/tmpev51om7c.rs:8:5\n  |\n8 |     panic(\"max_element called on empty vector\");\n  |     ^^^^^ not a function\n  |\nhelp: use `!` to invoke the macro\n  |\n8 |     panic!(\"max_element called on empty vector\");\n  |          +\n\nerror[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpev51om7c.rs:7:8\n  |\n7 |   if l.len == 0 {\n  |        ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |   if l.len() == 0 {\n  |           ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:12:12\n   |\n12 |     if i > max {\n   |            ^^^\n   |            |\n   |            expected `&isize`, found `isize`\n   |            help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpev51om7c.rs:13:13\n   |\n10 |   let max = l[0];\n   |             ---- expected due to this value\n...\n13 |       max = i;\n   |             ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |       max = *i;\n   |             +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0308, E0423, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    if l.len == 0 {\n        panic!(\"max_element called on empty vector\");\n    }\n    let max = l[0];\n    for i in l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpqv63k2w1.rs:7:10\n  |\n7 |     if l.len == 0 {\n  |          ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |     if l.len() == 0 {\n  |             ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:12:16\n   |\n12 |         if i > max {\n   |                ^^^\n   |                |\n   |                expected `&isize`, found `isize`\n   |                help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:13:19\n   |\n10 |     let max = l[0];\n   |               ---- expected due to this value\n...\n13 |             max = i;\n   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |             max = *i;\n   |                   +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0;\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmpwy36nqug.rs:10:7\n   |\n7  |   let max = 0;\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n    if l.len == 0 {\n        panic!(\"max_element called on empty vector\");\n    }\n    let max = l[0];\n    for i in l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n    return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0616]: field `len` of struct `Vec` is private\n --> /tmp/tmpqv63k2w1.rs:7:10\n  |\n7 |     if l.len == 0 {\n  |          ^^^ private field\n  |\nhelp: a method `len` also exists, call it with parentheses\n  |\n7 |     if l.len() == 0 {\n  |             ++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:12:16\n   |\n12 |         if i > max {\n   |                ^^^\n   |                |\n   |                expected `&isize`, found `isize`\n   |                help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqv63k2w1.rs:13:19\n   |\n10 |     let max = l[0];\n   |               ---- expected due to this value\n...\n13 |             max = i;\n   |                   ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |             max = *i;\n   |                   +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0616.\nFor more information about an error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = l[0];\n  for i in l {\n    if i > max {\n      max = i;\n    }\n  }\n  return max;\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error[E0384]: cannot assign twice to immutable variable `max`\n  --> /tmp/tmplw3xhyli.rs:10:7\n   |\n7  |   let max = l[0];\n   |       ---\n   |       |\n   |       first assignment to `max`\n   |       help: consider making this binding mutable: `mut max`\n...\n10 |       max = i;\n   |       ^^^^^^^ cannot assign twice to immutable variable\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0384`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Return maximum element in the vector.\n/// >>> max_element(vec![1, 2, 3])\n/// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn max_element(l: Vec<isize>) -> isize {\n  let max = 0\n  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n",
      "timestamp": 1664293097,
      "stdout": "",
      "stderr": "error: expected `;`, found keyword `for`\n --> /tmp/tmp_9n2wckm.rs:7:14\n  |\n7 |   let max = 0\n  |              ^ help: add `;` here\n8 |   for i in l {\n  |   --- unexpected token\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
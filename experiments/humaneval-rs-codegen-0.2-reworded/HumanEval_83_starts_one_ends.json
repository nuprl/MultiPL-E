{
  "name": "HumanEval_83_starts_one_ends",
  "language": "rs",
  "prompt": "/// Given a positive integer n, return the count of the numbers of n-digit\n/// positive integers that start or end with 1.\nfn starts_one_ends(n: isize) -> isize {\n",
  "tests": "}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n",
  "completions": [
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    while digit > 0 {\n      digit /= 10;\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let num = i\n    let digits = []\n    while num > 0 {\n      digits.push(num % 10)\n      num /= 10\n    }\n    if digits.length == 1 && digits[0] == 1 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i < n {\n    let j = i;\n    while j < n && j % i == 0 {\n      j += i;\n    }\n    count += j - i + 1;\n    i = j + 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    let digits = [0..9].map(|x| x + i).collect();\n    if digits.contains(1) {\n      count += 1;\n    }\n    if digits.contains(0) {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i % 2 == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    if i == 0 || i == n - 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i > 0 && i < n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    if i == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let j = i\n    while j > 0 {\n      j -= 1\n      if j == 0 {\n        count += 1\n      }\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n - 1 {\n      count += 1;\n    }\n    if i > 0 && i < n - 1 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    let j = i\n    while j < n {\n      if j == 0 {\n        count += 1\n        break\n      }\n      j += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        count += 1;\n        break;\n      }\n      j += i;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else {\n      count += starts_one_ends(n - i - 1);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n {\n      count += 1;\n    }\n    if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    let j = i + 1;\n    while j < n {\n      if j % 2 == 0 {\n        j += 1;\n      } else {\n        break;\n      }\n    }\n    if j == n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n {\n      count += 1;\n    }\n    if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(i + 1);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n - 1 {\n      count += 1;\n    }\n    if i > 0 && i < n - 1 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  let i = 0\n  while i < n {\n    let digit = i % 10\n    if digit == 1 {\n      count += 1\n    }\n    i += 1\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    if digit == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    if digit == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i > 0 {\n      count += starts_one_ends(i - 1);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(i + 1)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i % 2 == 0 {\n      count += 1\n    } else {\n      count += 2\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i % 2 == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    }\n    if i == n {\n      count += 1\n    }\n    if i > 0 && i < n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i < n {\n    if i % 2 == 0 {\n      count += starts_one_ends(i / 2);\n    }\n    i *= 2;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let j = i;\n    while j < n and j >= 0 {\n      if j == 0 {\n        count += 1;\n      } else {\n        count += 1 + j - (j - 1) % 2;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  let i = 1\n  while i <= n {\n    let j = i\n    while j <= n {\n      if j % 10 == 1 {\n        count += 1\n      }\n      j += 1\n    }\n    i += 1\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    if i == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i < n {\n    let j = i;\n    while j < n {\n      if j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    if i == 1 {\n      count += 1;\n    } else {\n      count += starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    if digit == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    let digits = i;\n    let start = digits.start(1);\n    let end = digits.end(1);\n    if start == 1 {\n      count += 1;\n    }\n    if end == 1 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i % 2 == 0 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        count += 1;\n        break;\n      }\n      j += i;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n {\n      count += 1;\n    }\n    if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  let i = 0\n  while i < n {\n    let digit = i % 10\n    if digit == 1 {\n      count += 1\n    }\n    i += 1\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i || j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let digit = i % 10\n    if digit == 1 {\n      count += 1\n    }\n    if digit == 0 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  let i = 0\n  while i < n {\n    let digit = 1\n    while digit <= 9 {\n      count += digit\n      i += 1\n      digit *= 10\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i || j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i > 0 {\n      count += starts_one_ends(i - 1)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 1..n {\n    let digits = n - i\n    let start = 1\n    let end = 1\n    for j in 1..digits {\n      start *= 10\n      end *= 10\n    }\n    if start == end {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i % 2 == 0 {\n      count += 1\n    } else {\n      count += 2\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n {\n      count += 1;\n    }\n    if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    let digits = [0..9].map(|x| x + i).filter(|x| x > 0);\n    if digits.count(1) > 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 || i == n {\n      count += 1\n    }\n    if i > 0 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    while digit > 0 {\n      digit /= 10;\n      count += digit;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n {\n      count += 1;\n    }\n    if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = 1;\n    while j <= n {\n      if j == i {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i)\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        count += 1;\n        break;\n      }\n      j += i;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i % 2 == 0 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 1..n {\n    if i == 1 {\n      count += 1\n    }\n    if i == n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    if i == 1 {\n      count += 1;\n    }\n    i *= 10;\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    let start = digit;\n    let end = digit;\n    while digit > 0 {\n      digit -= 1;\n      start -= 1;\n      end -= 1;\n    }\n    if start == 1 {\n      count += 1;\n    }\n    if end == 1 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let digit = i\n    while digit > 0 {\n      digit /= 10\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i || j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i /= 10;\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    if i == 1 {\n      count += 1\n    }\n    if i == n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = 1;\n    while i < n and digit <= 9 {\n      digit = digit * 10 + 1;\n      i += 1;\n    }\n    if i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    let digit_count = 1;\n    while digit > 0 {\n      digit /= 10;\n      digit_count += 1;\n    }\n    if digit_count == 1 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let digit = i\n    while digit > 0 {\n      digit = digit / 10\n      count += digit\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    if i == 1 {\n      count += 1;\n    } else {\n      count += starts_one_ends(n - i);\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = 1;\n    while i < n and digit <= 9 {\n      digit += 1;\n      i += 1;\n    }\n    if digit == 10 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let digits = i.to_string()\n    let start = digits.find(1)\n    let end = digits.find_last_of(1)\n    if start == 0 || end == n - 1 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else {\n      count += starts_one_ends(n - i - 1)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else {\n      count += starts_one_ends(n - i - 1)\n    }\n  }\n  return count",
    "  let count = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  while i < n {\n    if j < n {\n      if k < n {\n        count += 1\n        k += 1\n      }\n      j += 1\n    }\n    i += 1\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else {\n      count += starts_one_ends(n - i - 1);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        break;\n      }\n      j += i;\n    }\n    if j == n {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let j = i;\n    while j < n and j >= 0 and j % 10 == 1 {\n      count += 1;\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    if i == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    }\n    if i == n - 1 {\n      count += 1;\n    }\n    if i > 0 && i < n - 1 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    let start = true;\n    while digit > 0 {\n      digit /= 10;\n      if start {\n        count += 1;\n        start = false;\n      } else {\n        count -= 1;\n      }\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i || j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i || j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i || j == i + 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    if i == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        count += 1;\n        break;\n      }\n      j += i;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    }\n    if i == n {\n      count += 1\n    }\n    if i > 0 && i < n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i % 2 == 0 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0\n  let i = 0\n  let j = 0\n  while i < n {\n    if j < n {\n      if j == 0 {\n        count += 1\n      }\n      j += 1\n    } else {\n      i += 1\n      j = 0\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else if i % 2 == 0 {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1)\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        count += 1;\n        break;\n      }\n      j += i;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let digits = n - i\n    let one_digit = 1\n    let one_digit_start = one_digit\n    let one_digit_end = one_digit\n    for j in 1..digits {\n      let digit = j\n      one_digit_start = one_digit_start * 10 + digit\n      one_digit_end = one_digit_end * 10 + digit\n    }\n    if one_digit_start == one_digit_end {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    }\n    if i == n {\n      count += 1\n    }\n    if i > 0 && i < n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    if digit == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1)\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let j = i\n    while j > 0 {\n      j -= 1\n      if j == 0 {\n        count += 1\n      }\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else {\n      count += starts_one_ends(n - i - 1);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i)\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(i + 1)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    }\n    if i == n {\n      count += 1\n    }\n    if i > 0 && i < n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(i + 1);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let digits = []\n    for j in 1..n {\n      digits.push(j)\n    }\n    digits.pop()\n    if digits.length == n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i *= 10;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j == i {\n        count += 1;\n      } else if j == i + 1 {\n        count += 1;\n      } else if j == i - 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        count += 1;\n        break;\n      }\n      j += i;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % 10 == 1 {\n        count += 1;\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 1..n {\n    if i == 1 {\n      count += 1\n    } else {\n      count += starts_one_ends(n - i)\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let j = i;\n    while j < n and j >= 0 {\n      if j == 0 {\n        count += 1;\n      } else {\n        count += 1 + starts_one_ends(n - j - 1);\n      }\n      j += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let digit = i\n    while digit > 0 {\n      digit /= 10\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i % 2 == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digits = n - i;\n    let start = 1;\n    let end = start;\n    while (digits > 0) {\n      end = start * 10 + end;\n      digits -= 1;\n    }\n    if (start == end) {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    }\n    if i == n {\n      count += 1\n    }\n    if i > 0 && i < n {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    let start = digit;\n    let end = digit;\n    while digit > 0 {\n      digit -= 1;\n      start -= 1;\n      end -= 1;\n    }\n    if start == 0 && end == 0 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    while digit > 0 {\n      digit /= 10;\n      count += digit;\n    }\n  }\n  return count;",
    "  let count = 0\n  let i = 1\n  while i <= n {\n    let j = i\n    while j <= n {\n      if j == i {\n        count += 1\n      } else if j == i + 1 {\n        count += 1\n      } else {\n        break\n      }\n      j += 1\n    }\n    i += 1\n  }\n  return count",
    "  let count = 0\n  for i in 1..n {\n    let digit = i\n    let start = true\n    while digit > 0 {\n      digit = digit / 10\n      start = !start\n    }\n    if start {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    } else if i == n {\n      count += 1\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i)\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    }\n    if i == n - 1 {\n      count += 1\n    }\n    if i > 0 && i < n - 1 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 0 {\n      count += starts_one_ends(n - i - 1);\n    } else if digit == 1 {\n      count += starts_one_ends(n - i - 1) + 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else {\n      count += starts_one_ends(n - i - 1);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 0..n {\n    if i == 0 {\n      count += 1\n    }\n    if i == n - 1 {\n      count += 1\n    }\n    if i > 0 && i < n - 1 {\n      count += 1\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 0..n {\n    let j = i + 1\n    while j < n {\n      if j == 0 {\n        count += 1\n        break\n      }\n      j += 1\n    }\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0\n  for i in 1..n {\n    let j = i\n    while j > 0 {\n      j -= 1\n      if j == 1 {\n        count += 1\n      }\n    }\n  }\n  return count",
    "  let count = 0\n  for i in 1..n {\n    let j = i\n    while j > 0 {\n      j -= 1\n      if j == 0 {\n        count += 1\n      }\n    }\n  }\n  return count",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    let j = i;\n    while j <= n {\n      if j % i == 0 {\n        count += 1;\n      }\n      j += i;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    if i == 0 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i < n {\n    let j = i;\n    while j < n and j % i == 0 {\n      j += i;\n    }\n    count += j - i + 1;\n    i = j + 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 || i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else if i > 0 && i < n {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    let one_digit = digit == 1;\n    let one_ends = one_digit || digit == n;\n    let starts = one_ends || digit == n - 1;\n    count += starts ? 1 : 0;\n  }\n  return count;",
    "  let count = 0;\n  for i in 0..n {\n    let digits = [0..9].map(|x| x + i).take(n);\n    if digits.contains(1) {\n      count += 1;\n    }\n    if digits.contains(10) {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 0;\n  while i < n {\n    let digit = i % 10;\n    if digit == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    while digit > 0 {\n      digit = digit / 10;\n      count += digit;\n    }\n  }\n  return count;",
    "  let count = 0;\n  let i = 1;\n  while i <= n {\n    if i == 1 {\n      count += 1;\n    }\n    i += 1;\n  }\n  return count;",
    "  let count = 0;\n  for i in 1..n {\n    let digit = i;\n    let digit_count = 1;\n    while digit > 0 {\n      digit /= 10;\n      digit_count += 1;\n    }\n    if digit_count == 1 {\n      count += 1;\n    }\n  }\n  return count;",
    "  let count = 0\n  let i = 0\n  while i < n {\n    let digit = i % 10\n    if digit == 1 {\n      count += 1\n    }\n    i += 1\n  }\n  return count",
    "  let count = 0;\n  for i in 0..n {\n    if i == 0 {\n      count += 1;\n    } else if i == n {\n      count += 1;\n    } else {\n      count += starts_one_ends(i - 1) + starts_one_ends(n - i);\n    }\n  }\n  return count;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
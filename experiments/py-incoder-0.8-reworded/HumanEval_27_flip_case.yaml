name: HumanEval_27_flip_case
language: py
prompt: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip lowercase\
  \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
  \    'hELLO'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
  \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
  \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
  \ntest_check()\n"
completions: ["    return string.upper().replace(' ', '').replace('_', '')\n\n", " \
    \   flipped_case = ''\n    for char in string:\n        if char.islower():\n \
    \           flipped_case += char.upper()\n        else:\n            flipped_case\
    \ += char.lower()\n    return flipped_case\n", "    return string.swapcase()\n\
    \n", "    return string[0].upper() + string[1:].lower()\n\n", "    return string[0].upper()\
    \ + string[1:].lower()\n", "    return string.lower() + string.upper()\n\n", " \
    \   return string.lower()[::-1] + string.upper()\n\n", "    return \"\".join(map(lambda\
    \ x: x.upper(), list(string)))\n\n", "    return string.swapcase()\n\n", "   \
    \ return \"\".join(x if x==x.lower() else x.upper() for x in string)\n", "   \
    \ return \"\".join(\n        char.upper() if char.islower() else char.lower()\
    \ for char in string\n    )\n\n", "    return ''.join([(char.upper() if char.islower()\
    \ else char.lower()) for char in string])\n\n", "    # Convert every character\
    \ into lowercase.\n    string = string.lower()\n    # Make every other character\
    \ uppercase.\n    return ''.join([ \n        (string.upper() if index%2 == 0 else\
    \ string.lower())\n        for index in range(len(string))\n    ])\n", "    return\
    \ string.upper().replace(' ', '')\n", "    return ''.join([x.upper() if x.islower()\
    \ else x.lower() for x in string])\n", "    return \"\".join(\n        string.upper()\n\
    \        if i == 0 or string[i - 1] == \" \" else string.lower()\n        for\
    \ i in range(len(string))\n    )\n\n", "    chars = list(string)\n    for i, char\
    \ in enumerate(chars):\n        if char.islower():\n            chars[i] = char.upper()\n\
    \        elif char.isupper():\n            chars[i] = char.lower()\n    return\
    \ \"\".join(chars)\n\n", "    return string.upper() if isinstance(string, str)\
    \ else string\n\n", "    return string[0].upper() + string[1:]\n", "    return\
    \ \"\".join(reversed(list(string)))\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

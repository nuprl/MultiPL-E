name: HumanEval_51_remove_vowels
language: py
prompt: "def remove_vowels(text: str) -> str:\n    \"\"\"\n    remove_vowels is a\
  \ function that takes string and returns string without vowels.\n    >>> remove_vowels('')\n\
  \    ''\n    >>> remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n\
  \    ''\n    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n\
  \    'zbcd'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('') == ''\n    assert candidate('abcdef\\\
  nghijklm') == 'bcdf\\nghjklm'\n    assert candidate('fedcba') == 'fdcb'\n    assert\
  \ candidate('eeeee') == ''\n    assert candidate('acBAA') == 'cB'\n    assert candidate('EcBOO')\
  \ == 'cB'\n    assert candidate('ybcd') == 'ybcd'\n\ndef test_check():\n    check(remove_vowels)\n\
  \ntest_check()\n"
completions: ["    # Your code here\n    vowels = set(['a', 'e', 'i', 'o', 'u'])\n\
    \    return ''.join(ch for ch in text if ch not in vowels)\n\n", "    text = text.lower()\n\
    \    # empty string means no vowels\n    if text == '':\n        return text\n\
    \n    vowels = ('a', 'e', 'i', 'o', 'u')\n    text = text.lower()\n    # string\
    \ with vowels only\n    for char in text:\n        if char in vowels:\n      \
    \      text = text.replace(char, '')\n    return text\n\n", "    vowels = set(\"\
    aeiouAEIOU\")\n    replacement = str.maketrans(\n        \"\", \"\", str.maketrans(\n\
    \            *[x + \"aeiouAEIOU\" for x in vowels]\n        )\n    )\n    return\
    \ text.translate(replacement)\n\n", "    return ''.join(char for char in text\
    \ if not char.isalpha())\n\n", "    return re.sub(r\"[aeiouAEIOU]\", \"\", text)\n\
    \n", "    if text == '':\n        return ''\n    elif text[-1] in 'aeiou':\n \
    \       return text[:-1]\n    elif text[0] in 'aeiou':\n        return text[1:]\n\
    \    else:\n        return text\n\n", "    # Your code here\n    new_text = \"\
    \"\n    for char in text:\n        if char in \"aeiouAEIOU\":\n            new_text\
    \ += char\n        else:\n            new_text += \"\"\n    return new_text\n\n",
  "    return ''.join(k for k in text if not is_vowel(k))\n\n", "    vowels = ['a','e','i','o','u']\n\
    \    if any([char in vowels for char in text]) == False:\n        return text\n\
    \    return ''.join([char for char in text if char not in vowels])\n", "    #\
    \ your code here\n    return ''.join([c for c in text if not c in VOWELS])\n\n",
  "    return ''.join([letter for letter in text if letter not in VOWELS])\n", " \
    \   return re.sub(r\"[aeiou]\", \"\", text)\n\n", "    for letter in text:\n \
    \       if letter in VOWELS:\n            text = text.replace(letter, '')\n  \
    \  return text\n\n", "    vowels = ['a', 'e', 'i', 'o', 'u']\n    cleaned_text\
    \ = []\n    for char in text:\n        if char in vowels:\n            cleaned_text.append(char)\n\
    \    return ''.join(cleaned_text)\n\n", "    vowels = 'aeiouy'\n    return ''.join(x\
    \ for x in text if x not in vowels)\n", "    if text == '':\n        text = 'abc'\n\
    \    text = text.lower()\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for letter\
    \ in text:\n        if letter not in vowels:\n            text = text.replace(letter,\
    \ '')\n    return text\n\n", "    \n    text_length = len(text)\n    vowels =\
    \ 'aeiou'\n    \n    for index in range(text_length):\n        \n        if text[index].lower()\
    \ in vowels:\n            text[index] = ''\n            \n    return ''.join(text)\n\
    \n", "    return ''.join([x for x in text if x.lower() not in vowels])\n\n", " \
    \   vowels = \"aeiouAEIOU\"\n    clean_text = ''\n    for char in text:\n    \
    \    if char in vowels:\n            clean_text += ''\n        else:\n       \
    \     clean_text += char\n    return clean_text\n\n", "    vowels = ['a', 'e',\
    \ 'i', 'o', 'u']\n    for vowel in vowels:\n        text = text.replace(vowel,\
    \ '')\n    return text\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

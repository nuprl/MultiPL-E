language: py
name: HumanEval_42_incr_list
results:
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    return list(map(lambda i: i\
    \ + 1, l))\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823340
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    l2 = []\n    for x in l:\n\
    \        l2.append(x+1)\n    return l2\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n\
    \    check(incr_list)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823340
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    result = []\n    for i in l:\n\
    \        result.append(i + 1)\n    return result\n\ndef check(candidate):\n  \
    \  assert candidate([]) == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n\
    \    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124]\n\ndef test_check():\n    check(incr_list)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    l = list(l)\n    l.append(l[-1]\
    \ + 1)\n    return l\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n\
    \    check(incr_list)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx6cvvhti.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpx6cvvhti.py\", line 20,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmpx6cvvhti.py\", line 15,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpx6cvvhti.py\", line\
    \ 11, in incr_list\n    l.append(l[-1] + 1)\nIndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: 1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    return list(chain.from_iterable((i,)\
    \ for i in l))\n</cell>\n<cell>\nimport doctest\ndoctest.testmod(verbose=1)\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpurymwb7s.py\", line 11\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    l = l + [0]\n    for i in range(len(l)):\n\
    \        l[i+1] = l[i] + 1\n    return l\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert\
    \ candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\
    \ndef test_check():\n    check(incr_list)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmo1dw_nx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmo1dw_nx.py\", line 21,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmpmo1dw_nx.py\", line 16,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmo1dw_nx.py\", line\
    \ 12, in incr_list\n    l[i+1] = l[i] + 1\nIndexError: list assignment index out\
    \ of range\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    result = [l[0]]\n    for i,\
    \ e in enumerate(l[1:]):\n        result.append(e + result[-1])\n    return result\
    \ + [l[-1]]\n\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1dcy9zux.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp1dcy9zux.py\", line 22,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmp1dcy9zux.py\", line 17,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmp1dcy9zux.py\", line\
    \ 10, in incr_list\n    result = [l[0]]\nIndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    if l:\n        first = l[0]\n\
    \        return [first] + incr_list(l[1:])\n    else:\n        return l\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([3,\
    \ 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0odw0qr2.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp0odw0qr2.py\", line 22,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmp0odw0qr2.py\", line 18,\
    \ in check\n    assert candidate([3, 2, 1]) == [4, 3, 2]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    for i in range(len(l)):\n \
    \       l[i] += 1\n    return l\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n\
    \    check(incr_list)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823324
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    res = []\n    for i in range(len(l)):\n\
    \        res.append(l[i] + 1)\n    return res\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert\
    \ candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\
    \ndef test_check():\n    check(incr_list)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    def incr_recursive(index: int,\
    \ value: int) -> List[int]:\n        \"\"\"Recursively increments value at index.\"\
    \"\"\n        if index == len(l):\n            return [l[-1] + 1, l[-1]]\n   \
    \     else:\n            return incr_recursive(index+1, value) + [l[index] + 1,\
    \ l[index]]\n\n    indexes = list(range(len(l)))\n    random.shuffle(indexes)\n\
    \    return [incr_recursive(index) for index in indexes]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n\
    \    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124]\n\ndef test_check():\n    check(incr_list)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzgr3ye2d.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpzgr3ye2d.py\", line 28,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmpzgr3ye2d.py\", line 23,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzgr3ye2d.py\", line\
    \ 18, in incr_list\n    random.shuffle(indexes)\nNameError: name 'random' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    l.sort()\n    if not l:\n \
    \       return []\n    if l[0] == l[-1]:\n        l *= 2\n    return l[:-1] +\
    \ [1 + l[-1]]\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_4iosk8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5_4iosk8.py\", line 23,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmp5_4iosk8.py\", line 19,\
    \ in check\n    assert candidate([3, 2, 1]) == [4, 3, 2]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    for num in l:\n        if num\
    \ >= 0:\n            num += 1 \n        else:\n            num -= 1 \n    return\
    \ l\n\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([3,\
    \ 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplncr2ria.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplncr2ria.py\", line 24,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmplncr2ria.py\", line 20,\
    \ in check\n    assert candidate([3, 2, 1]) == [4, 3, 2]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    result = []\n    \n    for\
    \ i in l:\n        result.append(i+1)\n        \n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n\
    \    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124]\n\ndef test_check():\n    check(incr_list)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    res = 0\n    tail = l\n   \
    \ tail.append(0)\n    for i in reversed(tail):\n        res += i\n    return res\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([3,\
    \ 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8yju0ga8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp8yju0ga8.py\", line 23,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmp8yju0ga8.py\", line 18,\
    \ in check\n    assert candidate([]) == []\nAssertionError\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    for i, x in enumerate(l):\n\
    \        l[i] += x\n    return l\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n\
    \    check(incr_list)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbzg63oi3.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpbzg63oi3.py\", line 20,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmpbzg63oi3.py\", line 16,\
    \ in check\n    assert candidate([3, 2, 1]) == [4, 3, 2]\nAssertionError\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    l = l + [0] * (len(l) - len(l)\
    \ % 2)\n    for i in range(0, len(l), 2):\n        l[i] += l[i + 1]\n        l[i\
    \ + 1] = 0\n    return l\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n\
    \    check(incr_list)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7u185nw0.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp7u185nw0.py\", line 22,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmp7u185nw0.py\", line 18,\
    \ in check\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n  File \"/tmp/tmp7u185nw0.py\"\
    , line 12, in incr_list\n    l[i] += l[i + 1]\nIndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    res = []\n    i = 0\n    while\
    \ i < len(l):\n        res.append(l[i]+1)\n        i += 1\n    return res\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([3,\
    \ 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823340
- exit_code: -1
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    for i in range(len(l)):\n \
    \       l[i+1] += 1\n    return l\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n    assert candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]) == [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n\
    \    check(incr_list)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd_j845is.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpd_j845is.py\", line 20,\
    \ in test_check\n    check(incr_list)\n  File \"/tmp/tmpd_j845is.py\", line 16,\
    \ in check\n    assert candidate([3, 2, 1]) == [4, 3, 2]\n  File \"/tmp/tmpd_j845is.py\"\
    , line 11, in incr_list\n    l[i+1] += 1\nIndexError: list index out of range\n"
  stdout: ''
  timestamp: 1659823340
- exit_code: 0
  program: "from typing import List\n\ndef incr_list(l: List[int]) -> List[int]:\n\
    \    \"\"\"Return list with elements incremented by 1.\n    >>> incr_list([1,\
    \ 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n  \
    \  [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    \"\"\"\n    n = 0\n    length = len(l)\n\
    \    while n < length:\n        l[n] += 1\n        n += 1\n    return l\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([3,\
    \ 2, 1]) == [4, 3, 2]\n    assert candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [6, 3, 6, 3, 4, 4, 10, 1, 124]\n\ndef test_check():\n    check(incr_list)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823340

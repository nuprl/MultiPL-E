language: py
name: HumanEval_66_digitSum
results:
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        sum = sum + ord(c) - 64\n \
    \   return sum\n\nassert digitSum('') == 0\nassert digitSum('abAB') == 131\nassert\
    \ digitSum('abcCd') == 67\nassert digitSum('helloE') == 69\nassert digitSum('woArBld')\
    \ == 131\nassert digitSum('aAaaaXa') == 153\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsrr_wmzq.py\", line\
    \ 26, in <module>\n    assert digitSum('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isalpha())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt7x5mkoi.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpt7x5mkoi.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpt7x5mkoi.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpt7x5mkoi.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isalpha())\n  File\
    \ \"/tmp/tmpt7x5mkoi.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isalpha())\nValueError: invalid literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for c in s:\n        if c.isupper():\n           \
    \ s = s + ord(c)\n    return s\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd72dl0bm.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpd72dl0bm.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpd72dl0bm.py\", line 28,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpd72dl0bm.py\", line\
    \ 21, in digitSum\n    for c in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    return sum(ord(x) - ord('a')\
    \ for x in s)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd99jype9.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpd99jype9.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpd99jype9.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Write your code here\n    sum = 0\n    for char in s:\n   \
    \     if char.isupper():\n            sum += ord(char)\n    return sum\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa4hozkd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpwa4hozkd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwa4hozkd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpwa4hozkd.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpwa4hozkd.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        sum += ord(i) - ord('a')\n\
    \    return sum\n\n\n@register(\"solution\")\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph9brbg_0.py\", line\
    \ 26, in <module>\n    @register(\"solution\")\nNameError: name 'register' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([ord(x) for x in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbhghki6e.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbhghki6e.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpbhghki6e.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Convert string to ints\n    s = ''.join(str(int(c)) for c in\
    \ s)\n    # Add up ascii codes from ints\n    return sum(ord(c) for c in s)\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw_2ms_g5.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpw_2ms_g5.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpw_2ms_g5.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpw_2ms_g5.py\"\
    , line 21, in digitSum\n    s = ''.join(str(int(c)) for c in s)\n  File \"/tmp/tmpw_2ms_g5.py\"\
    , line 21, in <genexpr>\n    s = ''.join(str(int(c)) for c in s)\nValueError:\
    \ invalid literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Your code here\n    total = 0\n    for char in s:\n       \
    \ if char.isupper():\n            total += ord(char)\n\n    return total\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.replace(' ', '')\n    res = 0\n    for d in s:\n      \
    \  res += d.upper() if d.isalpha() else int(d)\n    return res\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprsokj1h4.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmprsokj1h4.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmprsokj1h4.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmprsokj1h4.py\"\
    , line 23, in digitSum\n    res += d.upper() if d.isalpha() else int(d)\nTypeError:\
    \ unsupported operand type(s) for +=: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isalpha():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9lwyrn5b.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp9lwyrn5b.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp9lwyrn5b.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # your code here\n    count = 0\n    sum = 0\n    for char in\
    \ s:\n        if char.isupper():\n            sum += ord(char)\n        count\
    \ += 1\n    return sum\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    sum_uppers = 0\n    for char in s:\n        if char.isupper():\n\
    \            sum_uppers += 1\n        sum += ord(char)\n    return sum + sum_uppers\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp989zgo93.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp989zgo93.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp989zgo93.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    result = 0\n    s = s.strip()\n    for letter in s:\n       \
    \ if letter.isupper():\n            result += ord(letter)\n    return result\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s_sum = 0\n    for c in s:\n        if c.isupper():\n       \
    \     s_sum += ord(c)\n    return s_sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for ch in s:\n        if ch >= ord('A') and ch <=\
    \ ord('Z'):\n            sum += ch - ord('a') + 1\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqjluyl3e.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpqjluyl3e.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpqjluyl3e.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpqjluyl3e.py\"\
    , line 22, in digitSum\n    if ch >= ord('A') and ch <= ord('Z'):\nTypeError:\
    \ '>=' not supported between instances of 'str' and 'int'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(a) for a in s)\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu82lfutf.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpu82lfutf.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpu82lfutf.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpu82lfutf.py\"\
    , line 20, in digitSum\n    return sum(int(a) for a in s)\n  File \"/tmp/tmpu82lfutf.py\"\
    , line 20, in <genexpr>\n    return sum(int(a) for a in s)\nValueError: invalid\
    \ literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    result = 0\n    i = 0\n    while i < len(s):\n        c = s[i]\n\
    \        if c.isupper():\n            result += ord(c)\n        i += 1\n    return\
    \ result\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(char) for char in s.upper() if char in string.ascii_uppercase\
    \ )\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkwovyfp6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpkwovyfp6.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpkwovyfp6.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpkwovyfp6.py\"\
    , line 20, in digitSum\n    return sum(int(char) for char in s.upper() if char\
    \ in string.ascii_uppercase )\n  File \"/tmp/tmpkwovyfp6.py\", line 20, in <genexpr>\n\
    \    return sum(int(char) for char in s.upper() if char in string.ascii_uppercase\
    \ )\nNameError: name 'string' is not defined\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = ''.join([i for i in s if i.isdigit()])\n    return int(s,\
    \ 2)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmyri4xlm.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpmyri4xlm.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpmyri4xlm.py\", line 25,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpmyri4xlm.py\", line\
    \ 21, in digitSum\n    return int(s, 2)\nValueError: invalid literal for int()\
    \ with base 2: ''\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for x in s:\n        if x.isupper():\n         \
    \   sum += ord(x)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c in \"0123456789\")\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3sk2alyj.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp3sk2alyj.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp3sk2alyj.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) <= 1:\n        return len(s)\n    sum = 0\n    pos\
    \ = 0\n    for c in s:\n        if c == chr(64 + pos):\n            pos += 1\n\
    \        else:\n            pos = 0\n        sum += ord(c)\n    return sum\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpah0v2dv0.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpah0v2dv0.py\", line 44,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpah0v2dv0.py\", line 35,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    upperSum = 0\n    for char in s:\n        if char.isupper():\n\
    \            upperSum += ord(char)\n    return upperSum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for ch in s:\n        s += ord(ch) - 64\n    return\
    \ s\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpptdrbk_y.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpptdrbk_y.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpptdrbk_y.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpptdrbk_y.py\", line\
    \ 21, in digitSum\n    for ch in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for i, c in enumerate(s) if c.isupper())\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwiwx9c1.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplwiwx9c1.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplwiwx9c1.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmplwiwx9c1.py\"\
    , line 20, in digitSum\n    return sum(int(c) for i, c in enumerate(s) if c.isupper())\n\
    \  File \"/tmp/tmplwiwx9c1.py\", line 20, in <genexpr>\n    return sum(int(c)\
    \ for i, c in enumerate(s) if c.isupper())\nValueError: invalid literal for int()\
    \ with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) == 0:\n        return 0\n    sum_ = 0\n    for i in\
    \ s:\n        if i.isupper():\n            sum_ += ord(i)\n    return sum_\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for character in s:\n        if character.isupper():\n\
    \            total += ord(character)\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    upperCount = 0\n    for i in range(len(s)):\n  \
    \      if s[i].isupper():\n            upperCount += 1\n        else:\n      \
    \      sum += (ord(i) - ord('A') + 1) * upperCount\n            upperCount = 0\n\
    \    return sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n  \
    \  assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert\
    \ candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n    assert\
    \ candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?') == 151\n\
    \    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp18fi800n.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp18fi800n.py\", line 42,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp18fi800n.py\", line 33,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp18fi800n.py\"\
    , line 26, in digitSum\n    sum += (ord(i) - ord('A') + 1) * upperCount\nTypeError:\
    \ ord() expected string of length 1, but int found\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, digits(s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwbeej9vr.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpwbeej9vr.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwbeej9vr.py\", line 24,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpwbeej9vr.py\", line\
    \ 20, in digitSum\n    return sum(map(int, digits(s)))\nNameError: name 'digits'\
    \ is not defined. Did you mean: 'digitSum'?\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    s_len = len(s)\n    s = 0\n    for i in range(s_len):\n\
    \        s += int(s[i])\n        sum += 1\n        if sum > 9:\n            break\n\
    \    return s\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgtr_4vdp.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpgtr_4vdp.py\", line 42,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpgtr_4vdp.py\", line 33,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpgtr_4vdp.py\"\
    , line 24, in digitSum\n    s += int(s[i])\nTypeError: 'int' object is not subscriptable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, filter(lambda x: x.isupper(), s)))\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkq8450ja.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpkq8450ja.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpkq8450ja.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpkq8450ja.py\"\
    , line 20, in digitSum\n    return sum(map(int, filter(lambda x: x.isupper(),\
    \ s)))\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    if len(s) == 1:\n        return\
    \ s\n    return sum(map(ord, s))\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzowz3wl_.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpzowz3wl_.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpzowz3wl_.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('0') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp07ct7s54.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp07ct7s54.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp07ct7s54.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for ch in s:\n        if ch in '0' '1' '2' '3' '4'\
    \ '5' '6' '7' '8' '9':\n            sum += int(ch)\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3u8nj53k.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp3u8nj53k.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp3u8nj53k.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if s == \"\":\n        return 0\n    else:\n        s = 0\n \
    \       for c in s:\n            s += ord(c)\n        return s\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmlqopyq.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmplmlqopyq.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplmlqopyq.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmplmlqopyq.py\"\
    , line 24, in digitSum\n    for c in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for idx, char in enumerate(s, 1):\n        if char.upper()\
    \ in {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\n\
    \                            'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\
    \ 'Y', 'Z'}:\n            s += char.upper() - char.lower()\n    return s\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphr229xvw.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmphr229xvw.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmphr229xvw.py\", line 29,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmphr229xvw.py\", line\
    \ 21, in digitSum\n    for idx, char in enumerate(s, 1):\nTypeError: 'int' object\
    \ is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for letter in s:\n        if letter.isalpha():\n\
    \            sum += ord(letter.upper()) - ord('A')\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn838rbay.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpn838rbay.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpn838rbay.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('A') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptmdgbc6z.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmptmdgbc6z.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmptmdgbc6z.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for i in s:\n        total += ord(i)\n    return\
    \ total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvkjtf7y1.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpvkjtf7y1.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpvkjtf7y1.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for letter in s:\n        total += ord(letter)\
    \ - ord('0')\n    return total\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_l_ir1mu.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp_l_ir1mu.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_l_ir1mu.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    length = len(s)\n    for ind, char in enumerate(s):\n\
    \        if char.isalpha():\n            total += ord(char.upper()) - ord('a')\n\
    \    return total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr1zw42hy.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpr1zw42hy.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpr1zw42hy.py\", line 30,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # BEGIN Question 4\n    # Replace the ... below with your code\n\
    \    digitSum = 0\n    string = \"\"\n    for c in s:\n        if c.isupper():\n\
    \            string += c\n    return string\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt4n_1gmx.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpt4n_1gmx.py\", line 41,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpt4n_1gmx.py\", line 31,\
    \ in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = str(s)\n    sum = 0\n    for i in range(0, len(s)):\n   \
    \     sum += ord(s[i])\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprymco_ia.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmprymco_ia.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmprymco_ia.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    def helper(s: str) -> int:\n        sum = 0\n        for char\
    \ in s:\n            if char.isupper():\n                sum += ord(char) - ord('a')\
    \ + 1\n        return sum\n\n    return helper(s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq3ytoat5.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpq3ytoat5.py\", line 41,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpq3ytoat5.py\", line 32,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # write your code here\n    return sum([int(c) for c in s if\
    \ c.isupper()])\n</cell>\n<text>\nProblem 4\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpwedpiry1.py\", line 22\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for char in s:\n        if char.isalpha():\n \
    \           total += ord(char) - 96\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiyyuiflr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpiyyuiflr.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpiyyuiflr.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        sum += ord(c)\n    return sum\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpak6nnz9y.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpak6nnz9y.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpak6nnz9y.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for c in s:\n        total += ord(c)\n    return\
    \ total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpckglnvvb.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpckglnvvb.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpckglnvvb.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    chars = set(s)\n    return sum([ord(char) - ord('a') for char\
    \ in chars])\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9me0w277.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp9me0w277.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp9me0w277.py\", line 26,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    digits = 0\n    for ch in s:\n        if ch.isupper():\n    \
    \        digits += ord(ch.lower())\n    return digits\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe39cf38f.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpe39cf38f.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpe39cf38f.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for i in s:\n        if i.isupper():\n           \
    \ s += i.encode(\"ascii\").decode()\n    return s\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp01xrzxuk.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp01xrzxuk.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp01xrzxuk.py\", line 28,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmp01xrzxuk.py\", line\
    \ 21, in digitSum\n    for i in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum_ = 0\n    s_len = len(s)\n    if s_len < 1:\n        return\
    \ 0\n    for char in s:\n        if char.isupper():\n            sum_ += ord(char)\n\
    \    return sum_\n\n\ndef check(candidate):\n    assert candidate('') == 0\n \
    \   assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n   \
    \ assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n \
    \   assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    ascii_sum = 0\n    for c in s:\n        ascii_sum += ord(c)\n\
    \    return ascii_sum\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgx4lg557.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpgx4lg557.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpgx4lg557.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('A') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptmdgbc6z.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmptmdgbc6z.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmptmdgbc6z.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for i in s:\n        s += ord(i)\n    return s\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnjvh4u45.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpnjvh4u45.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpnjvh4u45.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpnjvh4u45.py\", line\
    \ 21, in digitSum\n    for i in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(letter) - 96 for letter in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7ptrwrh.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpr7ptrwrh.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpr7ptrwrh.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n         \
    \   sum += ord(i)\n    return sum\n\n\n@cached\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbs6q9ctc.py\", line\
    \ 27, in <module>\n    @cached\nNameError: name 'cached' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) <= 1:\n        return 0\n    i = 0\n    total = 0\n\
    \    while i < len(s):\n        char = s[i]\n        total += ord(char) - 65\n\
    \        i += 1\n    return total\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr5mvz6kl.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpr5mvz6kl.py\", line 42,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpr5mvz6kl.py\", line 33,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.lower()\n    res = 0\n    for char in s:\n        if char.isalpha():\n\
    \            res += ord(char)\n    return res\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpww8h5_r_.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpww8h5_r_.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpww8h5_r_.py\", line 30,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Your code here\n    sum = 0\n    for i in s:\n        if i.isupper():\n\
    \            sum += ord(i - ord('A'))\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8z5dw8zb.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp8z5dw8zb.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp8z5dw8zb.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp8z5dw8zb.py\"\
    , line 24, in digitSum\n    sum += ord(i - ord('A'))\nTypeError: unsupported operand\
    \ type(s) for -: 'str' and 'int'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for c in s:\n        if c.isupper():\n           \
    \ s += ord(c.upper())\n    return s\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmah1cvo0.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpmah1cvo0.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpmah1cvo0.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpmah1cvo0.py\", line\
    \ 21, in digitSum\n    for c in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for ch in s:\n        if ch in string.ascii_uppercase:\n\
    \            sum += ord(ch)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpny1coqv2.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpny1coqv2.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpny1coqv2.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpny1coqv2.py\"\
    , line 22, in digitSum\n    if ch in string.ascii_uppercase:\nNameError: name\
    \ 'string' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in range(len(s) - 1, -1, -1):\n        if\
    \ s[i].isalpha():\n            sum += ord(s[i])\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpodh6jay0.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpodh6jay0.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpodh6jay0.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    result = 0\n\n    for c in s:\n        if c.isalpha():\n    \
    \        result += ord(c)\n\n    return result\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp33f_xg50.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp33f_xg50.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp33f_xg50.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    length = len(s)\n    for i in range(length):\n \
    \       if s[i].isupper():\n            sum += ord(s[i])\n    return sum\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) == 0:\n        return 0\n    return sum(map(int, list(s)))\
    \ + digitSum(s[len(s):])\n\n@timeit('digitSum')\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvhcwt2zl.py\", line\
    \ 24, in <module>\n    @timeit('digitSum')\nNameError: name 'timeit' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(sum(c.isupper() for c in s) for s in s)\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ebv0b83.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp_ebv0b83.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_ebv0b83.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for i in s:\n        total += ord(i)\n    return\
    \ total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvkjtf7y1.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpvkjtf7y1.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpvkjtf7y1.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(char) if char.isupper() else 0 for char in s)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps6rueaz6.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmps6rueaz6.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmps6rueaz6.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmps6rueaz6.py\"\
    , line 20, in digitSum\n    return sum(int(char) if char.isupper() else 0 for\
    \ char in s)\n  File \"/tmp/tmps6rueaz6.py\", line 20, in <genexpr>\n    return\
    \ sum(int(char) if char.isupper() else 0 for char in s)\nValueError: invalid literal\
    \ for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([ord(i) for i in s])\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0k4gemka.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp0k4gemka.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp0k4gemka.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for c in s:\n        if c.isupper():\n       \
    \     total += ord(c)\n    return total\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for i in s:\n        s += ord(i)\n    return s\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnjvh4u45.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpnjvh4u45.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpnjvh4u45.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpnjvh4u45.py\", line\
    \ 21, in digitSum\n    for i in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for char in s:\n        s += ord(char) - ord('A')\n\
    \    return s\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpot4i8fj9.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpot4i8fj9.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpot4i8fj9.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpot4i8fj9.py\", line\
    \ 21, in digitSum\n    for char in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for i in s:\n        s += ord(i)\n    return s\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnjvh4u45.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpnjvh4u45.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpnjvh4u45.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpnjvh4u45.py\", line\
    \ 21, in digitSum\n    for i in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n         \
    \   sum += ord(i)\n    return sum\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    def digits_sum(nums):\n        nums = nums.upper()\n        res\
    \ = 0\n        for n in nums:\n            res += int(n)\n        return res\n\
    \    return digits_sum(s)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp75yrkyut.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp75yrkyut.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp75yrkyut.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp75yrkyut.py\"\
    , line 26, in digitSum\n    return digits_sum(s)\n  File \"/tmp/tmp75yrkyut.py\"\
    , line 24, in digits_sum\n    res += int(n)\nValueError: invalid literal for int()\
    \ with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        sum += ord(s[i])\n\
    \    return sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n  \
    \  assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert\
    \ candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n    assert\
    \ candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?') == 151\n\
    \    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk0vxpc0h.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpk0vxpc0h.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpk0vxpc0h.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) == 0:\n        return 0\n    sum = 0\n    l = len(s)\n\
    \    for idx in range(l - 1):\n        if s[idx] > s[idx+1]:\n            sum\
    \ += ord(s[idx])\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfu1fty68.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpfu1fty68.py\", line 41,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpfu1fty68.py\", line 32,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum_ = 0\n    total = 0\n    for char in s:\n        if char.isupper():\n\
    \            total += ord(char) - ord('a')\n        else:\n            sum_ +=\
    \ total\n            total = 0\n    return sum_\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqeo_cqkv.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpqeo_cqkv.py\", line 42,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpqeo_cqkv.py\", line 33,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([ord(i) for i in s]) + ord('a')\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3us51eac.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp3us51eac.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp3us51eac.py\", line 24,\
    \ in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Write your code here\n    return sum(int(c) for c in s if c.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdca40mu8.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpdca40mu8.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpdca40mu8.py\", line 26,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpdca40mu8.py\"\
    , line 21, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpdca40mu8.py\", line 21, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(letter) - ord('a') for letter in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpplnokui7.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpplnokui7.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpplnokui7.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Write your solution here\n    pass\n</cell>\n<cell>\ndigitSum('')\n\
    </cell>\n<cell>\ndigitSum('abAB')\n</cell>\n<cell>\ndigitSum('abcCd')\n</cell>\n\
    <cell>\ndigitSum('helloE')\n</cell>\n<cell>\ndigitSum('woArBld')\n</cell>\n<cell>\n\
    digitSum('aAaaaXa')\n</cell>\n<text>\nProblem 7\nThe given function is_palindrome\
    \ (that takes one integer argument) returns True if the argument is a palindrome\
    \ and False otherwise. The argument can be a string, or an integer.\n\n\n</text>\n\
    <text>\nSolution\n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpvy3if25x.py\", line 22\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s)\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprtf0u6hf.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmprtf0u6hf.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmprtf0u6hf.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) < 4:\n        return 0\n    if s[0] != s[-1]:\n   \
    \     return 0\n\n    return sum(map(ord, s[1:-1]))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc0la_51u.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpc0la_51u.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpc0la_51u.py\", line 30,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    return sum(map(int, s))\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd6k47g8i.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpd6k47g8i.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpd6k47g8i.py\", line 26,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpd6k47g8i.py\"\
    , line 22, in digitSum\n    return sum(map(int, s))\nValueError: invalid literal\
    \ for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for i in range(len(s)):\n        s += ord(s[i]) -\
    \ 64\n    return s\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx8d3fdvi.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpx8d3fdvi.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpx8d3fdvi.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpx8d3fdvi.py\", line\
    \ 21, in digitSum\n    for i in range(len(s)):\nTypeError: object of type 'int'\
    \ has no len()\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Solution\n    # noinspection PyShadowingNames\n    def sum_upper_character(string:\
    \ str) -> int:\n        \"\"\"\n        :type string: str\n        \"\"\"\n  \
    \      sum_ = 0\n        string = string.lower()\n        for index, c in enumerate(string):\n\
    \            if c.isupper():\n                sum_ += ord(c)\n            else:\n\
    \                sum_ += ord('A') + index\n        return sum_\n\n    return sum_upper_character(s)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ri23qzm.py\", line\
    \ 51, in <module>\n    test_check()\n  File \"/tmp/tmp6ri23qzm.py\", line 49,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp6ri23qzm.py\", line 40,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([ord(x) - 48 for x in s if x != ' '])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy5cbc_yc.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpy5cbc_yc.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpy5cbc_yc.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum((ord(c.upper()) - ord('a')) for c in s)\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkf2icjow.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpkf2icjow.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpkf2icjow.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    chars = ''.join(sorted(s))\n    return sum([ord(char) for char\
    \ in chars])\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy3oad667.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpy3oad667.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpy3oad667.py\", line 26,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for ch in s:\n        if ch.isupper():\n       \
    \     sum += ch.lower()\n    return sum\n</cell>\n<cell>\ndigitSum(\"BALU\")\n\
    </cell>\n<cell>\ndigitSum(\"ABB\")\n</cell>\n<cell>\ndigitSum(\"ABB\")\n</cell>\n\
    <cell>\ndigitSum(\"ABB\")\n</cell>\n<cell>\ndigitSum(\"ABB\")\n</cell>\n<text>\n\
    Write a function that takes a string as input and returns the sum of the ASCII\
    \ codes of the characters 'i', 'i', 'j' and 'j'. The function should work for\
    \ strings consisting of any number of lowercase letters and uppercase letters.\n\
    \nExamples:\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijIj\")\n24\n>>> asciiSum(\"\
    iJIj\")\n26\n>>> asciiSum(\"iJij\")\n26\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"ijij\")\n10\n>>> asciiSum(\"\
    ijij\")\n10\n>>> asciiSum\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp_watmr_n.py\", line 25\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        sum += ord(c)\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa0mbruri.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpa0mbruri.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpa0mbruri.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(char) for char in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphcy3ornq.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmphcy3ornq.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmphcy3ornq.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) == 0:\n        return 0\n    digits = list(map(ord,\
    \ s))\n    digits.sort()\n    sum = 0\n    previous = 0\n    first = digits[0]\n\
    \    for index, current in enumerate(digits[1:], 1):\n        if current > previous:\n\
    \            sum += current - previous\n        previous = current\n    return\
    \ sum * 26 ** len(s)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq3983mxt.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpq3983mxt.py\", line 45,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpq3983mxt.py\", line 36,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    i = 0\n    sum = 0\n    while i < len(s):\n        if s[i].isalpha():\n\
    \            sum += ord(s[i])\n        i += 1\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsxi842hb.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpsxi842hb.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpsxi842hb.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    ascii_sum = 0\n    for ch in s:\n        if ch in string.ascii_uppercase:\n\
    \            ascii_sum += ord(ch)\n    return ascii_sum\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp075va8c_.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp075va8c_.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp075va8c_.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp075va8c_.py\"\
    , line 22, in digitSum\n    if ch in string.ascii_uppercase:\nNameError: name\
    \ 'string' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    result = 0\n    count = 0\n    for c in s:\n        count +=\
    \ ord(c)\n        if count > 9:\n            result += count - 10\n          \
    \  count = 0\n    if count > 9:\n        result += count - 10\n    return result\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplj6_0r4t.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmplj6_0r4t.py\", line 43,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplj6_0r4t.py\", line 34,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isalpha():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9lwyrn5b.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp9lwyrn5b.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp9lwyrn5b.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    count = 0\n    sum = 0\n    for char in s:\n        if char.isupper():\n\
    \            sum = sum + ord(char)\n        count = count + 1\n    return sum\
    \ + count * 97\n\n\ndef check(candidate):\n    assert candidate('') == 0\n   \
    \ assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert\
    \ candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n    assert\
    \ candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?') == 151\n\
    \    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeewbr8aq.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpeewbr8aq.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpeewbr8aq.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for idx, char in enumerate(s):\n        if char\
    \ in '1234567890':\n            total += ord(char)\n    return total\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu177bj7i.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpu177bj7i.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpu177bj7i.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(sum(int(c) for c in s) for s in zip(*[iter(s)] * len(s)))\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpru7p6ab0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpru7p6ab0.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpru7p6ab0.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpru7p6ab0.py\"\
    , line 20, in digitSum\n    return sum(sum(int(c) for c in s) for s in zip(*[iter(s)]\
    \ * len(s)))\n  File \"/tmp/tmpru7p6ab0.py\", line 20, in <genexpr>\n    return\
    \ sum(sum(int(c) for c in s) for s in zip(*[iter(s)] * len(s)))\n  File \"/tmp/tmpru7p6ab0.py\"\
    , line 20, in <genexpr>\n    return sum(sum(int(c) for c in s) for s in zip(*[iter(s)]\
    \ * len(s)))\nValueError: invalid literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        sum += ord(char)\n    return\
    \ sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw01e9jxz.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpw01e9jxz.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpw01e9jxz.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for i in s:\n        total += ord(i)\n    return\
    \ total\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1bsco_fe.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp1bsco_fe.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp1bsco_fe.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    s = 0\n    for c in s:\n   \
    \     if c.isupper():\n            s += ord(c)\n    return s\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfv0a49vw.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpfv0a49vw.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpfv0a49vw.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpfv0a49vw.py\"\
    , line 23, in digitSum\n    for c in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # TODO implement me\n    pass\n\n\n@checker_func_wrapper\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc70_2zqq.py\", line\
    \ 24, in <module>\n    @checker_func_wrapper\nNameError: name 'checker_func_wrapper'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(c in string.ascii_uppercase for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpabc4vp11.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpabc4vp11.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpabc4vp11.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpabc4vp11.py\"\
    , line 20, in digitSum\n    return sum(c in string.ascii_uppercase for c in s)\n\
    \  File \"/tmp/tmpabc4vp11.py\", line 20, in <genexpr>\n    return sum(c in string.ascii_uppercase\
    \ for c in s)\nNameError: name 'string' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    i = len(s)\n    while i > 0:\n        s += ord(s[i])\
    \ - ord('A')\n        i -= 1\n    return s\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph3u4ls2t.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmph3u4ls2t.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmph3u4ls2t.py\", line 29,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmph3u4ls2t.py\", line\
    \ 21, in digitSum\n    i = len(s)\nTypeError: object of type 'int' has no len()\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = 0\n    s_len = len(s)\n    for idx, char in enumerate(s):\n\
    \        char = int(char)\n        if idx < s_len - 1:\n            next_char\
    \ = int(s[idx + 1])\n        else:\n            next_char = 0\n        if char\
    \ + next_char <= 90:\n            res += char + next_char\n    return res\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppb45wb42.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmppb45wb42.py\", line 44,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmppb45wb42.py\", line 35,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmppb45wb42.py\"\
    , line 23, in digitSum\n    char = int(char)\nValueError: invalid literal for\
    \ int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    i = 0\n    for x in s:\n        if x.isupper():\n\
    \            s = s + ord(x)\n    return s\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ee9yg1a.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp1ee9yg1a.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp1ee9yg1a.py\", line 29,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmp1ee9yg1a.py\", line\
    \ 22, in digitSum\n    for x in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for c in s:\n        if c.isupper():\n       \
    \     total += ord(c.upper())\n    return total\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz7u4hqxw.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpz7u4hqxw.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpz7u4hqxw.py\", line 23,\
    \ in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('a') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmg0ztfx.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplmg0ztfx.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplmg0ztfx.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s)\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp04oo9jml.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp04oo9jml.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp04oo9jml.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp04oo9jml.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s)\n  File \"/tmp/tmp04oo9jml.py\"\
    , line 20, in <genexpr>\n    return sum(int(c) for c in s)\nValueError: invalid\
    \ literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(s[i:i + 1]) for i in range(len(s)) if s[i].isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx44umxu9.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpx44umxu9.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpx44umxu9.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpx44umxu9.py\"\
    , line 20, in digitSum\n    return sum(int(s[i:i + 1]) for i in range(len(s))\
    \ if s[i].isupper())\n  File \"/tmp/tmpx44umxu9.py\", line 20, in <genexpr>\n\
    \    return sum(int(s[i:i + 1]) for i in range(len(s)) if s[i].isupper())\nValueError:\
    \ invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for c in s:\n        s += ord(c)\n    return s\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqhjhrru.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpjqhjhrru.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpjqhjhrru.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpjqhjhrru.py\", line\
    \ 21, in digitSum\n    for c in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isalpha())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7e3_vrrs.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp7e3_vrrs.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp7e3_vrrs.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp7e3_vrrs.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isalpha())\n  File\
    \ \"/tmp/tmp7e3_vrrs.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isalpha())\nValueError: invalid literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, re.findall(r'[A-Z]', s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv7k8xs7f.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpv7k8xs7f.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpv7k8xs7f.py\", line 24,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpv7k8xs7f.py\", line\
    \ 20, in digitSum\n    return sum(map(int, re.findall(r'[A-Z]', s)))\nNameError:\
    \ name 're' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa4hozkd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpwa4hozkd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwa4hozkd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpwa4hozkd.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpwa4hozkd.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, s)) - sum(s.upper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpea2y7fx4.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpea2y7fx4.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpea2y7fx4.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpea2y7fx4.py\"\
    , line 20, in digitSum\n    return sum(map(ord, s)) - sum(s.upper())\nTypeError:\
    \ unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        sum += ord(c) if c.isupper()\
    \ else 0\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n         \
    \   sum += ord(i)\n    return sum\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    count = 0\n    for letter in s:\n        if letter.isupper():\n\
    \            sum = sum + ord(letter)\n            count += 1\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for c in s:\n        s += ord(c)\n    return s\n\n\
    \n@task\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppbg3v4rp.py\", line\
    \ 26, in <module>\n    @task\nNameError: name 'task' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('a') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmg0ztfx.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplmg0ztfx.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplmg0ztfx.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa4hozkd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpwa4hozkd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwa4hozkd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpwa4hozkd.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpwa4hozkd.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for n in s:\n        sum += int(n)\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyo46yqv1.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpyo46yqv1.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpyo46yqv1.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpyo46yqv1.py\"\
    , line 22, in digitSum\n    sum += int(n)\nValueError: invalid literal for int()\
    \ with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) == 0:\n        return 0\n    return sum(map(lambda\
    \ x: ord(x) - ord('A') + 1, s))\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu2crzeyx.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpu2crzeyx.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpu2crzeyx.py\", line 26,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda x: ord(x)-ord('A') + 1, s))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp21rwntqp.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp21rwntqp.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp21rwntqp.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # todo your code here\n    sum = 0\n    for c in s:\n       \
    \ if c.isupper():\n            sum = sum + int(c)\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpabgguua_.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpabgguua_.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpabgguua_.py\", line 30,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpabgguua_.py\"\
    , line 24, in digitSum\n    sum = sum + int(c)\nValueError: invalid literal for\
    \ int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for ch in s:\n        if ch.isupper():\n       \
    \     sum += ord(ch)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum( ord(c) < 128 and ord(c) or 0 for c in s )\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm4dma_zf.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpm4dma_zf.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpm4dma_zf.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        if ord(s[i]) >\
    \ 90:\n            sum += (ord(s[i]) - 90) * 10\n        else:\n            sum\
    \ += ord(s[i])\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiy2_m4vi.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpiy2_m4vi.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpiy2_m4vi.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('A') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptmdgbc6z.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmptmdgbc6z.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmptmdgbc6z.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for c in s:\n        total += ord(c)\n    return\
    \ total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpckglnvvb.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpckglnvvb.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpckglnvvb.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        sum += ord(c.upper())\n   \
    \ return sum\n</cell>\n<cell>\ndigitSum('abcCd')\n</cell>\n<cell>\ndigitSum('woArBld')\n\
    </cell>\n<cell>\ndigitSum('helloE')\n</cell>\n<cell>\ndigitSum('aAaaaXa')\n</cell>\n\
    <text>\n4.4.1 Lambda expressions\n\n</text>\n<text>\nLambda expressions are very\
    \ useful to avoid typing the same code again and again. Lambda expressions allow\
    \ us to make an anonymous function which is basically a named function with the\
    \ use of lambda.\n\n\n</text>\n<text>\nThe syntax for a lambda function is\n\n\
    lambda argument: expression\nwhere the argument is an expression that returns\
    \ a value that is then returned. The function name can be anything we want.\n\n\
    \n</text>\n<cell>\nf = lambda s: sum(c.upper() for c in s)\n</cell>\n<cell>\n\
    f('hello')\n</cell>\n<text>\nThe value returned by the function is now assigned\
    \ to our variable f which we can then use to perform an action on.\n\n\n</text>\n\
    <cell>\nf('hello')\n</cell>\n<text>\n4.4.2 map\n\n</text>\n<text>\nmap is an extremely\
    \ useful function and works like the map function in other programming languages.\
    \ map is used to apply a certain operation on a sequence and return the same sequence\
    \ but with each element transformed by a given function. Let's see how map works.\n\
    \n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate('') == 0\n  \
    \  assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert\
    \ candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n    assert\
    \ candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?') == 151\n\
    \    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpnnv5h4ct.py\", line 73\n    map is an extremely useful\
    \ function and works like the map function in other programming languages. map\
    \ is used to apply a certain operation on a sequence and return the same sequence\
    \ but with each element transformed by a given function. Let's see how map works.\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                  ^\nSyntaxError: unterminated string literal (detected at line\
    \ 73)\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for ch in s:\n        sum += ord(ch)\n    return\
    \ sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbi4aew1w.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpbi4aew1w.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpbi4aew1w.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, filter(lambda x: x >= 65, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsfzakqvd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpsfzakqvd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpsfzakqvd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpsfzakqvd.py\"\
    , line 20, in digitSum\n    return sum(map(int, filter(lambda x: x >= 65, s)))\n\
    \  File \"/tmp/tmpsfzakqvd.py\", line 20, in <lambda>\n    return sum(map(int,\
    \ filter(lambda x: x >= 65, s)))\nTypeError: '>=' not supported between instances\
    \ of 'str' and 'int'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([int(i) for i in s\n                if i in string.ascii_letters\
    \ and\n                i.isupper()])\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_0leprbb.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp_0leprbb.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_0leprbb.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp_0leprbb.py\"\
    , line 20, in digitSum\n    return sum([int(i) for i in s\n  File \"/tmp/tmp_0leprbb.py\"\
    , line 21, in <listcomp>\n    if i in string.ascii_letters and\nNameError: name\
    \ 'string' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for c in s:\n        total += ord(c)\n    return\
    \ total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpckglnvvb.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpckglnvvb.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpckglnvvb.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    pass\n    # return sum(int(s) for s in s)\n\n\n@print_calls\n\
    @profile\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4bak059i.py\", line\
    \ 24, in <module>\n    @print_calls\nNameError: name 'print_calls' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda x: ord(x) - ord('A') + 1, s))\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0zfw8vu.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpu0zfw8vu.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpu0zfw8vu.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, s))\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptyv1nrrg.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmptyv1nrrg.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmptyv1nrrg.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char in UPPER:\n    \
    \        sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2ubem27t.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2ubem27t.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp2ubem27t.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp2ubem27t.py\"\
    , line 22, in digitSum\n    if char in UPPER:\nNameError: name 'UPPER' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for char in s:\n        s += ord(char.upper())\n \
    \   return s\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpezsb77km.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpezsb77km.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpezsb77km.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpezsb77km.py\", line\
    \ 21, in digitSum\n    for char in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('a') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmg0ztfx.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplmg0ztfx.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplmg0ztfx.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([int(ch) for ch in s if ord(ch) >= 48 and ord(ch)\
    \ <= 57])\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzvzpxtq1.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpzvzpxtq1.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpzvzpxtq1.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        sum += ord(i)\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph_kb64mf.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmph_kb64mf.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmph_kb64mf.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for x in s:\n        sum += ord(x)\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp96iw8k0w.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp96iw8k0w.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp96iw8k0w.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Your code here\n    sum = 0\n    for c in s:\n        sum +=\
    \ ord(c) if c.isupper() else 0\n    return sum\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(i) for i in s)\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_c2ky0f8.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp_c2ky0f8.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_c2ky0f8.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmp_c2ky0f8.py\"\
    , line 20, in digitSum\n    return sum(int(i) for i in s)\n  File \"/tmp/tmp_c2ky0f8.py\"\
    , line 20, in <genexpr>\n    return sum(int(i) for i in s)\nValueError: invalid\
    \ literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for i in range(len(s)):\n        s += ord(s[i])\n\
    \    return s\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpga34gvm2.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpga34gvm2.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpga34gvm2.py\", line 27,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpga34gvm2.py\", line\
    \ 21, in digitSum\n    for i in range(len(s)):\nTypeError: object of type 'int'\
    \ has no len()\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    length = len(s)\n    for i in s:\n        if i.isalpha():\n\
    \            sum += ord(i) - 96\n    return sum\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk2hnlkyc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpk2hnlkyc.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpk2hnlkyc.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n         \
    \   sum += ord(i) - 64\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7chl557e.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp7chl557e.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp7chl557e.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c.lower()) - ord(c.upper())\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7rglp22i.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp7rglp22i.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp7rglp22i.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for char in s:\n        total += ord(char) - 96\n\
    \    return total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq94qfe75.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpq94qfe75.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpq94qfe75.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    count = 0\n    for letter in s:\n        count += letter.upper()\n\
    \    return count\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw3118hi8.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpw3118hi8.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpw3118hi8.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpw3118hi8.py\"\
    , line 22, in digitSum\n    count += letter.upper()\nTypeError: unsupported operand\
    \ type(s) for +=: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    \n    sum = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n\
    \            sum += ord(s[i])\n    return sum\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if ord(i) >= ord('A'))\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprb1z05ae.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmprb1z05ae.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmprb1z05ae.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for c in s:\n        total += ord(c)\n    return\
    \ total\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpckglnvvb.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpckglnvvb.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpckglnvvb.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for i in s:\n        if i.isupper():\n       \
    \     total += ord(i)\n    return total\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # write your code in Python 3.6\n    return sum(int(i) for i\
    \ in s.upper() if i.isdigit())\n</cell>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp279e_ntd.py\", line 22\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('a') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmg0ztfx.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplmg0ztfx.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplmg0ztfx.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    s = list(s)\n    for c in s:\n        total +=\
    \ ord(c)\n    return total\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiv4kzx36.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpiv4kzx36.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpiv4kzx36.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    if len(s) == 0:\n        return sum\n\n    l = s[0]\n\
    \    for i in s[1:]:\n        if i.upper() != l:\n            sum += int(l)\n\
    \        l = i\n\n    sum += int(l)\n\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqibbv9w.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpxqibbv9w.py\", line 46,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpxqibbv9w.py\", line 37,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpxqibbv9w.py\"\
    , line 27, in digitSum\n    sum += int(l)\nValueError: invalid literal for int()\
    \ with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        sum += ord(c) - ord('a')\n\
    \    return sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n  \
    \  assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert\
    \ candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n    assert\
    \ candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?') == 151\n\
    \    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ljnrxx1.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp4ljnrxx1.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp4ljnrxx1.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in range(len(s) - 1, -1, -1):\n        sum\
    \ += ord(s[i])\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpks0xeb_b.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpks0xeb_b.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpks0xeb_b.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    result = 0\n    for c in s:\n        if c.isupper():\n      \
    \      result = result + ord(c)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([ord(i) for i in s if i.isupper()])\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) <= 1:\n        return s\n    sum = 0\n    for c in\
    \ s:\n        if c.isupper():\n            sum += ord(c)\n    return sum\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwk4amlif.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpwk4amlif.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwk4amlif.py\", line 30,\
    \ in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa4hozkd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpwa4hozkd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwa4hozkd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpwa4hozkd.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpwa4hozkd.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for character in s:\n        if character < \"A\"\
    \ or character > \"Z\":\n            s += ord(character) - 96\n    return s\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp2pynvsl.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpp2pynvsl.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpp2pynvsl.py\", line 28,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpp2pynvsl.py\", line\
    \ 21, in digitSum\n    for character in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa4hozkd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpwa4hozkd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwa4hozkd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpwa4hozkd.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpwa4hozkd.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = 0\n    chars = list(s)\n    for i in range(0, len(s)):\n\
    \        chars[i] = chr(chars[i]).upper()\n    res += int(\"\".join(chars))\n\
    \    return res\n\n\ndef check(candidate):\n    assert candidate('') == 0\n  \
    \  assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert\
    \ candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n    assert\
    \ candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?') == 151\n\
    \    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpud0jp4ll.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpud0jp4ll.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpud0jp4ll.py\", line 29,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpud0jp4ll.py\", line\
    \ 24, in digitSum\n    res += int(\"\".join(chars))\nValueError: invalid literal\
    \ for int() with base 10: ''\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, re.findall(r\"\\d\", s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_dcaxddu.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp_dcaxddu.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_dcaxddu.py\", line 24,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmp_dcaxddu.py\", line\
    \ 20, in digitSum\n    return sum(map(int, re.findall(r\"\\d\", s)))\nNameError:\
    \ name 're' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    digits = list(map(ord, s))\n    sum_of_digits = 0\n    for digit\
    \ in digits:\n        sum_of_digits += digit\n    return sum_of_digits\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwyqj3fk4.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpwyqj3fk4.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwyqj3fk4.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c.lower()) - ord('a')\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpurp1dd8o.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpurp1dd8o.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpurp1dd8o.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # your code here\n    s = 0\n    for i,x in enumerate(s):\n \
    \       if x.isalpha():\n            s += int(x.encode('ascii'))\n    return s\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwxaerowz.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpwxaerowz.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwxaerowz.py\", line 28,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpwxaerowz.py\", line\
    \ 22, in digitSum\n    for i,x in enumerate(s):\nTypeError: 'int' object is not\
    \ iterable\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s)\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp47eo6vhd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp47eo6vhd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp47eo6vhd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # your code here\n    sum = 0\n    for char in s:\n        sum\
    \ += ord(char)\n    return sum\n    \nprint(digitSum('abcCd'))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0fjwka8v.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0fjwka8v.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp0fjwka8v.py\", line 30,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: '461

    '
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('a') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmg0ztfx.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplmg0ztfx.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplmg0ztfx.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) == 0:\n        return 0\n\n    sum_ = 0\n    for c\
    \ in s:\n        if c.isalpha():\n            sum_ += ord(c)\n    return sum_\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbqzp8m9.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpkbqzp8m9.py\", line 41,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpkbqzp8m9.py\", line 32,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(char) for char in s)\n\n\n@timeit('digitSum')\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcjidqvtc.py\", line\
    \ 23, in <module>\n    @timeit('digitSum')\nNameError: name 'timeit' is not defined\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    ans = 0\n    for c in s:\n        if c.isupper():\n         \
    \   ans += ord(c)\n    return ans\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum = sum + ord(c.upper())\n    return sum\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, s))\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptyv1nrrg.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmptyv1nrrg.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmptyv1nrrg.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum_ = 0\n    for i in s:\n        if i.isupper():\n        \
    \    sum_ += ord(i)\n    return sum_\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(letter) for letter in s)\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo5tjgg_z.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpo5tjgg_z.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpo5tjgg_z.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        sum += ord(i)\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph_kb64mf.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmph_kb64mf.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmph_kb64mf.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum_digits = 0\n    for c in s:\n        sum_digits += ord(c)\n\
    \    return sum_digits\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzficmydk.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpzficmydk.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpzficmydk.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659976023
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for ch in s:\n        if ch.isupper():\n         \
    \   s += ord(ch)\n    return s\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfe2mfzsk.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpfe2mfzsk.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpfe2mfzsk.py\", line 28,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpfe2mfzsk.py\", line\
    \ 21, in digitSum\n    for ch in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659976023

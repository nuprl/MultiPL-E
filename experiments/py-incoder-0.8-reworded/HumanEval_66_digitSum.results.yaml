language: py
name: HumanEval_66_digitSum
results:
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        sum = sum + ord(c) - 64\n \
    \   return sum\n\nassert digitSum('') == 0\nassert digitSum('abAB') == 131\nassert\
    \ digitSum('abcCd') == 67\nassert digitSum('helloE') == 69\nassert digitSum('woArBld')\
    \ == 131\nassert digitSum('aAaaaXa') == 153\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsrr_wmzq.py\", line\
    \ 26, in <module>\n    assert digitSum('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isalpha())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt7x5mkoi.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpt7x5mkoi.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpt7x5mkoi.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpt7x5mkoi.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isalpha())\n  File\
    \ \"/tmp/tmpt7x5mkoi.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isalpha())\nValueError: invalid literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = 0\n    for c in s:\n        if c.isupper():\n           \
    \ s = s + ord(c)\n    return s\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd72dl0bm.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpd72dl0bm.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpd72dl0bm.py\", line 28,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpd72dl0bm.py\", line\
    \ 21, in digitSum\n    for c in s:\nTypeError: 'int' object is not iterable\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    return sum(ord(x) - ord('a')\
    \ for x in s)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd99jype9.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpd99jype9.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpd99jype9.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Write your code here\n    sum = 0\n    for char in s:\n   \
    \     if char.isupper():\n            sum += ord(char)\n    return sum\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa4hozkd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpwa4hozkd.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpwa4hozkd.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpwa4hozkd.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpwa4hozkd.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        sum += ord(i) - ord('a')\n\
    \    return sum\n\n\n@register(\"solution\")\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph9brbg_0.py\", line\
    \ 26, in <module>\n    @register(\"solution\")\nNameError: name 'register' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum([ord(x) for x in s])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbhghki6e.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbhghki6e.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpbhghki6e.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Convert string to ints\n    s = ''.join(str(int(c)) for c in\
    \ s)\n    # Add up ascii codes from ints\n    return sum(ord(c) for c in s)\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw_2ms_g5.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpw_2ms_g5.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpw_2ms_g5.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpw_2ms_g5.py\"\
    , line 21, in digitSum\n    s = ''.join(str(int(c)) for c in s)\n  File \"/tmp/tmpw_2ms_g5.py\"\
    , line 21, in <genexpr>\n    s = ''.join(str(int(c)) for c in s)\nValueError:\
    \ invalid literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Your code here\n    total = 0\n    for char in s:\n       \
    \ if char.isupper():\n            total += ord(char)\n\n    return total\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.replace(' ', '')\n    res = 0\n    for d in s:\n      \
    \  res += d.upper() if d.isalpha() else int(d)\n    return res\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprsokj1h4.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmprsokj1h4.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmprsokj1h4.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmprsokj1h4.py\"\
    , line 23, in digitSum\n    res += d.upper() if d.isalpha() else int(d)\nTypeError:\
    \ unsupported operand type(s) for +=: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isalpha():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9lwyrn5b.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp9lwyrn5b.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp9lwyrn5b.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # your code here\n    count = 0\n    sum = 0\n    for char in\
    \ s:\n        if char.isupper():\n            sum += ord(char)\n        count\
    \ += 1\n    return sum\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    sum_uppers = 0\n    for char in s:\n        if char.isupper():\n\
    \            sum_uppers += 1\n        sum += ord(char)\n    return sum + sum_uppers\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp989zgo93.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp989zgo93.py\", line 40,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp989zgo93.py\", line 31,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    result = 0\n    s = s.strip()\n    for letter in s:\n       \
    \ if letter.isupper():\n            result += ord(letter)\n    return result\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s_sum = 0\n    for c in s:\n        if c.isupper():\n       \
    \     s_sum += ord(c)\n    return s_sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for ch in s:\n        if ch >= ord('A') and ch <=\
    \ ord('Z'):\n            sum += ch - ord('a') + 1\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqjluyl3e.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpqjluyl3e.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpqjluyl3e.py\", line 29,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpqjluyl3e.py\"\
    , line 22, in digitSum\n    if ch >= ord('A') and ch <= ord('Z'):\nTypeError:\
    \ '>=' not supported between instances of 'str' and 'int'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(a) for a in s)\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu82lfutf.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpu82lfutf.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpu82lfutf.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpu82lfutf.py\"\
    , line 20, in digitSum\n    return sum(int(a) for a in s)\n  File \"/tmp/tmpu82lfutf.py\"\
    , line 20, in <genexpr>\n    return sum(int(a) for a in s)\nValueError: invalid\
    \ literal for int() with base 10: 'a'\n"
  stdout: ''
  timestamp: 1659823352
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    result = 0\n    i = 0\n    while i < len(s):\n        c = s[i]\n\
    \        if c.isupper():\n            result += ord(c)\n        i += 1\n    return\
    \ result\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823352
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(char) for char in s.upper() if char in string.ascii_uppercase\
    \ )\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkwovyfp6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpkwovyfp6.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpkwovyfp6.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpkwovyfp6.py\"\
    , line 20, in digitSum\n    return sum(int(char) for char in s.upper() if char\
    \ in string.ascii_uppercase )\n  File \"/tmp/tmpkwovyfp6.py\", line 20, in <genexpr>\n\
    \    return sum(int(char) for char in s.upper() if char in string.ascii_uppercase\
    \ )\nNameError: name 'string' is not defined\n"
  stdout: ''
  timestamp: 1659823352

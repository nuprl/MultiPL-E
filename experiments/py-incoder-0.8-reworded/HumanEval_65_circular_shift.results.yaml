language: py
name: HumanEval_65_circular_shift
results:
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if x < 0:\n        raise ValueError(\"Negative value not allowed\"\
    )\n    if shift > len(x):\n        raise ValueError(\"Too large shift value\"\
    )\n    if shift < -len(x):\n        raise ValueError(\"Too small shift value\"\
    )\n    digits = str(x)\n    digits = digits[-shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyml1ag05.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpyml1ag05.py\", line 29,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpyml1ag05.py\", line\
    \ 22, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpyml1ag05.py\"\
    , line 12, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    s = ''\n    while x > 0:\n        s += str(x % 10)\n        x\
    \ //= 10\n    s = s[-shift:] + s[-1:]\n    return s\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr9m37gwy.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpr9m37gwy.py\", line 25,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpr9m37gwy.py\", line\
    \ 18, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    return str(x)[-shift:] + str(x)[:-shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmmbr3hu0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmmbr3hu0.py\", line 21,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpmmbr3hu0.py\", line\
    \ 16, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823417
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift > len(str(x)):\n        shift = len(str(x))\n    digits\
    \ = \"\"\n    for i in range(shift):\n        digits = digits + str(x%10)\n  \
    \      x = x // 10\n    return digits\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph66qa5kl.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph66qa5kl.py\", line 26,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmph66qa5kl.py\", line\
    \ 19, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    x = str(x)\n    shift = shift % len(x)\n    return x[len(x)-shift:]\
    \ + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n\
    \    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n  \
    \  assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpft4bbtau.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpft4bbtau.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpft4bbtau.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    return x[shift:] + x[:shift]\n\n\ndef check(candidate):\n   \
    \ assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n   \
    \ assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert\
    \ candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpks3v9mo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpks3v9mo6.py\", line 21,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpks3v9mo6.py\", line\
    \ 14, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpks3v9mo6.py\"\
    , line 10, in circular_shift\n    return x[shift:] + x[:shift]\nTypeError: 'int'\
    \ object is not subscriptable\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift == 0:\n        return x\n    digits = []\n    while\
    \ x > 0:\n        digits.append(x % 10)\n        x //= 10\n    digits.append(x\
    \ % 10)\n    digits.reverse()\n    return ''.join([str(d) for d in digits]) +\
    \ digits[shift:]\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n\
    \    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n  \
    \  assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5svf_wlx.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5svf_wlx.py\", line 29,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp5svf_wlx.py\", line\
    \ 22, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp5svf_wlx.py\"\
    , line 18, in circular_shift\n    return ''.join([str(d) for d in digits]) + digits[shift:]\n\
    TypeError: can only concatenate str (not \"list\") to str\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    digits = list(reversed(str(x)))\n    return \"\".join([digits[i\
    \ + shift] for i in range(0, len(digits))])\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqvh9s3de.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqvh9s3de.py\", line 22,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpqvh9s3de.py\", line\
    \ 15, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpqvh9s3de.py\"\
    , line 11, in circular_shift\n    return \"\".join([digits[i + shift] for i in\
    \ range(0, len(digits))])\n  File \"/tmp/tmpqvh9s3de.py\", line 11, in <listcomp>\n\
    \    return \"\".join([digits[i + shift] for i in range(0, len(digits))])\nIndexError:\
    \ list index out of range\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    # Circular shift is circular shift of digits left\n    # Circular\
    \ shift is circular shift of digits right\n    if shift > 0:\n        digits_left\
    \ = list(str(x))\n        digits_right = list(str(x))\n        digits_left[shift:]\
    \ = digits_left[shift:][::-1]\n        digits_right[:shift] = digits_right[:shift][::-1]\n\
    \        digits = digits_left + digits_right\n    else:\n        digits_left =\
    \ list(str(x))\n        digits_right = list(str(x))\n        digits_right[shift:]\
    \ = digits_right[shift:][::-1]\n        digits_left[:shift] = digits_left[:shift][::-1]\n\
    \        digits = digits_left + digits_right\n    return ''.join(digits)\n\n\n\
    def check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpey8qwcxc.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpey8qwcxc.py\", line 35,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpey8qwcxc.py\", line\
    \ 28, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(i)) + str(i\
    \ - len(str(i))) for i in range(len(x), -shift, -1)])\n    return \"\".join([str(int(i))\
    \ + str(-shift) for i in range(len(x))])\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptazny7m2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptazny7m2.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmptazny7m2.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmptazny7m2.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    digits = str(x)\n    shift = shift % len(digits)\n    if shift\
    \ == 0:\n        return digits\n    return digits[-shift:] + digits[:-shift]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe8dc6mm1.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpe8dc6mm1.py\", line 25,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpe8dc6mm1.py\", line\
    \ 20, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823418
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n    else:\n\
    \        return str(x)[:-shift]\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jmqc85_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2jmqc85_.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp2jmqc85_.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp2jmqc85_.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n    return ''.join(x[shift:]\
    \ + x[:shift])\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n\
    \    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n  \
    \  assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgkz78n6e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgkz78n6e.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpgkz78n6e.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpgkz78n6e.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift > len(str(x)):\n        return str(x)[::-1]\n    return\
    \ str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpacg4uton.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpacg4uton.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpacg4uton.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if x < 0:\n        raise ValueError(\"Negative shift amount not\
    \ allowed.\")\n    if shift > len(x):\n        return \"\".join([str(x[i]) for\
    \ i in range(len(x), 0, -shift)][::-1])\n    return \"\".join([str(x[i]) for i\
    \ in range(len(x), 0, shift)])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdap50wc2.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpdap50wc2.py\", line 25,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpdap50wc2.py\", line\
    \ 18, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmpdap50wc2.py\"\
    , line 12, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    # pylint: disable=no-else-return\n    if shift > len(str(x)):\n\
    \        return str(x)[::-1]\n    else:\n        digits = []\n        digits_append\
    \ = digits.append\n        for _ in range(shift):\n            digits_append(str(x)[-1\
    \ * (shift - 1)])\n        return ''.join(reversed(digits))\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5du5woam.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5du5woam.py\", line 29,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp5du5woam.py\", line\
    \ 22, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    return x if shift < -len(x) else circular_shift(x, -shift)\n\n\
    \ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_npe5kbk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_npe5kbk.py\", line 21,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp_npe5kbk.py\", line\
    \ 14, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp_npe5kbk.py\"\
    , line 10, in circular_shift\n    return x if shift < -len(x) else circular_shift(x,\
    \ -shift)\nTypeError: object of type 'int' has no len()\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift < 0:\n        shift = abs(shift)\n    x = int(x)\n \
    \   digits = str(abs(x))\n    if shift >= len(digits):\n        return digits\
    \ + str(x)\n    return digits[-shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx7x3ec9r.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpx7x3ec9r.py\", line 27,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpx7x3ec9r.py\", line\
    \ 20, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    digits = ''.join([str(int(digit)) for digit in str(x)])\n   \
    \ shift = shift % len(digits)\n    if shift > 0:\n        return digits[shift:]\
    \ + digits[:shift]\n    elif shift < 0:\n        return digits[:-shift] + digits[shift:]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoonzz16s.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpoonzz16s.py\", line 26,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmpoonzz16s.py\", line\
    \ 19, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823441
- exit_code: -1
  program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \    >>> circular_shift(12, 1)\n    '21'\n    >>> circular_shift(12, 2)\n    '12'\n\
    \    \"\"\"\n    if shift > len(x):\n        shift = shift - len(x)\n    return\
    \ str(x[shift:] + x[:shift])\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4hl_mv6x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4hl_mv6x.py\", line 23,\
    \ in test_check\n    check(circular_shift)\n  File \"/tmp/tmp4hl_mv6x.py\", line\
    \ 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/tmp/tmp4hl_mv6x.py\"\
    , line 10, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  stdout: ''
  timestamp: 1659823441

name: HumanEval_71_triangle_area
language: py
prompt: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
  \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
  \ rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
  \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
  \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
  \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
  \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2,\
  \ 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7)\
  \ == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) ==\
  \ 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
  \ntest_check()\n"
completions: ["    if a + b > c:\n        return -1\n    elif b + c > a:\n       \
    \ return -1\n    else:\n        return round(a * b * c / (a + b + c), 2)\n\n",
  "    \n    if (a + b > c) or (b + c > a) or (a + c > b):\n        return -1\n  \
    \  \n    elif a > b:\n        return b * b * c / (a * a + b * b + c * c)\n   \
    \ else:\n        return a * b * c / (a * a + b * b + c * c)\n", "    return round((a\
    \ * b * c)/2, 2)\n\n", "    area_sum = a + b + c\n    if area_sum < b + c:\n \
    \       return -1\n    if b < c:\n        return (a * b) / float(area_sum)\n \
    \   else:\n        return (-b - c) / float(area_sum)\n", "    a, b, c = sorted([a,\
    \ b, c])\n\n    len_a = math.sqrt(a ** 2 + b ** 2)\n    len_b = math.sqrt(c **\
    \ 2 + a ** 2)\n    len_c = math.sqrt(b ** 2 + c ** 2)\n\n    area_1 = (a + b +\
    \ c) / 2\n    area_2 = math.sqrt(\n        (len_a * len_b * len_c) / (len_a *\
    \ len_a + len_b * len_b + len_c * len_c)\n    )\n    area_3 = area_1 - (area_2\
    \ + area_1)\n\n    return round(area_3, 2) if area_3 >= 0 else -1\n\n", "    valid_sides\
    \ = 0\n    \n    if a + b > c:\n        valid_sides += 1\n    if a + c > b:\n\
    \        valid_sides += 1\n    if b + c > a:\n        valid_sides += 1\n    \n\
    \    if valid_sides == 3:\n        return round(math.acos((a ** 2 + b ** 2 - c\
    \ ** 2) / (2 * a * b)), 2)\n    \n    return -1\n</cell>\n<cell>\ntriangle_area(3,\
    \ 4, 5)\n</cell>\n<cell>\ntriangle_area(1, 2, 10)\n</cell>\n<cell>\ntriangle_area(1,\
    \ 2, 100)\n</cell>\n<cell>\ntriangle_area(1, 2, 1000)\n</cell>\n<text>\nExercise\
    \ 2: Find the area of a triangle if the user enters a, b, and c.\n\n\n</text>\n\
    <cell>", "    area_a = sidelength(a) / 2\n    area_b = sidelength(b) / 2\n   \
    \ area_c = sidelength(c) / 2\n    if a + b > c and a + c > b and b + c > a:\n\
    \        triangle = area_a + area_b + area_c\n        return round(triangle, 2)\n\
    \    else:\n        return -1\n", "    if a + b <= c:\n        return a + b +\
    \ c\n    else:\n        return -1\n\n", "    if a + b > c and a + c > b and b\
    \ + c > a:\n        return round((a * b * c) / 2, 2)\n    else:\n        return\
    \ -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(1,\
    \ 2, 10)\n</cell>\n<text>\nWe can now compare this to the code we wrote for the\
    \ previous exercise. Notice how much shorter our code is.\n\n\n</text>\n<cell>",
  "    if a + b > c:\n        return -1\n    if a + c > b:\n        return -1\n  \
    \  if b + c > a:\n        return -1\n    return round(float(0.5 * (a + b + c))/2,\
    \ 2)\n\n", "    \n    # Get the sides and check to see if they make a valid triangle\n\
    \    sides = (a, b, c)\n    valid_sides = all(i in (0, 1) for i in sides)\n  \
    \  \n    # Get the sum of all sides\n    sumsides = a + b + c\n    \n    if valid_sides\
    \ and sumsides > sides[2]:\n        return (sumsides/sides[2]) * 100\n    else:\n\
    \        return -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\n\
    triangle_area(1, 2, 10)\n</cell>\n<cell>\ntriangle_area(6, 5, 7)\n</cell>\n<cell>",
  "    # Write your code here\n    if a + b > c and c + b > a:\n        return (a\
    \ * b * c) / (a * b + c * b)\n    else:\n        return -1\n</cell>\n<cell>",
  "    return ((a + b + c) ** (1/2)) / 2\n", "    area_1 = (a + b) * (b + c) * (c\
    \ + a) \n    area_2 = (b + c) * (a + c) * (b + a)\n    area_3 = (a * b) * (a +\
    \ c) * (b + a)\n    return round(area_1 / area_2, 2)\n", "    s = (a + b + c)\
    \ / 2\n    if s > a + b + c:\n        return -1\n    elif s > (a + c) or s > (b\
    \ + c):\n        return -1\n    else:\n        return round(math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c)), 2)\n\n", "    if a + b > c:\n        return 0\n   \
    \ elif b + c > a:\n        return 0\n    elif a + c > b:\n        return 0\n\n\
    \    area_1 = (a + b) * 0.5\n    area_2 = (b + c) * 0.5\n    area_3 = (a + c)\
    \ * 0.5\n\n    if area_1 + area_2 > area_3:\n        return round(area_1 + area_2,\
    \ 2)\n    else:\n        return -1\n\n", "    a, b, c = max(a, b, c), min(a, b,\
    \ c), a + b + c\n    \n    if a + b > c:\n        if a > b:\n            return\
    \ a + b * 0.5\n        else:\n            return c * (b - a) / 2\n    else:\n\
    \        return -1\n</cell>\n<text>\nQuestion: Define a triangle class, with the\
    \ __init__ constructor that takes three sides and stores them in a tuple as attributes.\
    \ Define the area method by returning -1 if it is not a valid triangle and otherwise\
    \ the triangle area. Test your triangle class.\n\n\n</text>\n<cell>", "    if\
    \ a + b > c and b + c > a and a + c > b:\n        return round( (a * b * c)/((a\
    \ + b) * (b + c) * (c + a) ), 2)\n    else:\n        return -1\n</cell>\n<cell>\n\
    triangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(1, 2, 10)\n</cell>\n<text>\n\
    4.4 Implement the function  which finds and prints out all the palindrome numbers\
    \ which are less than or equal to n.\n\n\n</text>\n<cell>", "    if (a + b > c)\
    \ and (a + c > b) and (b + c > a):\n        side_sum = a + b + c\n        return\
    \ round(side_sum / 2)\n    else:\n        return -1\n", "    if (c < a or c <\
    \ b):\n        return -1\n    \n    s = 0.0\n    \n    if (a < b and b < c):\n\
    \        s = (a+b+c) / 2\n    else:\n        s = (a + b + c) / 2\n        \n \
    \   if (s==s):\n        return 0\n    elif (s > (a + b)):\n        return -1\n\
    \    \n    s = (a + b + c) / 2\n    \n    if (s > s):\n        return 1\n    else:\n\
    \        return (s*(s-a)*((s-b)*((s-c)+s))) / (2*s)\n</cell>\n<cell>", "    if\
    \ a + b > c and a + c > b and b + c > a:\n        return (a + b + c) / 2.0\n \
    \   else:\n        return -1\n\n", "    area = (b * b) - (4 * a * c)\n    if area\
    \ > 0:\n        return round(area / 2, 2)\n    return -1\n\n", "    if a + b <=\
    \ c:\n        return -1\n    elif b < c:\n        triangle_area = a * b\n    \
    \    triangle_area = round(triangle_area, 2)\n        return triangle_area\n \
    \   else:\n        triangle_area = a * c\n        triangle_area = round(triangle_area,\
    \ 2)\n        return triangle_area\n\n", "    if (a + b > c) or (a + c > b) or\
    \ (b + c > a):\n        return -1\n    else: \n        area_of_triangle = area_of_triangle(a,\
    \ b, c) * 0.5\n        return round(area_of_triangle, 2)\n\n    \n    ", "   \
    \ \n    \n    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    \n    if\
    \ a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    \n    return\
    \ (a + b + c) / 2\n", "    triangle_lengths = (a + b + c) / 2\n\n    if triangle_lengths\
    \ <= 0:\n        return -1\n\n    area = abs((math.sqrt(pow(triangle_lengths,\
    \ 2) + pow(a, 2)) \n        + pow(b, 2)) + pow(c, 2)) / 2\n    return round(area,\
    \ 2)\n\n", "    if (c <= 0) or (a < c) or (b < a): return -1\n    else: return\
    \ (a + b + c) / 2\n\n", "    tri_area = 0.5 * (a + b + c)\n    if tri_area < 0.001:\n\
    \        return tri_area\n    return round(tri_area, 2)\n", "    # check triangle\
    \ has valid area\n    if a + b <= c:\n        return a + b\n    else:\n      \
    \  return -1\n", "    s = (a + b + c) / 2\n    area = s * (s - a) * (s - b) *\
    \ (s - c)\n    return round(area, 2)\n\n</cell>\n<cell>", "    if a >= b >= c:\n\
    \        return (a * b + c) / 2\n    else:\n        return -1\n\n", "    # Initialize\
    \ result with -1 to return when triangle is not valid\n    result = -1\n    \n\
    \    # Initialize counter with 0 because area is not valid until 3 sides exist\n\
    \    counter = 0\n\n    # Validate three sides\n    while counter < 3 :\n    \
    \    # Use ternary operator to check if a > b > c to avoid using if/else statements\n\
    \        if a > b and b > c :\n            # Calculate area by multiplying sides\
    \ by the length of sides\n            result = result + (a * b) / 2\n        \
    \    # Increment counter to exit while loop\n            counter += 1\n      \
    \  # Use ternary operator to check if b > c to avoid using if/else statements\n\
    \        elif b > c :\n            # Calculate area by multiplying sides by the\
    \ length of sides\n            result = result + (b * c) / 2\n            # Increment\
    \ counter to exit while loop\n            counter += 1\n        # Use ternary\
    \ operator to check if c > a to avoid using if/else statements\n        elif \
    \ c > a :\n            # Calculate area by multiplying sides by the length of\
    \ sides\n            result = result + (c * a) / 2\n            # Increment counter\
    \ to exit while loop\n            counter += 1\n        # Break out of loop if\
    \ no valid triangle\n        else: break\n    \n    # Return calculated area\n\
    \    return result\n\n", "    \n    assert a <= b <= c\n    \n    return (a +\
    \ b + c) / 2\n    \n", "    abs = abs(b-a)\n    ac = abs(c-a)\n    \n    if abs\
    \ < ac:\n        return (a+b+c)/2\n    elif abs < ab:\n        return (a+b+c)/2\n\
    \    else:\n        return (a+c+b)/2\n\n\n</cell>\n<cell>", "    \n    if a +\
    \ b > c and b + c > a and c + a > b:\n        return round(math.sqrt(a * b * c),\
    \ 2)\n    return -1\n</cell>\n<cell>\nassert triangle_area(3, 4, 5) == 6.0\nassert\
    \ triangle_area(1, 2, 10) == -1\n</cell>\n<text>\nQuestion 4: Write a function\
    \ is_pentagonal_triangle that takes in three sides of a pentagonal triangle \n\
    and returns True if the three sides are valid pentagonal triangles. Otherwise,\
    \ return False.\nNote: A pentagonal triangle is a triangle where three of the\
    \ sides are equal in length \nto the hypotenuse of the triangle. The function\
    \ should return False if the sum of \nthe three sides is greater than the hypotenuse.\n\
    Hint: Use the following formulae to calculate the hypotenuse:\n\n$$\\left(\\sqrt{a^2\
    \ + b^2}\\right)^{\\frac{1}{2}}$$\n\n$$\\left(\\sqrt{c^2 + d^2}\\right)^{\\frac{1}{2}}$$\n\
    \n\n</text>\n<cell>\nimport math\n", "    # your code here\n\n    if a + b >=\
    \ c:\n        return (a * b) / float(a + b + c)\n    else:\n        return -1\n\
    \n\n\"\"\"\nProblem 9\n\"\"\"\n\n", "    if a + b <= c:\n        return (a * b)\
    \ * 0.5\n    else:\n        return -1\n\n", "    return abs(((b**2) + (c**2))\
    \ - ((a**2) * (b * c)))\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\n\
    triangle_area(1, 2, 10)\n</cell>\n<cell>", "    if a + b > c and b + c > a and\
    \ c + a > 0:\n        return round(((a * b) + (b * c)) / (2.0 * math.sqrt(a *\
    \ c + b * c)))\n    else:\n        return -1\n\n", "    if a + b <= c:\n     \
    \   return -1\n    elif a + c <= b:\n        return -1\n    elif b + c <= a:\n\
    \        return -1\n    else:\n        s = (a + b + c) / 2\n        t1 = (a +\
    \ s) / 2\n        t2 = (a + s) / 2\n        t3 = (b + s) / 2\n        t4 = (c\
    \ + s) / 2\n        area = (t1 * t1 + t2 * t2 + t3 * t3 + t4 * t4)**.5\n     \
    \   return round(area, 2)\n", "    if a + b <= c:\n        area = 0.5 * (a + b\
    \ + c)\n        if area == a:\n            area += b\n        elif area == b:\n\
    \            area += c\n        elif area == c:\n            area += a\n    elif\
    \ b + c <= a:\n        area = 0.5 * (b + c + a)\n        if area == a:\n     \
    \       area += c\n        elif area == b:\n            area += a\n        elif\
    \ area == c:\n            area += b\n    elif c + a <= b:\n        area = 0.5\
    \ * (c + a + b)\n        if area == a:\n            area += b\n        elif area\
    \ == b:\n            area += c\n        elif area == c:\n            area += a\n\
    \    else:\n        area = -1\n    return round(area, 2)\n\n", "    if a + b >\
    \ c:\n        area = -1\n    else:\n        area = round(a + b - c, 2)\n    return\
    \ area\n", "    return round((a * b + c * 2) / (a + b + c), 2)\n\n", "    side1\
    \ = float((a + b + c)/2)\n    side2 = float((b + c + a)/2)\n    side3 = float((c\
    \ + a + b)/2)\n    if side1+side2+side3 == float(a+b+c):\n        return round(side1,2)\n\
    \    elif side1+side2+side3 == float(a+b+c+a):\n        return round(side2,2)\n\
    \    elif side1+side2+side3 == float(a+b+c+b+a):\n        return round(side3,2)\n\
    \    else:\n        return -1\n", "    return -1 if is_valid_triangle(a, b, c,\
    \ a + b, a + c, b + c) else round(abs((a * b) * (a + c) * (b + c)), 2)\n</code>\n\
    <|/ a dscore=0 tags=python |>\n<| c |>\nHmmm this is what I was trying to do but\
    \ I don't know how to do it. It keeps returning \"none\" for all of the test cases.\
    \ I tried removing the if else statement but that only returned \"none\" for the\
    \ last test. Do you know how to fix this?\n<|/ c |>\n<| c |>\nSorry, I thought\
    \ the function returned the area of the triangle (I edited my answer). You should\
    \ now be able to use it.\n<|/ c |>\n<| a |>\n<code>", "    try:\n        s = (a\
    \ + b + c) / 2\n        if a < b and b < c and c < s:\n            return float(s\
    \ * (s - a) * (s - b) * (s - c)) / (2 * a * b * c)\n        else:\n          \
    \  return -1\n    except:\n        return -1\n</cell>\n<text>\nProblem 8\n\n</text>\n\
    <cell>", "    total = a + b + c\n    if total < 4:\n        return -1\n    if\
    \ a == 0 and b == 0 and c == 0:\n        return 0.0\n    \n    # formula for the\
    \ area\n    s = (a + b + c) / 2\n    area = math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))\n    \n    # round\n    return round(area, 2)\n", "    if a < b and\
    \ a < c:\n        return round(a * b * c / (a + b + c), 2)\n    elif b < c and\
    \ b < a:\n        return round(b * c * a / (b + c + a), 2)\n    elif c < a and\
    \ c < b:\n        return round(c * a * b / c / (a + b + c), 2)\n    else:\n  \
    \      return -1\n", "    return round(safe_area(a*b - c*a), 2)\n</cell>\n<cell>",
  "    # Define a variable called area to store the area of our triangle \n    area:\
    \ float = 0\n    # Define a variable called length to store the length of each\
    \ side of our triangle\n    length: float = float(a) + float(b) + float(c)\n \
    \   # Define a variable called radius to store the radius of each side of our\
    \ triangle\n    radius: float = (a + b + c) / 2\n    # Calculate the area of our\
    \ triangle if length is greater than radius then \n    # it is not a valid triangle\n\
    \    if length >= radius:\n        return -1\n    # Calculate the area if length\
    \ <= radius and length is not greater than radius \n    else:\n        # Calculate\
    \ and store the area using pythagorean theorem\n        area = (a + b + c) / 2\
    \ * (a + b - c)\n        # If the area is greater than 1.00 times area then it\
    \ is not a valid triangle\n        if area > 1.00:\n            return -1\n  \
    \      # Round the area to 2 decimal points\n        else:\n            return\
    \ round(float(area), 2)\n", "    if a + b > c:\n        return -1\n    area_sum\
    \ = a + b + c\n    if area_sum % 2 == 0:\n        area_sum = int(area_sum / 2)\n\
    \    else:\n        area_sum = int(math.sqrt(area_sum) / 2)\n    return round(area_sum,\
    \ 2)\n", "    side_a = abs(a-b)\n    side_b = abs(b-c)\n    side_c = abs(c-a)\n\
    \    if side_a + side_b >= side_c:\n        return round(math.sqrt(side_a*side_b*side_c),\
    \ 2)\n    else:\n        return -1\n</cell>\n<cell>", "    return 0.5 * (a + b\
    \ + c) if a + b <= c else -1\n", "    # assert a < b\n    # assert b < c\n   \
    \ # assert c > a\n    return round(abs((a + b + c) ** (1 / 2)),2)\n</cell>\n<cell>\n\
    triangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(1, 2, 10)\n</cell>\n<cell>",
  "    area = 0.0\n    if a + b > c:\n        area = (a * b - c) / 2\n    elif a +\
    \ c > b:\n        area = (a * b + c) / 2\n    elif b + c > a:\n        area =\
    \ (b * c + a) / 2\n    else:\n        area = -1\n\n    return round(area, 2)\n\
    \n", "    return round(math.hypot(b - a, c - a), 2)\n", "    area_of_triangle\
    \ = (a + b + c) / 2\n    if area_of_triangle >= b and area_of_triangle >= c:\n\
    \        return area_of_triangle\n    return -1\n", "    \n    if a > b + c or\
    \ a > c + b or b > a + c or b > c + a:\n        return -1\n    else:\n       \
    \ return round(math.acos((a + b + c) / 2) ** 2 / ((a + b + c) * math.sqrt(2 *\
    \ a * b)), 2)\n\n", "    # check input\n    if a + b > c or b + c > a or a + c\
    \ > b:\n        return -1\n\n    # triangle area is half of diagonal\n    s =\
    \ (a + b) * (b + c) // 2\n    # triangle area is half of hypotenuse\n    h = (a\
    \ + c) * (c + b) // 2\n    return round(s, 2) * round(h, 2)\n", "    sides = (a\
    \ + b + c) / 2\n    if sides % 2 == 0:\n        return round(sides, 2)\n    else:\n\
    \        return -1\n</cell>\n<cell>", "    area = (a+b+c) / 2\n    if area ==\
    \ (a+b) or area == (b+c) or area == (c):\n        return area\n    else:\n   \
    \     return -1\n    ", "    \n    \n    \n    return -1\n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    # Write your code here\n    if a >= b >= c:\n        area =\
    \ float(a * c) / 2\n    elif b >= a >= c:\n        area = float(b * c) / 2\n \
    \   else:\n        area = float(a * b) / 2\n    \n    if area >= 1.0:\n      \
    \  area = round(float(area), 2)\n    else:\n        area = -1\n    \n    return\
    \ area\n</cell>\n<cell>", "    if a + b > c:\n        return -1\n    elif b +\
    \ c > a:\n        return -1\n    elif c + a > b:\n        return -1\n    else:\n\
    \        return round(a * b * c / (a * b + c), 2)\n</cell>\n<cell>\ntriangle_area(3,\
    \ 4, 5)\n</cell>\n<text>\nExercise\nWrite a function that determines whether the\
    \ three sides of a triangle form a right angle. \nTo determine this, first calculate\
    \ the area of the triangle. After that, check to see if \nthe area is a right\
    \ angle.\nThree sides make a valid triangle when the sum of any two sides is greater\
    \ \nthan the third side.\nExample\n>>> triangle_area(3, 4, 5)\n6.0\n>>> triangle_area(1,\
    \ 2, 10)\n-1\n\n\n</text>\n<cell>", "    if a + b > c:\n        return -1\n  \
    \  elif b + c > a:\n        return -1\n    elif a + c > b:\n        return -1\n\
    \    else:\n        return round(a * b * c / (a * b + c * a + b * c), 2)\n\n",
  "    try:\n        return abs((a ** 2 + b ** 2 - c ** 2) / (2.0 * a * b))\n    except\
    \ ZeroDivisionError:\n        return -1\n", "    if a + b > c:\n        diff =\
    \ c - b\n        return -1 * diff\n    elif a + c > b:\n        diff = c - a\n\
    \        return diff\n    elif b + c > a:\n        diff = a - b\n        return\
    \ diff\n    else:\n        return ((a + b + c) / 2) * .5\n\n", "    if a + b >\
    \ c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif b +\
    \ c > a:\n        return -1\n    elif a + b > c and b + c > a and a + c > b:\n\
    \        area = (a * b) + c\n        if area % 1 != 0:\n            return round(abs(area),\
    \ 2)\n        else:\n            return area\n    else:\n        return -1\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(1, 2, 10)\n</cell>\n\
    <text>\nProblem 3\nA triangle is a right angle if all three sides are equal, \n\
    and all three sides are opposites (180 degrees). \nA triangle is an equilateral\
    \ triangle if the hypotenuse of the triangle is equal to 180. \nWrite a function,\
    \ is_equilateral, that returns True if the three sides are equilateral, False\
    \ if they are not, and -1 if either of the three sides are not equal.\nYou may\
    \ assume that the length of the sides is always positive.\n\n\n</text>\n<cell>",
  "    if a + b <= c:\n        return 0.0\n    else:\n        return (a / 2) * (b\
    \ / 2) - c + (c / 2)\n", "    if a + b > c or a + c > b or b + c > a:\n      \
    \  return -1\n    else:\n        return round( ( (a * b * c) / 2 ), 2 )\n</cell>\n\
    <text>\n4.2 Function get_possible_triangles() \nWrite a function that accepts\
    \ an integer N, and returns all possible triangles that could make up that number\
    \ of cubes. \nThe only valid triangles are those that have sides a, b and c where\
    \ a + b > c and a + c > b and b + c > a.\nFor example, get_possible_triangles(8)\
    \ should return the following list:\n\n[\n    ([8, 1, 1], 8),\n    ([4, 2, 3],\
    \ 8),\n    ([2, 2, 2], 8),\n    ([6, 4, 6], 8),\n    ([6, 2, 4], 8),\n    ([3,\
    \ 3, 4], 8),\n    ([6, 4, 6], 8),\n    ([4, 2, 3], 8),\n    ([8, 1, 1], 8)\n]\n\
    \n</text>\n<cell>", "    if a + b + c < a:\n        return -1\n    elif a < b\
    \ + c:\n        return b * c - (b - a) * a\n    else:\n        return a * b -\
    \ (c - a) * b\n", "    if (a + b <= c):\n        if (a + c <= b):\n          \
    \  if (b + c <= a):\n                return (a + b + c) / 2\n            else:\n\
    \                return -1\n        else:\n            return -1\n    else:\n\
    \        return -1\n    ", "    if a + b > c and b + c > a and c + a > b:\n  \
    \      return round(0.5 * ((a + b + c) ** 2 / ((a + b + c) * (b + c + a))))\n\
    \    else:\n        return -1\n</cell>\n<cell>", "    if a + b > c:\n        area_c\
    \ = (a * b) - c\n        area_a = (a * c) - b\n        area_b = (a * b) - a\n\
    \        if area_a > 0 and area_b > 0:\n            area = (area_a + area_b) /\
    \ 2\n            if area > 0:\n                return area\n            else:\n\
    \                return -1\n        else:\n            return -1\n    elif a +\
    \ c > b:\n        area_c = (a * c) - b\n        area_a = (a * b) - a\n       \
    \ area_b = (a * c) - c\n        if area_a > 0 and area_b > 0:\n            area\
    \ = (area_a + area_b) / 2\n            if area > 0:\n                return area\n\
    \            else:\n                return -1\n        else:\n            return\
    \ -1\n    else:\n        area_c = (a * b) - c\n        area_a = (a * c) - a\n\
    \        area_b = (a * b) - b\n        if area_a > 0 and area_b > 0:\n       \
    \     area = (area_a + area_b) / 2\n            if area > 0:\n               \
    \ return area\n            else:\n                return -1\n        else:\n \
    \           return -1\n\n", "    \n    if (a >= b and a >= c):\n        return\
    \ a * b\n    elif (b >= a and b >= c):\n        return a * b\n    elif (c >= a\
    \ and c >= b):\n        return a * b\n    else:\n        return -1\n\n", "   \
    \ if a + b > c and a + c > b and b + c > a:\n        return round(0.5 * ((a +\
    \ b + c) - (a + c + b)), 2)\n    else:\n        return -1\n\n", "    if (b < 0)\
    \ or (c < 0):\n        return -1\n    ab = abs(b - c)\n    if ab == 0:\n     \
    \   return 0\n    elif a == 0:\n        return 0\n    elif ab < a:\n        return\
    \ triangle_area(a, ab, c)\n    else:\n        return triangle_area(a + ab, b,\
    \ c)\n", "    if a + b > c and a + c > b and b + c > a:\n        area = 0.5 *\
    \ a * b * c\n        area = round(area, 2)\n        return area\n    else:\n \
    \       return -1\n\n", "    return ((b * b) - (4 * a * c)) / (a * (a + b + c))\n\
    \n\n@given(st.integers(min_value=0, max_value=10), st.integers(min_value=0, max_value=10))",
  "    \n    # Your code here\n    \n    return round( ( ( ((a**2 + b**2) - (c**2))**0.5\
    \ ) / 2 ), 2)\n\n", "    s = (a + b + c) / 2\n    return -1 if s > c else float(round(s\
    \ ** (1/3), 2))\n</cell>\n<cell>", "    triangleArea = abs(a * b + b * c + c *\
    \ a)\n    totalTriangle = triangleArea * b * b + triangleArea * c * c + triangleArea\
    \ * a * a\n    if totalTriangle == 0:\n        return -1\n    else:\n        rounded_triangle\
    \ = round(triangleArea, 2)\n        return rounded_triangle\n\n", "    a, b, c\
    \ = sorted([a, b, c])\n    if a + b > c:\n        return -1\n    elif a + c >\
    \ b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n \
    \       return a * b * c\n\n", "    if a >= b >= c:\n        return round(a *\
    \ b * c / (a + b + c), 2)\n    else:\n        return -1\n\n", "    if a + b <=\
    \ c:\n        return -1\n    if a + b > c or a + c > b:\n        return 0\n  \
    \  return round(c / (a + b - c), 2)\n\n", "    sides = [a, b, c]\n    for side\
    \ in sides:\n        if side < 0:\n            return -1\n    return round((a+b+c)/2,\
    \ 2)\n\n", "    if a > b and a > c:\n        return ((a + b + c) * 0.5) ** 2\n\
    \    elif b > c and b > a:\n        return ((b + c + a) * 0.5) ** 2\n    else:\n\
    \        return -1\n\n", "    # Write your code here\n    if a+b>c or b+c>a or\
    \ a+c>b:\n        return -1\n    \n    area = 0.5 * (a+b+c) - (a+b)-(b+c)\n  \
    \  if area == 0 or a == 0 or b == 0 or c == 0:\n        return area\n    \n  \
    \  area = round(area, 2)\n    return area\n", "    return float(a * b * c / (math.sqrt(a\
    \ * a + b * b + c * c)))\n</cell>\n<text>\nProblem 9\nWrite a function to compute\
    \ the sum of two numbers. \nThe function prototype should be:\n", "    if a <\
    \ b and a < c:\n        return a * b * c / (a + b + c)\n    elif b < c and b <\
    \ a:\n        return b * a * c / (b + c + a)\n    else:\n        return -1\n\n",
  "    area_of_triangle = (a + b + c) / 2\n    if area_of_triangle == 0:\n       \
    \ area_of_triangle = -1\n    if area_of_triangle < 0:\n        area_of_triangle\
    \ = -1\n    return round(area_of_triangle, 2)\n\n", "    \n    if b >= c and b\
    \ <= a + c:\n        area_triangle = a * b\n        return round(area_triangle,\
    \ 2)\n    elif a >= c and b <= a + c:\n        area_triangle = a * c\n       \
    \ return round(area_triangle, 2)\n    elif a >= b and a <= c + b:\n        area_triangle\
    \ = a * b * 0.5\n        return round(area_triangle, 2)\n    elif b >= a and b\
    \ <= c + a:\n        area_triangle = a * b * 0.5\n        return round(area_triangle,\
    \ 2)\n    elif a >= b and a <= c + b:\n        area_triangle = a * c * 0.5\n \
    \       return round(area_triangle, 2)\n    elif a >= a and b <= a + c:\n    \
    \    area_triangle = a * b * 0.5\n        return round(area_triangle, 2)\n   \
    \ elif b >= a and b <= a + c:\n        area_triangle = a * c * 0.5\n        return\
    \ round(area_triangle, 2)\n    elif a >= b and a <= a + c:\n        area_triangle\
    \ = a * b * 0.5\n        return round(area_triangle, 2)\n    elif b >= a and b\
    \ <= a + c:\n        area_triangle = a * c * 0.5\n        return round(area_triangle,\
    \ 2)\n    else:\n        return -1\n    \n    \n", "    if a + b > c:\n      \
    \  return 0\n    if a + c > b:\n        return 0\n    if b + c > a:\n        return\
    \ 0\n    if a == 0:\n        return b * c / 2\n    if b == 0:\n        return\
    \ c * a / 2\n    if c == 0:\n        return a * b / 2\n\n    area = (a + b) *\
    \ (c + b) + (a + c) * (b + c)\n    return round(area / 2, 2)\n\n", "    sides\
    \ = a, b, c\n    if a >= b >= c:\n        area = (a + b + c)/2\n        if abs(area\
    \ - round(abs(area))) <= .0000000001:\n            area = round(abs(area))\n \
    \       return area\n    elif a >= c >= b:\n        area = (a + b + c)/2\n   \
    \     if abs(area - round(abs(area))) <= .0000000001:\n            area = round(abs(area))\n\
    \        return area\n    elif b >= c >= a:\n        area = (a + b + c)/2\n  \
    \      if abs(area - round(abs(area))) <= .0000000001:\n            area = round(abs(area))\n\
    \        return area\n    else:\n        area = (a + b + c)/2\n        if abs(area\
    \ - round(abs(area))) <= .0000000001:\n            area = round(abs(area))\n \
    \       return area\n", "    \n    area = 0\n    if a + b > c :\n        area\
    \ = (a * b * c) / 3\n        return round(area, 2)\n    elif a + c > b :\n   \
    \     area = (b * b * c) / 3\n        return round(area, 2)\n    elif b + c >\
    \ a :\n        area = (c * b * c) / 3\n        return round(area, 2)\n    \n \
    \   else:\n        return -1\n", "    if a + b > c:\n        return -1\n    sides\
    \ = a + b + c\n    if sides % 2 == 0 and sides >= 3:\n        sides = sides +\
    \ 1\n        return round(sides / 2, 2)\n    else:\n        return -1\n\n", " \
    \   if a + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n\
    \    elif b + c > a:\n        return -1\n    else:\n        return round(math.sqrt(math.pow(a\
    \ - b, 2) + math.pow(c - b, 2)),2)\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n\
    </cell>\n<cell>\ntriangle_area(1, 2, 10)\n</cell>\n<text>\nQ. Given a triangle,\
    \ find the area of the largest possible triangle that contains it. \nIf the three\
    \ points are given in the following order: Top-left, Bottom-left, Bottom-right.\
    \ \nReturn 0 if the triangle is null or all sides are equal, otherwise return\
    \ the area of the triangle.\n\n\n</text>\n<cell>\nimport math", "    if a + b\
    \ > c:\n        a, b, c = c, b, a\n    if a + c > b:\n        a, b, c = c, b,\
    \ a\n    if b + c > a:\n        a, b, c = c, b, a\n    area = (a + b + c) / 2\n\
    \    tri_area = round(area, 2)\n    return tri_area\n", "    if a + b > c and\
    \ a + c > b and b + c > a:\n        return (a + b + c) / 2\n    else:\n      \
    \  return -1\n\n", "    return round(((a+b+c) / 2), 2)\n\n", "    \n    area =\
    \ 0.5*(a+b+c) \n    return round(area, 2)\n\n", "    if b == 0:\n        return\
    \ -1\n    if a == c or a == b or b == c:\n        return 0\n    elif a + b > c:\n\
    \        return (-1)**(a+b - c)*triangle_area(a, b, c)/2\n    else:\n        return\
    \ (-1)**(a+b - c)*triangle_area(a, b, c-1) - triangle_area(a, b, c+1)/2\n    ",
  "    if a + b > c and b + c > a and c + a > b:\n        return (a + b + c) / 2\n\
    \    else:\n        return -1\n\n", "    area = abs((a * b) * 0.5 * (a + b + c))\n\
    \    if area > 0:\n        return round(area, 2)\n    else:\n        return -1\n\
    \n", "    area_sum = a + b + c\n    if area_sum > c:\n        area_sum = c\n \
    \   if area_sum < a:\n        area_sum = a\n    return round(area_sum / 2, 2)\n\
    \n", "    \n    if (a + b <= c) or (b + c <= a) or (a + c <= b):\n        return\
    \ -1\n    else:\n        area = (a + b) * (b + c) * (a + c) / 2\n        return\
    \ round(area, 2)\n\n", "    if (b - a + c) < 0:\n        print(\"This is not a\
    \ valid triangle\")\n        return -1\n    else:\n        return round(((math.sqrt(b\
    \ * b) - ((a * a) + (c * c))) / (2 * a))) * 100\n\n", "    area_1 = (a + b + c)\
    \ / 2\n    if a == b == c and c >= a + b:\n        return area_1\n    elif a >\
    \ b and a > c:\n        area_2 = a + b - c\n    else:\n        area_2 = b + c\
    \ - a\n    if area_1 > area_2:\n        return round(area_1, 2)\n    else:\n \
    \       return round(area_2, 2)\n</cell>\n<text>\nTesting your triangle_area function\
    \ above:\n\n\n</text>\n<cell>\ntriangle_area(4, 5, 6)\n</cell>\n<text>\nNext we\
    \ test your triangle_area function below:\n\n\n</text>\n<cell>", "    tri_area\
    \ = (a+b+c) / 2\n    if tri_area == (a+b) or (a+c) or (b+c):\n        return round(tri_area,\
    \ 2)\n    return -1\n", "    side_a = abs(a-b)\n    side_b = abs(b-c)\n    side_c\
    \ = abs(c-a)\n    area_a = side_b * side_c\n    area_b = side_a * side_c\n   \
    \ area_c = side_a * side_b\n    triangle_area = (area_a + area_b + area_c)/2\n\
    \    if triangle_area < 1e-15:\n        triangle_area = 1e-15\n    return triangle_area\n",
  "    # Validate triangle\n    a, b, c = sorted([a, b, c])\n    if a + b <= c:\n\
    \        return -1\n    return round((a + b - c) / 2)\n\n", "    if a + b > c:\n\
    \        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n\
    \        return -1\n    else:\n        return round(math.pow(a, 2) + math.pow(b,\
    \ 2) - math.pow(c, 2), 2)\n\n", "    area_sum = 0.0\n\n    if a + b > c:\n   \
    \     area_sum = a + b - c\n    else:\n        area_sum = a + c - b\n\n    if\
    \ area_sum > 0:\n        area_sum = round(area_sum, 2)\n        return area_sum\n\
    \    else:\n        return -1\n\n", "    return a * b * c if a + b > c else -1\n\
    </cell>\n<text>\nChallenge: Test your triangle_area function by calling it with\
    \ the values below:\n\nFor a = 3, b = 4, c = 0\n\nWhat should the result be?\n\
    \na * b * c\nFor a = 0, b = 3, c = 4\n\nWhat should the result be?\n\n-1\nFor\
    \ a = 0, b = 4, c = 0\n\nWhat should the result be?\n\n-1\n\n</text>\n<cell>",
  "    if a + b > c and a + c > b and b + c > a:\n        return round(abs((b**2)\
    \ - (4*a*c)) / (2 * a), 2)\n    else:\n        return -1\n</cell>\n<text>\nProblem\
    \ 5\nTriangles with area less than 30 inches cannot be distinguished from each\
    \ other.\n\nFind the sum of all such triangles.\n\nHINT: In mathematics, the formula\
    \ for the sum of two integers a and b is given by $a+b$.\n\n\n</text>\n<cell>",
  "    if a + b > c or a + c > b or b + c > a:\n        return -1\n    side_1 = abs(b\
    \ - c)\n    side_2 = abs(a - c)\n    side_3 = abs(a + b - c - a)\n    return round(side_1\
    \ * side_2 * side_3 / b / c)\n", "    if a + b > c and a + c > b and b + c > a:\n\
    \        area = 3.14 * (a + b + c) / 2\n    else:\n        area = -1\n    return\
    \ round(area, 2)\n\n", "    s = (a + b + c) / 2.0\n    return round(s * (s - a)\
    \ * (s - b) * (s - c), 2)\n\n", "    \n    total = a + b + c\n    if a == b or\
    \ b == c or c == total:\n        return a * b * c / total\n    elif a > b and\
    \ a > c:\n        return b * b * c / total\n    elif b > a and b > c:\n      \
    \  return a * b * c / total\n    else:\n        return a * b * c / total\n</cell>\n\
    <text>\nNow lets try some examples!\n\n</text>\n<cell>\ntriangle_area(3, 4, 5)\n\
    </cell>\n<cell>\ntriangle_area(1, 2, 10)\n</cell>\n<cell>\ntriangle_area(-1, 3,\
    \ 5)\n</cell>\n<cell>\ntriangle_area(2, 6, 7)\n</cell>\n<cell>\ntriangle_area(1,\
    \ 10, 2)\n</cell>\n<text>\nLets implement our own version of the function\n\n\
    </text>\n<cell>", "    a, b, c = sorted([a, b, c])\n    return round(0.5 * (a\
    \ + b + c), 2)\n</cell>\n<text>\nTests\nLet's see how our function works against\
    \ test cases.\n\n\n</text>\n<cell>\ntest_list = [\n    (3, 4, 5),\n    (1, 2,\
    \ 10),\n    (5, 8, 7)\n]\n\nfor t in test_list:\n    a, b, c = t\n    expected_area\
    \ = triangle_area(a, b, c)\n    actual_area = triangle_area(a, b, c)\n    assert\
    \ expected_area == actual_area\n</cell>\n<text>\nThe above test passes. We are\
    \ now ready to write our actual triangle function!\n\n\n</text>\n<cell>", "  \
    \  s = (a + b + c) / 2\n    if s > a:\n        s -= a\n    if s > b:\n       \
    \ s -= b\n    if s > c:\n        s -= c\n    if s > s:\n        return s\n   \
    \ return s\n", "    assert a >= b\n    assert a >= c\n    assert b <= c\n    \n\
    \    return round( ((a+b+c)**2 - a*b*c) /2 , 2 )\n\n", "    if (a + b < c) or\
    \ (a + c < b) or (b + c < a):\n        return -1\n    else:\n        return round(sqrt(a**2\
    \ + b**2 - (a*b)/c), 2)\n\n", "    if (a > b > c):\n        if a + b + c > 180:\n\
    \            if a + b > c:\n                return (a + b) / 2\n            else:\n\
    \                return -1\n        else:\n            return (a + b + c) / 4\n\
    \    elif (a < b < c):\n        if a + b > c:\n            return (a + b) / 2\n\
    \        else:\n            return -1\n    elif (a > b < c):\n        if a + b\
    \ > c:\n            return -1\n        else:\n            return (a + b + c) /\
    \ 4\n    elif (b < a < c):\n        return -1\n    else:\n        if a + c > b:\n\
    \            return -1\n        else:\n            return (a + b + c) / 4\n\n",
  "    # Write your code here\n    \n    if a + b > c and c + b > a:\n        return\
    \ (((b - a) * 0.5) * ((c - a) * 0.5)) + ((a * b) * (c - a))\n    else:\n     \
    \   return -1\n\n", "    if a < b and b < c:\n        return round(a * b / c,\
    \ 2)\n    else:\n        return -1\n\n", "    area = 3.1415926*((a + b + c)/2)\n\
    \    if area == a + b + c:\n        return round(area, 2)\n    else:\n       \
    \ return -1\n    \n</cell>\n<cell>", "    if a + b > c:\n        return -1\n \
    \   if a + c > b:\n        return -1\n    if b + c > a:\n        return -1\n \
    \   return round(abs((a * b) + (a * c) - (b * c)), 2)\n\n", "    try:\n      \
    \  return (a + b + c)/2\n    except ZeroDivisionError:\n        return -1\n  \
    \  ", "    area_side = (a + b + c) / 2\n    if area_side >= a + b + c:\n     \
    \   area_side = round(area_side, 2)\n    else:\n        area_side = -1\n    return\
    \ area_side\n\n", "    if a + b > c:\n        if a + c > b:\n            if b\
    \ + c > a:\n                return (a + b + c) / 2\n            else:\n      \
    \          return -1\n        else:\n            return -1\n    else:\n      \
    \  if b + c > a:\n            return (a + b + c) / 2\n        else:\n        \
    \    return -1\n\n\n\"\"\"\nProblem 8\nGiven a list of numbers, sort the list\
    \ into descending order by value\n\"\"\"\n\n", "    side1, side2, side3 = a, b,\
    \ c\n    if side1+side2 > side3:\n        side1, side2, side3 = side3, side2,\
    \ side1\n    return round(side1 * side2 * side3 / ((side1 + side2) * (side2 +\
    \ side3)), 2)\n\n", "    a, b, c = max(a, b, c), min(a, b, c), a + b + c\n   \
    \ if a + b > c:\n        return -1\n    if a > c or a < b or b < c:\n        return\
    \ -1\n    return round(a / math.sqrt(b * b - 4 * a * c), 2)\n\n", "    area =\
    \ (b*c - a*b)/2.0\n    if area < 0:\n        area = -1\n    return round(area,\
    \ 2)\n\n", "    if a + b > c:\n        total = a * b\n        return total / 2\n\
    \    elif b > c:\n        total = a * b\n        return total / 2\n    elif c\
    \ > a:\n        total = a * b\n        return total / 2\n    else:\n        total\
    \ = a + b + c\n        return total / 2\n\n", "    return math.sqrt(a**2 + b**2\
    \ + c**2) if (a + b + c) > 0 else -1\n\n", "    \n    sideA = abs(a-b)\n    sideB\
    \ = abs(b-c)\n    sideC = abs(c-a)\n    \n    return round(float(sideA + sideB\
    \ + sideC) / 2)\n", "    return round((a * b * c) / 2, 2)\n", "    a, b, c = sorted([a,\
    \ b, c])\n    s = (a + b + c) / 2\n    if s < 0:\n        return -1\n    elif\
    \ s <= a + b:\n        return float(s)\n    elif a <= s + c:\n        return (s\
    \ - a) * (s - b) * c\n    elif c <= s + a:\n        return a * b * c\n    elif\
    \ b <= s + c:\n        return a * b * c + (s - a) * (s - b)\n", "    s = a + b\
    \ + c\n    if s > _sqrt(a * a + b * b + c * c):\n        return -1\n    else:\n\
    \        return round(s * (s - a) * (s - b) * (s - c) / _sqrt(_sqrt(a) * _sqrt(b)\
    \ * _sqrt(c)), 2)\n\n", "    lengths = [a, b, c]\n    if a > b and b > c:\n  \
    \      return (a + b + c) / 2\n    if a + b > c:\n        return -1\n    if a\
    \ + c > b:\n        return -1\n    return a * b * c / (lengths[0] * lengths[1]\
    \ * lengths[2])\n\n", "    area_one = (a + b + c) / 2\n    area_two = (b + c)\n\
    \    area_three = (a)\n    if area_one > area_two and area_one > area_three:\n\
    \        return area_one\n    elif area_two > area_three and area_two > area_one:\n\
    \        return area_two\n    else:\n        return area_three\n", "    if a >=\
    \ b >= c:\n        return round((a * b * c) / 3, 2)\n    else:\n        return\
    \ -1\n", "    area_a, area_b, area_c = float(a), float(b), float(c)\n    if area_c\
    \ != 0:\n        if area_a + area_b > area_c:\n            return area_a + area_b\
    \ * .5\n        else:\n            return area_a * .5\n    else:\n        if area_a\
    \ + area_b > area_c:\n            return area_a + area_b * .5\n        else:\n\
    \            return -1\n", "    sides = [a, b, c]\n    valid_sides = [a + b, a\
    \ + c, b + c]\n    if any([s == 0 for s in sides]):\n        return -1\n    elif\
    \ sum(valid_sides) <= a:\n        return sum(valid_sides) / 2\n    elif sum(valid_sides)\
    \ <= b:\n        return sum(valid_sides) / 3\n    else:\n        return sum(valid_sides)\
    \ / 4\n\n", "    if a > b > c:\n        return float(round((a+b+c) / 2))\n   \
    \ return -1\n\n", "    ab = abs(b - a)\n    ac = abs(c - a)\n\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        return round(ab * ac / 2.0, 2)\n\n \
    \   return -1\n\n", "    try:\n        a, b, c = map(int, [a, b, c])\n       \
    \ area = a * b * c\n        area /= (a ** 2 + b ** 2 + c ** 2)\n        area =\
    \ round(area, 2)\n        return area\n    except:\n        return -1\n\n", " \
    \   if (a + b + c) > 2:\n        return -1\n\n    area = a * b + (b * c)\n\n \
    \   return round(area, 2)\n\n", "    if a <= 0 or b <= 0 or c <= 0:\n        return\
    \ -1\n    else:\n        s = (a + b + c) / 2\n        # check if s is a perfect\
    \ square\n        if s ** 0.5 == s:\n            return round(s ** 0.5)\n    \
    \    else:\n            return -1\n\n", "    \n    return ((b - a) * (c - b))\
    \ / (2.0 * (a + c))\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\n\
    triangle_area(1, 2, 10)\n</cell>\n<text>\nProblem 2\nUse assert to check that\
    \ your triangle_area function returns the correct area for triangles whose three\
    \ sides equal 15. Explain what happened when you tried to use an area for which\
    \ this function does not work.\n\n\n</text>\n<cell>", "    if a + b > c:\n   \
    \     if b > c:\n            if a > 0:\n                return (a + b + c) / 2\n\
    \            else:\n                return (a + b + c) / 2\n        elif a > 0:\n\
    \            return (a + b + c) / 2\n        else:\n            return (a + b\
    \ + c) / 2\n    else:\n        if a > 0:\n            return (a * b + c) / 2\n\
    \        else:\n            return (a * b + c) / 2\n", "    a, b, c = max(a, b,\
    \ c), min(a, b, c), abs(a - b - c)\n    if a <= b + c and b + c <= a + c or a\
    \ <= b + c and a + c <= b:\n        return round(a / math.sqrt(a ** 2 + b ** 2),\
    \ 2)\n    return -1\n\n", "    \n    total = a + b + c\n    if total == (a * b)\
    \ or total == (a + b) or total == (a + c) or total == (b + c):\n        return\
    \ round(total ** 0.5) / 2\n    else:\n        return -1\n\n", "    area_total\
    \ = a + b + c\n    if area_total == 0 or area_total == 1 or area_total == 2:\n\
    \        return area_total\n    if a + b > c:\n        area_total = area_total\
    \ / 2\n    return round(area_total, 2)\n", "    if a < b + c and b < a + c and\
    \ c < a + b:\n        area = 0.5 * (a + b + c) * (a + b + c) / 2.0\n        rounded_area\
    \ = round(triangle_roundedness(area), 2)\n        return rounded_area\n    else:\n\
    \        area = -1\n    return area\n\n", "    if a == 0 and b == 0 and c == 0:\n\
    \        return 0\n    if a == 0 and b == 0 or b == 0 and c == 0:\n        return\
    \ -1\n    if a > c:\n        c, b = b, c\n        a, c = c, a\n    area = (a +\
    \ b + c) / 2.0\n    if area == 0:\n        return -1\n    if area < 0:\n     \
    \   return -1\n    if area > 100:\n        return 0\n    if area == 2 * a + b:\n\
    \        return 0.5 * triangle_area(a=a, b=b, c=c)\n    if area == 2 * a + b:\n\
    \        return 0.5 * triangle_area(a=a, b=b, c=c)\n    if area == 2 * a + c:\n\
    \        return 0.5 * triangle_area(a=a, b=c, c=c)\n    if area == 2 * b + c:\n\
    \        return 0.5 * triangle_area(a=a, b=c, c=c)\n    if area == 2 * b + c:\n\
    \        return 0.5 * triangle_area(a=a, b=c, c=c)\n    if area == 2 * a + c:\n\
    \        return 0.5 * triangle_area(a=a, c=c, b=b)\n    if area == 2 * a + c:\n\
    \        return 0.5 * triangle_area(a=a, c=c, b=b)\n    return 0.5 * triangle_area(a=a,\
    \ c=c, b=b)\n\n", "    if a + b > c:\n        total = a * b\n        area = total\
    \ * ((b + c) - total) / 2.0\n        return round(area, 2)\n    else:\n      \
    \  return -1\n\n", "    s = a + b + c\n    return round(s / (s ** 2 / 4))\n\n",
  "    a, b, c = sorted([a, b, c])\n    if (a + b < c) or (a + c < b) or (b + c <\
    \ a):\n        return -1\n    area_tri = a + b - c\n    return round(area_tri,\
    \ 2) if area_tri % 2 == 0 else -1\n\n", "    if a + b > c:\n        a, b, c =\
    \ c, b, a\n    if a + c > b:\n        a, b, c = c, b, a\n    if b + c > a:\n \
    \       a, b, c = c, b, a\n\n    area_of_triangle = a + b + c\n    area_of_triangle\
    \ = round(area_of_triangle, 2)\n    return area_of_triangle\n", "    return round(a\
    \ * b * c / (((a + b + c) * (a + c - b) * (b + c - a)) ** 0.5), 2)\n\n", "   \
    \ side_a = (a + b + c) / 2\n    side_b = (b + c + a) / 2\n    side_c = (a + b\
    \ + c) / 2\n    if (side_b > side_c) and (side_a > side_b):\n        return round(((side_a\
    \ + side_b + side_c) / 3) * 0.644, 2)\n    elif (side_b > side_c):\n        return\
    \ -1\n    elif (side_a > side_b):\n        return -1\n    else:\n        return\
    \ -1\n\n", "    return round(a * c + b * b, 2)\n\n", "    a, b, c = sorted([a,\
    \ b, c])\n\n    # Check if sum of two sides is greater then third side\n    if\
    \ a + b > c or a + c > b or b + c > a:\n        return -1\n\n    # Check if three\
    \ sides are equal\n    if a == b == c:\n        return 1\n\n    # Calculate the\
    \ area of the triangle\n    return 0.5 * math.sqrt(a * b * c)\n\n", "    # Write\
    \ your code here\n    if a + b >= c:\n        return (a * b * math.sqrt(3)) /\
    \ (a * c)\n    else:\n        return -1\n\n", "    sides = [a, b, c]\n    sum_of_sides\
    \ = sum(sides)\n    if sum_of_sides <= sides[2]:\n        return round(sum_of_sides,\
    \ 2)\n    return -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\n\
    triangle_area(1, 2, 10)\n</cell>\n<text>\nProblem 9\nA palindromic number reads\
    \ the same both ways. The largest palindrome made from the product of two 2-digit\
    \ numbers is 9009 = 91 \xD7 99.\nFind the largest palindrome made from the product\
    \ of two 3-digit numbers.\nThe above solution works only for 3-digit numbers.\n\
    \n\n</text>\n<cell>", "    if a + b > c:\n        return -1\n    else: \n    \
    \    return (a + b + c) / 2\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n\
    <cell>\ntriangle_area(1, 2, 10)\n</cell>\n<text>\nQuestion 3\nThe following function\
    \ uses recursion to determine the number of ways in which a number n can be expressed\
    \ as the sum of two positive integers $a$ and $b$. For example, 6 is expressed\
    \ as the sum of 2 and 3 which gives a total of 7 ways n is expressed. Write a\
    \ recursive function that accepts a positive integer $n$ and returns a count of\
    \ the number of ways n is expressed.\n\n(Note that the only positive integer $n$\
    \ can be expressed as the sum of two positive integers is n.)\n\nEXAMPLE:\n\n\
    >>> print(count_ways(6))\n7\n>>> print(count_ways(2))\n0\n>>> print(count_ways(1))\n\
    1\n>>> print(count_ways(3))\n1\n>>> print(count_ways(4))\n1\n>>> print(count_ways(7))\n\
    7\n>>> print(count_ways(8))\n7\n>>> print(count_ways(9))\n7\n>>> print(count_ways(12))\n\
    7\n>>> print(count_ways(20))\n7\n>>> print(count_ways(100))\n7\n\n</text>\n<cell>",
  "    return ((b - a) * (c - a)) / ((a ** 2) + (b ** 2) + (c ** 2))\n\n", "    s\
    \ = 0\n    if a + b > c:\n        s += (b - a) * triangle_area_perp(a=a, b=b,\
    \ c=c)\n        s += (c - a) * triangle_area_perp(a=c, b=a, c=b)\n    if a + c\
    \ > b:\n        s += (a - b) * triangle_area_perp(a=a, b=c, c=b)\n        s +=\
    \ (c - b) * triangle_area_perp(a=a, c=b, c=c)\n    if b + c > a:\n        s +=\
    \ (b - a) * triangle_area_perp(a=a, b=b, c=c)\n        s += (a - c) * triangle_area_perp(a=a,\
    \ b=c, c=a)\n    return round(s, 2)\n\n", "    ab = abs(b - a)\n    ac = abs(c\
    \ - a)\n    if b == c or a == b or ac == 0 or ab == 0:\n        return -1\n  \
    \  elif ab < ac:\n        return a * b * 0.5\n    else:\n        return a * c\
    \ * 0.5\n\n", "    if a + b <= c:\n        return a * b\n    elif a + c <= b:\n\
    \        return a * c\n    elif b + c <= a:\n        return b * c\n    else:\n\
    \        return -1\n\n", "    # your code goes here\n    # side1, side2, side3\
    \ = a, b, b\n    side1, side2, side3 = a, b, c\n    # area = side1 * side2 + side3\
    \ * side2\n    area = side1**2 + side2**2 + side3**2\n    return round(area,2)\
    \ if (side1 > side2 and side2 > side3) else -1\n\n", "    sides = (a + b + c)\
    \ / 2\n    if sides > 0:\n        return sides\n    else:\n        return -1\n\
    \n", "    if a + b > c:\n        return -1\n    elif b + c > a:\n        return\
    \ -1\n    elif c + a > b:\n        return -1\n    else:\n        area = (a + b\
    \ + c) / 2\n        return round(area, 2)\n\n", "    area = math.sqrt(a ** 2 +\
    \ b ** 2)\n    if a > b and a > c:\n        return round(float(area) / a, 2)\n\
    \    elif b > a and b > c:\n        return round(float(area) / b, 2)\n    elif\
    \ c > a and c > b:\n        return round(float(area) / c, 2)\n    else:\n    \
    \    return -1\n\n", "    a, b, c = sorted([a, b, c])\n\n    return round(math.sqrt(a\
    \ ** 2 + b ** 2 - c ** 2), 2)\n\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n\
    <text>\nProblem 6\nThe standard definition of a triangle is that it has a side\
    \ length of $a$ and a hypotenuse length of $a+b$, where $a+b>c$. The area of the\
    \ triangle is given by $a$ times the hypotenuse divided by $a+b$:\n\n$$\\begin{align}\n\
    A=a\\left(\\frac{a+b}{2}\\right)\n\\end{align}$$\n\nWrite a function that takes\
    \ three integer inputs for the length of the sides of a triangle and returns their\
    \ area. The three numbers $a, b, c$ will be supplied as arguments to the function.\n\
    \nHINT: You can write this equation in multiple ways. One is to divide by the\
    \ sum rather than the product of ab and bc, since you are just using the sum to\
    \ calculate the area, and bc is the sum of the other two sides. The other is to\
    \ multiply by $a+b+c$, which is the sum of the three sides multiplied by the area\
    \ of the triangle (which is equal to the product of the three sides).\n\n\n</text>\n\
    <cell>", "    if a + b + c != 1:\n        return -1\n\n    else:\n        s =\
    \ (a * b) + (b * c) + (c * a)\n        if s >= 0:\n            return round(s\
    \ * (0.5), 2)\n        else:\n            return -1\n\n", "    \n    if a + b\
    \ > c or b + c > a or a + c > b:\n        return -1\n    return (a + b + c) /\
    \ 2\n    ", "    if a + b <= c:\n        return -1\n    return round((a * b) /\
    \ c, 2)\n\n", "    try:\n        return float(a * b * c) / b\n    except ZeroDivisionError:\n\
    \        return -1\n\n", "    a, _, b = sorted([a, b, c])\n    if a + b > c:\n\
    \        return -1\n    if b >= c:\n        return a + b\n    return a * b\n",
  "    sides_sum = a + b + c\n    if sides_sum != 9:\n        return -1\n    else:\n\
    \        return (a * b * c) / 3\n\n", "    if a + b > c:\n        if b > c:\n\
    \            return triangle_area(b, c, a)\n        else:\n            return\
    \ triangle_area(c, a, b)\n    else: \n        return round(triangle_perimeter(a)\
    \ + triangle_perimeter(b) + triangle_perimeter(c), 2)\n", "    sides = (b, c)\
    \ if a + b > c else (c, a)\n    return sum((length ** 2) for length in sides)**0.5\n\
    \n", "    if a + b + c >= a:\n        return a * b * c / 2\n    else:\n      \
    \  return -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(1,\
    \ 2, 10)\n</cell>\n<cell>", "    if a + b <= c:\n        return (a * b) / 2.0\n\
    \    elif a <= b + c:\n        return (a + c) / 2.0\n    else:\n        return\
    \ (b + c) / 2.0\n\n", "    a, b, c = _float_check(a), float(b), float(c)\n\n \
    \   if (a + b < c) or (b + c < a) or (a + c < b):\n        return -1\n\n    return\
    \ round(math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)), 2)\n\n",
  "    if a + b > c and a + c > b and b + c > a:\n        return round(a + (b + c)/2.0,\
    \ 2)\n    else:\n        return -1\n\n", "    \n    area = (a + b + c) / 2\n \
    \   if area > c and area > b and area > a:\n        return round(area, 2)\n  \
    \  return -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(1,\
    \ 2, 10)\n</cell>\n<text>\nProblem 11\nWrite a function that takes two lists of\
    \ numbers and returns the number of times a value appears in the two lists.\n\n\
    Example\n>>> number_appear([1, 3, 3], [4, 5, 6])\n2\n\n</text>\n<cell>", "   \
    \ if a > b + c:\n        return -1\n    else:\n        return round(length(a,\
    \ b, c), 2)\n", "    if a + b > c:\n        return -1\n    if a + c > b:\n   \
    \     return -1\n    if b + c > a:\n        return -1\n    if a + b + c > 4:\n\
    \        return round(math.sqrt(a * b * c), 2)\n    else:\n        return -1\n\
    \n", "    return -1 if abs(b - c) < a else ((a + b + c) / 2)\n\n", "    if a +\
    \ b <= c:\n        return -1\n    elif a + c <= b:\n        return -1\n    else:\n\
    \        return float(round((a * b + c) / 2)) / 2\n\n", "    if b > a and c >\
    \ b:\n        return (a * b) / c\n    else:\n        return -1\n</cell>\n<cell>\n\
    assert triangle_area(3, 4, 5) == 6.0\nassert triangle_area(1, 2, 10) == -1\n</cell>\n\
    <text>\nWrite a Python function called triangle_circumference that takes the lengths\
    \ of the three sides of a triangle and returns the circumference of the triangle.\
    \ If the three sides don't form a valid triangle, return -1. For example, triangle_circumference(3,5,4)\
    \ == 12.\n\nHint: Look at the following formula for a circle and figure out how\
    \ to calculate its circumference using Pythagoras' theorem.\n\n$ \\phi = \\frac{4}{3}a^2\
    \ + \\frac{8}{3}b^2 $\n\nThe circumference is given by:\n\n$ \\mathrm{circumference}\
    \ = \\sqrt{(\\phi)^2 + 4^2} $\n\nThe formula for the area of a triangle can be\
    \ found here:\n\n$ \\mathrm{area} = \\frac{1}{2}a + \\frac{1}{2}b + \\frac{1}{2}c\
    \ $\n\nThe formula for the circumference of a triangle can be found here:\n\n\
    $ \\mathrm{circumference} = \\sqrt{(\\mathrm{area})^2 - (\\mathrm{area})} $\n\n\
    Hint: If you need more practice with math, try to use Pythagoras' theorem to find\
    \ the area and circumference of a triangle given its sides, a, b, and c.\n\n\n\
    </text>\n<cell>", "    if a + b < c or a + c < b or b + c < a:\n        return\
    \ -1\n    return round(((a * b) + c) / 2) / 2\n\n", "    if a + b > c and a +\
    \ c > b and b + c > a:\n        return float(a * b * c / 2)\n    else:\n     \
    \   return -1\n", "    \n    side_a, side_b, side_c = a, b, c\n    area = abs(side_a\
    \ + side_b + side_c)\n    if area != 0:\n        if side_a + side_b >= side_c:\n\
    \            return round(area / 2)\n        else:\n            return -1\n  \
    \  else:\n        return -1\n", "    if a + b > c and b + c > a and c + a > 0:\n\
    \        return round(a * b * c / (a + b + c), 2)\n    else:\n        return -1\n",
  "    if a + b + c > 0:\n        return round(((a * b) + (c * b)) / (2 * (a + b)),\
    \ 2)\n    else:\n        return -1\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

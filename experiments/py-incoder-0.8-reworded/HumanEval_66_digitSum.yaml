name: HumanEval_66_digitSum
language: py
prompt: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that takes\
  \ a string as input and returns the sum of the upper characters only'\n    ASCII\
  \ codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
  \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
  \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n  \
  \  \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
  \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE') ==\
  \ 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa') ==\
  \ 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You arE\
  \ Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
completions: ["    sum = 0\n    for c in s:\n        sum = sum + ord(c) - 64\n   \
    \ return sum\n\nassert digitSum('') == 0\nassert digitSum('abAB') == 131\nassert\
    \ digitSum('abcCd') == 67\nassert digitSum('helloE') == 69\nassert digitSum('woArBld')\
    \ == 131\nassert digitSum('aAaaaXa') == 153\n\n", "    return sum(int(c) for c\
    \ in s if c.isalpha())\n", "    s = 0\n    for c in s:\n        if c.isupper():\n\
    \            s = s + ord(c)\n    return s\n\n", "    if not s:\n        return\
    \ 0\n    return sum(ord(x) - ord('a') for x in s)\n\n", "    # Write your code\
    \ here\n    sum = 0\n    for char in s:\n        if char.isupper():\n        \
    \    sum += ord(char)\n    return sum\n", "    return sum(int(c) for c in s if\
    \ c.isupper())\n\n", "    sum = 0\n    for i in s:\n        sum += ord(i) - ord('a')\n\
    \    return sum\n\n\n@register(\"solution\")", "    return sum([ord(x) for x in\
    \ s])\n\n", "    # Convert string to ints\n    s = ''.join(str(int(c)) for c in\
    \ s)\n    # Add up ascii codes from ints\n    return sum(ord(c) for c in s)\n",
  "    # Your code here\n    total = 0\n    for char in s:\n        if char.isupper():\n\
    \            total += ord(char)\n\n    return total\n\n", "    s = s.replace('\
    \ ', '')\n    res = 0\n    for d in s:\n        res += d.upper() if d.isalpha()\
    \ else int(d)\n    return res\n\n", "    sum = 0\n    for char in s:\n       \
    \ if char.isalpha():\n            sum += ord(char)\n    return sum\n\n", "   \
    \ # your code here\n    count = 0\n    sum = 0\n    for char in s:\n        if\
    \ char.isupper():\n            sum += ord(char)\n        count += 1\n    return\
    \ sum\n\n", "    sum = 0\n    sum_uppers = 0\n    for char in s:\n        if char.isupper():\n\
    \            sum_uppers += 1\n        sum += ord(char)\n    return sum + sum_uppers\n\
    \n", "    result = 0\n    s = s.strip()\n    for letter in s:\n        if letter.isupper():\n\
    \            result += ord(letter)\n    return result\n\n", "    s_sum = 0\n \
    \   for c in s:\n        if c.isupper():\n            s_sum += ord(c)\n    return\
    \ s_sum\n\n", "    sum = 0\n    for ch in s:\n        if ch >= ord('A') and ch\
    \ <= ord('Z'):\n            sum += ch - ord('a') + 1\n    return sum\n\n", " \
    \   return sum(int(a) for a in s)\n\n", "    result = 0\n    i = 0\n    while\
    \ i < len(s):\n        c = s[i]\n        if c.isupper():\n            result +=\
    \ ord(c)\n        i += 1\n    return result\n\n", "    return sum(int(char) for\
    \ char in s.upper() if char in string.ascii_uppercase )\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_45_triangle_area
language: py
prompt: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of a\
  \ side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
  \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
  \ntest_check()\n"
completions: ["    area = h * h - a * a / 2\n    return area\n\n", "    return a *\
    \ (b - a) * (h - b) / 2\n\n", "    return a*h*((h-1)*(2*h-1)/2)\n\n", "    return\
    \ (a * h) / 2\n\n", "    return a * h * h / 2\n\n", "    area = math.sqrt((4 *\
    \ h) / 3)\n    return area\n\n", "    return a ** 2 / (4 * (h / 3))\n\n", "  \
    \  return a * ((a + h) / 2)\n\n", "    area_side = math.sqrt(3 * (h - a)**2)\n\
    \    return area_side / 2\n\n", "    return (a * h) / 2\n\n", "    return float(a**2\
    \ - h**2)/2\n\n", "    return a * h / (0.5 * (h + a + a))\n\n", "    return (a\
    \ * h) / 2\n\n", "    area = math.sqrt(a * a + (h * h))\n    return area\n\n",
  "    return 2 * a * (h / 2) ** 2\n\n", "    side = a * h / 2\n    return side *\
    \ side\n\n", "    return math.sqrt(a ** 2 + h ** 2)\n\n\n@njit", "    if a + h\
    \ <= 4:\n        raise ValueError(\"'a' and 'h' must be greater than 4.\")\n \
    \   return 0.5 * (a + h) * (a - h + 1) * (a + h - 2)\n\n", "    return a * (h\
    \ - a)\n\n", "    return float(a * (a - h) * (2 * h - a))\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

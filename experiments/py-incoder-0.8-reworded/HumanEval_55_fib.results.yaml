language: py
name: HumanEval_55_fib
results:
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return 0 if n < 2 else fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpldglutzf.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpldglutzf.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpldglutzf.py\", line 13, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib2(n, 0, 1)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpynwxj6ws.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpynwxj6ws.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpynwxj6ws.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpynwxj6ws.py\", line 10, in fib\n\
    \    return fib2(n, 0, 1)\nNameError: name 'fib2' is not defined. Did you mean:\
    \ 'fib'?\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return 1\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgov6vuka.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpgov6vuka.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpgov6vuka.py\", line 15, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 2) + fib(n - 1)\n\n\n@deprecated_alias(fib, \"__next__\")\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb6chbs8u.py\", line\
    \ 17, in <module>\n    @deprecated_alias(fib, \"__next__\")\nNameError: name 'deprecated_alias'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 0 and n <= 10\n    if n == 0:\n        return 0\n    elif\
    \ n == 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwhfgtbic.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpwhfgtbic.py\", line 27,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpwhfgtbic.py\", line 23, in check\n\
    \    assert candidate(11) == 89\n  File \"/tmp/tmpwhfgtbic.py\", line 10, in fib\n\
    \    assert n >= 0 and n <= 10\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return 1\n    return fib(n-2) + fib(n-1)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_0qonjbe.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_0qonjbe.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp_0qonjbe.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n</cell>\n\
    <text>\nWe will use the decorator @timeit for a quick measurement of the execution\
    \ time of a function.\n\n\n</text>\n<cell>\n@timeit\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpk7o43wo8.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\n@timeit('fibonacci_iter')\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9de3im_0.py\", line\
    \ 15, in <module>\n    @timeit('fibonacci_iter')\nNameError: name 'timeit' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_rec(n, 1, 1, 1)\n\n\n@njit\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo8ux3m47.py\", line\
    \ 13, in <module>\n    @njit\nNameError: name 'njit' is not defined\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 0\n    if n == 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp234l938d.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp234l938d.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp234l938d.py\", line 17, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp234l938d.py\", line 13, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  File \"/tmp/tmp234l938d.py\", line 13, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  File \"/tmp/tmp234l938d.py\", line 13, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  [Previous line repeated 7 more times]\n  File\
    \ \"/tmp/tmp234l938d.py\", line 10, in fib\n    assert n >= 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fibs = {0: 0, 1: 1}\n    for _ in range(n-2):\n        fibs[_] = fibs[_]\
    \ + fibs[_+1]\n    return fibs[n]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg6nyvq7z.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpg6nyvq7z.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpg6nyvq7z.py\", line 17, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpg6nyvq7z.py\", line 12, in fib\n\
    \    fibs[_] = fibs[_] + fibs[_+1]\nKeyError: 2\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph1akcbbn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmph1akcbbn.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmph1akcbbn.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Argument 'n' must be >= 0.\")\n\
    \    elif n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\n@njit\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzz55nwvv.py\", line\
    \ 17, in <module>\n    @njit\nNameError: name 'njit' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return n if n < 3 else fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsgoq6bmh.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpsgoq6bmh.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpsgoq6bmh.py\", line 13, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib2(n - 1) + fib2(n - 2)\n\n\n@memoize\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1vvbc8mt.py\", line\
    \ 13, in <module>\n    @memoize\nNameError: name 'memoize' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib2(n - 1) + fib2(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5hw2cyo8.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5hw2cyo8.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp5hw2cyo8.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp5hw2cyo8.py\", line 10, in fib\n\
    \    return fib2(n - 1) + fib2(n - 2)\nNameError: name 'fib2' is not defined.\
    \ Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib1(n-1) + fib2(n-2)\n</cell>\n<text>\nHow do we know it works\
    \ correctly?\n\n\n</text>\n<cell>\nfib(10)\n</cell>\n<cell>\n%timeit fib(10)\n\
    </cell>\n<cell>\n%timeit fib(10000)\n</cell>\n<text>\nExercise: Fibonacci Numbers\n\
    Write a program to find the nth fibonacci number given a natural number n.\nExample:\n\
    Given n = 3, your program should return 3.\nGiven n = 5, your program should return\
    \ 8.\nHint: Use recursion.\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpzs6abt3g.py\", line 11\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"fibonacci numbers are limited to\
    \ int values -1 and 1\")\n    if n == 0:\n        return 0\n    elif n == 1:\n\
    \        return 1\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1konxs05.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp1konxs05.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp1konxs05.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp1konxs05.py\", line 10, in fib\n\
    \    return fib(n-2) + fib(n-1)\n  File \"/tmp/tmp1konxs05.py\", line 10, in fib\n\
    \    return fib(n-2) + fib(n-1)\n  File \"/tmp/tmp1konxs05.py\", line 10, in fib\n\
    \    return fib(n-2) + fib(n-1)\n  [Previous line repeated 994 more times]\nRecursionError:\
    \ maximum recursion depth exceeded\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    else:\n        return fib(n-1)\
    \ + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_n(n) // 2\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4h5ly_8f.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp4h5ly_8f.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp4h5ly_8f.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp4h5ly_8f.py\", line 10, in fib\n\
    \    return fib_n(n) // 2\nNameError: name 'fib_n' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 2) + fib(n - 1)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    @curry\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4kqxulwo.py\", line\
    \ 15, in <module>\n    @curry\nNameError: name 'curry' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\n@njit\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzz55nwvv.py\", line\
    \ 17, in <module>\n    @njit\nNameError: name 'njit' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return n if n < 2 else fib(n-2) + fib(n-1)\n\n@register_action('fib_step')\n\
    @register_action('fib_step_start')\n@register_action('fib_step_end')\n@register_action('fib_step_middle')\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg8qsegff.py\", line\
    \ 12, in <module>\n    @register_action('fib_step')\nNameError: name 'register_action'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib1(n)\n\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzierriw7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpzierriw7.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpzierriw7.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpzierriw7.py\", line 10, in fib\n\
    \    return fib1(n)\nNameError: name 'fib1' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return 1\n    return fib(n-1) + fib(n-2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp36yk73ta.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp36yk73ta.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp36yk73ta.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_cache[n - 1] if n in fib_cache else fib_cache[n] = _fib(n)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpjr7clhul.py\", line 10\n    return fib_cache[n - 1] if\
    \ n in fib_cache else fib_cache[n] = _fib(n)\n                               \
    \                                 ^\nSyntaxError: invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # return 1 if n <= 1 \n    if n <= 1: \n        return n\n    # return\
    \ fib(n - 1) + fib(n - 2)\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        return fib(-n)\n\n    if n == 0:\n        return 0\n\
    \    elif n == 1:\n        return 1\n    else:\n        p, q = fib(n-1), fib(n-2)\n\
    \        return q+p\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpo6s1qlu4.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_rec(n, 0, 0, 1)\n\n@profile\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppiz_fq5o.py\", line\
    \ 12, in <module>\n    @profile\nNameError: name 'profile' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n > 0\n    if n == 1:\n        return 1\n    if n == 2:\n     \
    \   return 2\n    return fib(n-2) + fib(n-1)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6qfedylp.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp6qfedylp.py\", line 26,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp6qfedylp.py\", line 19, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n</cell>\n\
    <text>\nFibonacci numbers (continued)\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpuoqb2664.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n - 2) + fib(n - 1)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # assert is_natural(n)\n    if n < 2:\n        return n\n    return fib(n-1)\
    \ + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n > 1\n    if n in [0, 1]:\n        return 1\n    else:\n     \
    \   return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7m9m_nel.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp7m9m_nel.py\", line 25,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp7m9m_nel.py\", line 18, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp7m9m_nel.py\", line 14, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  File \"/tmp/tmp7m9m_nel.py\", line 14, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  File \"/tmp/tmp7m9m_nel.py\", line 14, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  [Previous line repeated 6 more times]\n  File\
    \ \"/tmp/tmp7m9m_nel.py\", line 10, in fib\n    assert n > 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while a < n:\n        a, b = b, a + b\n    return a\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpth02mdzc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpth02mdzc.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpth02mdzc.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while a < n:\n        a, b = b, a+b\n    return b\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5buv1dhc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5buv1dhc.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp5buv1dhc.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError('n < 0')\n    if n == 0:\n       \
    \ return 0\n    if n == 1:\n        return 1\n    return fib(n - 1) + fib(n -\
    \ 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_recursion(n)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ip_2j1t.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp9ip_2j1t.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp9ip_2j1t.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp9ip_2j1t.py\", line 10, in fib\n\
    \    return fib_recursion(n)\nNameError: name 'fib_recursion' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif\
    \ n == 2:\n        return 1\n    else:\n        return fib(n-2) + fib(n-1)\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # we already know that n > 0\n    # and n >= 1\n    if n == 0:\n     \
    \   return 0\n    elif n == 1:\n        return 1\n    else:\n        prev, cur\
    \ = 1, 0\n        while cur < n:\n            prev, cur = cur, prev + cur\n  \
    \      return cur\n\n\n@cached\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa2qofwt1.py\", line\
    \ 23, in <module>\n    @cached\nNameError: name 'cached' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # check condition\n    if n == 1:\n        return 1\n    elif n == 2:\n\
    \        return 1\n    elif n >= 3:\n        return fib(n - 1) + fib(n - 2)\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 1, 0\n    while b < n:\n        a, b = b, a + b\n    return a\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp44nxhsfq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp44nxhsfq.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp44nxhsfq.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a+b\n    return\
    \ a\n\n\n@timefunc(1)\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9emhfl5b.py\", line\
    \ 16, in <module>\n    @timefunc(1)\nNameError: name 'timefunc' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n - 2) + fib(n - 1)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # implement the function here\n    raise NotImplementedError\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp2365k03f.py\", line 12\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 1, 1\n    for _ in range(n):\n        a, b = b, a+b\n    return\
    \ b\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis would not take into account the\
    \ time taken by the calculation of each number. Also, there is not need to store\
    \ the results in a list since you can calculate them directly from the input value.\
    \ Also, this would take more memory as the numbers would have to be stored as\
    \ float.\n<|/ c |>\n<| a |>\nYou can use the math library for this. \n<code>\n\
    import math\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpuhixxua8.py\", line 14\n    </code>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n-1) + fib(n-2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 0:\n        return 0\n    elif n == 1 or n == 0:\n        return\
    \ 1\n    else:\n        return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return 1\n    else:\n        return fib(n-2) + fib(n-1)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa424want.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa424want.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpa424want.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n > 0\n    if n == 1 or n == 0:\n        return 1\n    return fib(n\
    \ - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8bxecidb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8bxecidb.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp8bxecidb.py\", line 17, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp8bxecidb.py\", line 13, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmp8bxecidb.py\", line 13,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmp8bxecidb.py\",\
    \ line 13, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 6 more times]\n  File \"/tmp/tmp8bxecidb.py\", line 10, in fib\n    assert n\
    \ > 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_cache[n] if n in fib_cache else fib_cache[n - 1] + fib_cache[n\
    \ - 2]\n\n\n@timeit\ndef check(candidate):\n    assert candidate(10) == 55\n \
    \   assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7g1nhpkv.py\", line\
    \ 13, in <module>\n    @timeit\nNameError: name 'timeit' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        return -1\n    elif n <= 2:\n        return 1\n   \
    \ else:\n        return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # we may use cached results to accelerate the running process\n    if\
    \ n <= 1:\n        return 1\n    elif n in fib_cache:\n        return fib_cache[n]\n\
    \    else:\n        result = fib(n-1) + fib(n-2)\n        fib_cache[n] = result\n\
    \        return result\n\nfib_cache = {}\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt0julraq.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpt0julraq.py\", line 30,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpt0julraq.py\", line 23, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1): return n\n    return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib2(n, 1, 0, 1)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphyl5z47f.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmphyl5z47f.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmphyl5z47f.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmphyl5z47f.py\", line 10, in fib\n\
    \    return fib2(n, 1, 0, 1)\nNameError: name 'fib2' is not defined. Did you mean:\
    \ 'fib'?\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib1(n) + fib2(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7bm5555t.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7bm5555t.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp7bm5555t.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp7bm5555t.py\", line 10, in fib\n\
    \    return fib1(n) + fib2(n)\nNameError: name 'fib1' is not defined. Did you\
    \ mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpo6s1qlu4.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fibonacci(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_w_1d_qc.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_w_1d_qc.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp_w_1d_qc.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp_w_1d_qc.py\", line 10, in fib\n\
    \    return fibonacci(n)[0]\nNameError: name 'fibonacci' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 1, 1\n    while n > 1:\n        a, b = b, a + b\n        n -= 1\n\
    \    return a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n   \
    \ assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_cache[n] if n in fib_cache else fib_cache[n] = fib(n - 2) +\
    \ fib(n - 1)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp4se94z6m.py\", line 10\n    return fib_cache[n] if n in\
    \ fib_cache else fib_cache[n] = fib(n - 2) + fib(n - 1)\n                    \
    \                                        ^\nSyntaxError: invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <cell>\n%timeit fib(50)\n</cell>\n<cell>\n%prun fib(50)\n</cell>\n<text>\nWe see\
    \ that the execution time is about 10x faster than the previous code.\n\n\n</text>\n\
    <text>\nA faster implementation\n\n</text>\n<text>\nIt is possible to perform\
    \ the task without recursion, using dynamic programming.\n\n\n</text>\n<cell>\n\
    from typing import Tuple\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp1leqnra0.py\", line 21\n    We see that the execution\
    \ time is about 10x faster than the previous code.\n                         \
    \                    ^\nSyntaxError: invalid decimal literal\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n - 1):\n        a, b = b, a + b\n   \
    \ return a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7_5zm747.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp7_5zm747.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp7_5zm747.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <text>\nLet's check our implementation with some values:\n\n\n</text>\n<cell>\n\
    fib(10)\n</cell>\n<cell>\nfib(1)\n</cell>\n<cell>\nfib(8)\n</cell>\n<text>\nAnd\
    \ with more:\n\n\n</text>\n<cell>\n%timeit fib(10)\n</cell>\n<cell>\n%timeit fib(1)\n\
    </cell>\n<cell>\n%timeit fib(8)\n</cell>\n<text>\nThe results are as expected:\
    \ each call of fib() creates a new number - it doesn\u2019t re-use any previous\
    \ results. This is called memoization.\n\nAnother approach is to cache the results\
    \ of all calls to fib() so that you only need to compute them once. For example,\
    \ you can cache the result of fib(10) in a dict like this:\n\n\n</text>\n<cell>\n\
    cache = {0: 0, 1: 1}\n</cell>\n<text>\nThen you can change your implementation:\n\
    \n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate(10) == 55\n \
    \   assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpimrd7wny.py\", line 15\n    Let's check our implementation\
    \ with some values:\n       ^\nSyntaxError: unterminated string literal (detected\
    \ at line 15)\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while n > 0:\n        a, b = b, a+b\n        n -= 1\n\
    \    return a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    else:\n        return fib(n-1)\
    \ + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Argument must be non-negative\"\
    )\n    if n < 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfvnx03p2.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpfvnx03p2.py\", line 25,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpfvnx03p2.py\", line 18, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd8is1n5l.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd8is1n5l.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpd8is1n5l.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return n if n < 3 else fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpge88pysv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpge88pysv.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpge88pysv.py\", line 13, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n-1) + fib(n-2)\n\n\n@test_utils.unittest_run_loop\n@test_utils.unittest_skip('bug\
    \ in Python version')\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn6i8m15n.py\", line\
    \ 17, in <module>\n    @test_utils.unittest_run_loop\nNameError: name 'test_utils'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n must be greater than 0\")\n  \
    \  if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        return fib(-n)\n\n    if n == 1:\n        return 1\n\
    \    return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmez3gjmb.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpmez3gjmb.py\", line 26,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpmez3gjmb.py\", line 19, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 15,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\",\
    \ line 15, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 7 more times]\n  File \"/tmp/tmpmez3gjmb.py\", line 11, in fib\n    return fib(-n)\n\
    \  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1) + fib(n\
    \ - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1)\
    \ + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 11, in fib\n    return fib(-n)\n\
    \  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1) + fib(n\
    \ - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1)\
    \ + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 11, in fib\n    return fib(-n)\n\
    \  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1) + fib(n\
    \ - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1)\
    \ + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 11, in fib\n    return fib(-n)\n\
    \  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1) + fib(n\
    \ - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1)\
    \ + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 11, in fib\n    return fib(-n)\n\
    \  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1) + fib(n\
    \ - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1)\
    \ + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 11, in fib\n    return fib(-n)\n\
    \  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1) + fib(n\
    \ - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1)\
    \ + fib(n - 2)\n  File \"/tmp/tmpmez3gjmb.py\", line 11, in fib\n    return fib(-n)\n\
    \  File \"/tmp/tmpmez3gjmb.py\", line 15, in fib\n    return fib(n - 1) + fib(n\
    \ - 2)\n  File "
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # pylint: disable=redefined-outer-name\n\n    if n == 0:\n        return\
    \ 0\n    elif n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_recursion(n, memo_fib_list)\n\n\ndef check(candidate):\n  \
    \  assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppr3w1tlv.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppr3w1tlv.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmppr3w1tlv.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmppr3w1tlv.py\", line 10, in fib\n\
    \    return fib_recursion(n, memo_fib_list)\nNameError: name 'fib_recursion' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <cell>\n%timeit fib(10)\n</cell>\n<cell>\n%timeit fib(1)\n</cell>\n<cell>\n%timeit\
    \ fib(8)\n</cell>\n<text>\nRecursive Function Example\n\n</text>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpfocd_yd6.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib1(n)\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpug7k6n32.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpug7k6n32.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpug7k6n32.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpug7k6n32.py\", line 10, in fib\n\
    \    return fib1(n)\nNameError: name 'fib1' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo6xe7wqo.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpo6xe7wqo.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpo6xe7wqo.py\", line 15, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    return\
    \ fib(n-1) + fib(n-2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n</cell>\n\
    <cell>\nfib(10)\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpdkomx60x.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <cell>\n@test\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpk2qxrdur.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvz6_u6mm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvz6_u6mm.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpvz6_u6mm.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 0:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr99kc8pf.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpr99kc8pf.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpr99kc8pf.py\", line 15, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph1akcbbn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmph1akcbbn.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmph1akcbbn.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while a < n:\n        a, b = b, a + b\n    return a\n\
    \n\n@with_setup(setup_sift, teardown_sift)\n@with_setup(setup_pytest, teardown_pytest)\n\
    @with_setup(setup_pyflakes, teardown_pyflakes)\n@with_setup(setup_isort, teardown_isort)\n\
    @with_setup(setup_autopep8, teardown_autopep8)\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv7uuai5s.py\", line\
    \ 16, in <module>\n    @with_setup(setup_sift, teardown_sift)\nNameError: name\
    \ 'with_setup' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 0, \"Please enter an int >= 0\"\n    if n in [0, 1]:\n   \
    \     return 1\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n  \
    \  assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmens7ucs.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpmens7ucs.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpmens7ucs.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    return fib(n-1) + fib(n-2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n-1) + fib(n-2)\n</cell>\n<cell>\n%timeit fib(10)\n\
    </cell>\n<cell>\n%timeit fib(10)\n</cell>\n<text>\nRecursions\n\n</text>\n<text>\n\
    Base cases and recursion are two common ways of recursion. They work essentially\
    \ the same way as loops, but with different syntax:\n\n\n</text>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpwonfc5sr.py\", line 16\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise IndexError('fib arguement must be positive')\n\
    \    elif n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    return\
    \ fib(n-1) + fib(n-2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpo6s1qlu4.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <text>\nThis implementation is very inefficient:\n\nit calculates fib(2) twice.\n\
    it calls itself twice for calculating fib(2)\n\nWe can do better by memoizing\
    \ the result. Memoization is done using a dictionary in the code below - it saves\
    \ the last two values it calculated for a certain input:\n\n\n</text>\n<cell>\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmprdtabp4b.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a+b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n</cell>\n\
    <cell>\n%timeit fib(20)\n</cell>\n<cell>\n%timeit fib(500)\n</cell>\n<cell>\n\
    fib(0)\n</cell>\n<cell>\nfib(8)\n</cell>\n<cell>\nfib(20)\n</cell>\n<text>\nRecursion\
    \ is often used as an alternative to iteration. In fact, we can simulate recursion\
    \ with iteration. Here we simulate Fibonacci with iteration.\n\n\n</text>\n<cell>\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpqapk6x83.py\", line 13\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp74v5n439.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp74v5n439.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp74v5n439.py\", line 15, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n    else:\n        return fib(n-1)\
    \ + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 0:\n        return 0\n    elif n <= 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\n@given(integers(min_value=-2**31,\
    \ max_value=2**31-1))\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7uim2rd0.py\", line\
    \ 18, in <module>\n    @given(integers(min_value=-2**31, max_value=2**31-1))\n\
    NameError: name 'given' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        return 0\n    elif n == 0:\n        return 1\n    else:\n\
    \        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa50u4qzs.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpa50u4qzs.py\", line 25,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpa50u4qzs.py\", line 18, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptk70a9xx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptk70a9xx.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmptk70a9xx.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmptk70a9xx.py\", line 10, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  File \"/tmp/tmptk70a9xx.py\", line 10, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  File \"/tmp/tmptk70a9xx.py\", line 10, in fib\n\
    \    return fib(n-1) + fib(n-2)\n  [Previous line repeated 994 more times]\nRecursionError:\
    \ maximum recursion depth exceeded\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n in (0, 1):\n        return n\n\n    return fib(n-1) + fib(n-2)\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fibs(1, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk77rm1et.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk77rm1et.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpk77rm1et.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpk77rm1et.py\", line 10, in fib\n\
    \    return fibs(1, n)\nNameError: name 'fibs' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n</cell>\n\
    <cell>\nfib(10**8)\n</cell>\n<cell>\n%time fib(10**8)\n</cell>\n<cell>\n%time\
    \ fib(10**8)\n</cell>\n<cell>\n%time fib(10**8)\n</cell>\n<text>\nComputing the\
    \ square of a number using recursion can be faster than the exponentiation operator.\
    \ But it's also very easy to write code that's not as obvious and easy to understand.\n\
    \nNone Recursion\n\n\n\n</text>\n<text>\nLet's practice computing the square of\
    \ a number. Implement a function that computes $n^2$.\n\n\n</text>\n<cell>\nfrom\
    \ math import sqrt\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpt8oce0w_.py\", line 35\n    Let's practice computing the\
    \ square of a number. Implement a function that computes $n^2$.\n       ^\nSyntaxError:\
    \ unterminated string literal (detected at line 35)\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvz6_u6mm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvz6_u6mm.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpvz6_u6mm.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n-1) + fib(n-2)\n\n</cell>\n\
    <text>\n\u0417\u0430\u0434\u0430\u0447\u0430. \u0421\u043B\u043E\u0436\u0438\u0442\
    \u044C \u0432\u0435\u043B\u0438\u0447\u0438\u043D\u0443 \u0441\u043B\u0435\u0434\
    \u0443\u044E\u0449\u0435\u0439 \u0444\u0430\u043A\u0442\u043E\u0440\u0438\u0430\
    \u043B\u044C\u043D\u043E\u0441\u0442\u0438 \u0447\u0438\u0441\u0435\u043B \u043E\
    \u0442 1 \u0434\u043E 10. \u041D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\
    \u043E \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C, \u0447\u0442\u043E\
    \ \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u0438\u0435\
    \ \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u0439 \u0444\u0430\u043A\u0442\
    \u043E\u0440\u0438\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u0438 \u0447\u0438\
    \u0441\u0435\u043B \u043E\u0442 1 \u0434\u043E 10 \u0438 \u043F\u0440\u043E\u0432\
    \u0435\u0440\u0438\u0442\u044C, \u0447\u0442\u043E \u0432\u0441\u0435 \u0442\u043E\
    \u0447\u043D\u043E \u043B\u0438 \u044D\u0442\u043E \u0441\u043B\u043E\u0436\u043D\
    \u0430\u044F \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0430.\n\n\n</text>\n\
    <cell>\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpe_zc3oca.py\", line 14\n    </cell>\n    ^\nSyntaxError:\
    \ invalid syntax\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n-1):\n        a, b = b, a+b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwpjxoh_p.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpwpjxoh_p.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpwpjxoh_p.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n   \
    \ return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a+b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_rec(n, n, n)\n\n@memoized\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpec312fia.py\", line\
    \ 12, in <module>\n    @memoized\nNameError: name 'memoized' is not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp74v5n439.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp74v5n439.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp74v5n439.py\", line 15, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 2) + fib(n - 1)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n@lru_cache(maxsize=1000)\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn7pl1w3n.py\", line\
    \ 14, in <module>\n    @lru_cache(maxsize=1000)\nNameError: name 'lru_cache' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmyzs2_io.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmyzs2_io.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpmyzs2_io.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib2(n, 0, 1)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpynwxj6ws.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpynwxj6ws.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpynwxj6ws.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpynwxj6ws.py\", line 10, in fib\n\
    \    return fib2(n, 0, 1)\nNameError: name 'fib2' is not defined. Did you mean:\
    \ 'fib'?\n"
  stdout: ''
  timestamp: 1659823326
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while a < n:\n        a, b = b, a + b\n    return b\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprorlw3oo.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprorlw3oo.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmprorlw3oo.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj1ascl6v.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpj1ascl6v.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpj1ascl6v.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 0\n    if n == 0:\n        return 0\n    elif n == 1:\n  \
    \      return 1\n    else:\n        return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 0:\n        return 0\n    elif n <= 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976020

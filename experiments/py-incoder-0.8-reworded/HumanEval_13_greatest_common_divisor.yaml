name: HumanEval_13_greatest_common_divisor
language: py
prompt: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a\
  \ greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
  \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
  \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
  \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
completions: ["    if b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n", "    assert isinstance(a, int)\n    assert isinstance(b, int)\n \
    \   if a < b:\n        a, b = b, a\n    while b:\n        a, b = b, a % b\n  \
    \  return a\n\n", "    if b == 0:\n        return a\n    if a < b:\n        return\
    \ greatest_common_divisor(b, a)\n    while b != 0:\n        a, b = b, a % b\n\
    \    return a\n", "    if a < b:\n        a, b = b, a\n    \n    if a == b:\n\
    \        return a\n\n    divs = []\n    while a % b == 0:\n        divs.append(b)\n\
    \        a, b = b, a % b\n\n    if a != 1:\n        divs.append(a)\n\n    return\
    \ reduce(lambda x, y: x%y, divs)\n", "    while b and a % b == 0:\n        a =\
    \ a // b\n        b = b // b\n    return a\n\n", "    assert isinstance(a, int)\
    \ and isinstance(b, int)\n    if a < b:\n        a, b = b, a\n    while b > 1:\n\
    \        a, b = b, a % b\n    return a\n", "    while b:\n        a, b = b, a\
    \ % b\n    return a\n\n", "    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a%b)\n\n", "    a = int(a)\n    b = int(b)\n    greatest_common_divisor = a\n\
    \    while b > 0:\n        greatest_common_divisor = b\n        b = a % b\n  \
    \      a = b\n    return greatest_common_divisor\n", "    if b == 0:\n       \
    \ return a\n    return greatest_common_divisor(b, a % b)\n\n@njit", "    if b\
    \ == 0:\n        return a\n    return greatest_common_divisor(b, a%b)\n\n", " \
    \   if a < b:\n        a, b = b, a\n    while b > 0:\n        a, b = b, a % b\n\
    \    return a\n\n", "    if b == 0:\n        return a\n    elif a < b:\n     \
    \   return greatest_common_divisor(b, a)\n    else:\n        div, mod = divmod(a,\
    \ b)\n        return greatest_common_divisor(div, mod)\n", "    # Euclid's algorithm\
    \ to find gcd of two numbers.\n    if a == 0:\n        return b\n    if b == 0:\n\
    \        return a\n    while b != 0:\n        t = a\n        a = b\n        b\
    \ = t % b\n    return a\n\n", "    if a == 0 and b == 0:\n        return 0\n \
    \   if a < b:\n        a, b = b, a\n    \n    while a != 0:\n        a, b = b,\
    \ (a % b)\n        \n    return b\n\n", "    # TODO\n    pass\n\n", "    div1\
    \ = a // b\n    div2 = b // a\n    if div1 > div2:\n        div1, div2 = div2,\
    \ div1\n    if div1 == div2:\n        return div1\n    return div2\n\n", "   \
    \ # https://stackoverflow.com/questions/20069029/python-euclidean-algorithm-to-find-greatest-common-divisor/20069073\n\
    \    if a == 0 and b == 0:\n        return 0\n    elif a < b:\n        a, b =\
    \ b, a\n    while b != 0:\n        a, b = b // a, a\n    return a\n\n", "    a\
    \ = abs(a)\n    b = abs(b)\n\n    while b != 0:\n        a, b = b, a % b\n   \
    \ return a\n\n", "    return gcd(a, b) // a\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_55_fib
language: py
prompt: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n    >>>\
  \ fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
  \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
  \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
completions: ["    return 0 if n < 2 else fib(n-1) + fib(n-2)\n", "    return fib2(n,\
    \ 0, 1)\n\n", "    if n < 2:\n        return 1\n    return fib(n-2) + fib(n-1)\n",
  "    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n", "    if n\
    \ < 2:\n        return n\n    else:\n        return fib(n-2) + fib(n-1)\n\n",
  "    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    return\
    \ fib(n - 2) + fib(n - 1)\n\n\n@deprecated_alias(fib, \"__next__\")", "    if\
    \ n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n", "    assert\
    \ n >= 0 and n <= 10\n    if n == 0:\n        return 0\n    elif n == 1:\n   \
    \     return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n", "    if\
    \ n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n", "    if n in (0,\
    \ 1):\n        return 1\n    return fib(n-2) + fib(n-1)\n\n", "    if n < 2:\n\
    \        return n\n    return fib(n-1) + fib(n-2)\n\n", "    if n == 0:\n    \
    \    return 0\n    elif n == 1:\n        return 1\n    return fib(n - 1) + fib(n\
    \ - 2)\n", "    if n == 0:\n        return 0\n    elif n == 1:\n        return\
    \ 1\n    return fib(n - 1) + fib(n - 2)\n", "    if n < 2:\n        return n\n\
    \    return fib(n-1) + fib(n-2)\n\n", "    if n < 2:\n        return n\n    return\
    \ fib(n-2) + fib(n-1)\n</cell>\n<text>\nWe will use the decorator @timeit for\
    \ a quick measurement of the execution time of a function.\n\n\n</text>\n<cell>\n\
    @timeit", "    if n <= 2:\n        return 1\n    return fib(n-2) + fib(n-1)\n",
  "    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\n\n@timeit('fibonacci_iter')",
  "    return fib_rec(n, 1, 1, 1)\n\n\n@njit", "    assert n >= 0\n    if n == 1:\n\
    \        return n\n    return fib(n-1) + fib(n-2)\n\n", "    if n < 2:\n     \
    \   return n\n    return fib(n-1) + fib(n-2)\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

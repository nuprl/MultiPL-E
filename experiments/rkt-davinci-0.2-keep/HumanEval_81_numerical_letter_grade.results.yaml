language: racket
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc18pb5ok.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc18pb5ok.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc18pb5ok.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc18pb5ok.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc18pb5ok.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc18pb5ok.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29k6evo0.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29k6evo0.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29k6evo0.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29k6evo0.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29k6evo0.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29k6evo0.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzoeymp_.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzoeymp_.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzoeymp_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzoeymp_.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzoeymp_.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzoeymp_.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplk9gu3x5.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplk9gu3x5.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplk9gu3x5.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplk9gu3x5.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplk9gu3x5.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplk9gu3x5.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>= gpa\
    \ 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp028vob4r.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp028vob4r.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp028vob4r.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp028vob4r.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp82tqx6lu.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp82tqx6lu.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp82tqx6lu.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp82tqx6lu.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp82tqx6lu.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp82tqx6lu.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_o6g8ryk.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_o6g8ryk.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_o6g8ryk.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_o6g8ryk.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_o6g8ryk.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_o6g8ryk.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg0lwu2nc.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg0lwu2nc.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg0lwu2nc.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg0lwu2nc.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg0lwu2nc.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg0lwu2nc.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxf2nn8ql.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxf2nn8ql.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxf2nn8ql.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxf2nn8ql.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxf2nn8ql.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxf2nn8ql.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppvauogvp.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppvauogvp.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppvauogvp.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppvauogvp.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqn1u8cxt.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqn1u8cxt.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqn1u8cxt.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqn1u8cxt.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqn1u8cxt.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqn1u8cxt.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpadq2dats.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpadq2dats.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpadq2dats.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpadq2dats.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpadq2dats.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpadq2dats.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeecghuxv.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeecghuxv.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeecghuxv.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeecghuxv.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeecghuxv.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpeecghuxv.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpybxmbc6j.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpybxmbc6j.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpybxmbc6j.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpybxmbc6j.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7x8ekwkr.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7x8ekwkr.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7x8ekwkr.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7x8ekwkr.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1nnn9dog.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1nnn9dog.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1nnn9dog.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1nnn9dog.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1nnn9dog.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1nnn9dog.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz61nfwdq.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz61nfwdq.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz61nfwdq.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz61nfwdq.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2p_kw_sv.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2p_kw_sv.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2p_kw_sv.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2p_kw_sv.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptxjm9cp8.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptxjm9cp8.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptxjm9cp8.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptxjm9cp8.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptxjm9cp8.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptxjm9cp8.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa1gdbmra.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa1gdbmra.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa1gdbmra.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa1gdbmra.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjn1itu0s.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjn1itu0s.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjn1itu0s.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjn1itu0s.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjn1itu0s.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpjn1itu0s.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp754v5rfr.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp754v5rfr.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp754v5rfr.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp754v5rfr.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp754v5rfr.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp754v5rfr.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyl6khki6.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyl6khki6.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyl6khki6.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyl6khki6.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9t8f6lf9.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9t8f6lf9.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9t8f6lf9.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9t8f6lf9.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9t8f6lf9.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9t8f6lf9.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpquqpif6n.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpquqpif6n.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpquqpif6n.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpquqpif6n.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpquqpif6n.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpquqpif6n.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7pnoip4.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7pnoip4.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7pnoip4.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7pnoip4.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7pnoip4.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7pnoip4.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6bz3zxqn.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6bz3zxqn.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6bz3zxqn.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6bz3zxqn.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprk3j7u4q.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprk3j7u4q.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprk3j7u4q.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprk3j7u4q.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprk3j7u4q.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprk3j7u4q.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgwvj5if.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgwvj5if.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgwvj5if.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgwvj5if.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgwvj5if.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfgwvj5if.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb1mgumfu.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb1mgumfu.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb1mgumfu.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb1mgumfu.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb1mgumfu.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb1mgumfu.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqz95ytgl.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqz95ytgl.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqz95ytgl.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqz95ytgl.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqz95ytgl.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqz95ytgl.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgdhike5.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgdhike5.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgdhike5.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgdhike5.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgdhike5.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgdhike5.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2qnks7ds.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2qnks7ds.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2qnks7ds.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2qnks7ds.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2qnks7ds.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2qnks7ds.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6_unjrmx.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6_unjrmx.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6_unjrmx.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6_unjrmx.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoc0edc3o.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoc0edc3o.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoc0edc3o.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoc0edc3o.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoc0edc3o.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoc0edc3o.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp84m1zm28.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp84m1zm28.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp84m1zm28.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp84m1zm28.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphoip6qk5.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphoip6qk5.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphoip6qk5.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphoip6qk5.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5brnra1.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5brnra1.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5brnra1.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5brnra1.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5brnra1.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5brnra1.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq5dkouqa.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq5dkouqa.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq5dkouqa.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq5dkouqa.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq5dkouqa.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq5dkouqa.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprt6dddd4.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprt6dddd4.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprt6dddd4.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprt6dddd4.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpez2m3v_4.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpez2m3v_4.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpez2m3v_4.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpez2m3v_4.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpez2m3v_4.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpez2m3v_4.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdkhi83p3.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdkhi83p3.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdkhi83p3.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdkhi83p3.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdkhi83p3.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdkhi83p3.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uiuyeur.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uiuyeur.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uiuyeur.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9uiuyeur.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn90mbpev.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn90mbpev.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn90mbpev.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn90mbpev.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn90mbpev.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn90mbpev.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpele97ml8.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpele97ml8.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpele97ml8.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpele97ml8.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpele97ml8.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpele97ml8.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2kk2xcmc.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2kk2xcmc.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2kk2xcmc.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2kk2xcmc.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2kk2xcmc.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2kk2xcmc.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj30ao1fi.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj30ao1fi.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj30ao1fi.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj30ao1fi.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj30ao1fi.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj30ao1fi.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwbw0rnjg.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwbw0rnjg.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwbw0rnjg.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwbw0rnjg.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwbw0rnjg.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwbw0rnjg.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1q3789wf.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1q3789wf.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1q3789wf.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1q3789wf.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4u627i48.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4u627i48.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4u627i48.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4u627i48.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4u627i48.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4u627i48.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg8csihv8.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg8csihv8.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg8csihv8.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg8csihv8.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg8csihv8.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg8csihv8.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgcm3h_i_.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgcm3h_i_.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgcm3h_i_.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgcm3h_i_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgcm3h_i_.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgcm3h_i_.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2cj9smj_.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2cj9smj_.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2cj9smj_.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2cj9smj_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2cj9smj_.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2cj9smj_.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr16qc9af.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr16qc9af.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr16qc9af.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr16qc9af.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr16qc9af.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr16qc9af.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuf7g4yv4.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuf7g4yv4.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuf7g4yv4.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuf7g4yv4.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuf7g4yv4.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuf7g4yv4.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpib5dfjx4.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpib5dfjx4.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpib5dfjx4.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpib5dfjx4.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpib5dfjx4.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpib5dfjx4.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd80ucgvt.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd80ucgvt.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd80ucgvt.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd80ucgvt.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) \"A+\"]\n               [(>=\
    \ gpa 3.7) \"A\"]\n               [(>= gpa 3.3) \"A-\"]\n               [(>= gpa\
    \ 3.0) \"B+\"]\n               [(>= gpa 2.7) \"B\"]\n               [(>= gpa 2.3)\
    \ \"B-\"]\n               [(>= gpa 2.0) \"C+\"]\n               [(>= gpa 1.7)\
    \ \"C\"]\n               [(>= gpa 1.3) \"C-\"]\n               [(>= gpa 1.0) \"\
    D+\"]\n               [(>= gpa 0.7) \"D\"]\n               [(>= gpa 0.0) \"D-\"\
    ]\n               [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9x1l7i9n.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9x1l7i9n.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9x1l7i9n.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9x1l7i9n.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8vxg1zrp.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8vxg1zrp.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8vxg1zrp.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8vxg1zrp.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptc2_x49e.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptc2_x49e.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptc2_x49e.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptc2_x49e.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptc2_x49e.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptc2_x49e.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp28iv6ags.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp28iv6ags.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp28iv6ags.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp28iv6ags.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp28iv6ags.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp28iv6ags.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8a8rg1px.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8a8rg1px.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8a8rg1px.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8a8rg1px.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8a8rg1px.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8a8rg1px.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpalw9u3lf.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpalw9u3lf.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpalw9u3lf.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpalw9u3lf.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpalw9u3lf.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpalw9u3lf.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuy5o8wcn.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuy5o8wcn.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuy5o8wcn.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuy5o8wcn.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuy5o8wcn.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuy5o8wcn.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) 'A+]\n       [(>=\
    \ grade 3.7) 'A]\n       [(>= grade 3.3) 'A-]\n       [(>= grade 3.0) 'B+]\n \
    \      [(>= grade 2.7) 'B]\n       [(>= grade 2.3) 'B-]\n       [(>= grade 2.0)\
    \ 'C+]\n       [(>= grade 1.7) 'C]\n       [(>= grade 1.3) 'C-]\n       [(>= grade\
    \ 1.0) 'D+]\n       [(>= grade 0.7) 'D]\n       [(>= grade 0.0) 'D-]\n       [else\
    \ 'E]))\n   grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_u4h92p.rkt:48:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_u4h92p.rkt:49:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_u4h92p.rkt:50:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_u4h92p.rkt:51:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_u4h92p.rkt:52:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_u4h92p.rkt:53:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpisp_0k4v.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpisp_0k4v.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpisp_0k4v.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpisp_0k4v.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpow73vn5g.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpow73vn5g.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpow73vn5g.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpow73vn5g.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpow73vn5g.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpow73vn5g.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpny3ruh4h.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpny3ruh4h.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpny3ruh4h.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpny3ruh4h.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpny3ruh4h.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpny3ruh4h.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpacf68otx.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpacf68otx.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpacf68otx.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpacf68otx.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp61cypgfk.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp61cypgfk.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp61cypgfk.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp61cypgfk.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp61cypgfk.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp61cypgfk.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf0w6ckav.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf0w6ckav.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf0w6ckav.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf0w6ckav.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf0w6ckav.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf0w6ckav.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) \"A+\"]\n               [(>=\
    \ gpa 3.7) \"A\"]\n               [(>= gpa 3.3) \"A-\"]\n               [(>= gpa\
    \ 3.0) \"B+\"]\n               [(>= gpa 2.7) \"B\"]\n               [(>= gpa 2.3)\
    \ \"B-\"]\n               [(>= gpa 2.0) \"C+\"]\n               [(>= gpa 1.7)\
    \ \"C\"]\n               [(>= gpa 1.3) \"C-\"]\n               [(>= gpa 1.0) \"\
    D+\"]\n               [(>= gpa 0.7) \"D\"]\n               [(>= gpa 0.0) \"D-\"\
    ]\n               [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8yl89mzi.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8yl89mzi.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8yl89mzi.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8yl89mzi.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxk8nyyc9.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxk8nyyc9.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxk8nyyc9.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxk8nyyc9.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzyuytvd6.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzyuytvd6.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzyuytvd6.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzyuytvd6.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzyuytvd6.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzyuytvd6.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsrcy6233.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsrcy6233.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsrcy6233.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsrcy6233.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsrcy6233.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpsrcy6233.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvbpnt437.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvbpnt437.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvbpnt437.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvbpnt437.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvbpnt437.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvbpnt437.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz3g0hp6j.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz3g0hp6j.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz3g0hp6j.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz3g0hp6j.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz3g0hp6j.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpz3g0hp6j.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfyodgmaj.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfyodgmaj.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfyodgmaj.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfyodgmaj.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfyodgmaj.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfyodgmaj.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2h1p39ip.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2h1p39ip.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2h1p39ip.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2h1p39ip.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2h1p39ip.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2h1p39ip.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpsgmty2.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpsgmty2.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpsgmty2.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpsgmty2.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpsgmty2.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpsgmty2.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8c1urvo.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8c1urvo.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8c1urvo.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8c1urvo.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8c1urvo.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8c1urvo.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1liu9u4w.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1liu9u4w.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1liu9u4w.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1liu9u4w.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1liu9u4w.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1liu9u4w.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzikkrf_.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzikkrf_.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzikkrf_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzikkrf_.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzikkrf_.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzzikkrf_.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfp6djkow.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfp6djkow.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfp6djkow.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfp6djkow.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfp6djkow.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpfp6djkow.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxw8yfn__.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxw8yfn__.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxw8yfn__.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxw8yfn__.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxw8yfn__.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxw8yfn__.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpae1iiu4n.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpae1iiu4n.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpae1iiu4n.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpae1iiu4n.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps_jmtska.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps_jmtska.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps_jmtska.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps_jmtska.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps_jmtska.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps_jmtska.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmponlt64ek.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmponlt64ek.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmponlt64ek.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmponlt64ek.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmponlt64ek.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmponlt64ek.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq210g4ae.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq210g4ae.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq210g4ae.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq210g4ae.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaol5qvq.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaol5qvq.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaol5qvq.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxaol5qvq.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuo2spe1_.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuo2spe1_.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuo2spe1_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuo2spe1_.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuo2spe1_.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuo2spe1_.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj1me19b_.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj1me19b_.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj1me19b_.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj1me19b_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj1me19b_.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj1me19b_.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzhnayn3c.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzhnayn3c.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzhnayn3c.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzhnayn3c.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzn531wi_.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzn531wi_.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzn531wi_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzn531wi_.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzn531wi_.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzn531wi_.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3tx6ilw.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3tx6ilw.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3tx6ilw.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3tx6ilw.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3tx6ilw.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpw3tx6ilw.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56uzwxed.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56uzwxed.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56uzwxed.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56uzwxed.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56uzwxed.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56uzwxed.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5l3hg6b5.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5l3hg6b5.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5l3hg6b5.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5l3hg6b5.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5l3hg6b5.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5l3hg6b5.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaudqx881.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaudqx881.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaudqx881.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaudqx881.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaudqx881.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaudqx881.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptcv0rijs.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptcv0rijs.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptcv0rijs.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptcv0rijs.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptcv0rijs.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptcv0rijs.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppnbmjhtv.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppnbmjhtv.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppnbmjhtv.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppnbmjhtv.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppnbmjhtv.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppnbmjhtv.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnysth8ut.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnysth8ut.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnysth8ut.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnysth8ut.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnysth8ut.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnysth8ut.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqfy9_nf.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqfy9_nf.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqfy9_nf.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqfy9_nf.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqfy9_nf.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwqfy9_nf.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb814xrse.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb814xrse.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb814xrse.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb814xrse.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb814xrse.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb814xrse.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp41h7lzxl.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp41h7lzxl.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp41h7lzxl.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp41h7lzxl.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmlja_iku.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmlja_iku.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmlja_iku.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmlja_iku.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmlja_iku.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmlja_iku.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxt7__ehw.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxt7__ehw.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxt7__ehw.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxt7__ehw.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvx4yd_fa.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvx4yd_fa.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvx4yd_fa.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvx4yd_fa.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr9is648a.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr9is648a.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr9is648a.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr9is648a.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr9is648a.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpr9is648a.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd4bbzcke.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd4bbzcke.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd4bbzcke.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd4bbzcke.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd4bbzcke.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd4bbzcke.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpauirz24l.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpauirz24l.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpauirz24l.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpauirz24l.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpauirz24l.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpauirz24l.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqrqhg6v.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqrqhg6v.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqrqhg6v.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqrqhg6v.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqrqhg6v.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqrqhg6v.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaylcs8d6.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaylcs8d6.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaylcs8d6.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaylcs8d6.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaylcs8d6.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaylcs8d6.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi6ohyev6.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi6ohyev6.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi6ohyev6.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi6ohyev6.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi6ohyev6.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi6ohyev6.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpehiabr1b.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpehiabr1b.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpehiabr1b.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpehiabr1b.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpehiabr1b.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpehiabr1b.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy7bvo7ku.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy7bvo7ku.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy7bvo7ku.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpy7bvo7ku.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkj9fpbcp.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkj9fpbcp.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkj9fpbcp.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkj9fpbcp.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkj9fpbcp.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkj9fpbcp.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnjk4tfzs.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnjk4tfzs.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnjk4tfzs.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnjk4tfzs.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnjk4tfzs.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnjk4tfzs.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoj8ycud9.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoj8ycud9.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoj8ycud9.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoj8ycud9.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk6m43arc.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk6m43arc.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk6m43arc.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk6m43arc.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk6m43arc.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk6m43arc.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0d9l0_i2.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0d9l0_i2.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0d9l0_i2.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp0d9l0_i2.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnw7s4k4_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnw7s4k4_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnw7s4k4_.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnw7s4k4_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgkuazrv8.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgkuazrv8.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgkuazrv8.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgkuazrv8.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgkuazrv8.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgkuazrv8.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvg0gzf25.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvg0gzf25.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvg0gzf25.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvg0gzf25.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph1nh3mwd.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph1nh3mwd.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph1nh3mwd.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph1nh3mwd.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph1nh3mwd.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmph1nh3mwd.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt2n522b2.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt2n522b2.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt2n522b2.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpt2n522b2.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3ihg_kjv.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3ihg_kjv.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3ihg_kjv.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp3ihg_kjv.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnvm92484.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnvm92484.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnvm92484.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnvm92484.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnvm92484.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnvm92484.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppbm0_5uy.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppbm0_5uy.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppbm0_5uy.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppbm0_5uy.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppbm0_5uy.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppbm0_5uy.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghy2u5y3.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghy2u5y3.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghy2u5y3.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghy2u5y3.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghy2u5y3.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghy2u5y3.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6ztg70g4.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6ztg70g4.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6ztg70g4.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6ztg70g4.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6ztg70g4.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6ztg70g4.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpampg249y.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpampg249y.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpampg249y.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpampg249y.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpampg249y.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpampg249y.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8if6ir5c.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8if6ir5c.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8if6ir5c.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8if6ir5c.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8if6ir5c.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8if6ir5c.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6yo91uon.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6yo91uon.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6yo91uon.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6yo91uon.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6yo91uon.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6yo91uon.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi1_f_ce9.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi1_f_ce9.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi1_f_ce9.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi1_f_ce9.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi1_f_ce9.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi1_f_ce9.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd411viwc.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd411viwc.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd411viwc.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd411viwc.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd411viwc.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpd411viwc.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpimz73a00.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpimz73a00.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpimz73a00.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpimz73a00.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpimz73a00.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpimz73a00.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyye5e1fg.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyye5e1fg.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyye5e1fg.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyye5e1fg.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyye5e1fg.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpyye5e1fg.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqkj5fnph.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqkj5fnph.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqkj5fnph.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqkj5fnph.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqkj5fnph.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqkj5fnph.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg5xoy7qw.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg5xoy7qw.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg5xoy7qw.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg5xoy7qw.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg5xoy7qw.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpg5xoy7qw.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdynwc0kw.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdynwc0kw.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdynwc0kw.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdynwc0kw.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdynwc0kw.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpdynwc0kw.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi_qqqibo.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi_qqqibo.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi_qqqibo.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi_qqqibo.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi_qqqibo.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi_qqqibo.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpixuf_tjl.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpixuf_tjl.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpixuf_tjl.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpixuf_tjl.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpixuf_tjl.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpixuf_tjl.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps6dzj8hx.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps6dzj8hx.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps6dzj8hx.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps6dzj8hx.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps6dzj8hx.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps6dzj8hx.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf2_mgzp7.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf2_mgzp7.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf2_mgzp7.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf2_mgzp7.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf2_mgzp7.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpf2_mgzp7.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplrha6qr0.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplrha6qr0.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplrha6qr0.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplrha6qr0.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplrha6qr0.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplrha6qr0.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9efji4xl.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9efji4xl.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9efji4xl.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9efji4xl.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9efji4xl.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9efji4xl.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppzo7xl5l.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppzo7xl5l.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppzo7xl5l.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppzo7xl5l.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc4mhpohu.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc4mhpohu.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc4mhpohu.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc4mhpohu.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc4mhpohu.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpc4mhpohu.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk56zqere.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk56zqere.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk56zqere.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk56zqere.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk56zqere.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpk56zqere.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7nluyqh_.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7nluyqh_.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7nluyqh_.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7nluyqh_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7nluyqh_.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7nluyqh_.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp36507lwx.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp36507lwx.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp36507lwx.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp36507lwx.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp36507lwx.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp36507lwx.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgzow7ipv.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgzow7ipv.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgzow7ipv.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgzow7ipv.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxagr0yrj.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxagr0yrj.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxagr0yrj.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxagr0yrj.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxfh1zh6w.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxfh1zh6w.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxfh1zh6w.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxfh1zh6w.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxfh1zh6w.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxfh1zh6w.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(= gpa\
    \ 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvnuqm6dy.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvnuqm6dy.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvnuqm6dy.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvnuqm6dy.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond ((>= gpa 4.0) 'A+)\n               ((>=\
    \ gpa 3.7) 'A)\n               ((>= gpa 3.3) 'A-)\n               ((>= gpa 3.0)\
    \ 'B+)\n               ((>= gpa 2.7) 'B)\n               ((>= gpa 2.3) 'B-)\n\
    \               ((>= gpa 2.0) 'C+)\n               ((>= gpa 1.7) 'C)\n       \
    \        ((>= gpa 1.3) 'C-)\n               ((>= gpa 1.0) 'D+)\n             \
    \  ((>= gpa 0.7) 'D)\n               ((>= gpa 0.0) 'D-)\n               (else\
    \ 'E)))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7z06q86l.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7z06q86l.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7z06q86l.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7z06q86l.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7z06q86l.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7z06q86l.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkhxq9nzz.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkhxq9nzz.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkhxq9nzz.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkhxq9nzz.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkhxq9nzz.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkhxq9nzz.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw95xfkz.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw95xfkz.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw95xfkz.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw95xfkz.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw95xfkz.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw95xfkz.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n        \
    \   [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0)\
    \ \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n   \
    \        [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x\
    \ 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n\
    \           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa44obe3y.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa44obe3y.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa44obe3y.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpa44obe3y.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgl0xz31s.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgl0xz31s.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgl0xz31s.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgl0xz31s.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgl0xz31s.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgl0xz31s.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe0rby37q.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe0rby37q.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe0rby37q.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpe0rby37q.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29i5qxjn.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29i5qxjn.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29i5qxjn.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29i5qxjn.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29i5qxjn.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp29i5qxjn.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5ojytoey.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5ojytoey.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5ojytoey.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5ojytoey.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5ojytoey.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5ojytoey.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv1r6dx60.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv1r6dx60.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv1r6dx60.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv1r6dx60.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv1r6dx60.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpv1r6dx60.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcsz2kwck.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcsz2kwck.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcsz2kwck.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcsz2kwck.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcsz2kwck.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpcsz2kwck.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>=\
    \ gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0)\
    \ 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n\
    \               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n       \
    \        [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n             \
    \  [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpoq9ccy.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpoq9ccy.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpoq9ccy.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpoq9ccy.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpoq9ccy.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpvpoq9ccy.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) \"A+\"]\n               [(>=\
    \ gpa 3.7) \"A\"]\n               [(>= gpa 3.3) \"A-\"]\n               [(>= gpa\
    \ 3.0) \"B+\"]\n               [(>= gpa 2.7) \"B\"]\n               [(>= gpa 2.3)\
    \ \"B-\"]\n               [(>= gpa 2.0) \"C+\"]\n               [(>= gpa 1.7)\
    \ \"C\"]\n               [(>= gpa 1.3) \"C-\"]\n               [(>= gpa 1.0) \"\
    D+\"]\n               [(>= gpa 0.7) \"D\"]\n               [(>= gpa 0.0) \"D-\"\
    ]\n               [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_17rw3wu.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_17rw3wu.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_17rw3wu.rkt:50:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_17rw3wu.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp78u7sap7.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp78u7sap7.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp78u7sap7.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp78u7sap7.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp78u7sap7.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp78u7sap7.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8vdrkom.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8vdrkom.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8vdrkom.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8vdrkom.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8vdrkom.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb8vdrkom.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1d4u5p_q.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1d4u5p_q.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1d4u5p_q.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1d4u5p_q.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1d4u5p_q.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1d4u5p_q.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefpsy5vy.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefpsy5vy.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefpsy5vy.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefpsy5vy.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefpsy5vy.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpefpsy5vy.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi35g08rn.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi35g08rn.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi35g08rn.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi35g08rn.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi35g08rn.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi35g08rn.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkw72dy48.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkw72dy48.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkw72dy48.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkw72dy48.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkw72dy48.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpkw72dy48.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn50_nxhl.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn50_nxhl.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn50_nxhl.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn50_nxhl.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn50_nxhl.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn50_nxhl.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8qlq6tgw.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8qlq6tgw.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8qlq6tgw.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp8qlq6tgw.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzz8zfg36.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzz8zfg36.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzz8zfg36.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzz8zfg36.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzz8zfg36.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpzz8zfg36.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_a9yi2z.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_a9yi2z.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_a9yi2z.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_a9yi2z.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_a9yi2z.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo_a9yi2z.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxllui68s.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxllui68s.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxllui68s.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxllui68s.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxllui68s.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxllui68s.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpio4fkr_j.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpio4fkr_j.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpio4fkr_j.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpio4fkr_j.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpio4fkr_j.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpio4fkr_j.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7meu0re.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7meu0re.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7meu0re.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7meu0re.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7meu0re.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo7meu0re.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprf6n42xf.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprf6n42xf.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprf6n42xf.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprf6n42xf.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprf6n42xf.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprf6n42xf.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo2taihnq.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo2taihnq.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo2taihnq.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo2taihnq.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo2taihnq.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpo2taihnq.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmycp1erc.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmycp1erc.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmycp1erc.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmycp1erc.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmycp1erc.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmycp1erc.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmred6zj3.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmred6zj3.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmred6zj3.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmred6zj3.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmred6zj3.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmred6zj3.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplgtc0t9p.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplgtc0t9p.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplgtc0t9p.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplgtc0t9p.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplgtc0t9p.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplgtc0t9p.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n  \
    \  (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxv2ty8d.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxv2ty8d.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxv2ty8d.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwxv2ty8d.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpl2rfyt3k.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpl2rfyt3k.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpl2rfyt3k.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpl2rfyt3k.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpl2rfyt3k.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpl2rfyt3k.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprxfi2hsq.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprxfi2hsq.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprxfi2hsq.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprxfi2hsq.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprxfi2hsq.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmprxfi2hsq.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoqiei6qs.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoqiei6qs.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoqiei6qs.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoqiei6qs.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoqiei6qs.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpoqiei6qs.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnan9xnpa.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnan9xnpa.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnan9xnpa.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnan9xnpa.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnan9xnpa.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnan9xnpa.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1rlazgri.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1rlazgri.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1rlazgri.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1rlazgri.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1rlazgri.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp1rlazgri.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplx_ag75c.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplx_ag75c.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplx_ag75c.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplx_ag75c.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplx_ag75c.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplx_ag75c.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>=\
    \ grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade\
    \ 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n               [(>= grade 2.3)\
    \ 'B-]\n               [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n\
    \               [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n  \
    \             [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n     \
    \          [else 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq8qfhv8w.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq8qfhv8w.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq8qfhv8w.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq8qfhv8w.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq8qfhv8w.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpq8qfhv8w.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnh_96z8b.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnh_96z8b.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnh_96z8b.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnh_96z8b.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnh_96z8b.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpnh_96z8b.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n    \
    \       [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>= gpa\
    \ 0.0) \"E\"]\n           [else \"F\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5ync7uf.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5ync7uf.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5ync7uf.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpj5ync7uf.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) 'A+]\n       \
    \    [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n           [(>= gpa 3.0)\
    \ 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>= gpa 2.3) 'B-]\n        \
    \   [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n           [(>= gpa 1.3)\
    \ 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>= gpa 0.7) 'D]\n        \
    \   [(>= gpa 0.0) 'D-]\n           [else 'E]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb4pvjezn.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb4pvjezn.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb4pvjezn.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb4pvjezn.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb4pvjezn.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpb4pvjezn.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q3o8m52.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q3o8m52.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q3o8m52.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q3o8m52.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q3o8m52.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp5q3o8m52.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) 'A+]\n   \
    \        [(>= grade 3.7) 'A]\n           [(>= grade 3.3) 'A-]\n           [(>=\
    \ grade 3.0) 'B+]\n           [(>= grade 2.7) 'B]\n           [(>= grade 2.3)\
    \ 'B-]\n           [(>= grade 2.0) 'C+]\n           [(>= grade 1.7) 'C]\n    \
    \       [(>= grade 1.3) 'C-]\n           [(>= grade 1.0) 'D+]\n           [(>=\
    \ grade 0.7) 'D]\n           [(>= grade 0.0) 'D-]\n           [else 'E]))\n  \
    \     grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbg77fm_.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbg77fm_.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbg77fm_.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbg77fm_.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbg77fm_.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphbg77fm_.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond\n           [(>= x 4.0) 'A+]\n           [(>=\
    \ x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n     \
    \      [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n\
    \           [(>= x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0)\
    \ 'D+]\n           [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else\
    \ 'E]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list\
    \ 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp80s9to5p.rkt:47:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp80s9to5p.rkt:48:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp80s9to5p.rkt:49:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp80s9to5p.rkt:50:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp80s9to5p.rkt:51:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp80s9to5p.rkt:52:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; grade_equation([4.0, 3, 1.7,\
    \ 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n(define (numerical_letter_grade grades)\n\
    \  (map (lambda (x)\n         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7)\
    \ 'A]\n               [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n    \
    \           [(>= x 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>=\
    \ x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n\
    \               [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n           \
    \    [(>= x 0.0) 'D-]\n               [else 'E]))\n       grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghzwsk9z.rkt:46:4

    actual:     ''(A+ B+ C C+ A-)

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghzwsk9z.rkt:47:4

    actual:     ''(D+)

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghzwsk9z.rkt:48:4

    actual:     ''(D-)

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghzwsk9z.rkt:49:4

    actual:     ''(D-)

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghzwsk9z.rkt:50:4

    actual:     ''(D+ D- C- B A-)

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpghzwsk9z.rkt:51:4

    actual:     ''(D- D)

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''

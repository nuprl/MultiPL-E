name: HumanEval_43_pairs_sum_to_zero
language: racket
prompt: "#lang racket\n\n;; pairs_sum_to_zero takes a list of integers as an input.\n\
  ;; it returns True if there are two distinct elements in the list that\n;; sum to\
  \ zero, and False otherwise.\n;; >>> pairs_sum_to_zero([1, 3, 5, 0])\n;; False\n\
  ;; >>> pairs_sum_to_zero([1, 3, -2, 1])\n;; False\n;; >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n;; False\n;; >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n;; True\n\
  ;; >>> pairs_sum_to_zero([1])\n;; False\n(define (pairs_sum_to_zero l)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate pairs_sum_to_zero))\n\
  \    (check-equal? (candidate (list 1 3 5 0)) #f)\n    (check-equal? (candidate\
  \ (list 1 3 -2 1)) #f)\n    (check-equal? (candidate (list 1 2 3 7)) #f)\n    (check-equal?\
  \ (candidate (list 2 4 -5 3 5 7)) #t)\n    (check-equal? (candidate (list 1)) #f)\n\
  \    (check-equal? (candidate (list -3 9 -1 3 2 30)) #t)\n    (check-equal? (candidate\
  \ (list -3 9 -1 3 2 31)) #t)\n    (check-equal? (candidate (list -3 9 -1 4 2 30))\
  \ #f)\n    (check-equal? (candidate (list -3 9 -1 4 2 31)) #f)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero?\
    \ (sum (first l) (second l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond [(empty? l) false]\n        [(empty? (rest l)) false]\n        [(= (sum\
    \ (first l) (first (rest l))) 0) true]\n        [else (pairs_sum_to_zero (rest\
    \ l))]))\n", "  (define (helper l)\n    (cond\n      [(empty? l) #f]\n      [(member\
    \ (first l) (rest l)) #t]\n      [else (helper (rest l))]))\n  (helper (map (lambda\
    \ (x) (- 0 x)) l)))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l))\
    \ #f]\n    [(= (sum (first l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(= (sum (first l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(member (add1 (first l)) (rest l)) #t]\n    [else (pairs_sum_to_zero (rest\
    \ l))]))\n", "  (define (helper l)\n    (cond\n      [(empty? l) #f]\n      [(empty?\
    \ (rest l)) #f]\n      [(zero? (+ (first l) (first (rest l)))) #t]\n      [else\
    \ (helper (rest l))]))\n  (helper l))\n", "  (cond\n    [(empty? l) #f]\n    [(empty?\
    \ (rest l)) #f]\n    [(member (sub1 (first l) (second l)) (rest (rest l))) #t]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n\
    \    [(empty? (rest l)) #f]\n    [(= (sum (first l) (second l)) 0) #t]\n    [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty?\
    \ (rest l)) false]\n    [(zero? (sum (first l) (first (rest l)))) true]\n    [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty?\
    \ (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(= (abs (first l)) (abs (first (rest l)))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(member (sub1 (first l) (second l)) (rest (rest l))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(= (abs (first l)) (abs (second l))) #t]\n    [else (pairs_sum_to_zero (rest\
    \ l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member\
    \ (add1 (first l)) (rest l)) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member (sub1 (first\
    \ l) (second l)) (rest (rest l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(and (member (car l) (cdr l))\n          (not\
    \ (zero? (car l)))) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(null? l) #f]\n    [(null? (cdr l)) #f]\n    [(= (abs (car l)) (abs (car (cdr\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(= (length l) 1) #f]\n    [(member (car l) (cdr l)) #t]\n    [else\
    \ (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty?\
    \ (rest l)) #f]\n    [(zero? (sum (first l) (first (rest l)))) #t]\n    [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(null? l) #f]\n    [(= (length\
    \ l) 1) #f]\n    [(member (- (car l) (cadr l)) (cdr l)) #t]\n    [else (pairs_sum_to_zero\
    \ (cdr l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (apply + (map (lambda (x) (if (equal? x (first l)) 0 x)) l))) #t]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(null? l) #f]\n\
    \    [(null? (cdr l)) #f]\n    [(= (car l) (- (car (cdr l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (cdr l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(member (- (first l)) (rest l)) #t]\n    [else (pairs_sum_to_zero (rest\
    \ l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero?\
    \ (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(and (member (first l) (rest l)) (not (zero?\
    \ (first l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n \
    \   [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(member (add1 (first\
    \ l)) (rest l)) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member (add1 (first l))\
    \ (rest l)) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first l) (first (rest\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (modulo (first l) 2)) #f]\n\
    \    [(zero? (modulo (second l) 2)) #f]\n    [else #t]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (modulo (first l) 2)) #f]\n\
    \    [(zero? (modulo (first (rest l)) 2)) #f]\n    [else #t]))\n", "  (cond\n\
    \    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= (sum (first l)\
    \ (first (rest l))) 0) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= 0 (+ (first\
    \ l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum (first\
    \ l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (add (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (define (helper l)\n    (cond\n      [(empty? l) #f]\n      [(empty? (rest l))\
    \ #f]\n      [(= (sum (first l) (first (rest l))) 0) #t]\n      [else (helper\
    \ (rest l))]))\n  (helper l))\n", "  (cond\n    [(empty? l) #f]\n    [(empty?\
    \ (rest l)) #f]\n    [(= (sum (first l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(null? l) #f]\n    [(null? (cdr l)) #f]\n  \
    \  [(= 0 (+ (car l) (car (cdr l)))) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(= (length l) 1) #f]\n    [(member (- (first\
    \ l)) (rest l)) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum (first l) (first\
    \ (rest l))) 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= (abs (first l))\
    \ (abs (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum (first\
    \ l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (abs (first\
    \ l)) (abs (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= (sum (first\
    \ l) (first (rest l))) 0) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (define (helper l)\n    (cond\n      [(empty? l) #f]\n      [(empty? (rest l))\
    \ #f]\n      [(= 0 (+ (first l) (first (rest l)))) #t]\n      [else (helper (rest\
    \ l))]))\n  (helper l))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest\
    \ l)) #f]\n    [(zero? (sum (first l) (second l))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(= (sum (first l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond [(empty? l) #f]\n        [(empty? (rest l)) #f]\n\
    \        [(= 0 (+ (first l) (first (rest l)))) #t]\n        [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(member (sub1 (first l) (second l)) (rest (rest l))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(= (length l) 1) #f]\n\
    \    [(member (car l) (cdr l)) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= 0 (abs\
    \ (- (first l) (first (rest l))))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum (first l)\
    \ (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(null? l) #f]\n    [(null? (cdr l)) #f]\n    [(zero? (+ (car l) (car (cdr\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l))))\
    \ #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l)\
    \ #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l))))\
    \ #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l)\
    \ #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l))))\
    \ #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l)\
    \ #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first l) (first (rest l))))\
    \ #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l)\
    \ #f]\n    [(empty? (rest l)) #f]\n    [(= 0 (abs (- (first l) (first (rest l)))))\
    \ #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l)\
    \ false]\n    [(empty? (rest l)) false]\n    [(member (add1 (first l)) (rest l))\
    \ true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(= (length l) 1) #f]\n    [(member (car l) (cdr l)) #t]\n    [else\
    \ (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(null? l) #f]\n    [(null?\
    \ (cdr l)) #f]\n    [(member (- (car l)) (cdr l)) #t]\n    [else (pairs_sum_to_zero\
    \ (cdr l))]))\n", "  (define (helper l)\n    (cond\n      [(empty? l) #f]\n  \
    \    [(member (car l) (cdr l)) #t]\n      [else (helper (cdr l))]))\n  (helper\
    \ l))\n", "  (cond\n    [(empty? l) #f]\n    [(= (length l) 1) #f]\n    [(member\
    \ (car l) (cdr l)) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first l) (second\
    \ l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum (first l) (first\
    \ (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(member (zero? (-\
    \ (first l) (first (rest l)))) l) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= 0 (abs (- (first\
    \ l) (first (rest l))))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(null? l) #f]\n    [(and (member (car l) (cdr l)) (not (zero? (car\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty?\
    \ l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum (first l) (first\
    \ (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(null? l) #f]\n    [(null? (cdr l)) #f]\n    [(zero? (+ (car l) (car (cdr\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty?\
    \ l) false]\n    [(empty? (rest l)) false]\n    [(= (sum (first l) (first (rest\
    \ l))) 0) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(= (length l) 1) #f]\n    [(member (car l) (cdr l)) #t]\n    [else\
    \ (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty?\
    \ (rest l)) false]\n    [(zero? (remainder (first l) (second l))) true]\n    [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty?\
    \ (rest l)) false]\n    [(= (sum (first l) (first (rest l))) 0) true]\n    [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty?\
    \ (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (define (pairs_sum_to_zero_helper l)\n    (cond\n      [(empty?\
    \ l) #f]\n      [(member (- (first l)) (rest l)) #t]\n      [else (pairs_sum_to_zero_helper\
    \ (rest l))]))\n  (pairs_sum_to_zero_helper l))\n", "  (cond\n    [(empty? l)\
    \ false]\n    [(empty? (rest l)) false]\n    [(zero? (sum (first l) (first (rest\
    \ l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(= (length l) 1) #f]\n    [(member (car l) (cdr l)) #t]\n    [else\
    \ (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty? l) false]\n    [(=\
    \ (length l) 1) false]\n    [else\n     (let ([first (first l)]\n           [rest\
    \ (rest l)])\n       (or (pairs_sum_to_zero rest)\n           (or (member (- first)\
    \ rest)\n               (member (- first) (rest rest))\n               (member\
    \ (- first) (rest (rest rest))))))]))\n", "  (cond\n    [(empty? l) false]\n \
    \   [(empty? (rest l)) false]\n    [(= (sum (first l) (first (rest l))) 0) true]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n\
    \    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l)))) #t]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n\
    \    [(empty? (rest l)) #f]\n    [(member (sub1 (first l) (second l)) (rest (rest\
    \ l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum (first l) (first\
    \ (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n  \
    \  [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= (sum (first l) (second\
    \ l)) 0) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(member (sub1 (first l) (second l))\
    \ (rest (rest l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first\
    \ (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (define (helper\
    \ l)\n    (cond\n      [(empty? l) #f]\n      [(empty? (rest l)) #f]\n      [(zero?\
    \ (+ (first l) (first (rest l)))) #t]\n      [else (helper (rest l))]))\n  (helper\
    \ l))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum\
    \ (first l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member (sub1 (first\
    \ l) (second l)) (rest (rest l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (add1 (first\
    \ l) (second l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= 0 (abs\
    \ (- (first l) (first (rest l))))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (add\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (define (helper l)\n    (cond\n      [(empty? l) #f]\n      [(member (car l)\
    \ (cdr l)) #t]\n      [else (helper (cdr l))]))\n  (helper l))\n", "  (if (null?\
    \ l)\n      #f\n      (or (member (- (car l)) (cdr l))\n          (pairs_sum_to_zero\
    \ (cdr l)))))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(zero? (sum (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond [(empty? l) #f]\n        [(empty? (rest l)) #f]\n\
    \        [(zero? (+ (first l) (first (rest l)))) #t]\n        [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(member (sub1 (first l) (second l)) (rest (rest l))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (add1 (first l) (second l))) #t]\n    [else (pairs_sum_to_zero (rest\
    \ l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member\
    \ (sum (first l) (first (rest l))) (rest (rest l))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond [(empty? l) #f]\n        [(and (member (first l) (rest\
    \ l))\n              (zero? (- (first l) (first (rest l))))) #t]\n        [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty?\
    \ (rest l)) #f]\n    [(zero? (sum (first l) (first (rest l)))) #t]\n    [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (cond [(empty? l) false]\n        [(empty?\
    \ (rest l)) false]\n        [(= (sum (first l) (first (rest l))) 0) true]\n  \
    \      [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) false]\n\
    \    [(empty? (rest l)) false]\n    [(zero? (sum (first l) (first (rest l))))\
    \ true]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first l) (first (rest\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (define (helper\
    \ l)\n    (cond\n      [(empty? l) #f]\n      [(empty? (rest l)) #f]\n      [(=\
    \ 0 (+ (first l) (first (rest l)))) #t]\n      [else (helper (rest l))]))\n  (helper\
    \ l))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum\
    \ (first l) (first (rest l))) 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond [(empty? l) false]\n        [(empty? (rest l)) false]\n        [(or (member\
    \ (add1 (first l)) (rest l))\n             (member (sub1 (first l)) (rest l)))\n\
    \         true]\n        [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum (first\
    \ l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (+\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member (add1 (first\
    \ l)) (rest l)) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(and (member (car l) (cdr l)) (not (zero? (car l))))\
    \ #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(empty? l)\
    \ #f]\n    [(empty? (rest l)) #f]\n    [(member (add1 (first l)) (rest l)) #t]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n\
    \    [(empty? (rest l)) #f]\n    [(= (sum (first l) (first (rest l))) 0) #t]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n\
    \    [(= (length l) 1) #f]\n    [(= (length l) 2) (or (= (car l) (cadr l)) (=\
    \ (car l) (- (cadr l))))]\n    [else\n     (or (pairs_sum_to_zero (cdr l))\n \
    \        (pairs_sum_to_zero (cons (car l) (cddr l))))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first l) (first (rest\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (define (helper\
    \ l)\n    (cond\n      [(empty? l) #f]\n      [(empty? (rest l)) #f]\n      [(zero?\
    \ (+ (first l) (first (rest l)))) #t]\n      [else (helper (rest l))]))\n  (helper\
    \ l))\n", "  (cond\n    [(empty? l) false]\n    [(= (length l) 1) false]\n   \
    \ [else\n     (or\n      (member 0 l)\n      (or\n       (pairs_sum_to_zero (cdr\
    \ l))\n       (pairs_sum_to_zero (cdr (cdr l)))\n       (member (- (car l) (car\
    \ (cdr l))) (cdr (cdr l)))\n       (member (+ (car l) (car (cdr l))) (cdr (cdr\
    \ l)))))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(= 0 (abs (- (first l) (first (rest l))))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (sum (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(zero? (+ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(member (add1 (first l)) (rest l)) true]\n    [else (pairs_sum_to_zero (rest\
    \ l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(member (sub1 (first l) (second l)) (rest (rest l))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (+ (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(= (first l) 0) true]\n    [(= (first l) (- 0 (first (rest l)))) true]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond [(empty? l) false]\n \
    \       [(empty? (rest l)) false]\n        [(= (sum (first l) (first (rest l)))\
    \ 0) true]\n        [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum (first l) (first (rest l)))\
    \ 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond [(empty? l) false]\n\
    \        [(empty? (rest l)) false]\n        [(= (sum (first l) (first (rest l)))\
    \ 0) true]\n        [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty?\
    \ l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l))))\
    \ #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l)\
    \ #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first l) (first (rest l))))\
    \ #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n    [(empty? l)\
    \ #f]\n    [(empty? (rest l)) #f]\n    [(= (abs (first l)) (abs (second l))) #t]\n\
    \    [else (pairs_sum_to_zero (rest l))]))\n", "  (define (helper l)\n    (cond\n\
    \      [(empty? l) #f]\n      [(empty? (rest l)) #f]\n      [(= (sum (first l)\
    \ (first (rest l))) 0) #t]\n      [else (helper (rest l))]))\n  (helper l))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= (abs (first\
    \ l)) (abs (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member (- (first\
    \ l)) (rest l)) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (add1 (list-ref\
    \ l 0) (list-ref l 1))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= (sum (first\
    \ l) (first (rest l))) 0) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(= (length l) 1) false]\n    [else\n    \
    \ (or (pairs_sum_to_zero (rest l))\n         (member (abs (first l)) (rest l)))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (sum (first\
    \ l) (second l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(= (sum (first l) (first\
    \ (rest l))) 0) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", "  (cond\n\
    \    [(null? l) #f]\n    [(null? (cdr l)) #f]\n    [(zero? (+ (car l) (car (cdr\
    \ l)))) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n", "  (cond\n    [(null?\
    \ l) #f]\n    [(member (car l) (cdr l)) #t]\n    [else (pairs_sum_to_zero (cdr\
    \ l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(zero? (+ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(zero? (add1 (first l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(= (length l) 1) #f]\n\
    \    [(member (car l) (cdr l)) #t]\n    [else (pairs_sum_to_zero (cdr l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(= (abs (first\
    \ l)) (abs (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n", " \
    \ (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n    [(zero? (sum\
    \ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) false]\n    [(= (length l) 1) false]\n    [else\n    \
    \ (or (pairs_sum_to_zero (rest l))\n         (member (zero? (add1 (first l) (first\
    \ (rest l)))) l))]))\n", "  (cond\n    [(null? l) #f]\n    [(null? (cdr l)) #f]\n\
    \    [(or (member (- (car l) (car (cdr l))) (cdr (cdr l)))\n         (member (-\
    \ (car l) (car (cdr l))) (cdr (cdr l)))) #t]\n    [else (pairs_sum_to_zero (cdr\
    \ l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(zero? (+ (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) false]\n    [(empty? (rest l)) false]\n\
    \    [(zero? (sum (first l) (first (rest l)))) true]\n    [else (pairs_sum_to_zero\
    \ (rest l))]))\n", "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n\
    \    [(member (sub1 (first l) (first (rest l))) (rest (rest l))) #t]\n    [else\
    \ (pairs_sum_to_zero (rest l))]))\n", "  (define (helper l)\n    (cond\n     \
    \ [(empty? l) #f]\n      [(empty? (rest l)) #f]\n      [(= (sum (first l) (first\
    \ (rest l))) 0) #t]\n      [else (helper (rest l))]))\n  (helper l))\n", "  (cond\n\
    \    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(member (sub1 (first l)\
    \ (second l)) (rest (rest l))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n",
  "  (cond\n    [(empty? l) #f]\n    [(empty? (rest l)) #f]\n    [(zero? (+ (first\
    \ l) (first (rest l)))) #t]\n    [else (pairs_sum_to_zero (rest l))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

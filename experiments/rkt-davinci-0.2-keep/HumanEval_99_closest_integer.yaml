name: HumanEval_99_closest_integer
language: racket
prompt: "#lang racket\n\n;; Create a function that takes a value (string) representing\
  \ a number\n;; and returns the closest integer to it. If the number is equidistant\n\
  ;; from two integers, round it away from zero.\n;; Examples\n;; >>> closest_integer(\"\
  10\")\n;; 10\n;; >>> closest_integer(\"15.3\")\n;; 15\n;; Note:\n;; Rounding away\
  \ from zero means that if the given number is equidistant\n;; from two integers,\
  \ the one you should return is the one that is the\n;; farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n;; return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\n(define (closest_integer value)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate closest_integer))\n\
  \    (check-equal? (candidate \"10\") 10)\n    (check-equal? (candidate \"14.5\"\
  ) 15)\n    (check-equal? (candidate \"-15.5\") -16)\n    (check-equal? (candidate\
  \ \"15.3\") 15)\n    (check-equal? (candidate \"0\") 0)\n))\n\n(test-humaneval)"
completions: ["  (round (string->number value)))\n", "  (round (string->number value)))\n",
  "  (define (closest-integer-helper value)\n    (cond ((= (remainder value 1) 0)\
    \ (round value))\n          ((< (remainder value 1) 0.5) (round (- value (remainder\
    \ value 1))))\n          (else (round (+ value (- 1 (remainder value 1)))))))\n\
    \  (closest-integer-helper (string->number value)))\n", "  (let ((num (string->number\
    \ value)))\n    (if (negative? num)\n        (round (add1 num))\n        (round\
    \ num))))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (let* ([num (string->number value)]\n         [int (round num)])\n\
    \    (if (and (integer? num) (not (zero? num)))\n        num\n        int)))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (if (negative? (string->number value))\n      (- (round (string->number value)))\n\
    \      (round (string->number value))))\n", "  (define (round-away-from-zero value)\n\
    \    (cond\n      [(< value 0) (round (- value) 0)]\n      [else (round value\
    \ 0)]))\n  (round-away-from-zero (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (cond\n    [(< (string->number value) 0) (round (string->number\
    \ value) -1)]\n    [else (round (string->number value) 1)]))\n", "  (cond\n  \
    \  [(= (round value) value) (round value)]\n    [(< (round value) value) (round\
    \ value)]\n    [(> (round value) value) (round value)]))\n", "  (round (string->number\
    \ value)))\n", "  (define (round-away-from-zero x)\n    (if (negative? x)\n  \
    \      (round (- x 0.5))\n        (round (+ x 0.5))))\n  (round-away-from-zero\
    \ (string->number value)))\n", "  (round value))\n", "  (let ([value (string->number\
    \ value)])\n    (if (negative? value)\n        (- (round (abs value)))\n     \
    \   (round value))))\n", "  (cond\n    [(< (string->number value) 0)\n     (-\
    \ (round (string->number value)))]\n    [else\n     (round (string->number value))]))\n",
  "  (round value))\n", "  (cond\n    [(= (remainder (string->number value) 1) 0)\n\
    \     (string->number value)]\n    [(> (remainder (string->number value) 1) 0)\n\
    \     (add1 (floor (string->number value)))]\n    [(< (remainder (string->number\
    \ value) 1) 0)\n     (floor (string->number value))]))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (cond\n    [(string=?\
    \ value \"0\") 0]\n    [(string=? value \"0.0\") 0]\n    [(string=? value \"0.00\"\
    ) 0]\n    [(string=? value \"0.000\") 0]\n    [(string=? value \"0.0000\") 0]\n\
    \    [(string=? value \"0.00000\") 0]\n    [(string=? value \"0.000000\") 0]\n\
    \    [(string=? value \"0.0000000\") 0]\n    [(string=? value \"0.00000000\")\
    \ 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=? value \"0.0000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000\") 0]\n    [(string=? value \"0.000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000\") 0]\n    [(string=? value \"0.00000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000\") 0]\n    [(string=? value \"\
    0.0000000000000000\") 0]\n    [(string=? value \"0.00000000000000000\") 0]\n \
    \   [(string=? value \"0.000000000000000000\") 0]\n    [(string=? value \"0.0000000000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000000000\") 0]\n    [(string=? value\
    \ \"0.000000000000000000000\") 0]\n    [(string=? value \"0.0000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.000000000000000000000000\") 0]\n    [(string=? value \"0.0000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.000000000000000000000000000\") 0]\n    [(string=? value \"0.0000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.000000000000000000000000000000\") 0]\n    [(string=? value \"0.0000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.000000000000000000000000000000000\") 0]", "  (cond\n    [(= (modulo\
    \ (string->number value) 1) 0) (string->number value)]\n    [(> (modulo (string->number\
    \ value) 1) 0) (round (string->number value))]\n    [(< (modulo (string->number\
    \ value) 1) 0) (round (string->number value))]))\n", "  (cond\n    [(< value 0)\
    \ (- (round value))]\n    [else (round value)]))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (cond\n    [(= (modulo\
    \ (string->number value) 1) 0) (string->number value)]\n    [(> (modulo (string->number\
    \ value) 1) 0) (round (string->number value))]\n    [(< (modulo (string->number\
    \ value) 1) 0) (round (string->number value))]))\n", "  (let ([num (string->number\
    \ value)])\n    (if (negative? num)\n        (- (round (abs num)))\n        (round\
    \ num))))\n", "  (let ([value (string->number value)])\n    (if (negative? value)\n\
    \        (- (round (abs value)))\n        (round value))))\n", "  (let ([v (string->number\
    \ value)])\n    (if (negative? v)\n        (- (round v))\n        (round v))))\n",
  "  (if (positive? (string->number value))\n      (round (string->number value))\n\
    \      (round (string->number value) -1)))\n", "  (cond\n    [(> (string->number\
    \ value) 0)\n     (round (string->number value))]\n    [(< (string->number value)\
    \ 0)\n     (round (string->number value))]\n    [else\n     (round (string->number\
    \ value))]))\n", "  (let ([number (string->number value)])\n    (if (negative?\
    \ number)\n        (- (round (abs number)))\n        (round number))))\n", " \
    \ (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (if (negative? (string->number value))\n      (- (round (string->number value)))\n\
    \      (round (string->number value))))\n", "  (round (string->number value)))\n",
  "  (define (closest_integer-helper value)\n    (cond\n      [(= (remainder value\
    \ 1) 0) (quotient value 1)]\n      [(> (remainder value 1) 0) (quotient (+ value\
    \ 1) 1)]\n      [(< (remainder value 1) 0) (quotient (- value 1) 1)]))\n  (closest_integer-helper\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (if (positive?\
    \ (string->number value))\n      (round (string->number value))\n      (round\
    \ (string->number value) -1)))\n", "  (cond\n    [(< value 0) (round (- value))]\n\
    \    [else (round value)]))\n", "  (round (string->number value)))\n", "  (cond\n\
    \    [(string=? value \"0\") 0]\n    [(string=? value \"0.0\") 0]\n    [(string=?\
    \ value \"0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=? value\
    \ \"0.0000\") 0]\n    [(string=? value \"0.00000\") 0]\n    [(string=? value \"\
    0.000000\") 0]\n    [(string=? value \"0.0000000\") 0]\n    [(string=? value \"\
    0.00000000\") 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000\") 0]\n    [(string=? value \"0.00000000000\") 0]\n    [(string=?\
    \ value \"0.000000000000\") 0]\n    [(string=? value \"0.0000000000000\") 0]\n\
    \    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"0.000000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000000\") 0]\n    [(string=? value \"\
    0.00000000000000000\") 0]\n    [(string=? value \"0.000000000000000000\") 0]\n\
    \    [(string=? value \"0.0000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000000\") 0]", "  (cond\n\
    \    [(< (string->number value) 0)\n     (- (round (string->number value)))]\n\
    \    [else\n     (round (string->number value))]))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (let ([num (string->number\
    \ value)])\n    (if (zero? (modulo num 1))\n        num\n        (if (< num 0)\n\
    \            (floor num)\n            (ceiling num)))))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (cond\n    [(= (round value) value) (round value)]\n    [(>\
    \ (round value) value) (round value)]\n    [(< (round value) value) (round value)]))\n",
  "  (cond\n    [(= (remainder (string->number value) 1) 0) (string->number value)]\n\
    \    [(> (remainder (string->number value) 1) 0) (round (string->number value))]\n\
    \    [(< (remainder (string->number value) 1) 0) (round (string->number value))]))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (define (round-away-from-zero n)\n  \
    \  (if (negative? n)\n        (round n)\n        (add1 (round n))))\n  (round-away-from-zero\
    \ (string->number value)))\n", "  (if (string=? (substring value -1) \".\")\n\
    \      (string->number (substring value 0 -1))\n      (string->number value)))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (cond\n    [(< (string->number value)\
    \ 0) (round (string->number value) -1)]\n    [else (round (string->number value)\
    \ 1)]))\n", "  (cond\n    [(string=? value \"10\") 10]\n    [(string=? value \"\
    15.3\") 15]\n    [(string=? value \"14.5\") 15]\n    [(string=? value \"-14.5\"\
    ) -15]\n    [else 0]))\n", "  (define (closest_integer-helper value)\n    (cond\n\
    \      [(< value 0) (- (closest_integer-helper (- value))) ]\n      [(> value\
    \ 0) (round value) ]\n      [else 0]))\n  (closest_integer-helper (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (let* ([num (string->number value)]\n         [int (inexact->exact\
    \ (round num))])\n    (if (and (integer? num) (integer? int))\n        int\n \
    \       (if (and (integer? num) (not (integer? int)))\n            num\n     \
    \       (if (and (not (integer? num)) (integer? int))\n                int\n \
    \               (if (and (not (integer? num)) (not (integer? int)))\n        \
    \            (if (and (> num 0) (< num 1))\n                        (if (> (-\
    \ num 0.5) 0)\n                            0\n                            1)\n\
    \                        (if (< num 0)\n                            (if (> (-\
    \ num 0.5) 0)\n                                -1\n                          \
    \      0)\n                            (if (> (- num 0.5) 0)\n               \
    \                 (floor num)\n                                (ceiling num)))))))))\n",
  "  (round (string->number value)))\n", "  (cond\n    [(string=? value \"10\") 10]\n\
    \    [(string=? value \"15.3\") 15]\n    [(string=? value \"14.5\") 15]\n    [(string=?\
    \ value \"-14.5\") -15]\n    [else (error 'closest_integer \"unknown value\")]))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (cond\n    [(string=? value \"0\") 0]\n    [(string=? value \"0.0\") 0]\n  \
    \  [(string=? value \"0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=?\
    \ value \"0.0000\") 0]\n    [(string=? value \"0.00000\") 0]\n    [(string=? value\
    \ \"0.000000\") 0]\n    [(string=? value \"0.0000000\") 0]\n    [(string=? value\
    \ \"0.00000000\") 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000\") 0]\n    [(string=? value \"0.00000000000\") 0]\n   \
    \ [(string=? value \"0.000000000000\") 0]\n    [(string=? value \"0.0000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"0.000000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000000\") 0]\n    [(string=? value \"\
    0.00000000000000000\") 0]\n    [(string=? value \"0.000000000000000000\") 0]\n\
    \    [(string=? value \"0.0000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000000\") 0]", "  (cond\n\
    \    [(string=? value \"0\") 0]\n    [(string=? value \"0.0\") 0]\n    [(string=?\
    \ value \"0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=? value\
    \ \"0.0000\") 0]\n    [(string=? value \"0.00000\") 0]\n    [(string=? value \"\
    0.000000\") 0]\n    [(string=? value \"0.0000000\") 0]\n    [(string=? value \"\
    0.00000000\") 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000\") 0]\n    [(string=? value \"0.00000000000\") 0]\n    [(string=?\
    \ value \"0.000000000000\") 0]\n    [(string=? value \"0.0000000000000\") 0]\n\
    \    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"0.000000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000000\") 0]\n    [(string=? value \"\
    0.00000000000000000\") 0]\n    [(string=? value \"0.000000000000000000\") 0]\n\
    \    [(string=? value \"0.0000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000000\") 0]", "  (round\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (define\
    \ (round-away-from-zero num)\n    (if (negative? num)\n        (round (add1 num))\n\
    \        (round num)))\n  (round-away-from-zero (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (let ([value (string->number value)])\n\
    \    (if (negative? value)\n        (- (round (abs value)))\n        (round value))))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (cond\n    [(string=? value \"10\") 10]\n    [(string=? value \"15.3\") 15]\n\
    \    [(string=? value \"14.5\") 15]\n    [(string=? value \"-14.5\") -15]\n  \
    \  [else (error 'closest_integer \"unknown value\")]))\n", "  (define (closest_integer-helper\
    \ value)\n    (if (integer? value)\n        value\n        (closest_integer-helper\
    \ (round value))))\n  (closest_integer-helper (string->number value)))\n", " \
    \ (if (positive? (string->number value))\n      (round (string->number value))\n\
    \      (round (string->number value) -1)))\n", "  (round (string->number value)))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (define (round-away-from-zero x)\n  \
    \  (cond\n      [(< x 0) (- (round x))]\n      [else (round x)]))\n  (round-away-from-zero\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (round\
    \ (string->number value)))\n", "  (let* ([value-number (string->number value)]\n\
    \         [value-integer (round value-number)])\n    (if (and (number? value-number)\n\
    \             (= value-number value-integer))\n        value-integer\n       \
    \ (if (< value-number 0)\n            (floor value-number)\n            (ceiling\
    \ value-number)))))\n", "  (let* ([num (string->number value)]\n         [int\
    \ (round num)])\n    (if (and (integer? num)\n             (integer? int))\n \
    \       int\n        (if (> num 0)\n            (ceiling num)\n            (floor\
    \ num)))))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (if (negative? (string->number\
    \ value))\n      (- (round (string->number value)))\n      (round (string->number\
    \ value))))\n", "  (cond\n    [(< (string->number value) 0) (- (round (string->number\
    \ value)))]\n    [else (round (string->number value))]))\n", "  (define (round-away-from-zero\
    \ value)\n    (if (negative? value)\n        (round (- value) 0)\n        (round\
    \ value 0)))\n  (round-away-from-zero (string->number value)))\n", "  (define\
    \ (round-away-from-zero x)\n    (if (negative? x)\n        (round (- x 0.5))\n\
    \        (round (+ x 0.5))))\n  (round-away-from-zero (string->number value)))\n",
  "  (round (string->number value)))\n", "  (cond\n    [(string=? value \"0\") 0]\n\
    \    [(string=? value \"-0\") 0]\n    [(string=? value \"0.0\") 0]\n    [(string=?\
    \ value \"-0.0\") 0]\n    [(string=? value \"0.00\") 0]\n    [(string=? value\
    \ \"-0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=? value \"-0.000\"\
    ) 0]\n    [(string=? value \"0.0000\") 0]\n    [(string=? value \"-0.0000\") 0]\n\
    \    [(string=? value \"0.00000\") 0]\n    [(string=? value \"-0.00000\") 0]\n\
    \    [(string=? value \"0.000000\") 0]\n    [(string=? value \"-0.000000\") 0]\n\
    \    [(string=? value \"0.0000000\") 0]\n    [(string=? value \"-0.0000000\")\
    \ 0]\n    [(string=? value \"0.00000000\") 0]\n    [(string=? value \"-0.00000000\"\
    ) 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=? value \"-0.000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000\") 0]\n    [(string=? value \"-0.0000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000\") 0]\n    [(string=? value \"-0.00000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000\") 0]\n    [(string=? value \"-0.000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000\") 0]\n    [(string=? value \"-0.0000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"-0.00000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000\") 0]\n    [(string=? value \"\
    -0.000000000000000\") 0]\n    [(string=? value \"0.0000000000000000\") 0]\n  \
    \  [(string=? value \"-0.0000000000000000\") 0]\n    [(string=? value \"0.00000000000000000\"\
    ) 0]\n    [(string=?", "  (if (string=? (substring value (sub1 (string-length\
    \ value)) (string-length value)) \".\")\n      (string->number (substring value\
    \ 0 (sub1 (string-length value))))\n      (string->number value)))\n", "  (round\
    \ (string->number value)))\n", "  (if (positive? (string->number value))\n   \
    \   (round (string->number value))\n      (round (string->number value) -1)))\n",
  "  (round (string->number value)))\n", "  (let* ((number (string->number value))\n\
    \         (integer (round number)))\n    integer))\n", "  (round (string->number\
    \ value)))\n", "  (define (round-away-from-zero x)\n    (if (negative? x)\n  \
    \      (round (- x 0.5))\n        (round (+ x 0.5))))\n  (round-away-from-zero\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (cond\n\
    \    [(= (string->number value) (floor (string->number value)))\n     (floor (string->number\
    \ value))]\n    [(> (string->number value) (floor (string->number value)))\n \
    \    (ceiling (string->number value))]\n    [(< (string->number value) (floor\
    \ (string->number value)))\n     (floor (string->number value))]))\n", "  (round\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (round\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (cond\n\
    \    [(= (remainder (string->number value) 1) 0)\n     (string->number value)]\n\
    \    [(> (remainder (string->number value) 1) 0)\n     (round (string->number\
    \ value))]\n    [(< (remainder (string->number value) 1) 0)\n     (round (string->number\
    \ value))]))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (define (round-away-from-zero\
    \ n)\n    (if (< n 0)\n        (round (add1 n))\n        (round n)))\n  (round-away-from-zero\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (define\
    \ (round-away-from-zero x)\n    (if (negative? x)\n        (round (- x 0.5))\n\
    \        (round (+ x 0.5))))\n  (round-away-from-zero (string->number value)))\n",
  "  (cond\n    [(string=? value \"0\") 0]\n    [(string=? value \"1\") 1]\n    [(string=?\
    \ value \"2\") 2]\n    [(string=? value \"3\") 3]\n    [(string=? value \"4\"\
    ) 4]\n    [(string=? value \"5\") 5]\n    [(string=? value \"6\") 6]\n    [(string=?\
    \ value \"7\") 7]\n    [(string=? value \"8\") 8]\n    [(string=? value \"9\"\
    ) 9]\n    [(string=? value \"10\") 10]\n    [(string=? value \"11\") 11]\n   \
    \ [(string=? value \"12\") 12]\n    [(string=? value \"13\") 13]\n    [(string=?\
    \ value \"14\") 14]\n    [(string=? value \"15\") 15]\n    [(string=? value \"\
    16\") 16]\n    [(string=? value \"17\") 17]\n    [(string=? value \"18\") 18]\n\
    \    [(string=? value \"19\") 19]\n    [(string=? value \"20\") 20]\n    [(string=?\
    \ value \"21\") 21]\n    [(string=? value \"22\") 22]\n    [(string=? value \"\
    23\") 23]\n    [(string=? value \"24\") 24]\n    [(string=? value \"25\") 25]\n\
    \    [(string=? value \"26\") 26]\n    [(string=? value \"27\") 27]\n    [(string=?\
    \ value \"28\") 28]\n    [(string=? value \"29\") 29]\n    [(string=? value \"\
    30\") 30]\n    [(string=? value \"31\") 31]\n    [(string=? value \"32\") 32]\n\
    \    [(string=? value \"33\") 33]\n    [(string=? value \"34\") 34]\n    [(string=?\
    \ value \"35\") 35]\n    [(string=? value \"36\") 36]\n    [(string=? value \"\
    37\") 37]\n    [(string=? value \"38\") 38]\n    [(string=? value \"39\") 39]\n\
    \    [(string=? value \"40\") 40]\n    [(string=? value \"41\") 41]\n    [(string",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (cond\n    [(string=? value \"10\") 10]\n\
    \    [(string=? value \"15.3\") 15]\n    [(string=? value \"14.5\") 15]\n    [(string=?\
    \ value \"-14.5\") -15]\n    [else 0]))\n", "  (round (string->number value)))\n",
  "  (cond\n    [(string=? value \"10\") 10]\n    [(string=? value \"15.3\") 15]\n\
    \    [(string=? value \"14.5\") 15]\n    [(string=? value \"-14.5\") -15]\n  \
    \  [else (error 'closest_integer \"unknown value\")]))\n", "  (round (string->number\
    \ value)))\n", "  (if (negative? (string->number value))\n      (- (round (string->number\
    \ value)))\n      (round (string->number value))))\n", "  (define (round-away-from-zero\
    \ x)\n    (if (negative? x)\n        (round (- x 0.5))\n        (round (+ x 0.5))))\n\
    \  (round-away-from-zero (string->number value)))\n", "  (round value))\n", " \
    \ (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (cond\n    [(string=? value \"0\") 0]\n    [(string=? value \"0.0\") 0]\n  \
    \  [(string=? value \"0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=?\
    \ value \"0.0000\") 0]\n    [(string=? value \"0.00000\") 0]\n    [(string=? value\
    \ \"0.000000\") 0]\n    [(string=? value \"0.0000000\") 0]\n    [(string=? value\
    \ \"0.00000000\") 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000\") 0]\n    [(string=? value \"0.00000000000\") 0]\n   \
    \ [(string=? value \"0.000000000000\") 0]\n    [(string=? value \"0.0000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"0.000000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000000\") 0]\n    [(string=? value \"\
    0.00000000000000000\") 0]\n    [(string=? value \"0.000000000000000000\") 0]\n\
    \    [(string=? value \"0.0000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000000\") 0]", "  (round\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (let*\
    \ ([number (string->number value)]\n         [integer (round number)])\n    integer))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (cond\n    [(string=? value \"0\") 0]\n\
    \    [(string=? value \"-0\") 0]\n    [(string=? value \"0.0\") 0]\n    [(string=?\
    \ value \"-0.0\") 0]\n    [(string=? value \"0.00\") 0]\n    [(string=? value\
    \ \"-0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=? value \"-0.000\"\
    ) 0]\n    [(string=? value \"0.0000\") 0]\n    [(string=? value \"-0.0000\") 0]\n\
    \    [(string=? value \"0.00000\") 0]\n    [(string=? value \"-0.00000\") 0]\n\
    \    [(string=? value \"0.000000\") 0]\n    [(string=? value \"-0.000000\") 0]\n\
    \    [(string=? value \"0.0000000\") 0]\n    [(string=? value \"-0.0000000\")\
    \ 0]\n    [(string=? value \"0.00000000\") 0]\n    [(string=? value \"-0.00000000\"\
    ) 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=? value \"-0.000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000\") 0]\n    [(string=? value \"-0.0000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000\") 0]\n    [(string=? value \"-0.00000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000\") 0]\n    [(string=? value \"-0.000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000\") 0]\n    [(string=? value \"-0.0000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"-0.00000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000\") 0]\n    [(string=? value \"\
    -0.000000000000000\") 0]\n    [(string=? value \"0.0000000000000000\") 0]\n  \
    \  [(string=? value \"-0.0000000000000000\") 0]\n    [(string=? value \"0.00000000000000000\"\
    ) 0]\n    [(string=?", "  (let* ([value (string->number value)]\n         [closest-integer\
    \ (round value)])\n    closest-integer))\n", "  (if (integer? value)\n      value\n\
    \      (if (positive? value)\n          (round value)\n          (round value))))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (let ([value (string->number value)])\n    (if (positive? value)\n        (round\
    \ value)\n        (round (- value)))))\n", "  (round (string->number value)))\n",
  "  (cond\n    [(string=? value \"0\") 0]\n    [(string=? value \"0.0\") 0]\n   \
    \ [(string=? value \"0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=?\
    \ value \"0.0000\") 0]\n    [(string=? value \"0.00000\") 0]\n    [(string=? value\
    \ \"0.000000\") 0]\n    [(string=? value \"0.0000000\") 0]\n    [(string=? value\
    \ \"0.00000000\") 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000\") 0]\n    [(string=? value \"0.00000000000\") 0]\n   \
    \ [(string=? value \"0.000000000000\") 0]\n    [(string=? value \"0.0000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"0.000000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000000\") 0]\n    [(string=? value \"\
    0.00000000000000000\") 0]\n    [(string=? value \"0.000000000000000000\") 0]\n\
    \    [(string=? value \"0.0000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000000\") 0]", "  (let\
    \ ([v (string->number value)])\n    (if (negative? v)\n        (- (round (abs\
    \ v)))\n        (round v))))\n", "  (round (string->number value)))\n", "  (round\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (round\
    \ (string->number value)))\n", "  (define (closest_integer-helper value)\n   \
    \ (if (positive? value)\n        (round value)\n        (round (- value))))\n\
    \  (closest_integer-helper (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (define (closest_integer-helper\
    \ value)\n    (cond\n      [(= value (floor value)) (floor value)]\n      [(=\
    \ value (ceiling value)) (ceiling value)]\n      [(< value 0) (closest_integer-helper\
    \ (+ value 1))]\n      [else (closest_integer-helper (- value 1))]))\n  (closest_integer-helper\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (round\
    \ (string->number value)))\n", "  (if (positive? (string->number value))\n   \
    \   (round (string->number value))\n      (round (string->number value) -1)))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (define (closest_integer-helper value)\n\
    \    (if (negative? value)\n        (closest_integer-helper (- value))\n     \
    \   (if (integer? value)\n            value\n            (if (or (= (remainder\
    \ value 1) 0.5)\n                    (= (remainder value 1) -0.5))\n         \
    \       (if (negative? (remainder value 1))\n                    (floor value)\n\
    \                    (ceiling value))\n                (round value)))))\n  (closest_integer-helper\
    \ (string->number value)))\n", "  (define (closest_integer-helper value)\n   \
    \ (cond ((< value 0) (round (- value)))\n          ((> value 0) (round value))\n\
    \          (else 0)))\n  (closest_integer-helper (string->number value)))\n",
  "  (if (positive? (string->number value))\n      (round (string->number value))\n\
    \      (round (string->number value) -1)))\n", "  (cond\n    [(< value 0)\n  \
    \   (round (add1 (string->number value)))\n     ]\n    [else\n     (round (string->number\
    \ value))\n     ]\n    )\n  )\n", "  (round (string->number value)))\n", "  (cond\n\
    \    [(string=? value \"0\") 0]\n    [(string=? value \"0.0\") 0]\n    [(string=?\
    \ value \"0.00\") 0]\n    [(string=? value \"0.000\") 0]\n    [(string=? value\
    \ \"0.0000\") 0]\n    [(string=? value \"0.00000\") 0]\n    [(string=? value \"\
    0.000000\") 0]\n    [(string=? value \"0.0000000\") 0]\n    [(string=? value \"\
    0.00000000\") 0]\n    [(string=? value \"0.000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000\") 0]\n    [(string=? value \"0.00000000000\") 0]\n    [(string=?\
    \ value \"0.000000000000\") 0]\n    [(string=? value \"0.0000000000000\") 0]\n\
    \    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"0.000000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000000\") 0]\n    [(string=? value \"\
    0.00000000000000000\") 0]\n    [(string=? value \"0.000000000000000000\") 0]\n\
    \    [(string=? value \"0.0000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000000\") 0]", "  (round\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (round\
    \ (string->number value)))\n", "  (round (string->number value)))\n", "  (let*\
    \ ([number (string->number value)]\n         [integer (round number)])\n    integer))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (let ([num (string->number value)])\n    (if (negative? num)\n        (- (round\
    \ num))\n        (round num))))\n", "  (cond\n    [(< (string->number value) 0)\n\
    \     (- (round (string->number value)))]\n    [else\n     (round (string->number\
    \ value))]))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (round (string->number value)))\n", "  (round (string->number\
    \ value)))\n", "  (cond\n    [(string=? value \"0\") 0]\n    [(string=? value\
    \ \"0.0\") 0]\n    [(string=? value \"0.00\") 0]\n    [(string=? value \"0.000\"\
    ) 0]\n    [(string=? value \"0.0000\") 0]\n    [(string=? value \"0.00000\") 0]\n\
    \    [(string=? value \"0.000000\") 0]\n    [(string=? value \"0.0000000\") 0]\n\
    \    [(string=? value \"0.00000000\") 0]\n    [(string=? value \"0.000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000\") 0]\n    [(string=? value \"0.00000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000\") 0]\n    [(string=? value \"0.0000000000000\"\
    ) 0]\n    [(string=? value \"0.00000000000000\") 0]\n    [(string=? value \"0.000000000000000\"\
    ) 0]\n    [(string=? value \"0.0000000000000000\") 0]\n    [(string=? value \"\
    0.00000000000000000\") 0]\n    [(string=? value \"0.000000000000000000\") 0]\n\
    \    [(string=? value \"0.0000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000\") 0]\n    [(string=? value\
    \ \"0.0000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000\") 0]\n    [(string=?\
    \ value \"0.0000000000000000000000000000000\") 0]\n    [(string=? value \"0.00000000000000000000000000000000\"\
    ) 0]\n    [(string=? value \"0.000000000000000000000000000000000\") 0]", "  (cond\n\
    \    [(string=? value \"10\") 10]\n    [(string=? value \"15.3\") 15]\n    [(string=?\
    \ value \"14.5\") 15]\n    [(string=? value \"-14.5\") -15]\n    [else 0]))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (if (positive? (string->number value))\n      (round (string->number value))\n\
    \      (round (string->number value) -1)))\n", "  (round (string->number value)))\n",
  "  (round (string->number value)))\n", "  (round (string->number value)))\n", " \
    \ (round (string->number value)))\n", "  (round (string->number value)))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

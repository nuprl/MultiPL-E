name: HumanEval_27_flip_case
language: racket
prompt: "#lang racket\n\n;; For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n;; >>> flip_case('Hello')\n;; 'hELLO'\n(define (flip_case\
  \ string)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate flip_case))\n\
  \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"Hello!\"\
  ) \"hELLO!\")\n    (check-equal? (candidate \"These violent delights have violent\
  \ ends\") \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\n))\n\n(test-humaneval)"
completions: ["  (string-map (lambda (c)\n                (if (char-lower-case? c)\n\
    \                    (char-upcase c)\n                    (char-downcase c)))\n\
    \              string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (char)\n                (if (char-lower-case? char)\n   \
    \                 (char-upcase char)\n                    (char-downcase char)))\n\
    \              string))\n", "  (string-map (lambda (c) (if (char-lower-case? c)\
    \ (char-upcase c) (char-downcase c))) string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (char)\n     (if (char-lower-case? char)\n         (char-upcase char)\n\
    \         (char-downcase char)))\n   string))\n", "  (string-map\n   (lambda (c)\n\
    \     (if (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase\
    \ c)))\n   string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (c)\n              \
    \  (if (char-lower-case? c)\n                    (char-upcase c)\n           \
    \         (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map (lambda (x) (if (char-lower-case? x) (char-upcase x) (char-downcase\
    \ x))) string))\n```\n\n```racket\n#lang racket\n", "  (string-map (lambda (c)\
    \ (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n", " \
    \ (string-map (lambda (c)\n                (if (char-lower-case? c)\n        \
    \            (char-upcase c)\n                    (char-downcase c)))\n      \
    \        string))\n", "  (string-map (lambda (char)\n                (if (char-lower-case?\
    \ char)\n                    (char-upcase char)\n                    (char-downcase\
    \ char)))\n              string))\n", "  (string-map (lambda (c)\n           \
    \     (if (char-lower-case? c)\n                    (char-upcase c)\n        \
    \            (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (for/list ([c (in-string string)])\n\
    \    (if (char-lower-case? c)\n        (char-upcase c)\n        (char-downcase\
    \ c))))\n", "  (string-map\n   (lambda (char)\n     (if (char-lower-case? char)\n\
    \         (char-upcase char)\n         (char-downcase char)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map\n   (lambda (c)\n     (if\
    \ (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase c)))\n\
    \   string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (c)\n              \
    \  (if (char-lower-case? c)\n                    (char-upcase c)\n           \
    \         (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (string-map (lambda (char)\n  \
    \              (if (char-lower-case? char)\n                    (char-upcase char)\n\
    \                    (char-downcase char)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (char)\n     (if (char-lower-case? char)\n         (char-upcase char)\n\
    \         (char-downcase char)))\n   string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map\n   (lambda (char)\n     (if (char-lower-case?\
    \ char)\n         (char-upcase char)\n         (char-downcase char)))\n   string))\n",
  "  (string-map (lambda (char)\n                (if (char-lower-case? char)\n   \
    \                 (char-upcase char)\n                    (char-downcase char)))\n\
    \              string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map\n   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase\
    \ c)\n         (char-downcase c)))\n   string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (map\
    \ (lambda (char)\n         (if (char-lower-case? char)\n             (char-upcase\
    \ char)\n             (char-downcase char)))\n       string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map\n   (lambda (char)\n    \
    \ (if (char-lower-case? char)\n         (char-upcase char)\n         (char-downcase\
    \ char)))\n   string))\n", "  (string-map (lambda (c) (if (char-lower-case? c)\
    \ (char-upcase c) (char-downcase c))) string))\n", "  (string-map (lambda (char)\n\
    \                (if (char-lower-case? char)\n                    (char-upcase\
    \ char)\n                    (char-downcase char)))\n              string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map\n   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase\
    \ c)\n         (char-downcase c)))\n   string))\n", "  (string-map\n   (lambda\
    \ (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase\
    \ c)))\n   string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-upcase (string-downcase string)))\n",
  "  (string-map (lambda (x) (if (char-lower-case? x) (char-upcase x) (char-downcase\
    \ x))) string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map (lambda (c) (if (char-lower-case?\
    \ c) (char-upcase c) (char-downcase c))) string))\n", "  (string-map\n   (lambda\
    \ (char)\n     (if (char-lower-case? char)\n         (char-upcase char)\n    \
    \     (char-downcase char)))\n   string))\n", "  (string-map\n   (lambda (c)\n\
    \     (if (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase\
    \ c)))\n   string))\n", "  (string-map (lambda (char)\n                (if (char-lower-case?\
    \ char)\n                    (char-upcase char)\n                    (char-downcase\
    \ char)))\n              string))\n", "  (string-map (\u03BB (c) (if (char-lower-case?\
    \ c) (char-upcase c) (char-downcase c))) string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (string-map (lambda (char)\n  \
    \              (if (char-lower-case? char)\n                    (char-upcase char)\n\
    \                    (char-downcase char)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (string-map\n   (lambda (char)\n\
    \     (if (char-lower-case? char)\n         (char-upcase char)\n         (char-downcase\
    \ char)))\n   string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (char)\n           \
    \     (if (char-lower-case? char)\n                    (char-upcase char)\n  \
    \                  (char-downcase char)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (string-map (lambda (c)\n     \
    \           (if (char-lower-case? c)\n                    (char-upcase c)\n  \
    \                  (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map (lambda (char)\n        \
    \        (cond\n                  [(char-lower-case? char) (char-upcase char)]\n\
    \                  [(char-upper-case? char) (char-downcase char)]\n          \
    \        [else char]))\n              string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (char)\n           \
    \     (if (char-lower-case? char)\n                    (char-upcase char)\n  \
    \                  (char-downcase char)))\n              string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map\n   (lambda (char)\n     (if (char-lower-case?\
    \ char)\n         (char-upcase char)\n         (char-downcase char)))\n   string))\n",
  "  (string-map\n   (lambda (char)\n     (if (char-lower-case? char)\n         (char-upcase\
    \ char)\n         (char-downcase char)))\n   string))\n", "  (string-map (lambda\
    \ (char)\n                (if (char-lower-case? char)\n                    (char-upcase\
    \ char)\n                    (char-downcase char)))\n              string))\n",
  "  (string-map (lambda (char)\n                (if (char-lower-case? char)\n   \
    \                 (char-upcase char)\n                    (char-downcase char)))\n\
    \              string))\n", "  (string-map (lambda (c) (if (char-lower-case? c)\
    \ (char-upcase c) (char-downcase c))) string))\n", "  (string-map (lambda (char)\n\
    \                (if (char-lower-case? char)\n                    (char-upcase\
    \ char)\n                    (char-downcase char)))\n              string))\n",
  "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase\
    \ c))) string))\n", "  (string-map (lambda (x) (if (char-lower-case? x) (char-upcase\
    \ x) (char-downcase x))) string))\n", "  (string-map (lambda (c)\n           \
    \     (if (char-lower-case? c)\n                    (char-upcase c)\n        \
    \            (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (string-map (lambda (c)\n     \
    \           (if (char-lower-case? c)\n                    (char-upcase c)\n  \
    \                  (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (char)\n     (if (char-lower-case? char)\n         (char-upcase char)\n\
    \         (char-downcase char)))\n   string))\n", "  (string-map (lambda (c) (if\
    \ (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map (lambda (c)\n           \
    \     (if (char-lower-case? c)\n                    (char-upcase c)\n        \
    \            (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (char)\n                (if (char-lower-case? char)\n                    (char-upcase\
    \ char)\n                    (char-downcase char)))\n              string))\n",
  "  (string-map (lambda (ch)\n                (if (char-lower-case? ch)\n       \
    \             (char-upcase ch)\n                    (char-downcase ch)))\n   \
    \           string))\n", "  (string-map\n   (lambda (char)\n     (if (char-lower-case?\
    \ char)\n         (char-upcase char)\n         (char-downcase char)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (c)\n              \
    \  (if (char-lower-case? c)\n                    (char-upcase c)\n           \
    \         (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (string-map (lambda (c)\n     \
    \           (if (char-lower-case? c)\n                    (char-upcase c)\n  \
    \                  (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n   \
    \      (char-downcase c)))\n   string))\n", "  (string-map\n   (lambda (char)\n\
    \     (cond\n       [(char-lower-case? char) (char-upcase char)]\n       [(char-upper-case?\
    \ char) (char-downcase char)]\n       [else char]))\n   string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\n\
    \   (lambda (char)\n     (if (char-lower-case? char)\n         (char-upcase char)\n\
    \         (char-downcase char)))\n   string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map\n   (lambda (char)\n     (if (char-lower-case? char)\n         (char-upcase\
    \ char)\n         (char-downcase char)))\n   string))\n", "  (string-map (lambda\
    \ (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map\n   (lambda (char)\n     (if (char-lower-case? char)\n         (char-upcase\
    \ char)\n         (char-downcase char)))\n   string))\n", "  (string-map\n   (lambda\
    \ (char)\n     (if (char-lower-case? char)\n         (char-upcase char)\n    \
    \     (char-downcase char)))\n   string))\n", "  (string-map\n   (lambda (c)\n\
    \     (if (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase\
    \ c)))\n   string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (c)\n              \
    \  (if (char-lower-case? c)\n                    (char-upcase c)\n           \
    \         (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (c)\n              \
    \  (if (char-lower-case? c)\n                    (char-upcase c)\n           \
    \         (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map\n   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase\
    \ c)\n         (char-downcase c)))\n   string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (x) (if (char-lower-case?\
    \ x) (char-upcase x) (char-downcase x))) string))\n", "  (string-map\n   (lambda\
    \ (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase\
    \ c)))\n   string))\n", "  (string-map (\u03BB (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map\n   (lambda (char)\n    \
    \ (if (char-lower-case? char)\n         (char-upcase char)\n         (char-downcase\
    \ char)))\n   string))\n", "  (string-map (lambda (c) (if (char-lower-case? c)\
    \ (char-upcase c) (char-downcase c))) string))\n", "  (string-map (\u03BB (x)\
    \ (if (char-lower-case? x) (char-upcase x) (char-downcase x))) string))\n", " \
    \ (string-map (lambda (char)\n                (if (char-lower-case? char)\n  \
    \                  (char-upcase char)\n                    (char-downcase char)))\n\
    \              string))\n", "  (string-map (lambda (char)\n                (if\
    \ (char-alphabetic? char)\n                    (if (char-lower-case? char)\n \
    \                       (char-upcase char)\n                        (char-downcase\
    \ char))\n                    char))\n              string))\n", "  (string-map\
    \ (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map\n   (lambda (c)\n     (if (char-lower-case? c)\n         (char-upcase\
    \ c)\n         (char-downcase c)))\n   string))\n", "  (string-map (lambda (char)\n\
    \                (if (char-lower-case? char)\n                    (char-upcase\
    \ char)\n                    (char-downcase char)))\n              string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (c)\n              \
    \  (if (char-lower-case? c)\n                    (char-upcase c)\n           \
    \         (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (map (lambda (char)\n         (if (char-lower-case? char)\n             (char-upcase\
    \ char)\n             (char-downcase char)))\n       string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map\n   (lambda (c)\n     (if\
    \ (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase c)))\n\
    \   string))\n", "  (string-map\n   (lambda (char)\n     (if (char-lower-case?\
    \ char)\n         (char-upcase char)\n         (char-downcase char)))\n   string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map (lambda (c) (if (char-lower-case?\
    \ c) (char-upcase c) (char-downcase c))) string))\n", "  (string-map (lambda (c)\n\
    \                (if (char-lower-case? c)\n                    (char-upcase c)\n\
    \                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map (lambda (x)\n                (if (char-lower-case?\
    \ x)\n                    (char-upcase x)\n                    (char-downcase\
    \ x)))\n              string))\n", "  (string-map (lambda (c)\n              \
    \  (if (char-lower-case? c)\n                    (char-upcase c)\n           \
    \         (char-downcase c)))\n              string))\n", "  (string-map\n   (lambda\
    \ (c)\n     (if (char-lower-case? c)\n         (char-upcase c)\n         (char-downcase\
    \ c)))\n   string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase\
    \ c))) string))\n", "  (string-map (lambda (char)\n                (if (char-lower-case?\
    \ char)\n                    (char-upcase char)\n                    (char-downcase\
    \ char)))\n              string))\n", "  (string-map (lambda (c)\n           \
    \     (if (char-lower-case? c)\n                    (char-upcase c)\n        \
    \            (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (c)\n                (if (char-lower-case? c)\n                    (char-upcase\
    \ c)\n                    (char-downcase c)))\n              string))\n", "  (string-map\
    \ (lambda (char)\n                (if (char-lower-case? char)\n              \
    \      (char-upcase char)\n                    (char-downcase char)))\n      \
    \        string))\n", "  (string-map (lambda (c)\n                (if (char-lower-case?\
    \ c)\n                    (char-upcase c)\n                    (char-downcase\
    \ c)))\n              string))\n", "  (string-map\n   (lambda (c)\n     (if (char-lower-case?\
    \ c)\n         (char-upcase c)\n         (char-downcase c)))\n   string))\n",
  "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase c) (char-downcase\
    \ c))) string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n", "  (string-map (\u03BB (c)\n           \
    \     (if (char-lower-case? c)\n                    (char-upcase c)\n        \
    \            (char-downcase c)))\n              string))\n", "  (string-map (lambda\
    \ (c) (if (char-lower-case? c) (char-upcase c) (char-downcase c))) string))\n",
  "  (string-map (lambda (c)\n                (if (char-lower-case? c)\n         \
    \           (char-upcase c)\n                    (char-downcase c)))\n       \
    \       string))\n", "  (string-map (lambda (c) (if (char-lower-case? c) (char-upcase\
    \ c) (char-downcase c))) string))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

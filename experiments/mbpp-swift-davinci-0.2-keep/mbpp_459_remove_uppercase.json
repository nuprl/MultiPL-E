{
  "name": "mbpp_459_remove_uppercase",
  "language": "swift",
  "prompt": "\n/// Write a function to remove uppercase substrings from a given string.\nfunc remove_uppercase(str1: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_459_remove_uppercase.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_uppercase(str1: \"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\")\nassert(remove_uppercase(str1: \"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\")\nassert(remove_uppercase(str1: \"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2.append(char)\n        }\n    }\n    return str1.replacingOccurrences(of: str2, with: \"\")",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isLowercase {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    return str1.replacingOccurrences(of: \"[A-Z]\", with: \"\", options: .regularExpression)",
    "    var str = str1\n    var i = 0\n    while i < str.count {\n        if str[i] >= \"A\" && str[i] <= \"Z\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: i))\n        } else {\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isLowercase {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    for char in str1 {\n        if char.isUppercase {\n            str.remove(at: str.firstIndex(of: char)!)\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isLowercase {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isLowercase {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2.append(char.lowercased())\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isUppercase {\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str",
    "    let str2 = str1.lowercased()\n    return str2",
    "    var str2 = \"\"\n    for i in str1 {\n        if i.isLowercase {\n            str2.append(i)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += String(char).lowercased()\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += String(char).lowercased()\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    return str1.lowercased()",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += String(char).lowercased()\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += String(char).lowercased()\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2"
  ]
}
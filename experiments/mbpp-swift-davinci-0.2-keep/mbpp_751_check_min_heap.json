{
  "name": "mbpp_751_check_min_heap",
  "language": "swift",
  "prompt": "\n/// Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\nfunc check_min_heap(arr: [Int]) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_min_heap(arr: [1, 2, 3, 4, 5, 6]) == true)\nassert(check_min_heap(arr: [2, 3, 4, 5, 10, 15]) == true)\nassert(check_min_heap(arr: [2, 10, 4, 5, 3, 15]) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var i = 0\n    while i < arr.count {\n        let left = 2 * i + 1\n        let right = 2 * i + 2\n        if left < arr.count && arr[i] > arr[left] {\n            return false\n        }\n        if right < arr.count && arr[i] > arr[right] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    for i in 0..<arr.count/2 {\n        if 2*i+1 < arr.count && arr[i] > arr[2*i+1] {\n            return false\n        }\n        if 2*i+2 < arr.count && arr[i] > arr[2*i+2] {\n            return false\n        }\n    }\n    return true",
    "    var i = arr.count / 2 - 1\n    while i >= 0 {\n        if arr[i] > arr[2 * i + 1] {\n            return false\n        }\n        if 2 * i + 2 < arr.count && arr[i] > arr[2 * i + 2] {\n            return false\n        }\n        i -= 1\n    }\n    return true",
    "    var i = 0\n    while i < arr.count {\n        if (2 * i + 1) < arr.count && arr[i] > arr[2 * i + 1] {\n            return false\n        }\n        if (2 * i + 2) < arr.count && arr[i] > arr[2 * i + 2] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var i = 0\n    while i < arr.count {\n        if arr[i] > arr[2 * i + 1] || arr[i] > arr[2 * i + 2] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    let n = arr.count\n    for i in stride(from: (n - 1) / 2, through: 0, by: -1) {\n        if arr[i] > arr[2 * i + 1] {\n            return false\n        }\n        if 2 * i + 2 < n && arr[i] > arr[2 * i + 2] {\n            return false\n        }\n    }\n    return true",
    "    for i in 0..<arr.count {\n        if 2 * i + 1 < arr.count && arr[i] > arr[2 * i + 1] {\n            return false\n        }\n        if 2 * i + 2 < arr.count && arr[i] > arr[2 * i + 2] {\n            return false\n        }\n    }\n    return true",
    "    var i = 0\n    while i < arr.count {\n        let left = 2 * i + 1\n        let right = 2 * i + 2\n        if left < arr.count && arr[i] > arr[left] {\n            return false\n        }\n        if right < arr.count && arr[i] > arr[right] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    let n = arr.count\n    for i in stride(from: (n - 1) / 2, through: 0, by: -1) {\n        if arr[i] > arr[2 * i + 1] {\n            return false\n        }\n        if 2 * i + 2 < n && arr[i] > arr[2 * i + 2] {\n            return false\n        }\n    }\n    return true",
    "    var is_min_heap = true\n    for i in stride(from: arr.count/2 - 1, through: 0, by: -1) {\n        if 2*i + 1 < arr.count && arr[i] > arr[2*i + 1] {\n            is_min_heap = false\n            break\n        }\n        if 2*i + 2 < arr.count && arr[i] > arr[2*i + 2] {\n            is_min_heap = false\n            break\n        }\n    }\n    return is_min_heap",
    "    for i in 0..<arr.count/2 {\n        if 2*i+1 < arr.count && arr[i] > arr[2*i+1] {\n            return false\n        }\n        if 2*i+2 < arr.count && arr[i] > arr[2*i+2] {\n            return false\n        }\n    }\n    return true",
    "    for i in 0..<arr.count/2 {\n        if 2*i+1 < arr.count && arr[2*i+1] < arr[i] {\n            return false\n        }\n        if 2*i+2 < arr.count && arr[2*i+2] < arr[i] {\n            return false\n        }\n    }\n    return true",
    "    var i = 0\n    while i < arr.count {\n        let left = 2 * i + 1\n        let right = 2 * i + 2\n        if left < arr.count && arr[i] > arr[left] {\n            return false\n        }\n        if right < arr.count && arr[i] > arr[right] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    for i in 0..<arr.count/2 {\n        if arr[i] > arr[2*i + 1] || (2*i + 2 < arr.count && arr[i] > arr[2*i + 2]) {\n            return false\n        }\n    }\n    return true",
    "    for i in 0..<arr.count {\n        let left = 2 * i + 1\n        let right = 2 * i + 2\n        if left < arr.count && arr[i] > arr[left] {\n            return false\n        }\n        if right < arr.count && arr[i] > arr[right] {\n            return false\n        }\n    }\n    return true",
    "    var is_min_heap = true\n    for i in 0..<arr.count/2 {\n        if arr[i] > arr[2*i + 1] || arr[i] > arr[2*i + 2] {\n            is_min_heap = false\n            break\n        }\n    }\n    return is_min_heap",
    "    let n = arr.count\n    for i in 0..<n {\n        if 2*i+1 < n && arr[i] > arr[2*i+1] {\n            return false\n        }\n        if 2*i+2 < n && arr[i] > arr[2*i+2] {\n            return false\n        }\n    }\n    return true",
    "    var i = 0\n    while i < arr.count {\n        let left = 2*i + 1\n        let right = 2*i + 2\n        if left < arr.count && arr[i] > arr[left] {\n            return false\n        }\n        if right < arr.count && arr[i] > arr[right] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var i = 0\n    while i < arr.count {\n        if 2 * i + 1 < arr.count && arr[i] > arr[2 * i + 1] {\n            return false\n        }\n        if 2 * i + 2 < arr.count && arr[i] > arr[2 * i + 2] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var i = 0\n    while i < arr.count/2 {\n        let left = 2*i + 1\n        let right = 2*i + 2\n        if left < arr.count && arr[left] < arr[i] {\n            return false\n        }\n        if right < arr.count && arr[right] < arr[i] {\n            return false\n        }\n        i += 1\n    }\n    return true"
  ]
}
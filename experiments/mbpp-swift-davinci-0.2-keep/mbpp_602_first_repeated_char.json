{
  "name": "mbpp_602_first_repeated_char",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the first repeated character in a given string.\nfunc first_repeated_char(str1: String) -> String? {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_602_first_repeated_char.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(first_repeated_char(str1: \"abcabc\") == \"a\")\nassert(first_repeated_char(str1: \"abc\") == nil)\nassert(first_repeated_char(str1: \"123123\") == \"1\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (key, value) in char_dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (key, value) in char_dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_dict: [Character: Int] = [:]\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for char in str1 {\n        if char_dict[char]! > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_dict: [Character: Int] = [:]\n    for char in str1 {\n        if char_dict[char] == nil {\n            char_dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_dict: [Character: Int] = [:]\n    for char in str1 {\n        if char_dict[char] == nil {\n            char_dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] != nil {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var charSet = Set<Character>()\n    for char in str1 {\n        if charSet.contains(char) {\n            return String(char)\n        } else {\n            charSet.insert(char)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_dict: [Character: Int] = [:]\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    \n    for char in str1 {\n        if let count = dict[char], count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var str = str1\n    var char_set = Set<Character>()\n    for char in str.characters {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var charSet = Set<Character>()\n    for char in str1 {\n        if charSet.contains(char) {\n            return String(char)\n        } else {\n            charSet.insert(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_set: Set<Character> = Set()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var charSet = Set<Character>()\n    for char in str1 {\n        if charSet.contains(char) {\n            return String(char)\n        } else {\n            charSet.insert(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    \n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    let str = str1.lowercased()\n    var dict = [Character: Int]()\n    for char in str {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var set = Set<Character>()\n    for char in str1 {\n        if set.contains(char) {\n            return String(char)\n        }\n        set.insert(char)\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_set: Set<Character> = Set()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var dict: [Character: Int] = [:]\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    let str = str1.lowercased()\n    var dict = [Character: Int]()\n    for char in str {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var countDict = [Character: Int]()\n    for char in str1 {\n        if let count = countDict[char] {\n            countDict[char] = count + 1\n        } else {\n            countDict[char] = 1\n        }\n    }\n    for (char, count) in countDict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var set = Set<Character>()\n    for char in str1 {\n        if set.contains(char) {\n            return String(char)\n        }\n        set.insert(char)\n    }\n    return nil",
    "    let str = str1.lowercased()\n    var dict = [Character: Int]()\n    for char in str {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    let charArray = Array(str1)\n    var charDict = [Character: Int]()\n    for char in charArray {\n        if let count = charDict[char] {\n            charDict[char] = count + 1\n        } else {\n            charDict[char] = 1\n        }\n    }\n    for (key, value) in charDict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var countDict = [Character: Int]()\n    for char in str1 {\n        if let count = countDict[char] {\n            countDict[char] = count + 1\n        } else {\n            countDict[char] = 1\n        }\n    }\n    for (char, count) in countDict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    \n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var countDict = [Character: Int]()\n    for char in str1 {\n        if let count = countDict[char] {\n            countDict[char] = count + 1\n        } else {\n            countDict[char] = 1\n        }\n    }\n    for (char, count) in countDict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var countDict = [Character: Int]()\n    for char in str1 {\n        if let count = countDict[char] {\n            countDict[char] = count + 1\n        } else {\n            countDict[char] = 1\n        }\n    }\n    for (key, value) in countDict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (char, count) in dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    let filtered = char_count.filter { $0.value > 1 }\n    return filtered.first?.key.description",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if let count = char_dict[char] {\n            char_dict[char] = count + 1\n        } else {\n            char_dict[char] = 1\n        }\n    }\n    for (char, count) in char_dict {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var char_dict = [Character: Int]()\n    for char in str1 {\n        if char_dict[char] == nil {\n            char_dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    let str = str1.lowercased()\n    var dict = [Character: Int]()\n    for char in str {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set: Set<Character> = Set()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var str = str1\n    var char_set = Set<Character>()\n    for char in str {\n        if char_set.contains(char) {\n            return String(char)\n        } else {\n            char_set.insert(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var dict: [Character: Int] = [:]\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var char_set = Set<Character>()\n    for char in str1 {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            dict[char] = count + 1\n        } else {\n            dict[char] = 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return String(key)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if dict[char] == nil {\n            dict[char] = 1\n        } else {\n            return String(char)\n        }\n    }\n    return nil",
    "    var str = str1\n    var char_set = Set<Character>()\n    for char in str {\n        if char_set.contains(char) {\n            return String(char)\n        }\n        char_set.insert(char)\n    }\n    return nil",
    "    var char_count = [Character: Int]()\n    for char in str1 {\n        if let count = char_count[char] {\n            char_count[char] = count + 1\n        } else {\n            char_count[char] = 1\n        }\n    }\n    for (char, count) in char_count {\n        if count > 1 {\n            return String(char)\n        }\n    }\n    return nil",
    "    var dict = [Character: Int]()\n    for char in str1 {\n        if let count = dict[char] {\n            return String(char)\n        } else {\n            dict[char] = 1\n        }\n    }\n    return nil"
  ]
}
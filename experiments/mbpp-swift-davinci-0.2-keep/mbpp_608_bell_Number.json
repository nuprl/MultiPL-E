{
  "name": "mbpp_608_bell_Number",
  "language": "swift",
  "prompt": "\n/// Write a python function to find nth bell number.\nfunc bell_Number(n: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_608_bell_Number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(bell_Number(n: 2) == 2)\nassert(bell_Number(n: 3) == 5)\nassert(bell_Number(n: 4) == 15)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2..<n {\n        bell.append([1])\n        for j in 1..<i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        bell[i].append(1)\n    }\n    return bell[n-1][n-1]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = Array(repeating: Array(repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2..<n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n - 1][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(bell[i-1][0])\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        var temp = [Int]()\n        temp.append(bell[i-1][0])\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + temp[j-1])\n        }\n        temp.append(temp[i-1])\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        var row = [Int]()\n        var endValue = 0\n        for j in 0...i {\n            if j == 0 {\n                endValue = 1\n            } else {\n                endValue = endValue * (i - j + 1) / j\n            }\n            row.append(endValue)\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: n+1))\n        bell[i][0] = bell[i][i] = 1\n        for j in 1..<i {\n            bell[i][j] = bell[i-1][j-1] + bell[i-1][j]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        var row = [Int]()\n        row.append(bell[i-1][0])\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + row[j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        bell.append([1])\n        for j in 1..<i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        bell[i].append(1)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        bell.append([1])\n        for j in 1...i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        bell.append([1])\n        for j in 1...i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1...i {\n            var sum = 0\n            for k in 0..<j {\n                sum += bell[i-1][k]*row[j-k-1]\n            }\n            row.append(sum)\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1...i {\n            row.append(bell[i-1][j-1] + row[j-1])\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        bell.append([1])\n        for j in 1...i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    if n == 0 {\n        return 1\n    }\n    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1...i {\n            row.append(bell[i-1][j-1] + row[j-1])\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        for j in 0...i {\n            if j == 0 {\n                row.append(bell[i-1][i-1])\n            } else {\n                row.append(bell[i-1][j-1] + row[j-1])\n            }\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = Array(repeating: Array(repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        var row = [Int]()\n        for j in 0...i {\n            if j == 0 {\n                row.append(bell[i-1][j])\n            } else {\n                row.append(bell[i-1][j-1] + row[j-1])\n            }\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: n + 1))\n        bell[i][0] = bell[i][i] = 1\n        if i > 1 {\n            for j in 1...i - 1 {\n                bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n            }\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = Array(repeating: Array(repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    if n == 0 {\n        return 1\n    }\n    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        var row = [Int]()\n        for j in 0...i {\n            if j == 0 {\n                row.append(bell[i-1][j])\n            } else {\n                row.append(bell[i-1][j-1] + row[j-1])\n            }\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: i+1))\n    }\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(bell[i - 1][0])\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i - 1][j])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        bell.append([1])\n        for j in 1...i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(bell[i-1][0])\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        bell.append([1])\n        for j in 1...i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n    }\n    return bell[n][n]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var arr = [Int]()\n        arr.append(1)\n        for j in 1..<i {\n            arr.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        arr.append(1)\n        bell.append(arr)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        var row = [Int]()\n        for j in 0...i {\n            if j == 0 {\n                row.append(bell[i-1][j])\n            } else {\n                row.append(bell[i-1][j-1] + row[j-1])\n            }\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: n+1))\n        bell[i][0] = bell[i][i] = 1\n        if i > 1 {\n            for j in 1..<i {\n                bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n            }\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = Array(repeating: Array(repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var dp = Array(repeating: Array(repeating: 0, count: n+1), count: n+1)\n    dp[0][0] = 1\n    for i in 1...n {\n        dp[i][0] = dp[i-1][i-1]\n        for j in 1...i {\n            dp[i][j] = dp[i-1][j-1] + dp[i][j-1]\n        }\n    }\n    return dp[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: n+1))\n        bell[i][0] = bell[i][i] = 1\n        if i > 1 {\n            for j in 1..<i {\n                bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n            }\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([])\n        for _ in 0...i {\n            bell[i].append(0)\n        }\n    }\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = Array(repeating: Array(repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([])\n        for _ in 0...i {\n            bell[i].append(0)\n        }\n    }\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell: [[Int]] = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        bell.append([1])\n        for j in 1..<i {\n            bell[i].append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        bell[i].append(1)\n    }\n    return bell[n][0]",
    "    var bell = Array(repeating: Array(repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        var row = [Int]()\n        for j in 0...i {\n            if j == 0 {\n                row.append(bell[i-1][j])\n            } else {\n                row.append(bell[i-1][j-1] + row[j-1])\n            }\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: i+1))\n    }\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var bell_i = [Int](repeating: 0, count: i + 1)\n        bell_i[0] = bell_i[i] = 1\n        for j in 1..<i {\n            bell_i[j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n        bell.append(bell_i)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2..<n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n-1][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        var row = [Int]()\n        var end_val = 0\n        for j in 0...i {\n            if j == 0 {\n                end_val = 1\n            } else {\n                end_val = end_val * (i - j + 1) / j\n            }\n            row.append(end_val)\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n        bell[i][i] = bell[i][i - 1]\n    }\n    return bell[n - 1][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var bell_i = [Int]()\n        bell_i.append(1)\n        for j in 1..<i {\n            bell_i.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        bell_i.append(1)\n        bell.append(bell_i)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: i+1))\n    }\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: n))\n        bell[i][0] = 1\n    }\n    for i in 1...n {\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([])\n        for _ in 0...i {\n            bell[i].append(0)\n        }\n    }\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    \n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        bell.append([1])\n        for j in 1...i {\n            bell[i].append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        var row = [Int]()\n        var endValue = 0\n        for j in 0...i {\n            if j == 0 {\n                endValue = 1\n            } else {\n                endValue = endValue * (i - j + 1) / j\n            }\n            row.append(endValue)\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var arr = [Int]()\n        arr.append(1)\n        for j in 1..<i {\n            arr.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        arr.append(1)\n        bell.append(arr)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        bell.append([1])\n        for j in 1..<i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        bell[i].append(1)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var bell_row = [Int]()\n        bell_row.append(1)\n        for j in 1..<i {\n            bell_row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        bell_row.append(1)\n        bell.append(bell_row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    for i in 1...n {\n        bell.append([1])\n        for j in 1..<i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        bell[i].append(1)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: n + 1))\n        bell[i][0] = bell[i][i] = 1\n        for j in 1..<i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i - 1][j]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        bell.append([1])\n        for j in 1..<i {\n            bell[i].append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        bell[i].append(1)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = Array(repeating: Array(repeating: 0, count: n+1), count: n+1)\n    bell[0][0] = 1\n    for i in 1..<n+1 {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i+1 {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: i+1))\n    }\n    bell[0][0] = 1\n    for i in 1..<n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1..<i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n        bell[i][i] = bell[i][i-1]\n    }\n    return bell[n-1][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1,1])\n    for i in 2...n {\n        var temp = [Int]()\n        temp.append(1)\n        for j in 1..<i {\n            temp.append(bell[i-1][j-1] + bell[i-1][j])\n        }\n        temp.append(1)\n        bell.append(temp)\n    }\n    return bell[n][0]",
    "    var bell = Array(repeating: Array(repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1...i {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var row = [Int]()\n        row.append(1)\n        for j in 1..<i {\n            row.append(bell[i-1][j-1] + bell[i][j-1])\n        }\n        row.append(1)\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]](repeating: [Int](repeating: 0, count: n + 1), count: n + 1)\n    bell[0][0] = 1\n    for i in 1..<n + 1 {\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in 1..<i + 1 {\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n        }\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    bell.append([1])\n    bell.append([1, 1])\n    for i in 2...n {\n        var bell_i = [Int]()\n        bell_i.append(1)\n        for j in 1..<i {\n            bell_i.append(bell[i - 1][j - 1] + bell[i][j - 1])\n        }\n        bell_i.append(1)\n        bell.append(bell_i)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        var row = [Int]()\n        var endValue = 0\n        for j in 0...i {\n            if j == 0 {\n                endValue = 1\n            } else {\n                endValue = endValue * (i - j + 1) / j\n            }\n            row.append(endValue)\n        }\n        bell.append(row)\n    }\n    return bell[n][0]",
    "    var bell = [[Int]]()\n    for i in 0...n {\n        bell.append([Int](repeating: 0, count: i+1))\n    }\n    bell[0][0] = 1\n    for i in 1...n {\n        bell[i][0] = bell[i-1][i-1]\n        for j in 1...i {\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]\n        }\n    }\n    return bell[n][0]"
  ]
}
{
  "name": "mbpp_628_replace_spaces",
  "language": "swift",
  "prompt": "\n/// Write a function to replace all spaces in the given string with '%20'.\nfunc replace_spaces(string: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_628_replace_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(replace_spaces(string: \"My Name is Dawood\") == \"My%20Name%20is%20Dawood\")\nassert(replace_spaces(string: \"I am a Programmer\") == \"I%20am%20a%20Programmer\")\nassert(replace_spaces(string: \"I love Coding\") == \"I%20love%20Coding\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return string.stringByReplacingOccurrencesOfString(\" \", withString: \"%20\")",
    "    var string = string\n    var index = 0\n    while index < string.count {\n        if string[index] == \" \" {\n            string.replaceSubrange(index..<index+1, with: \"%20\")\n            index += 2\n        } else {\n            index += 1\n        }\n    }\n    return string",
    "    var new_string = \"\"\n    for char in string {\n        if char == \" \" {\n            new_string += \"%20\"\n        } else {\n            new_string += String(char)\n        }\n    }\n    return new_string",
    "    var result = \"\"\n    for char in string.characters {\n        if char == \" \" {\n            result += \"%20\"\n        } else {\n            result += String(char)\n        }\n    }\n    return result",
    "    var result = \"\"\n    for char in string {\n        if char == \" \" {\n            result += \"%20\"\n        } else {\n            result += String(char)\n        }\n    }\n    return result",
    "    var new_string = \"\"\n    for char in string.characters {\n        if char == \" \" {\n            new_string += \"%20\"\n        } else {\n            new_string += String(char)\n        }\n    }\n    return new_string",
    "    var result = \"\"\n    for char in string.characters {\n        if char == \" \" {\n            result += \"%20\"\n        } else {\n            result += String(char)\n        }\n    }\n    return result",
    "    var result = \"\"\n    for char in string {\n        if char == \" \" {\n            result += \"%20\"\n        } else {\n            result += String(char)\n        }\n    }\n    return result",
    "    return string.replacingOccurrences(of: \" \", with: \"%20\")",
    "    return string.stringByReplacingOccurrencesOfString(\" \", withString: \"%20\")",
    "    return string.stringByReplacingOccurrencesOfString(\" \", withString: \"%20\")",
    "    var result = \"\"\n    for char in string {\n        if char == \" \" {\n            result += \"%20\"\n        } else {\n            result += String(char)\n        }\n    }\n    return result",
    "    var result = \"\"\n    for char in string.characters {\n        if char == \" \" {\n            result += \"%20\"\n        } else {\n            result.append(char)\n        }\n    }\n    return result",
    "    var newString = \"\"\n    for char in string {\n        if char == \" \" {\n            newString += \"%20\"\n        } else {\n            newString += String(char)\n        }\n    }\n    return newString",
    "    return string.stringByReplacingOccurrencesOfString(\" \", withString: \"%20\")",
    "    return string.stringByReplacingOccurrencesOfString(\" \", withString: \"%20\")",
    "    return string.stringByReplacingOccurrencesOfString(\" \", withString: \"%20\")",
    "    var result = \"\"\n    for char in string {\n        if char == \" \" {\n            result += \"%20\"\n        } else {\n            result += String(char)\n        }\n    }\n    return result",
    "    return string.stringByReplacingOccurrencesOfString(\" \", withString: \"%20\")",
    "    var newString = \"\"\n    for char in string {\n        if char == \" \" {\n            newString += \"%20\"\n        } else {\n            newString += String(char)\n        }\n    }\n    return newString"
  ]
}
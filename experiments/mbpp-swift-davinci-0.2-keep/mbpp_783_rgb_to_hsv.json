{
  "name": "mbpp_783_rgb_to_hsv",
  "language": "swift",
  "prompt": "\n/// Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunc rgb_to_hsv(r: Int, g: Int, b: Int) -> AnyHashable {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(rgb_to_hsv(r: 255, g: 255, b: 255) == (0, 0.0, 100.0))\nassert(rgb_to_hsv(r: 0, g: 215, b: 0) == (120.0, 100.0, 84.31372549019608))\nassert(rgb_to_hsv(r: 10, g: 215, b: 110) == (149.26829268292684, 95.34883720930233, 84.31372549019608))",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let r = Double(r) / 255\n    let g = Double(g) / 255\n    let b = Double(b) / 255\n    \n    let max = max(r, max(g, b))\n    let min = min(r, min(g, b))\n    \n    let h: Double\n    let s: Double\n    let v: Double\n    \n    if max == min {\n        h = 0\n    } else if max == r {\n        h = 60 * (g - b) / (max - min)\n    } else if max == g {\n        h = 60 * (b - r) / (max - min) + 120\n    } else {\n        h = 60 * (r - g) / (max - min) + 240\n    }\n    \n    if max == 0 {\n        s = 0\n    } else {\n        s = 1 - min / max\n    }\n    \n    v = max\n    \n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Double = 0.0\n    var s: Double = 0.0\n    var v: Double = 0.0\n    let r_ = Double(r) / 255.0\n    let g_ = Double(g) / 255.0\n    let b_ = Double(b) / 255.0\n    let max_ = max(r_, max(g_, b_))\n    let min_ = min(r_, min(g_, b_))\n    let diff = max_ - min_\n    if max_ == min_ {\n        h = 0.0\n    } else if max_ == r_ {\n        h = 60.0 * ((g_ - b_) / diff)\n    } else if max_ == g_ {\n        h = 60.0 * ((b_ - r_) / diff) + 120.0\n    } else if max_ == b_ {\n        h = 60.0 * ((r_ - g_) / diff) + 240.0\n    }\n    if h < 0.0 {\n        h += 360.0\n    }\n    if max_ == 0.0 {\n        s = 0.0\n    } else {\n        s = diff / max_\n    }\n    v = max_\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Double = 0.0\n    var s: Double = 0.0\n    var v: Double = 0.0\n    var rr: Double = Double(r) / 255.0\n    var gg: Double = Double(g) / 255.0\n    var bb: Double = Double(b) / 255.0\n    let min: Double = min(rr, gg, bb)\n    let max: Double = max(rr, gg, bb)\n    let delta: Double = max - min\n    v = max\n    if max != 0.0 {\n        s = delta / max\n    } else {\n        s = 0.0\n        h = -1.0\n        return [\"h\": h, \"s\": s, \"v\": v]\n    }\n    if rr == max {\n        h = (gg - bb) / delta\n    } else if gg == max {\n        h = 2.0 + (bb - rr) / delta\n    } else {\n        h = 4.0 + (rr - gg) / delta\n    }\n    h *= 60.0\n    if h < 0.0 {\n        h += 360.0\n    }\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Double = 0.0\n    var s: Double = 0.0\n    var v: Double = 0.0\n    let r_ = Double(r) / 255.0\n    let g_ = Double(g) / 255.0\n    let b_ = Double(b) / 255.0\n    let cmax = max(r_, g_, b_)\n    let cmin = min(r_, g_, b_)\n    let delta = cmax - cmin\n    if delta == 0 {\n        h = 0\n    } else if cmax == r_ {\n        h = 60 * ((g_ - b_) / delta)\n    } else if cmax == g_ {\n        h = 60 * ((b_ - r_) / delta + 2)\n    } else if cmax == b_ {\n        h = 60 * ((r_ - g_) / delta + 4)\n    }\n    if h < 0 {\n        h += 360\n    }\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n    v = cmax\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Float = 0.0\n    var s: Float = 0.0\n    var v: Float = 0.0\n    \n    let rf: Float = Float(r) / 255.0\n    let gf: Float = Float(g) / 255.0\n    let bf: Float = Float(b) / 255.0\n    \n    let max: Float = max(rf, max(gf, bf))\n    let min: Float = min(rf, min(gf, bf))\n    \n    let diff: Float = max - min\n    \n    if max == min {\n        h = 0\n    } else if max == rf {\n        h = 60 * ((gf - bf) / diff)\n    } else if max == gf {\n        h = 60 * ((bf - rf) / diff) + 120\n    } else if max == bf {\n        h = 60 * ((rf - gf) / diff) + 240\n    }\n    \n    if h < 0 {\n        h += 360\n    }\n    \n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n    \n    v = max\n    \n    return [h, s, v]",
    "    let r = Double(r) / 255.0\n    let g = Double(g) / 255.0\n    let b = Double(b) / 255.0\n    \n    let max = max(r, max(g, b))\n    let min = min(r, min(g, b))\n    \n    var h = 0.0\n    var s = 0.0\n    let v = max\n    \n    let d = max - min\n    \n    s = max == 0.0 ? 0.0 : d / max\n    \n    if max == min {\n        h = 0.0\n    } else {\n        if max == r {\n            h = (g - b) / d + (g < b ? 6.0 : 0.0)\n        } else if max == g {\n            h = (b - r) / d + 2.0\n        } else if max == b {\n            h = (r - g) / d + 4.0\n        }\n    }\n    \n    h /= 6.0\n    \n    return [h, s, v]",
    "    let r = Double(r)\n    let g = Double(g)\n    let b = Double(b)\n    let max = max(r, g, b)\n    let min = min(r, g, b)\n    let diff = max - min\n    var h = 0.0\n    var s = 0.0\n    var v = max\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff / max\n    }\n    if max == min {\n        h = 0\n    } else if max == r {\n        h = 60 * ((g - b) / diff)\n    } else if max == g {\n        h = 60 * ((b - r) / diff) + 120\n    } else if max == b {\n        h = 60 * ((r - g) / diff) + 240\n    }\n    if h < 0 {\n        h += 360\n    }\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Double = 0\n    var s: Double = 0\n    var v: Double = 0\n    let r_ = Double(r) / 255\n    let g_ = Double(g) / 255\n    let b_ = Double(b) / 255\n    let max_ = max(r_, max(g_, b_))\n    let min_ = min(r_, min(g_, b_))\n    let diff = max_ - min_\n    if max_ == min_ {\n        h = 0\n    } else if max_ == r_ {\n        h = 60 * (g_ - b_) / diff\n    } else if max_ == g_ {\n        h = 60 * (b_ - r_) / diff + 120\n    } else if max_ == b_ {\n        h = 60 * (r_ - g_) / diff + 240\n    }\n    if h < 0 {\n        h += 360\n    }\n    if max_ == 0 {\n        s = 0\n    } else {\n        s = diff / max_\n    }\n    v = max_\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    \n    let r = r / 255\n    let g = g / 255\n    let b = b / 255\n    \n    let cmax = max(r, max(g, b))\n    let cmin = min(r, min(g, b))\n    let delta = cmax - cmin\n    \n    if delta == 0 {\n        h = 0\n    } else if cmax == r {\n        h = 60 * (((g - b) / delta) % 6)\n    } else if cmax == g {\n        h = 60 * (((b - r) / delta) + 2)\n    } else if cmax == b {\n        h = 60 * (((r - g) / delta) + 4)\n    }\n    \n    if cmax == 0 {\n        s = 0\n    } else {\n        s = delta / cmax\n    }\n    \n    v = cmax\n    \n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    let rr = Double(r) / 255.0\n    let gg = Double(g) / 255.0\n    let bb = Double(b) / 255.0\n    let cmax = max(rr, max(gg, bb))\n    let cmin = min(rr, min(gg, bb))\n    let diff = cmax - cmin\n    if cmax == cmin {\n        h = 0\n    } else if cmax == rr {\n        h = 60 * ((Int(gg - bb) / Int(diff)) % 6)\n    } else if cmax == gg {\n        h = 60 * ((Int(bb - rr) / Int(diff)) + 2)\n    } else if cmax == bb {\n        h = 60 * ((Int(rr - gg) / Int(diff)) + 4)\n    }\n    if cmax == 0 {\n        s = 0\n    } else {\n        s = Int(diff / cmax * 100)\n    }\n    v = Int(cmax * 100)\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    let r = Double(r) / 255\n    let g = Double(g) / 255\n    let b = Double(b) / 255\n    \n    let max = max(r, max(g, b))\n    let min = min(r, min(g, b))\n    \n    var h: Double = 0\n    var s: Double = 0\n    let v = max\n    \n    let d = max - min\n    \n    if max == 0 {\n        s = 0\n    } else {\n        s = d / max\n    }\n    \n    if max == min {\n        h = 0\n    } else if max == r {\n        h = 60 * ((g - b) / d)\n    } else if max == g {\n        h = 60 * ((b - r) / d) + 120\n    } else if max == b {\n        h = 60 * ((r - g) / d) + 240\n    }\n    \n    if h < 0 {\n        h += 360\n    }\n    \n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    let r = Float(r)\n    let g = Float(g)\n    let b = Float(b)\n    let max = max(r, max(g, b))\n    let min = min(r, min(g, b))\n    let diff = max - min\n    v = Int(max)\n    if max != 0 {\n        s = Int(diff / max * 100)\n    } else {\n        s = 0\n    }\n    if s != 0 {\n        if r == max {\n            h = Int((g - b) / diff * 60)\n        } else if g == max {\n            h = Int(2 + (b - r) / diff * 60)\n        } else if b == max {\n            h = Int(4 + (r - g) / diff * 60)\n        }\n    } else {\n        h = 0\n    }\n    if h < 0 {\n        h += 360\n    }\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    var max: Int = 0\n    var min: Int = 0\n    var diff: Int = 0\n    var rr: Int = 0\n    var gg: Int = 0\n    var bb: Int = 0\n    var hh: Int = 0\n    var ss: Int = 0\n    var vv: Int = 0\n    var result: AnyHashable = [:]\n    rr = r\n    gg = g\n    bb = b\n    max = max(rr, gg, bb)\n    min = min(rr, gg, bb)\n    diff = max - min\n    if max == min {\n        h = 0\n    } else if max == rr {\n        h = 60 * (gg - bb) / diff\n    } else if max == gg {\n        h = 60 * (bb - rr) / diff + 120\n    } else if max == bb {\n        h = 60 * (rr - gg) / diff + 240\n    }\n    if h < 0 {\n        h += 360\n    }\n    if max == 0 {\n        s = 0\n    } else {\n        s = diff * 100 / max\n    }\n    v = max * 100 / 255\n    hh = h\n    ss = s\n    vv = v\n    result[\"h\"] = hh\n    result[\"s\"] = ss\n    result[\"v\"] = vv\n    return result",
    "    let r = Double(r) / 255\n    let g = Double(g) / 255\n    let b = Double(b) / 255\n    let max = max(r, max(g, b))\n    let min = min(r, min(g, b))\n    let delta = max - min\n    var h = 0.0\n    var s = 0.0\n    var v = max\n    if max != 0 {\n        s = delta / max\n    } else {\n        s = 0\n        h = -1\n        return [\"h\": h, \"s\": s, \"v\": v]\n    }\n    if r == max {\n        h = (g - b) / delta\n    } else if g == max {\n        h = 2 + (b - r) / delta\n    } else {\n        h = 4 + (r - g) / delta\n    }\n    h *= 60\n    if h < 0 {\n        h += 360\n    }\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    \n    let r_prime: Float = Float(r) / 255.0\n    let g_prime: Float = Float(g) / 255.0\n    let b_prime: Float = Float(b) / 255.0\n    \n    let c_max: Float = max(r_prime, max(g_prime, b_prime))\n    let c_min: Float = min(r_prime, min(g_prime, b_prime))\n    let delta: Float = c_max - c_min\n    \n    if delta == 0 {\n        h = 0\n    } else if c_max == r_prime {\n        h = Int(60 * (((g_prime - b_prime) / delta) % 6))\n    } else if c_max == g_prime {\n        h = Int(60 * (((b_prime - r_prime) / delta) + 2))\n    } else if c_max == b_prime {\n        h = Int(60 * (((r_prime - g_prime) / delta) + 4))\n    }\n    \n    if c_max == 0 {\n        s = 0\n    } else {\n        s = Int(delta / c_max * 100)\n    }\n    \n    v = Int(c_max * 100)\n    \n    return [h, s, v]",
    "    var h: Double = 0\n    var s: Double = 0\n    var v: Double = 0\n    let rd: Double = Double(r) / 255\n    let gd: Double = Double(g) / 255\n    let bd: Double = Double(b) / 255\n    let max: Double = max(rd, max(gd, bd))\n    let min: Double = min(rd, min(gd, bd))\n    v = max\n    let diff: Double = max - min\n    s = max == 0 ? 0 : diff / max\n    if max == min {\n        h = 0\n    } else if max == rd {\n        h = (gd - bd) / diff + (gd < bd ? 6 : 0)\n    } else if max == gd {\n        h = (bd - rd) / diff + 2\n    } else if max == bd {\n        h = (rd - gd) / diff + 4\n    }\n    h /= 6\n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    \n    let r_ = Double(r) / 255.0\n    let g_ = Double(g) / 255.0\n    let b_ = Double(b) / 255.0\n    \n    let cmax = max(r_, max(g_, b_))\n    let cmin = min(r_, min(g_, b_))\n    let delta = cmax - cmin\n    \n    if delta == 0 {\n        h = 0\n    } else if cmax == r_ {\n        h = Int(((g_ - b_) / delta) * 60)\n    } else if cmax == g_ {\n        h = Int(((b_ - r_) / delta) * 60) + 120\n    } else if cmax == b_ {\n        h = Int(((r_ - g_) / delta) * 60) + 240\n    }\n    \n    if h < 0 {\n        h += 360\n    }\n    \n    if cmax == 0 {\n        s = 0\n    } else {\n        s = Int(delta / cmax * 100)\n    }\n    \n    v = Int(cmax * 100)\n    \n    return [\"h\": h, \"s\": s, \"v\": v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    \n    let r_prime = Double(r) / 255\n    let g_prime = Double(g) / 255\n    let b_prime = Double(b) / 255\n    \n    let c_max = max(r_prime, g_prime, b_prime)\n    let c_min = min(r_prime, g_prime, b_prime)\n    let delta = c_max - c_min\n    \n    if delta == 0 {\n        h = 0\n    } else if c_max == r_prime {\n        h = Int(60 * ((g_prime - b_prime) / delta) % 6)\n    } else if c_max == g_prime {\n        h = Int(60 * ((b_prime - r_prime) / delta) + 2)\n    } else if c_max == b_prime {\n        h = Int(60 * ((r_prime - g_prime) / delta) + 4)\n    }\n    \n    if c_max == 0 {\n        s = 0\n    } else {\n        s = Int(delta / c_max * 100)\n    }\n    \n    v = Int(c_max * 100)\n    \n    return [h, s, v]",
    "    var h: Int = 0\n    var s: Int = 0\n    var v: Int = 0\n    \n    let r_ = Double(r) / 255.0\n    let g_ = Double(g) / 255.0\n    let b_ = Double(b) / 255.0\n    \n    let cmax = max(r_, max(g_, b_))\n    let cmin = min(r_, min(g_, b_))\n    let delta = cmax - cmin\n    \n    if delta == 0 {\n        h = 0\n    } else if cmax == r_ {\n        h = Int(((g_ - b_) / delta) * 60)\n    } else if cmax == g_ {\n        h = Int((((b_ - r_) / delta) + 2) * 60)\n    } else if cmax == b_ {\n        h = Int((((r_ - g_) / delta) + 4) * 60)\n    }\n    \n    if h < 0 {\n        h += 360\n    }\n    \n    if cmax == 0 {\n        s = 0\n    } else {\n        s = Int(delta / cmax * 100)\n    }\n    \n    v = Int(cmax * 100)\n    \n    return [h, s, v]",
    "    let r = Float(r) / 255\n    let g = Float(g) / 255\n    let b = Float(b) / 255\n    \n    let max = max(r, max(g, b))\n    let min = min(r, min(g, b))\n    \n    var h = 0.0\n    var s = 0.0\n    let v = max\n    \n    let d = max - min\n    s = max == 0.0 ? 0.0 : d / max\n    \n    if max == min {\n        h = 0.0\n    } else {\n        if max == r {\n            h = (g - b) / d + (g < b ? 6 : 0)\n        } else if max == g {\n            h = (b - r) / d + 2\n        } else if max == b {\n            h = (r - g) / d + 4\n        }\n    }\n    \n    h /= 6\n    \n    return [\"h\": h, \"s\": s, \"v\": v]"
  ]
}
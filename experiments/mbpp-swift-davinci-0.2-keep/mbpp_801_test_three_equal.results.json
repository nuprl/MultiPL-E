{
  "name": "mbpp_801_test_three_equal",
  "language": "swift",
  "prompt": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if (x == y && y == z) {\n        return 3\n    }\n    if (x == y || y == z || x == z) {\n        return 2\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || x == z || y == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && x == z {\n        return 3\n    } else if x == y || x == z || y == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    let a = [x, y, z]\n    var count = 0\n    for i in 0..<a.count {\n        for j in 0..<a.count {\n            if a[i] == a[j] {\n                count += 1\n            }\n        }\n    }\n    return count / 3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "tmp2t_mlfly/tmp2t_mlfly.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8859f0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8856e7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac8856e7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac8856e67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2t_mlfly                        0x0000558f41f71586 <unavailable> + 5510\n5    libc.so.6                          0x00002ac885bdc460 __libc_start_main + 245\n6    tmp2t_mlfly                        0x0000558f41f711a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && x == z {\n        return 3\n    } else if x == y || x == z || y == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && x == z {\n        return 3\n    }\n    if x == y || x == z || y == z {\n        return 2\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || z == x {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || x == z || y == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && x == z {\n        return 3\n    } else if x == y || x == z || y == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && x == z {\n        return 3\n    } else if x == y || x == z || y == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    }\n    if x == y || y == z || x == z {\n        return 2\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    }\n    if x == y || y == z || x == z {\n        return 2\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || z == x {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || z == x {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    }\n    if x == y || y == z || x == z {\n        return 2\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    }\n    if x == y || x == z || y == z {\n        return 2\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    } else if x == y || y == z || x == z {\n        return 2\n    } else {\n        return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    if x == y && y == z {\n        return 3\n    }\n    if x == y || y == z || x == z {\n        return 2\n    }\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp304hrfir/tmp304hrfir.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3246b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3243aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3243ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3243ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp304hrfir                        0x00005610f20672d1 <unavailable> + 4817\n5    libc.so.6                          0x00002af3248a3460 __libc_start_main + 245\n6    tmp304hrfir                        0x00005610f2066e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if x == z {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmp0ko3okjz/tmp0ko3okjz.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e54f80c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e54c77b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e54c77988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e54c767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0ko3okjz                        0x00005594893b32d1 <unavailable> + 4817\n5    libc.so.6                          0x00002b4e5516c460 __libc_start_main + 245\n6    tmp0ko3okjz                        0x00005594893b2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    var count = 0\n    if x == y {\n        count += 1\n    }\n    if y == z {\n        count += 1\n    }\n    if z == x {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1665517470,
      "stdout": "",
      "stderr": "tmpzfvpt3a6/tmpzfvpt3a6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7dac54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7da94bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7da94b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7da94a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzfvpt3a6                        0x00005640590c92d1 <unavailable> + 4817\n5    libc.so.6                          0x00002ba7dae40460 __libc_start_main + 245\n6    tmpzfvpt3a6                        0x00005640590c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the number of equal numbers from three given integers.\nfunc test_three_equal(x: Int, y: Int, z: Int) -> Int {\n    let xy = x == y\n    let xz = x == z\n    let yz = y == z\n    let xyz = xy && xz && yz\n    return xyz ? 3 : (xy || xz || yz) ? 2 : 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(test_three_equal(x: 1, y: 1, z: 1) == 3)\nassert(test_three_equal(x: -1, y: -2, z: -3) == 0)\nassert(test_three_equal(x: 1, y: 2, z: 2) == 2)",
      "timestamp": 1666123431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}